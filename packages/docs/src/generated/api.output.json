{
    "DockviewEvent": {
        "kind": "interface",
        "children": [],
        "metadata": {
            "name": "DockviewEvent",
            "code": "",
            "pieces": []
        }
    },
    "Sizing": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "Sizing",
            "code": "InvisibleSizing | SplitSizing | DistributeSizing",
            "pieces": []
        }
    },
    "LayoutPriority": {
        "kind": "enum",
        "children": [
            {
                "name": "High",
                "code": "",
                "pieces": []
            },
            {
                "name": "Low",
                "code": "",
                "pieces": []
            },
            {
                "name": "Normal",
                "code": "",
                "pieces": []
            }
        ]
    },
    "Orientation": {
        "kind": "enum",
        "children": [
            {
                "name": "HORIZONTAL",
                "code": "",
                "pieces": []
            },
            {
                "name": "VERTICAL",
                "code": "",
                "pieces": []
            }
        ]
    },
    "SashState": {
        "kind": "enum",
        "children": [
            {
                "name": "DISABLED",
                "code": "",
                "pieces": []
            },
            {
                "name": "ENABLED",
                "code": "",
                "pieces": []
            },
            {
                "name": "MAXIMUM",
                "code": "",
                "pieces": []
            },
            {
                "name": "MINIMUM",
                "code": "",
                "pieces": []
            }
        ]
    },
    "BaseGrid": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_activeGroup",
                "code": "BaseGrid.T | undefined",
                "kind": "property",
                "flags": {
                    "isProtected": true
                },
                "pieces": []
            },
            {
                "name": "_bufferOnDidLayoutChange",
                "code": "TickDelayedEvent",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "TickDelayedEvent"
                ]
            },
            {
                "name": "_groups",
                "code": "Map<string, IValueDisposable<BaseGrid.T>>",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "gridview",
                "code": "Gridview",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Gridview"
                ]
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<BaseGrid.T | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAdd",
                "code": "Event<BaseGrid.T>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "T"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemove",
                "code": "Event<BaseGrid.T>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "T"
                ]
            },
            {
                "name": "activeGroup",
                "code": "BaseGrid.T | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "disableResizing",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "groups",
                "code": "BaseGrid.T[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "accessor",
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "doAddGroup",
                "code": "(group: BaseGrid.T, location: number[], size?: number): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "doRemoveGroup",
                "code": "(group: BaseGrid.T, options?: { skipActive?: boolean, skipDispose?: boolean }): BaseGrid.T",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "doSetGroupActive",
                "code": "(group: BaseGrid.T | undefined): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: any): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getPanel",
                "code": "(id: string): BaseGrid.T | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: BaseGrid.T): boolean",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: BaseGrid.T): boolean",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, forceResize?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: BaseGrid.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "moveToNext",
                "code": "(options?: MovementOptions2): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions2"
                ]
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: MovementOptions2): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions2"
                ]
            },
            {
                "name": "removeGroup",
                "code": "(group: BaseGrid.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: BaseGrid.T, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "ContentContainer": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "dropTarget",
                "code": "Droptarget",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Droptarget"
                ]
            },
            {
                "name": "onDidBlur",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidFocus",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "closePanel",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hide",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(_width: number, _height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "openPanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "renderPanel",
                "code": "(panel: IDockviewPanel, options: { asActive: boolean }): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "show",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DefaultDockviewDeserialzier": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(panelData: GroupviewPanelState, group: DockviewGroupPanel): IDockviewPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel",
                    "GroupviewPanelState",
                    "IDockviewPanel"
                ]
            }
        ]
    },
    "DefaultTab": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: GroupPanelPartInitParameters): void",
                "kind": "method",
                "pieces": [
                    "GroupPanelPartInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(_width: number, _height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "onGroupChange",
                "code": "(_group: DockviewGroupPanel): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "onPanelVisibleChange",
                "code": "(_isPanelVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "DockviewApi": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "activeGroup",
                "code": "DockviewGroupPanel | undefined",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Active group object."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Active panel object."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "groups",
                "code": "DockviewGroupPanel[]",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "All group objects."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The unique identifier for this instance. Used to manage scope of Drag'n'Drop events."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Maximum height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Maximum width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Minimum height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Minimum width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<DockviewGroupPanel | undefined>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when the active group changes. May be undefined if no group is active."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<IDockviewPanel | undefined>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when the active panel changes. May be undefined if no panel is active."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAddGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a group is added. May be called multiple times when moving groups."
                        }
                    ]
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<IDockviewPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is added. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<DockviewDidDropEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality."
                        }
                    ]
                },
                "pieces": [
                    "DockviewDidDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when any layout change occures, an aggregation of many events."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked after a layout is deserialzied using the "
                        },
                        {
                            "kind": "code",
                            "text": "`fromJSON`"
                        },
                        {
                            "kind": "text",
                            "text": " method."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "accessor",
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a group is removed. May be called multiple times when moving groups."
                        }
                    ]
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<IDockviewPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is removed. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onWillDragGroup",
                "code": "Event<GroupDragEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked before a group is dragged.\n\nCalling "
                        },
                        {
                            "kind": "code",
                            "text": "`event.nativeEvent.preventDefault()`"
                        },
                        {
                            "kind": "text",
                            "text": " will prevent the group drag starting."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "GroupDragEvent"
                ]
            },
            {
                "name": "onWillDragPanel",
                "code": "Event<TabDragEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked before a panel is dragged.\n\nCalling "
                        },
                        {
                            "kind": "code",
                            "text": "`event.nativeEvent.preventDefault()`"
                        },
                        {
                            "kind": "text",
                            "text": " will prevent the panel drag starting."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "TabDragEvent"
                ]
            },
            {
                "name": "onWillDrop",
                "code": "Event<DockviewWillDropEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\nprevent the event from occuring using the standard "
                        },
                        {
                            "kind": "code",
                            "text": "`preventDefault()`"
                        },
                        {
                            "kind": "text",
                            "text": " syntax.\n\nPreventing certain events may causes unexpected behaviours, use carefully."
                        }
                    ]
                },
                "pieces": [
                    "DockviewWillDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onWillShowOverlay",
                "code": "Event<WillShowOverlayLocationEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked before an overlay is shown indicating a drop target.\n\nCalling "
                        },
                        {
                            "kind": "code",
                            "text": "`event.preventDefault()`"
                        },
                        {
                            "kind": "text",
                            "text": " will prevent the overlay being shown and prevent\nthe any subsequent drop event."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "WillShowOverlayLocationEvent"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "All panel objects."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Total number of groups."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "totalPanels",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Total number of panels."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "addFloatingGroup",
                "code": "(item: IDockviewPanel | DockviewGroupPanel, coord?: { x: number, y: number }): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a floating group"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "addGroup",
                "code": "(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a group and return the created object."
                        }
                    ]
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPanelOptions<T>): IDockviewPanel",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a panel and return the created object."
                        }
                    ]
                },
                "pieces": [
                    "AddPanelOptions",
                    "IDockviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "addPopoutGroup",
                "code": "(item: IDockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, popoutUrl?: string, position?: Box }): Promise<void>",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a popout group in a new Window"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Reset the component back to an empty and default state."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "closeAllGroups",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Close all groups and panels."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Focus the component. Will try to focus an active panel if one exists."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedDockview): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a component from a serialized object."
                        }
                    ]
                },
                "pieces": [
                    "SerializedDockview"
                ]
            },
            {
                "name": "getGroup",
                "code": "(id: string): DockviewGroupPanel | undefined",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get a group object given a "
                        },
                        {
                            "kind": "code",
                            "text": "`string`"
                        },
                        {
                            "kind": "text",
                            "text": " id. May return undefined."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "getPanel",
                "code": "(id: string): IDockviewPanel | undefined",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get a panel object given a "
                        },
                        {
                            "kind": "code",
                            "text": "`string`"
                        },
                        {
                            "kind": "text",
                            "text": " id. May return "
                        },
                        {
                            "kind": "code",
                            "text": "`undefined`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, force: boolean): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Force resize the component to an exact width and height. Read about auto-resizing before using."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "moveToNext",
                "code": "(options?: MovementOptions): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move the focus progmatically to the next panel or group."
                        }
                    ]
                },
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: MovementOptions): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move the focus progmatically to the previous panel or group."
                        }
                    ]
                },
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "removeGroup",
                "code": "(group: IDockviewGroupPanel): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove a group and any panels within the group."
                        }
                    ]
                },
                "pieces": [
                    "IDockviewGroupPanel"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove a panel given the panel object."
                        }
                    ]
                },
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedDockview",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a serialized object of the current component."
                        }
                    ]
                },
                "pieces": [
                    "SerializedDockview"
                ]
            }
        ]
    },
    "DockviewComponent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_activeGroup",
                "code": "DockviewGroupPanel | undefined",
                "kind": "property",
                "flags": {
                    "isProtected": true
                },
                "pieces": []
            },
            {
                "name": "_bufferOnDidLayoutChange",
                "code": "TickDelayedEvent",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "TickDelayedEvent"
                ]
            },
            {
                "name": "_groups",
                "code": "Map<string, IValueDisposable<DockviewGroupPanel>>",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "_onDidAddGroup",
                "code": "Emitter<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Emitter"
                ]
            },
            {
                "name": "gridview",
                "code": "Gridview",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Gridview"
                ]
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<DockviewGroupPanel | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<DockviewGroupPanel | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<IDockviewPanel | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAdd",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidAddGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<IDockviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<DockviewDidDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewDidDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemove",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<IDockviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onWillDragGroup",
                "code": "Event<GroupDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupDragEvent"
                ]
            },
            {
                "name": "onWillDragPanel",
                "code": "Event<TabDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "TabDragEvent"
                ]
            },
            {
                "name": "onWillDrop",
                "code": "Event<DockviewWillDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewWillDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onWillShowOverlay",
                "code": "Event<WillShowOverlayLocationEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillShowOverlayLocationEvent"
                ]
            },
            {
                "name": "overlayRenderContainer",
                "code": "OverlayRenderContainer",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "OverlayRenderContainer"
                ]
            },
            {
                "name": "activeGroup",
                "code": "BaseGrid.T | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "disableResizing",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "groups",
                "code": "BaseGrid.T[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "accessor",
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "options",
                "code": "DockviewComponentOptions",
                "kind": "accessor",
                "pieces": [
                    "DockviewComponentOptions"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "renderer",
                "code": "DockviewPanelRenderer",
                "kind": "accessor",
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "totalPanels",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addFloatingGroup",
                "code": "(item: DockviewPanel | DockviewGroupPanel, coord?: { height?: number, width?: number, x?: number, y?: number }, options?: { inDragMode: boolean, skipActiveGroup?: boolean, skipRemoveGroup?: boolean }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addGroup",
                "code": "(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPanelOptions<T>): DockviewPanel",
                "kind": "method",
                "pieces": [
                    "AddPanelOptions",
                    "DockviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "addPopoutGroup",
                "code": "(itemToPopout: DockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, overridePopoutGroup?: DockviewGroupPanel, popoutUrl?: string, position?: Box, skipRemoveGroup?: boolean }): Promise<void>",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "closeAllGroups",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "createGroup",
                "code": "(options?: GroupOptions): DockviewGroupPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel",
                    "GroupOptions"
                ]
            },
            {
                "name": "createWatermarkComponent",
                "code": "(): IWatermarkRenderer",
                "kind": "method",
                "pieces": [
                    "IWatermarkRenderer"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "doAddGroup",
                "code": "(group: DockviewGroupPanel, location: number[], size?: number): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "doRemoveGroup",
                "code": "(group: DockviewGroupPanel, options?: { skipActive?: boolean, skipDispose?: boolean, skipPopoutAssociated?: boolean, skipPopoutReturn?: boolean }): DockviewGroupPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "doSetGroupActive",
                "code": "(group: DockviewGroupPanel | undefined): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "doSetGroupAndPanelActive",
                "code": "(group: DockviewGroupPanel | undefined): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedDockview): void",
                "kind": "method",
                "pieces": [
                    "SerializedDockview"
                ]
            },
            {
                "name": "getGroupPanel",
                "code": "(id: string): IDockviewPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getPanel",
                "code": "(id: string): DockviewGroupPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: DockviewGroupPanel): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: DockviewGroupPanel): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, forceResize?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: DockviewGroupPanel): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "moveGroup",
                "code": "(options: MoveGroupOptions): void",
                "kind": "method",
                "pieces": [
                    "MoveGroupOptions"
                ]
            },
            {
                "name": "moveGroupOrPanel",
                "code": "(options: MoveGroupOrPanelOptions): void",
                "kind": "method",
                "pieces": [
                    "MoveGroupOrPanelOptions"
                ]
            },
            {
                "name": "moveToNext",
                "code": "(options: MovementOptions): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "moveToPrevious",
                "code": "(options: MovementOptions): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "movingLock",
                "code": "<T>(func: (): T): T",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "removeGroup",
                "code": "(group: DockviewGroupPanel, options?: { skipActive?: boolean, skipDispose?: boolean, skipPopoutAssociated?: boolean, skipPopoutReturn?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: IDockviewPanel, options: { removeEmptyGroup: boolean, skipDispose: boolean, skipSetActiveGroup?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setActivePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: DockviewGroupPanel, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedDockview",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Serialize the current state of the layout"
                        }
                    ],
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "A JSON respresentation of the layout"
                                }
                            ]
                        }
                    ]
                },
                "pieces": [
                    "SerializedDockview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: DockviewComponentUpdateOptions): void",
                "kind": "method",
                "pieces": [
                    "DockviewComponentUpdateOptions"
                ]
            }
        ]
    },
    "DockviewCompositeDisposable": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewDidDropEvent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "api",
                "code": "DockviewApi",
                "kind": "accessor",
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "defaultPrevented",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "position",
                "code": "Position",
                "kind": "accessor",
                "pieces": [
                    "Position"
                ]
            },
            {
                "name": "getData",
                "code": "(): PanelTransfer | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "preventDefault",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewEmitter": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "ENABLE_TRACKING",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isStatic": true
                },
                "pieces": []
            },
            {
                "name": "MEMORY_LEAK_WATCHER",
                "code": "LeakageMonitor",
                "kind": "property",
                "flags": {
                    "isStatic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "LeakageMonitor"
                ]
            },
            {
                "name": "event",
                "code": "Event<Emitter.T>",
                "kind": "accessor",
                "pieces": [
                    "Event",
                    "T"
                ]
            },
            {
                "name": "value",
                "code": "Emitter.T | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fire",
                "code": "(e: Emitter.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "setLeakageMonitorEnabled",
                "code": "(isEnabled: boolean): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewGroupPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "DockviewGroupPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanelApiImpl"
                ]
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "header",
                "code": "IHeader",
                "kind": "accessor",
                "pieces": [
                    "IHeader"
                ]
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "locked",
                "code": "DockviewGroupPanelLocked",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupPanelLocked"
                ]
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "model",
                "code": "DockviewGroupPanelModel",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupPanelModel"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: GridviewInitParameters): void",
                "kind": "method",
                "pieces": [
                    "GridviewInitParameters"
                ]
            },
            {
                "name": "initialize",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): any",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "DockviewGroupPanelModel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true
                },
                "pieces": []
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<DockviewDidDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewDidDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onGroupDragStart",
                "code": "Event<GroupDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupDragEvent"
                ]
            },
            {
                "name": "onMove",
                "code": "Event<GroupMoveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupMoveEvent"
                ]
            },
            {
                "name": "onTabDragStart",
                "code": "Event<TabDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "TabDragEvent"
                ]
            },
            {
                "name": "onWillDrop",
                "code": "Event<DockviewWillDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewWillDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onWillShowOverlay",
                "code": "Event<WillShowOverlayLocationEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillShowOverlayLocationEvent"
                ]
            },
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "hasWatermark",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "header",
                "code": "IHeader",
                "kind": "accessor",
                "pieces": [
                    "IHeader"
                ]
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isContentFocused",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isEmpty",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "location",
                "code": "DockviewGroupLocation",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupLocation"
                ]
            },
            {
                "name": "locked",
                "code": "DockviewGroupPanelLocked",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupPanelLocked"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "renderContainer",
                "code": "OverlayRenderContainer",
                "kind": "accessor",
                "pieces": [
                    "OverlayRenderContainer"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "canDisplayOverlay",
                "code": "(event: DragEvent, position: Position, target: DockviewGroupDropLocation): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupDropLocation",
                    "Position"
                ]
            },
            {
                "name": "closeAllPanels",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "closePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "containsPanel",
                "code": "(panel: IDockviewPanel): boolean",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focusContent",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "indexOf",
                "code": "(panel: IDockviewPanel): number",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "init",
                "code": "(_params: PanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "initialize",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isPanelActive",
                "code": "(panel: IDockviewPanel): boolean",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveToNext",
                "code": "(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "openPanel",
                "code": "(panel: IDockviewPanel, options: { index?: number, skipSetActive?: boolean, skipSetGroupActive?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "removePanel",
                "code": "(groupItemOrId: IDockviewPanel | string, options: { skipSetActive?: boolean, skipSetActiveGroup?: boolean }): IDockviewPanel",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "rerender",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setActive",
                "code": "(isGroupActive: boolean, force: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): GroupPanelViewState",
                "kind": "method",
                "pieces": [
                    "GroupPanelViewState"
                ]
            },
            {
                "name": "update",
                "code": "(_params: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            },
            {
                "name": "updateActions",
                "code": "(element: HTMLElement | undefined): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewMutableDisposable": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "api",
                "code": "DockviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewPanelApiImpl"
                ]
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "view",
                "code": "IDockviewPanelModel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanelModel"
                ]
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "renderer",
                "code": "DockviewPanelRenderer",
                "kind": "accessor",
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            },
            {
                "name": "title",
                "code": "string | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: IGroupPanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "IGroupPanelInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "runEvents",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setRenderer",
                "code": "(renderer: DockviewPanelRenderer): void",
                "kind": "method",
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            },
            {
                "name": "setTitle",
                "code": "(title: string): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): GroupviewPanelState",
                "kind": "method",
                "pieces": [
                    "GroupviewPanelState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            },
            {
                "name": "updateParentGroup",
                "code": "(group: DockviewGroupPanel, options?: { skipSetActive?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            }
        ]
    },
    "DockviewWillDropEvent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "api",
                "code": "DockviewApi",
                "kind": "accessor",
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "defaultPrevented",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "kind",
                "code": "DockviewGroupDropLocation",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupDropLocation"
                ]
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IDockviewPanel | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "position",
                "code": "Position",
                "kind": "accessor",
                "pieces": [
                    "Position"
                ]
            },
            {
                "name": "getData",
                "code": "(): PanelTransfer | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "preventDefault",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DraggablePaneviewPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "PaneviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "PaneviewPanelApiImpl"
                ]
            },
            {
                "name": "body",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "header",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidChangeExpansionState",
                "code": "Event<boolean>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<PaneviewDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewDropEvent"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "headerVisible",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "orthogonalSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getBodyComponent",
                "code": "(): IPaneBodyPart",
                "kind": "method",
                "pieces": [
                    "IPaneBodyPart"
                ]
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "getHeaderComponent",
                "code": "(): IPaneHeaderPart",
                "kind": "method",
                "pieces": [
                    "IPaneHeaderPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: PanePanelInitParameter): void",
                "kind": "method",
                "pieces": [
                    "PanePanelInitParameter"
                ]
            },
            {
                "name": "isExpanded",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setExpanded",
                "code": "(expanded: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): PanePanelViewState",
                "kind": "method",
                "pieces": [
                    "PanePanelViewState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "Gridview": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidMaximizedNodeChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "length",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addView",
                "code": "(view: IGridView, size: InvisibleSizing | SplitSizing | DistributeSizing | number, location: number[]): void",
                "kind": "method",
                "pieces": [
                    "IGridView"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "deserialize",
                "code": "<T>(json: SerializedGridview<T>, deserializer: IViewDeserializer): void",
                "kind": "method",
                "pieces": [
                    "IViewDeserializer",
                    "SerializedGridview",
                    "T"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedView",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getView",
                "code": "(): GridBranchNode<IGridView>\n(location?: number[]): GridNode<IGridView>",
                "kind": "method",
                "pieces": [
                    "GridBranchNode",
                    "GridNode",
                    "IGridView"
                ]
            },
            {
                "name": "hasMaximizedView",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "insertOrthogonalSplitviewAtRoot",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\nIf the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isViewVisible",
                "code": "(location: number[]): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeView",
                "code": "(view: IGridView): void",
                "kind": "method",
                "pieces": [
                    "IGridView"
                ]
            },
            {
                "name": "maximizedView",
                "code": "(): IGridView | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveView",
                "code": "(parentLocation: number[], from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "next",
                "code": "(location: number[]): LeafNode",
                "kind": "method",
                "pieces": [
                    "LeafNode"
                ]
            },
            {
                "name": "previous",
                "code": "(location: number[]): LeafNode",
                "kind": "method",
                "pieces": [
                    "LeafNode"
                ]
            },
            {
                "name": "remove",
                "code": "(view: IGridView, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): IGridView",
                "kind": "method",
                "pieces": [
                    "IGridView"
                ]
            },
            {
                "name": "removeView",
                "code": "(location: number[], sizing?: InvisibleSizing | SplitSizing | DistributeSizing): IGridView",
                "kind": "method",
                "pieces": [
                    "IGridView"
                ]
            },
            {
                "name": "serialize",
                "code": "(): SerializedGridview<any>",
                "kind": "method",
                "pieces": [
                    "SerializedGridview"
                ]
            },
            {
                "name": "setViewVisible",
                "code": "(location: number[], visible: boolean): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "GridviewApi": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Maximum height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Maximum width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Minimum height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Minimum width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<IGridviewPanel<GridviewPanelApi> | undefined>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when the active panel changes. May be undefined if no panel is active."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<IGridviewPanel<GridviewPanelApi>>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is added. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when any layout change occures, an aggregation of many events."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked after a layout is deserialzied using the "
                        },
                        {
                            "kind": "code",
                            "text": "`fromJSON`"
                        },
                        {
                            "kind": "text",
                            "text": " method."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<IGridviewPanel<GridviewPanelApi>>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is removed. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Current orientation. Can be changed after initialization."
                        }
                    ]
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "IGridviewPanel<GridviewPanelApi>[]",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "All panel objects."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a panel and return the created object."
                        }
                    ]
                },
                "pieces": [
                    "AddComponentOptions",
                    "GridviewPanelApi",
                    "IGridviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Reset the component back to an empty and default state."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Focus the component. Will try to focus an active panel if one exists."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedGridviewComponent): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a component from a serialized object."
                        }
                    ]
                },
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): IGridviewPanel<GridviewPanelApi> | undefined",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get a panel object given a "
                        },
                        {
                            "kind": "code",
                            "text": "`string`"
                        },
                        {
                            "kind": "text",
                            "text": " id. May return "
                        },
                        {
                            "kind": "code",
                            "text": "`undefined`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, force: boolean): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Force resize the component to an exact width and height. Read about auto-resizing before using."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>, options: { direction: Direction, reference: string, size?: number }): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move a panel in a particular direction relative to another panel."
                        }
                    ]
                },
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove a panel given the panel object."
                        }
                    ]
                },
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedGridviewComponent",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a serialized object of the current component."
                        }
                    ]
                },
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            }
        ]
    },
    "GridviewComponent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_activeGroup",
                "code": "GridviewPanel<GridviewPanelApiImpl> | undefined",
                "kind": "property",
                "flags": {
                    "isProtected": true
                },
                "pieces": []
            },
            {
                "name": "_bufferOnDidLayoutChange",
                "code": "TickDelayedEvent",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "TickDelayedEvent"
                ]
            },
            {
                "name": "_groups",
                "code": "Map<string, IValueDisposable<GridviewPanel<GridviewPanelApiImpl>>>",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "_onDidAddGroup",
                "code": "Emitter<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Emitter",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "gridview",
                "code": "Gridview",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Gridview"
                ]
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl> | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl> | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAdd",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "onDidAddGroup",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemove",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "onDidRemoveGroup",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "activeGroup",
                "code": "BaseGrid.T | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "deserializer",
                "code": "IPanelDeserializer | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "disableResizing",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "groups",
                "code": "BaseGrid.T[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "accessor",
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "options",
                "code": "GridviewComponentOptions",
                "kind": "accessor",
                "pieces": [
                    "GridviewComponentOptions"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>",
                "kind": "method",
                "pieces": [
                    "AddComponentOptions",
                    "GridviewPanelApi",
                    "IGridviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "doAddGroup",
                "code": "(group: GridviewPanel<GridviewPanelApiImpl>, location: number[], size?: number): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "doRemoveGroup",
                "code": "(group: GridviewPanel<GridviewPanelApiImpl>, options?: { skipActive?: boolean, skipDispose?: boolean }): GridviewPanel<GridviewPanelApiImpl>",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "doSetGroupActive",
                "code": "(group: GridviewPanel<GridviewPanelApiImpl> | undefined): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedGridview: SerializedGridviewComponent): void",
                "kind": "method",
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): GridviewPanel<GridviewPanelApiImpl> | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): boolean",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): boolean",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, forceResize?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "moveGroup",
                "code": "(referenceGroup: IGridPanelComponentView, groupId: string, target: Position): void",
                "kind": "method",
                "pieces": [
                    "IGridPanelComponentView",
                    "Position"
                ]
            },
            {
                "name": "movePanel",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>, options: { direction: Direction, reference: string, size?: number }): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "moveToNext",
                "code": "(options?: MovementOptions2): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions2"
                ]
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: MovementOptions2): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions2"
                ]
            },
            {
                "name": "removeGroup",
                "code": "(group: GridviewPanel<GridviewPanelApiImpl>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "setActive",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedGridviewComponent",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Serialize the current state of the layout"
                        }
                    ],
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "A JSON respresentation of the layout"
                                }
                            ]
                        }
                    ]
                },
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<GridviewComponentUpdateOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "GridviewPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "GridviewPanel.T",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: GridviewInitParameters): void",
                "kind": "method",
                "pieces": [
                    "GridviewInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): GridPanelViewState",
                "kind": "method",
                "pieces": [
                    "GridPanelViewState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "LocalSelectionTransfer": {
        "kind": "class",
        "children": [
            {
                "name": "clearData",
                "code": "(proto: LocalSelectionTransfer.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "getData",
                "code": "(proto: LocalSelectionTransfer.T): LocalSelectionTransfer.T[] | undefined",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "hasData",
                "code": "(proto: LocalSelectionTransfer.T): boolean",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "setData",
                "code": "(data: LocalSelectionTransfer.T[], proto: LocalSelectionTransfer.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "getInstance",
                "code": "<T>(): LocalSelectionTransfer<T>",
                "kind": "method",
                "pieces": [
                    "LocalSelectionTransfer",
                    "T"
                ]
            }
        ]
    },
    "PaneFramework": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "PaneviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "PaneviewPanelApiImpl"
                ]
            },
            {
                "name": "body",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "header",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidChangeExpansionState",
                "code": "Event<boolean>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<PaneviewDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewDropEvent"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "headerVisible",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "orthogonalSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getBodyComponent",
                "code": "(): IPaneBodyPart",
                "kind": "method",
                "pieces": [
                    "IPaneBodyPart"
                ]
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "getHeaderComponent",
                "code": "(): IPaneHeaderPart",
                "kind": "method",
                "pieces": [
                    "IPaneHeaderPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: PanePanelInitParameter): void",
                "kind": "method",
                "pieces": [
                    "PanePanelInitParameter"
                ]
            },
            {
                "name": "isExpanded",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setExpanded",
                "code": "(expanded: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): PanePanelViewState",
                "kind": "method",
                "pieces": [
                    "PanePanelViewState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "PaneTransfer": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "paneId",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "viewId",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "PanelTransfer": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "groupId",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "panelId",
                "code": "string | 'null'",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "viewId",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "Paneview": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<PaneviewPanel>",
                "kind": "accessor",
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<PaneviewPanel>",
                "kind": "accessor",
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "orthogonalSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addPane",
                "code": "(pane: PaneviewPanel, size?: InvisibleSizing | SplitSizing | DistributeSizing | number, index: number, skipLayout: boolean): void",
                "kind": "method",
                "pieces": [
                    "PaneviewPanel"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getPanes",
                "code": "(): PaneviewPanel[]",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getViewSize",
                "code": "(index: number): number",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveView",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removePane",
                "code": "(index: number, options: { skipDispose: boolean }): PaneItem",
                "kind": "method",
                "pieces": [
                    "PaneItem"
                ]
            }
        ]
    },
    "PaneviewApi": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The maximum size the component can reach where size is measured in the direction of orientation provided."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The minimum size  the component can reach where size is measured in the direction of orientation provided."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<IPaneviewPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is added. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IPaneviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<PaneviewDropEvent>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "PaneviewDropEvent"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when any layout change occures, an aggregation of many events."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked after a layout is deserialzied using the "
                        },
                        {
                            "kind": "code",
                            "text": "`fromJSON`"
                        },
                        {
                            "kind": "text",
                            "text": " method."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<IPaneviewPanel>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a panel is removed. May be called multiple times when moving panels."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IPaneviewPanel"
                ]
            },
            {
                "name": "panels",
                "code": "IPaneviewPanel[]",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "All panel objects."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a panel and return the created object."
                        }
                    ]
                },
                "pieces": [
                    "AddPaneviewComponentOptions",
                    "IPaneviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Reset the component back to an empty and default state."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Focus the component. Will try to focus an active panel if one exists."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedPaneview): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a component from a serialized object."
                        }
                    ]
                },
                "pieces": [
                    "SerializedPaneview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): IPaneviewPanel | undefined",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get a panel object given a "
                        },
                        {
                            "kind": "code",
                            "text": "`string`"
                        },
                        {
                            "kind": "text",
                            "text": " id. May return "
                        },
                        {
                            "kind": "code",
                            "text": "`undefined`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Force resize the component to an exact width and height. Read about auto-resizing before using."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move a panel given it's current and desired index."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: IPaneviewPanel): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove a panel given the panel object."
                        }
                    ]
                },
                "pieces": [
                    "IPaneviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedPaneview",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Create a serialized object of the current component."
                        }
                    ]
                },
                "pieces": [
                    "SerializedPaneview"
                ]
            }
        ]
    },
    "PaneviewComponent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<PaneviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<PaneviewDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewDropEvent"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<PaneviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "disableResizing",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "options",
                "code": "PaneviewComponentOptions",
                "kind": "accessor",
                "pieces": [
                    "PaneviewComponentOptions"
                ]
            },
            {
                "name": "panels",
                "code": "PaneviewPanel[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "paneview",
                "code": "Paneview",
                "kind": "accessor",
                "pieces": [
                    "Paneview"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel",
                "kind": "method",
                "pieces": [
                    "AddPaneviewComponentOptions",
                    "IPaneviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedPaneview: SerializedPaneview): void",
                "kind": "method",
                "pieces": [
                    "SerializedPaneview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): PaneviewPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: PaneviewPanel): void",
                "kind": "method",
                "pieces": [
                    "PaneviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedPaneview",
                "kind": "method",
                "pieces": [
                    "SerializedPaneview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<PaneviewComponentOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "PaneviewPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "PaneviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "PaneviewPanelApiImpl"
                ]
            },
            {
                "name": "body",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "header",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidChangeExpansionState",
                "code": "Event<boolean>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "headerVisible",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "orthogonalSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getBodyComponent",
                "code": "(): IPaneBodyPart",
                "kind": "method",
                "pieces": [
                    "IPaneBodyPart"
                ]
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "getHeaderComponent",
                "code": "(): IPaneHeaderPart",
                "kind": "method",
                "pieces": [
                    "IPaneHeaderPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: PanePanelInitParameter): void",
                "kind": "method",
                "pieces": [
                    "PanePanelInitParameter"
                ]
            },
            {
                "name": "isExpanded",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setExpanded",
                "code": "(expanded: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): PanePanelViewState",
                "kind": "method",
                "pieces": [
                    "PanePanelViewState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "Splitview": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "onDidSashEnd",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "contentSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "disabled",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "endSnappingEnabled",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "length",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "orthogonalSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "proportions",
                "code": "number | undefined[] | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "startSnappingEnabled",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addView",
                "code": "(view: IView, size: InvisibleSizing | SplitSizing | DistributeSizing | number, index: number, skipLayout?: boolean): void",
                "kind": "method",
                "pieces": [
                    "IView"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "distributeViewSizes",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getViewCachedVisibleSize",
                "code": "(index: number): number | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getViewSize",
                "code": "(index: number): number",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getViews",
                "code": "<T extends IView>(): T[]",
                "kind": "method",
                "pieces": [
                    "IView"
                ]
            },
            {
                "name": "isViewVisible",
                "code": "(index: number): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveView",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removeView",
                "code": "(index: number, sizing?: InvisibleSizing | SplitSizing | DistributeSizing, skipLayout: boolean): IView",
                "kind": "method",
                "pieces": [
                    "IView"
                ]
            },
            {
                "name": "resizeView",
                "code": "(index: number, size: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setViewVisible",
                "code": "(index: number, visible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "style",
                "code": "(styles?: ISplitviewStyles): void",
                "kind": "method",
                "pieces": [
                    "ISplitviewStyles"
                ]
            }
        ]
    },
    "SplitviewApi": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Height of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "length",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The current number of panels."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The maximum size the component can reach where size is measured in the direction of orientation provided."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The minimum size  the component can reach where size is measured in the direction of orientation provided."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<IView>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a view is added."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked whenever any aspect of the layout changes.\nIf listening to this event it may be worth debouncing ouputs."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked after a layout is loaded through the "
                        },
                        {
                            "kind": "code",
                            "text": "`fromJSON`"
                        },
                        {
                            "kind": "text",
                            "text": " method."
                        }
                    ]
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<IView>",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Invoked when a view is removed."
                        }
                    ]
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The current orientation of the component."
                        }
                    ]
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "ISplitviewPanel[]",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The list of current panels."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Width of the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): ISplitviewPanel",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Add a new panel and return the created instance."
                        }
                    ]
                },
                "pieces": [
                    "AddSplitviewComponentOptions",
                    "ISplitviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove all panels and clear the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Focus the component."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedSplitview): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deserialize a layout to built a splitivew."
                        }
                    ]
                },
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): ISplitviewPanel | undefined",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get the reference to a panel given it's "
                        },
                        {
                            "kind": "code",
                            "text": "`string`"
                        },
                        {
                            "kind": "text",
                            "text": " id."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Layout the panel with a width and height."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move a panel given it's current and desired index."
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: ISplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes an existing panel and optionally provide a "
                        },
                        {
                            "kind": "code",
                            "text": "`Sizing`"
                        },
                        {
                            "kind": "text",
                            "text": " method\nfor the subsequent resize."
                        }
                    ]
                },
                "pieces": [
                    "ISplitviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedSplitview",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Serialize a layout"
                        }
                    ]
                },
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: SplitviewComponentUpdateOptions): void",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Update configuratable options."
                        }
                    ]
                },
                "pieces": [
                    "SplitviewComponentUpdateOptions"
                ]
            }
        ]
    },
    "SplitviewComponent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "disableResizing",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "length",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "options",
                "code": "SplitviewComponentOptions",
                "kind": "accessor",
                "pieces": [
                    "SplitviewComponentOptions"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "SplitviewPanel[]",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "splitview",
                "code": "Splitview",
                "kind": "accessor",
                "pieces": [
                    "Splitview"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): SplitviewPanel",
                "kind": "method",
                "pieces": [
                    "AddSplitviewComponentOptions",
                    "Parameters",
                    "SplitviewPanel",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedSplitview: SerializedSplitview): void",
                "kind": "method",
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): SplitviewPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: SplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void",
                "kind": "method",
                "pieces": [
                    "SplitviewPanel"
                ]
            },
            {
                "name": "setActive",
                "code": "(view: SplitviewPanel, skipFocus?: boolean): void",
                "kind": "method",
                "pieces": [
                    "SplitviewPanel"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: SplitviewPanel, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "SplitviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedSplitview",
                "kind": "method",
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<SplitviewComponentUpdateOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "SplitviewPanel": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "_params",
                "code": "PanelInitParameters",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "api",
                "code": "SplitviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "SplitviewPanelApiImpl"
                ]
            },
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "part",
                "code": "IFrameworkPart",
                "kind": "property",
                "flags": {
                    "isProtected": true,
                    "isOptional": true
                },
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "accessor",
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getComponent",
                "code": "(): IFrameworkPart",
                "kind": "method",
                "pieces": [
                    "IFrameworkPart"
                ]
            },
            {
                "name": "init",
                "code": "(parameters: PanelViewInitParameters): void",
                "kind": "method",
                "pieces": [
                    "PanelViewInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(isVisible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): { component: string, id: string, maximumSize: number | undefined, minimumSize: number | undefined, params?: Parameters }",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "Tab": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "onChanged",
                "code": "Event<MouseEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDragStart",
                "code": "Event<DragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDrop",
                "code": "Event<DroptargetEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DroptargetEvent",
                    "Event"
                ]
            },
            {
                "name": "onWillShowOverlay",
                "code": "Event<WillShowOverlayEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillShowOverlayEvent"
                ]
            },
            {
                "name": "panel",
                "code": "IDockviewPanel",
                "kind": "property",
                "flags": {
                    "isPublic": true,
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "isDisposed",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "addDisposables",
                "code": "(args: IDisposable[]): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setContent",
                "code": "(part: ITabRenderer): void",
                "kind": "method",
                "pieces": [
                    "ITabRenderer"
                ]
            }
        ]
    },
    "WillShowOverlayLocationEvent": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "defaultPrevented",
                "code": "boolean",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "kind",
                "code": "DockviewGroupDropLocation",
                "kind": "accessor",
                "pieces": [
                    "DockviewGroupDropLocation"
                ]
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "accessor",
                "pieces": []
            },
            {
                "name": "position",
                "code": "Position",
                "kind": "accessor",
                "pieces": [
                    "Position"
                ]
            },
            {
                "name": "preventDefault",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "ActiveEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "AddComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "location",
                "code": "number[]",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "AddComponentOptions.T",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "position",
                "code": "{ direction: Direction, referencePanel: string }",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "AddPaneviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "headerComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "index",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "isExpanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "AddPaneviewComponentOptions.T",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "AddSplitviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "index",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "AddSplitviewComponentOptions.T",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "BaseComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "params",
                "code": "BaseComponentOptions.T",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "BaseGridOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "parentElement",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "ISplitviewStyles"
                ]
            }
        ]
    },
    "CommonApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: CommonApi.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): CommonApi.T",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            }
        ]
    },
    "DockviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "components",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "createLeftHeaderActionsElement",
                "code": "(group: DockviewGroupPanel): IHeaderActionsRenderer",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "createPrefixHeaderActionsElement",
                "code": "(group: DockviewGroupPanel): IHeaderActionsRenderer",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "createRightHeaderActionsElement",
                "code": "(group: DockviewGroupPanel): IHeaderActionsRenderer",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "debug",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "defaultRenderer",
                "code": "'always' | 'onlyWhenVisibile'",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "defaultTabComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableDnd",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableFloatingGroups",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "floatingGroupBounds",
                "code": "'boundedWithinViewport' | { minimumHeightWithinViewport?: number, minimumWidthWithinViewport?: number }",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkComponentFactory",
                "code": "GroupPanelFrameworkComponentFactory",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "GroupPanelFrameworkComponentFactory"
                ]
            },
            {
                "name": "frameworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkTabComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation.VERTICAL | Orientation.HORIZONTAL",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "parentElement",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "popoutUrl",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "rootOverlayModel",
                "code": "DroptargetOverlayModel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "DroptargetOverlayModel"
                ]
            },
            {
                "name": "showDndOverlay",
                "code": "(event: DockviewDndOverlayEvent): boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "singleTabMode",
                "code": "'default' | 'fullwidth'",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "ISplitviewStyles"
                ]
            },
            {
                "name": "tabComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "watermarkComponent",
                "code": "WatermarkConstructor",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "WatermarkConstructor"
                ]
            },
            {
                "name": "watermarkFrameworkComponent",
                "code": "any",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "DockviewDndOverlayEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "getData",
                "code": "(): PanelTransfer | undefined",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "position",
                "code": "Position",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Position"
                ]
            },
            {
                "name": "target",
                "code": "DockviewGroupDropLocation",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewGroupDropLocation"
                ]
            }
        ]
    },
    "DockviewGroupChangeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "panel",
                "code": "IDockviewPanel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanel"
                ]
            }
        ]
    },
    "DockviewGroupPanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "location",
                "code": "DockviewGroupLocation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupLocation"
                ]
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidConstraintsChange",
                "code": "Event<GridConstraintChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridConstraintChangeEvent"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidLocationChange",
                "code": "Event<DockviewGroupPanelFloatingChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanelFloatingChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "close",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximized",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getWindow",
                "code": "(): Window",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If you require the Window object"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isMaximized",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximize",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveTo",
                "code": "(options: { group?: DockviewGroupPanel, position?: 'right' | 'bottom' | 'top' | 'left' | 'center' }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setConstraints",
                "code": "(value: GridConstraintChangeEvent2): void",
                "kind": "method",
                "pieces": [
                    "GridConstraintChangeEvent2"
                ]
            },
            {
                "name": "setSize",
                "code": "(event: SizeEvent): void",
                "kind": "method",
                "pieces": [
                    "SizeEvent"
                ]
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "DockviewGroupPanelFloatingChangeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "location",
                "code": "DockviewGroupLocation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupLocation"
                ]
            }
        ]
    },
    "DockviewPanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isGroupActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "location",
                "code": "DockviewGroupLocation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupLocation"
                ]
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<ActiveGroupEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveGroupEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidGroupChange",
                "code": "Event<GroupChangedEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupChangedEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidLocationChange",
                "code": "Event<DockviewGroupPanelFloatingChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanelFloatingChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidRendererChange",
                "code": "Event<RendererChangedEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "RendererChangedEvent"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "renderer",
                "code": "DockviewPanelRenderer",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            },
            {
                "name": "title",
                "code": "string | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "close",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximized",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getWindow",
                "code": "(): Window",
                "kind": "method",
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If you require the Window object"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isMaximized",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximize",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveTo",
                "code": "(options: { group: DockviewGroupPanel, index?: number, position?: 'right' | 'bottom' | 'top' | 'left' | 'center' }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setRenderer",
                "code": "(renderer: DockviewPanelRenderer): void",
                "kind": "method",
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            },
            {
                "name": "setSize",
                "code": "(event: SizeEvent): void",
                "kind": "method",
                "pieces": [
                    "SizeEvent"
                ]
            },
            {
                "name": "setTitle",
                "code": "(title: string): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "DockviewRenderFunctions": {
        "kind": "interface",
        "children": [
            {
                "name": "components",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkTabComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "tabComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "ExpansionEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "isExpanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "FocusEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "FrameworkFactory": {
        "kind": "interface",
        "children": [
            {
                "name": "createComponent",
                "code": "(id: string, componentId: string, component: any): FrameworkFactory.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "GridBranchNode": {
        "kind": "interface",
        "children": [
            {
                "name": "box",
                "code": "{ height: number, width: number }",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "children",
                "code": "GridNode<GridBranchNode.T>[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "GridConstraintChangeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "GridLeafNode": {
        "kind": "interface",
        "children": [
            {
                "name": "box",
                "code": "{ height: number, width: number }",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "cachedVisibleSize",
                "code": "number | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "view",
                "code": "GridLeafNode.T",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "T"
                ]
            }
        ]
    },
    "GridPanelViewState": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "GridviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "components",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkComponentFactory",
                "code": "FrameworkFactory<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "FrameworkFactory",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "frameworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "parentElement",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "ISplitviewStyles"
                ]
            }
        ]
    },
    "GridviewInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "accessor",
                "code": "BaseGrid<IGridPanelView>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "BaseGrid",
                    "IGridPanelView"
                ]
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "GridviewPanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidConstraintsChange",
                "code": "Event<GridConstraintChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridConstraintChangeEvent"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setConstraints",
                "code": "(value: GridConstraintChangeEvent2): void",
                "kind": "method",
                "pieces": [
                    "GridConstraintChangeEvent2"
                ]
            },
            {
                "name": "setSize",
                "code": "(event: SizeEvent): void",
                "kind": "method",
                "pieces": [
                    "SizeEvent"
                ]
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "GroupDragEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "GroupOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "activePanel",
                "code": "IDockviewPanel",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "hideHeader",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "locked",
                "code": "'no-drop-target' | boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "skipSetActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "GroupPanelContentPartInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "tab",
                "code": "ITabRenderer",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "ITabRenderer"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "GroupPanelFrameworkComponentFactory": {
        "kind": "interface",
        "children": [
            {
                "name": "content",
                "code": "FrameworkFactory<IContentRenderer>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "FrameworkFactory",
                    "IContentRenderer"
                ]
            },
            {
                "name": "tab",
                "code": "FrameworkFactory<ITabRenderer>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "FrameworkFactory",
                    "ITabRenderer"
                ]
            },
            {
                "name": "watermark",
                "code": "FrameworkFactory<IWatermarkRenderer>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "FrameworkFactory",
                    "IWatermarkRenderer"
                ]
            }
        ]
    },
    "GroupPanelPartInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "GroupPanelViewState": {
        "kind": "interface",
        "children": [
            {
                "name": "activeView",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "hideHeader",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "locked",
                "code": "'no-drop-target' | boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "skipSetActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "views",
                "code": "string[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "GroupviewPanelState": {
        "kind": "interface",
        "children": [
            {
                "name": "contentComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "params",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "renderer",
                "code": "'always' | 'onlyWhenVisibile'",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "tabComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "HeaderPartInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IBaseGrid": {
        "kind": "interface",
        "children": [
            {
                "name": "activeGroup",
                "code": "IBaseGrid.T | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "groups",
                "code": "IBaseGrid.T[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: any): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "getPanel",
                "code": "(id: string): IBaseGrid.T | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: IBaseGrid.T): boolean",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: IBaseGrid.T): boolean",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, force?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: IBaseGrid.T): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: IBaseGrid.T, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IBaseView": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IContentContainer": {
        "kind": "interface",
        "children": [
            {
                "name": "closePanel",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "dropTarget",
                "code": "Droptarget",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Droptarget"
                ]
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "onDidBlur",
                "code": "Event<void>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidFocus",
                "code": "Event<void>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "openPanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "hide",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "renderPanel",
                "code": "(panel: IDockviewPanel, options: { asActive: boolean }): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "show",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IContentRenderer": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidBlur",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidFocus",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(parameters: GroupPanelContentPartInitParameters): void",
                "kind": "method",
                "pieces": [
                    "GroupPanelContentPartInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IDockviewComponent": {
        "kind": "interface",
        "children": [
            {
                "name": "activeGroup",
                "code": "DockviewGroupPanel | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "doSetGroupActive",
                "code": "(group: DockviewGroupPanel, skipFocus?: boolean): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "getGroupPanel",
                "code": "(id: string): IDockviewPanel | undefined",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "groups",
                "code": "DockviewGroupPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<DockviewGroupPanel | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<IDockviewPanel | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAddGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<IDockviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<DockviewDidDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewDidDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveGroup",
                "code": "Event<DockviewGroupPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel",
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<IDockviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IDockviewPanel"
                ]
            },
            {
                "name": "onWillDragGroup",
                "code": "Event<GroupDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupDragEvent"
                ]
            },
            {
                "name": "onWillDragPanel",
                "code": "Event<TabDragEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "TabDragEvent"
                ]
            },
            {
                "name": "onWillDrop",
                "code": "Event<DockviewWillDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewWillDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onWillShowOverlay",
                "code": "Event<WillShowOverlayLocationEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillShowOverlayLocationEvent"
                ]
            },
            {
                "name": "options",
                "code": "DockviewComponentOptions",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewComponentOptions"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "removeGroup",
                "code": "(group: DockviewGroupPanel): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "totalPanels",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "addFloatingGroup",
                "code": "(item: IDockviewPanel | DockviewGroupPanel, coord?: { x: number, y: number }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "addGroup",
                "code": "(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPanelOptions<T>): IDockviewPanel",
                "kind": "method",
                "pieces": [
                    "AddPanelOptions",
                    "IDockviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "addPopoutGroup",
                "code": "(item: IDockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, popoutUrl?: string, position?: Box }): Promise<void>",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "closeAllGroups",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "createWatermarkComponent",
                "code": "(): IWatermarkRenderer",
                "kind": "method",
                "pieces": [
                    "IWatermarkRenderer"
                ]
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(data: SerializedDockview): void",
                "kind": "method",
                "pieces": [
                    "SerializedDockview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): DockviewGroupPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: DockviewGroupPanel): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: DockviewGroupPanel): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, force?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: DockviewGroupPanel): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "moveGroup",
                "code": "(options: MoveGroupOptions): void",
                "kind": "method",
                "pieces": [
                    "MoveGroupOptions"
                ]
            },
            {
                "name": "moveGroupOrPanel",
                "code": "(options: MoveGroupOrPanelOptions): void",
                "kind": "method",
                "pieces": [
                    "MoveGroupOrPanelOptions"
                ]
            },
            {
                "name": "moveToNext",
                "code": "(options?: MovementOptions): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: MovementOptions): void",
                "kind": "method",
                "pieces": [
                    "MovementOptions"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setActivePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: DockviewGroupPanel, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedDockview",
                "kind": "method",
                "pieces": [
                    "SerializedDockview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: DockviewComponentUpdateOptions): void",
                "kind": "method",
                "pieces": [
                    "DockviewComponentUpdateOptions"
                ]
            }
        ]
    },
    "IDockviewDisposable": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IDockviewGroupPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "api",
                "code": "DockviewGroupPanelApi",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanelApi"
                ]
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "locked",
                "code": "DockviewGroupPanelLocked",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewGroupPanelLocked"
                ]
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "model",
                "code": "IDockviewGroupPanelModel",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "IDockviewGroupPanelModel"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IDockviewGroupPanelModel": {
        "kind": "interface",
        "children": [
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "header",
                "code": "IHeader",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "IHeader"
                ]
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isContentFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isPanelActive",
                "code": "(panel: IDockviewPanel): boolean",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "locked",
                "code": "DockviewGroupPanelLocked",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewGroupPanelLocked"
                ]
            },
            {
                "name": "onDidActivePanelChange",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidAddPanel",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<DockviewDidDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewDidDropEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidRemovePanel",
                "code": "Event<DockviewGroupChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupChangeEvent",
                    "Event"
                ]
            },
            {
                "name": "onMove",
                "code": "Event<GroupMoveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GroupMoveEvent"
                ]
            },
            {
                "name": "onWillDrop",
                "code": "Event<DockviewWillDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewWillDropEvent",
                    "Event"
                ]
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panelOrId: IDockviewPanel | string): IDockviewPanel",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "canDisplayOverlay",
                "code": "(event: DragEvent, position: Position, target: DockviewGroupDropLocation): boolean",
                "kind": "method",
                "pieces": [
                    "DockviewGroupDropLocation",
                    "Position"
                ]
            },
            {
                "name": "closeAllPanels",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "closePanel",
                "code": "(panel: IDockviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "containsPanel",
                "code": "(panel: IDockviewPanel): boolean",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "indexOf",
                "code": "(panel: IDockviewPanel): number",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "init",
                "code": "(params: PanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "initialize",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveToNext",
                "code": "(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "moveToPrevious",
                "code": "(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "openPanel",
                "code": "(panel: IDockviewPanel, options?: { index?: number, skipFocus?: boolean, skipSetGroupActive?: boolean, skipSetPanelActive?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "IDockviewPanel"
                ]
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IDockviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewPanelApi",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewPanelApi"
                ]
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "title",
                "code": "string | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "view",
                "code": "IDockviewPanelModel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanelModel"
                ]
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: IGroupPanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "IGroupPanelInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "runEvents",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setTitle",
                "code": "(title: string): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): GroupviewPanelState",
                "kind": "method",
                "pieces": [
                    "GroupviewPanelState"
                ]
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            },
            {
                "name": "updateParentGroup",
                "code": "(group: DockviewGroupPanel, options?: { skipSetActive?: boolean }): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            }
        ]
    },
    "IFrameworkPart": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "update",
                "code": "(params: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "IGridPanelComponentView": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: GridviewInitParameters): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(json: object): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(visible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IGridPanelView": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(json: object): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: PanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(isActive: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(visible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IGridView": {
        "kind": "interface",
        "children": [
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<IViewSize | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(json: object): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(visible: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IGridviewComponent": {
        "kind": "interface",
        "children": [
            {
                "name": "activeGroup",
                "code": "GridviewPanel<GridviewPanelApiImpl> | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "groups",
                "code": "GridviewPanel<GridviewPanelApiImpl>[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidActiveGroupChange",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl> | undefined>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidAddGroup",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidMaximizedGroupChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveGroup",
                "code": "Event<GridviewPanel<GridviewPanelApiImpl>>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>",
                "kind": "method",
                "pieces": [
                    "AddComponentOptions",
                    "GridviewPanelApi",
                    "IGridviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "exitMaximizedGroup",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedGridview: SerializedGridviewComponent): void",
                "kind": "method",
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): GridviewPanel<GridviewPanelApiImpl> | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "hasMaximizedGroup",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isMaximizedGroup",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): boolean",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "isVisible",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): boolean",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number, force?: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "maximizeGroup",
                "code": "(panel: GridviewPanel<GridviewPanelApiImpl>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanel",
                    "GridviewPanelApiImpl"
                ]
            },
            {
                "name": "movePanel",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>, options: { direction: Direction, reference: string, size?: number }): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "removePanel",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "setActive",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: IGridviewPanel<GridviewPanelApi>, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "GridviewPanelApi",
                    "IGridviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedGridviewComponent",
                "kind": "method",
                "pieces": [
                    "SerializedGridviewComponent"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<GridviewComponentUpdateOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IGridviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "IGridviewPanel.T",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumHeight",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumWidth",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IGroupPanelInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IHeader": {
        "kind": "interface",
        "children": [
            {
                "name": "hidden",
                "code": "boolean",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IHeaderActionsRenderer": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: { api: DockviewGroupPanelApi, containerApi: DockviewApi }): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "INodeDescriptor": {
        "kind": "interface",
        "children": [
            {
                "name": "node",
                "code": "Node",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Node"
                ]
            },
            {
                "name": "visible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IPaneBodyPart": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "init",
                "code": "(parameters: PanePanelComponentInitParameter): void",
                "kind": "method",
                "pieces": [
                    "PanePanelComponentInitParameter"
                ]
            },
            {
                "name": "update",
                "code": "(params: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IPaneHeaderPart": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "init",
                "code": "(parameters: PanePanelComponentInitParameter): void",
                "kind": "method",
                "pieces": [
                    "PanePanelComponentInitParameter"
                ]
            },
            {
                "name": "update",
                "code": "(params: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: PanelInitParameters): void",
                "kind": "method",
                "pieces": [
                    "PanelInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IPanelDeserializer": {
        "kind": "interface",
        "children": [
            {
                "name": "fromJSON",
                "code": "(panelData: GroupviewPanelState, group: DockviewGroupPanel): IDockviewPanel",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel",
                    "GroupviewPanelState",
                    "IDockviewPanel"
                ]
            }
        ]
    },
    "IPaneview": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "DocumentFragment | HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidChangeExpansionState",
                "code": "Event<boolean>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(visible: boolean): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IPaneviewComponent": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<PaneviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "onDidDrop",
                "code": "Event<PaneviewDropEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewDropEvent"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<PaneviewPanel>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PaneviewPanel"
                ]
            },
            {
                "name": "options",
                "code": "PaneviewComponentOptions",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "PaneviewComponentOptions"
                ]
            },
            {
                "name": "panels",
                "code": "IPaneviewPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel",
                "kind": "method",
                "pieces": [
                    "AddPaneviewComponentOptions",
                    "IPaneviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedPaneview: SerializedPaneview): void",
                "kind": "method",
                "pieces": [
                    "SerializedPaneview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): IPaneviewPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: IPaneviewPanel): void",
                "kind": "method",
                "pieces": [
                    "IPaneviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedPaneview",
                "kind": "method",
                "pieces": [
                    "SerializedPaneview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<PaneviewComponentOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IPaneviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "PaneviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "PaneviewPanelApiImpl"
                ]
            },
            {
                "name": "headerVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "isExpanded",
                "code": "(): boolean",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setExpanded",
                "code": "(isExpanded: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "ISerializedBranchNode": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "ISerializedNode[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "type",
                "code": "'branch'",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "ISerializedLeafNode": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "ISerializedLeafNode.T",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "T"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "type",
                "code": "'leaf'",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "visible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "ISplitViewDescriptor": {
        "kind": "interface",
        "children": [
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "views",
                "code": "{ size: number, view: IView, visible?: boolean }[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "ISplitviewComponent": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "length",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "onDidAddView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "onDidLayoutChange",
                "code": "Event<void>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidLayoutFromJSON",
                "code": "Event<void>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onDidRemoveView",
                "code": "Event<IView>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "IView"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "panels",
                "code": "SplitviewPanel[]",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "addPanel",
                "code": "<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): ISplitviewPanel",
                "kind": "method",
                "pieces": [
                    "AddSplitviewComponentOptions",
                    "ISplitviewPanel",
                    "Parameters",
                    "T"
                ]
            },
            {
                "name": "clear",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "fromJSON",
                "code": "(serializedSplitview: SerializedSplitview): void",
                "kind": "method",
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "getPanel",
                "code": "(id: string): ISplitviewPanel | undefined",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "movePanel",
                "code": "(from: number, to: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "removePanel",
                "code": "(panel: ISplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void",
                "kind": "method",
                "pieces": [
                    "ISplitviewPanel"
                ]
            },
            {
                "name": "setVisible",
                "code": "(panel: ISplitviewPanel, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "ISplitviewPanel"
                ]
            },
            {
                "name": "toJSON",
                "code": "(): SerializedSplitview",
                "kind": "method",
                "pieces": [
                    "SerializedSplitview"
                ]
            },
            {
                "name": "updateOptions",
                "code": "(options: Partial<SplitviewComponentUpdateOptions>): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "ISplitviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "SplitviewPanelApiImpl",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "SplitviewPanelApiImpl"
                ]
            },
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "params",
                "code": "Parameters | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "ISplitviewStyles": {
        "kind": "interface",
        "children": [
            {
                "name": "separatorBorder",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "ITabRenderer": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "init",
                "code": "(parameters: GroupPanelPartInitParameters): void",
                "kind": "method",
                "pieces": [
                    "GroupPanelPartInitParameters"
                ]
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            }
        ]
    },
    "IView": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "element",
                "code": "DocumentFragment | HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "onDidChange",
                "code": "Event<{ orthogonalSize?: number, size?: number }>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(size: number, orthogonalSize: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setVisible",
                "code": "(visible: boolean): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "IViewDeserializer": {
        "kind": "interface",
        "children": [
            {
                "name": "fromJSON",
                "code": "(data: ISerializedLeafNode<any>): IGridView",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IViewSize": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IWatermarkRenderer": {
        "kind": "interface",
        "children": [
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "element",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "init",
                "code": "(params: WatermarkRendererInitParameters): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "focus",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "layout",
                "code": "(width: number, height: number): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "toJSON",
                "code": "(): object",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: PanelUpdateEvent<Parameters>): void",
                "kind": "method",
                "pieces": [
                    "PanelUpdateEvent",
                    "Parameters"
                ]
            },
            {
                "name": "updateParentGroup",
                "code": "(group: DockviewGroupPanel, visible: boolean): void",
                "kind": "method",
                "pieces": [
                    "DockviewGroupPanel"
                ]
            }
        ]
    },
    "MovementOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "includePanel",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "MovementOptions2": {
        "kind": "interface",
        "children": [
            {
                "name": "group",
                "code": "IGridView",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "IGridView"
                ]
            }
        ]
    },
    "PanePanelComponentInitParameter": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "PaneviewPanelApiImpl",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewPanelApiImpl"
                ]
            },
            {
                "name": "containerApi",
                "code": "PaneviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewApi"
                ]
            },
            {
                "name": "isExpanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PanePanelInitParameter": {
        "kind": "interface",
        "children": [
            {
                "name": "containerApi",
                "code": "PaneviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewApi"
                ]
            },
            {
                "name": "isExpanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumBodySize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PanePanelViewState": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "headerComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "PanelConstraintChangeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "PanelDimensionChangeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "PanelInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "PanelOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "params",
                "code": "PanelOptions.P",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "P"
                ]
            },
            {
                "name": "tabComponent",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "PanelReference": {
        "kind": "interface",
        "children": [
            {
                "name": "remove",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "update",
                "code": "(event: { params:  }): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PanelSizeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "PanelUpdateEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "params",
                "code": "Partial<PanelUpdateEvent.T>",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PanelViewInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "accessor",
                "code": "SplitviewComponent",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SplitviewComponent"
                ]
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "Parameters",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Parameters"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "PaneviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "components",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableDnd",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkWrapper",
                "code": "{ body: FrameworkFactory<IPaneBodyPart>, header: FrameworkFactory<IPaneHeaderPart> }",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "headerComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "headerframeworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "parentElement",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "showDndOverlay",
                "code": "(event: PaneviewDndOverlayEvent): boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "PaneviewDndOverlayEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "getData",
                "code": "(): PaneTransfer | undefined",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IPaneviewPanel",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "IPaneviewPanel"
                ]
            }
        ]
    },
    "PaneviewDropEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "PaneviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewApi"
                ]
            },
            {
                "name": "getData",
                "code": "(): PaneTransfer | undefined",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IPaneviewPanel",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "IPaneviewPanel"
                ]
            },
            {
                "name": "position",
                "code": "Position",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Position"
                ]
            }
        ]
    },
    "PaneviewPanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isExpanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidConstraintsChange",
                "code": "Event<PanelConstraintChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelConstraintChangeEvent"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidExpansionChange",
                "code": "Event<ExpansionEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "ExpansionEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onMouseEnter",
                "code": "Event<MouseEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onMouseLeave",
                "code": "Event<MouseEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setConstraints",
                "code": "(value: PanelConstraintChangeEvent2): void",
                "kind": "method",
                "pieces": [
                    "PanelConstraintChangeEvent2"
                ]
            },
            {
                "name": "setExpanded",
                "code": "(isExpanded: boolean): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setSize",
                "code": "(event: PanelSizeEvent): void",
                "kind": "method",
                "pieces": [
                    "PanelSizeEvent"
                ]
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "Parameters": {
        "kind": "interface",
        "children": [],
        "metadata": {
            "name": "Parameters",
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "A key-value object of anything that is a valid JavaScript Object."
                    }
                ]
            },
            "code": "",
            "pieces": []
        }
    },
    "RendererChangedEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "renderer",
                "code": "DockviewPanelRenderer",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "DockviewPanelRenderer"
                ]
            }
        ]
    },
    "SerializedDockview": {
        "kind": "interface",
        "children": [
            {
                "name": "activeGroup",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "floatingGroups",
                "code": "SerializedFloatingGroup[]",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "grid",
                "code": "{ height: number, orientation: Orientation, root: SerializedGridObject<GroupPanelViewState>, width: number }",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "panels",
                "code": "Record<string, GroupviewPanelState>",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "popoutGroups",
                "code": "SerializedPopoutGroup[]",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SerializedFloatingGroup": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "GroupPanelViewState",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GroupPanelViewState"
                ]
            },
            {
                "name": "position",
                "code": "Box",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Box"
                ]
            }
        ]
    },
    "SerializedGridObject": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "SerializedGridObject<SerializedGridObject.T>[] | SerializedGridObject.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "type",
                "code": "'branch' | 'leaf'",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "visible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SerializedGridview": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "root",
                "code": "SerializedGridObject<SerializedGridview.T>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SerializedGridObject",
                    "T"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "SerializedGridviewComponent": {
        "kind": "interface",
        "children": [
            {
                "name": "activePanel",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "grid",
                "code": "SerializedGridview<GridPanelViewState>",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GridPanelViewState",
                    "SerializedGridview"
                ]
            }
        ]
    },
    "SerializedPaneview": {
        "kind": "interface",
        "children": [
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "views",
                "code": "SerializedPaneviewPanel[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "SerializedPaneviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "{ component: string, headerComponent?: string, id: string, params?: , title: string }",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "expanded",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SerializedPopoutGroup": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "GroupPanelViewState",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GroupPanelViewState"
                ]
            },
            {
                "name": "gridReferenceGroup",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "position",
                "code": "Box | 'null'",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "SerializedSplitview": {
        "kind": "interface",
        "children": [
            {
                "name": "activeView",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "views",
                "code": "SerializedSplitviewPanel[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "SerializedSplitviewPanel": {
        "kind": "interface",
        "children": [
            {
                "name": "data",
                "code": "SerializedSplitviewPanelData",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SerializedSplitviewPanelData"
                ]
            },
            {
                "name": "priority",
                "code": "LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "size",
                "code": "number",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "snap",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SerializedSplitviewPanelData": {
        "kind": "interface",
        "children": [
            {
                "name": "component",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "maximumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "minimumSize",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "params",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SizeEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "SplitViewOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "descriptor",
                "code": "ISplitViewDescriptor",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "ISplitViewDescriptor"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "ISplitviewStyles"
                ]
            }
        ]
    },
    "SplitviewComponentOptions": {
        "kind": "interface",
        "children": [
            {
                "name": "components",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "descriptor",
                "code": "ISplitViewDescriptor",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "ISplitViewDescriptor"
                ]
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkComponents",
                "code": "",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "frameworkWrapper",
                "code": "FrameworkFactory<SplitviewPanel>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "FrameworkFactory",
                    "SplitviewPanel"
                ]
            },
            {
                "name": "orientation",
                "code": "Orientation",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Orientation"
                ]
            },
            {
                "name": "parentElement",
                "code": "HTMLElement",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "styles",
                "code": "ISplitviewStyles",
                "kind": "property",
                "flags": {
                    "isOptional": true,
                    "isReadonly": true
                },
                "pieces": [
                    "ISplitviewStyles"
                ]
            }
        ]
    },
    "SplitviewPanelApi": {
        "kind": "interface",
        "children": [
            {
                "name": "height",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel height in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "id",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The id of the panel that would have been assigned when the panel was created"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isActive",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is the actively selected panel"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isFocused",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel holds the current focus"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isHidden",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is hidden"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Whether the panel is visible"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "onDidActiveChange",
                "code": "Event<ActiveEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "ActiveEvent",
                    "Event"
                ]
            },
            {
                "name": "onDidConstraintsChange",
                "code": "Event<PanelConstraintChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelConstraintChangeEvent"
                ]
            },
            {
                "name": "onDidDimensionsChange",
                "code": "Event<PanelDimensionChangeEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "PanelDimensionChangeEvent"
                ]
            },
            {
                "name": "onDidFocusChange",
                "code": "Event<FocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "FocusEvent"
                ]
            },
            {
                "name": "onDidHiddenChange",
                "code": "Event<HiddenEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "HiddenEvent"
                ]
            },
            {
                "name": "onDidVisibilityChange",
                "code": "Event<VisibilityEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "VisibilityEvent"
                ]
            },
            {
                "name": "onWillFocus",
                "code": "Event<WillFocusEvent>",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "Event",
                    "WillFocusEvent"
                ]
            },
            {
                "name": "width",
                "code": "number",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "comment": {
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The panel width in pixels"
                        }
                    ]
                },
                "pieces": []
            },
            {
                "name": "setActive",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "setConstraints",
                "code": "(value: PanelConstraintChangeEvent2): void",
                "kind": "method",
                "pieces": [
                    "PanelConstraintChangeEvent2"
                ]
            },
            {
                "name": "setSize",
                "code": "(event: PanelSizeEvent): void",
                "kind": "method",
                "pieces": [
                    "PanelSizeEvent"
                ]
            },
            {
                "name": "updateParameters",
                "code": "(parameters: Parameters): void",
                "kind": "method",
                "pieces": [
                    "Parameters"
                ]
            }
        ]
    },
    "TabContextMenuEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "event",
                "code": "MouseEvent",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IDockviewPanel",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "IDockviewPanel"
                ]
            }
        ]
    },
    "TabDragEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "nativeEvent",
                "code": "DragEvent",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "panel",
                "code": "IDockviewPanel",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": [
                    "IDockviewPanel"
                ]
            }
        ]
    },
    "TitleEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "ViewFactoryData": {
        "kind": "interface",
        "children": [
            {
                "name": "content",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "tab",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "VisibilityEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "isVisible",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isReadonly": true
                },
                "pieces": []
            }
        ]
    },
    "WatermarkConstructor": {
        "kind": "interface",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            }
        ]
    },
    "WatermarkPartInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "accessor",
                "code": "IDockviewComponent",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "IDockviewComponent"
                ]
            }
        ]
    },
    "WatermarkRendererInitParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "group",
                "code": "IDockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "IDockviewGroupPanel"
                ]
            }
        ]
    },
    "AddGroupOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "AddGroupOptions",
            "code": "GroupOptions & AbsolutePosition | AddGroupOptionsWithPanel | AddGroupOptionsWithGroup",
            "pieces": []
        }
    },
    "AddPanelOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "AddPanelOptions",
            "code": "Partial<AddPanelOptionsUnion> & { component: string, id: string, params?: P, renderer?: DockviewPanelRenderer, tabComponent?: string, title?: string }",
            "pieces": []
        }
    },
    "AddPanelPositionOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "AddPanelPositionOptions",
            "code": "AbsolutePosition | RelativeGroup | RelativePanel",
            "pieces": []
        }
    },
    "ComponentConstructor": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "ComponentConstructor",
            "code": "",
            "pieces": []
        }
    },
    "Direction": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "Direction",
            "code": "'within' | 'below' | 'above' | 'right' | 'left'",
            "pieces": []
        }
    },
    "DistributeSizing": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DistributeSizing",
            "code": "{ type: 'distribute' }",
            "pieces": []
        }
    },
    "DockviewComponentUpdateOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DockviewComponentUpdateOptions",
            "code": "Pick<DockviewComponentOptions, 'disableDnd' | 'rootOverlayModel' | 'floatingGroupBounds' | 'disableFloatingGroups' | 'createPrefixHeaderActionsElement' | 'createRightHeaderActionsElement' | 'createLeftHeaderActionsElement' | 'defaultTabComponent' | 'watermarkFrameworkComponent' | 'showDndOverlay' | 'frameworkTabComponents' | 'tabComponents' | 'frameworkComponents' | 'components' | 'orientation'>",
            "pieces": []
        }
    },
    "DockviewGroupDropLocation": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DockviewGroupDropLocation",
            "code": "'edge' | 'content' | 'header_space' | 'tab'",
            "pieces": []
        }
    },
    "DockviewGroupLocation": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DockviewGroupLocation",
            "code": "{ getWindow: (): Window, type: 'popout' } | { type: 'floating' } | { type: 'grid' }",
            "pieces": []
        }
    },
    "DockviewGroupPanelLocked": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DockviewGroupPanelLocked",
            "code": "'no-drop-target' | boolean",
            "pieces": []
        }
    },
    "DockviewPanelRenderer": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DockviewPanelRenderer",
            "code": "'always' | 'onlyWhenVisibile'",
            "pieces": []
        }
    },
    "DroptargetOverlayModel": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "DroptargetOverlayModel",
            "code": "{ activationSize?: MeasuredValue, size?: MeasuredValue }",
            "pieces": []
        }
    },
    "GridNode": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "GridNode",
            "code": "GridBranchNode<T> | GridLeafNode<T>",
            "pieces": []
        }
    },
    "GridviewComponentUpdateOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "GridviewComponentUpdateOptions",
            "code": "Pick<GridviewComponentOptions, 'frameworkComponents' | 'components' | 'orientation'>",
            "pieces": []
        }
    },
    "IDockviewGroupPanelPublic": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "IDockviewGroupPanelPublic",
            "code": "IDockviewGroupPanel",
            "pieces": [
                "IDockviewGroupPanel"
            ]
        }
    },
    "ISerializedNode": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "ISerializedNode",
            "code": "ISerializedBranchNode | ISerializedLeafNode",
            "pieces": []
        }
    },
    "InvisibleSizing": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "InvisibleSizing",
            "code": "{ cachedVisibleSize: number, type: 'invisible' }",
            "pieces": []
        }
    },
    "MeasuredValue": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "MeasuredValue",
            "code": "{ type: 'percentage' | 'pixels', value: number }",
            "pieces": []
        }
    },
    "Position": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "Position",
            "code": "'center' | 'right' | 'left' | 'bottom' | 'top'",
            "pieces": []
        }
    },
    "SplitSizing": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "SplitSizing",
            "code": "{ index: number, type: 'split' }",
            "pieces": []
        }
    },
    "SplitviewComponentUpdateOptions": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "SplitviewComponentUpdateOptions",
            "code": "Pick<SplitviewComponentOptions, 'frameworkComponents' | 'components' | 'orientation'>",
            "pieces": []
        }
    },
    "createComponent": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "createComponent",
            "code": "<T>(id: string, componentName?: string, components: , frameworkComponents: , createFrameworkComponent?: FrameworkFactory<T>, fallback?: (): T): T",
            "pieces": [
                "T",
                "FrameworkFactory",
                "T"
            ]
        }
    },
    "directionToPosition": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "directionToPosition",
            "code": "(direction: Direction): Position",
            "pieces": [
                "Direction",
                "Position"
            ]
        }
    },
    "getDirectionOrientation": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getDirectionOrientation",
            "code": "(direction: Position): Orientation",
            "pieces": [
                "Position",
                "Orientation"
            ]
        }
    },
    "getGridLocation": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getGridLocation",
            "code": "(element: HTMLElement): number[]",
            "pieces": []
        }
    },
    "getLocationOrientation": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getLocationOrientation",
            "code": "(rootOrientation: Orientation, location: number[]): Orientation",
            "pieces": [
                "Orientation",
                "Orientation"
            ]
        }
    },
    "getPaneData": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getPaneData",
            "code": "(): undefined | PaneTransfer",
            "pieces": []
        }
    },
    "getPanelData": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getPanelData",
            "code": "(): undefined | PanelTransfer",
            "pieces": []
        }
    },
    "getRelativeLocation": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "getRelativeLocation",
            "code": "(rootOrientation: Orientation, location: number[], direction: Position): number[]",
            "pieces": [
                "Orientation",
                "Position"
            ]
        }
    },
    "indexInParent": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "indexInParent",
            "code": "(element: HTMLElement): number",
            "pieces": []
        }
    },
    "isGridBranchNode": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isGridBranchNode",
            "code": "<T extends IGridView>(node: GridNode<T>): node is GridBranchNode<T>",
            "pieces": [
                "IGridView",
                "T",
                "GridNode"
            ]
        }
    },
    "isGroupOptionsWithGroup": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isGroupOptionsWithGroup",
            "code": "(data: AddGroupOptions): data is AddGroupOptionsWithGroup",
            "pieces": [
                "AddGroupOptions"
            ]
        }
    },
    "isGroupOptionsWithPanel": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isGroupOptionsWithPanel",
            "code": "(data: AddGroupOptions): data is AddGroupOptionsWithPanel",
            "pieces": [
                "AddGroupOptions"
            ]
        }
    },
    "isPanelOptionsWithGroup": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isPanelOptionsWithGroup",
            "code": "(data: AddPanelPositionOptions): data is RelativeGroup",
            "pieces": [
                "AddPanelPositionOptions"
            ]
        }
    },
    "isPanelOptionsWithPanel": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isPanelOptionsWithPanel",
            "code": "(data: AddPanelPositionOptions): data is RelativePanel",
            "pieces": [
                "AddPanelPositionOptions"
            ]
        }
    },
    "orthogonal": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "orthogonal",
            "code": "(orientation: Orientation): Orientation",
            "pieces": [
                "Orientation"
            ]
        }
    },
    "positionToDirection": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "positionToDirection",
            "code": "(position: Position): Direction",
            "pieces": [
                "Position",
                "Direction"
            ]
        }
    },
    "toTarget": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "toTarget",
            "code": "(direction: Direction): Position",
            "pieces": [
                "Direction",
                "Position"
            ]
        }
    },
    "ReactPart": {
        "kind": "class",
        "children": [
            {
                "name": "constructor",
                "code": "",
                "pieces": []
            },
            {
                "name": "dispose",
                "code": "(): void",
                "kind": "method",
                "pieces": []
            },
            {
                "name": "update",
                "code": "(props: ): void",
                "kind": "method",
                "pieces": []
            }
        ]
    },
    "DockviewReadyEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            }
        ]
    },
    "GridviewReadyEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "GridviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GridviewApi"
                ]
            }
        ]
    },
    "IDockviewHeaderActionsProps": {
        "kind": "interface",
        "children": [
            {
                "name": "activePanel",
                "code": "IDockviewPanel | undefined",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "api",
                "code": "DockviewGroupPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewGroupPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "group",
                "code": "DockviewGroupPanel",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewGroupPanel"
                ]
            },
            {
                "name": "isGroupActive",
                "code": "boolean",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "panels",
                "code": "IDockviewPanel[]",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IDockviewReactProps": {
        "kind": "interface",
        "children": [
            {
                "name": "className",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "components",
                "code": "PanelCollection<IDockviewPanelProps<any>>",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "debug",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "defaultRenderer",
                "code": "'always' | 'onlyWhenVisibile'",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "defaultTabComponent",
                "code": "React.FunctionComponent<IDockviewPanelHeaderProps<any>>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableDnd",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableFloatingGroups",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "floatingGroupBounds",
                "code": "'boundedWithinViewport' | { minimumHeightWithinViewport?: number, minimumWidthWithinViewport?: number }",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "hideBorders",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "leftHeaderActionsComponent",
                "code": "React.FunctionComponent<IDockviewHeaderActionsProps>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "locked",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onDidDrop",
                "code": "(event: DockviewDidDropEvent): void",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onReady",
                "code": "(event: DockviewReadyEvent): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "onWillDrop",
                "code": "(event: DockviewWillDropEvent): void",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "prefixHeaderActionsComponent",
                "code": "React.FunctionComponent<IDockviewHeaderActionsProps>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "rightHeaderActionsComponent",
                "code": "React.FunctionComponent<IDockviewHeaderActionsProps>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "rootOverlayModel",
                "code": "DroptargetOverlayModel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "DroptargetOverlayModel"
                ]
            },
            {
                "name": "showDndOverlay",
                "code": "(event: DockviewDndOverlayEvent): boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "singleTabMode",
                "code": "'default' | 'fullwidth'",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "tabComponents",
                "code": "PanelCollection<IDockviewPanelHeaderProps<any>>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "watermarkComponent",
                "code": "React.FunctionComponent<IWatermarkPanelProps>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IGridviewPanelProps": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "GridviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GridviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "GridviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "GridviewApi"
                ]
            },
            {
                "name": "params",
                "code": "IGridviewPanelProps.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IGridviewReactProps": {
        "kind": "interface",
        "children": [
            {
                "name": "className",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "components",
                "code": "PanelCollection<IGridviewPanelProps<any>>",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "hideBorders",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onReady",
                "code": "(event: GridviewReadyEvent): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation.VERTICAL | Orientation.HORIZONTAL",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IGroupPanelBaseProps": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "DockviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "params",
                "code": "IGroupPanelBaseProps.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IPaneviewPanelProps": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "PaneviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "PaneviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewApi"
                ]
            },
            {
                "name": "params",
                "code": "IPaneviewPanelProps.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "title",
                "code": "string",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "IPaneviewReactProps": {
        "kind": "interface",
        "children": [
            {
                "name": "className",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "components",
                "code": "PanelCollection<IPaneviewPanelProps<any>>",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "disableDnd",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "headerComponents",
                "code": "PanelCollection<IPaneviewPanelProps<any>>",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onReady",
                "code": "(event: PaneviewReadyEvent): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "showDndOverlay",
                "code": "(event: PaneviewDndOverlayEvent): boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onDidDrop",
                "code": "(event: PaneviewDropEvent): void",
                "kind": "method",
                "pieces": [
                    "PaneviewDropEvent"
                ]
            }
        ]
    },
    "ISplitviewPanelProps": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "SplitviewPanelApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SplitviewPanelApi"
                ]
            },
            {
                "name": "containerApi",
                "code": "SplitviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SplitviewApi"
                ]
            },
            {
                "name": "params",
                "code": "ISplitviewPanelProps.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "ISplitviewReactProps": {
        "kind": "interface",
        "children": [
            {
                "name": "className",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "components",
                "code": "PanelCollection<ISplitviewPanelProps<any>>",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "disableAutoResizing",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "hideBorders",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "onReady",
                "code": "(event: SplitviewReadyEvent): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "orientation",
                "code": "Orientation.VERTICAL | Orientation.HORIZONTAL",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "proportionalLayout",
                "code": "boolean",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "IWatermarkPanelProps": {
        "kind": "interface",
        "children": [
            {
                "name": "close",
                "code": "(): void",
                "kind": "property",
                "flags": {},
                "pieces": []
            },
            {
                "name": "containerApi",
                "code": "DockviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "DockviewApi"
                ]
            },
            {
                "name": "group",
                "code": "IDockviewGroupPanel",
                "kind": "property",
                "flags": {
                    "isOptional": true
                },
                "pieces": [
                    "IDockviewGroupPanel"
                ]
            }
        ]
    },
    "PanelCollection": {
        "kind": "interface",
        "children": [],
        "metadata": {
            "name": "PanelCollection",
            "code": "",
            "pieces": []
        }
    },
    "PanelParameters": {
        "kind": "interface",
        "children": [
            {
                "name": "params",
                "code": "PanelParameters.T",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "PaneviewReadyEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "PaneviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "PaneviewApi"
                ]
            }
        ]
    },
    "ReactPortalStore": {
        "kind": "interface",
        "children": [
            {
                "name": "addPortal",
                "code": "(portal: React.ReactPortal): IDisposable",
                "kind": "property",
                "flags": {},
                "pieces": []
            }
        ]
    },
    "SplitviewReadyEvent": {
        "kind": "interface",
        "children": [
            {
                "name": "api",
                "code": "SplitviewApi",
                "kind": "property",
                "flags": {},
                "pieces": [
                    "SplitviewApi"
                ]
            }
        ]
    },
    "IDockviewDefaultTabProps": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "IDockviewDefaultTabProps",
            "code": "{ closeActionOverride?: (): void, hideClose?: boolean } & React.DOMAttributes<HTMLDivElement> & IDockviewPanelHeaderProps",
            "pieces": []
        }
    },
    "IDockviewPanelHeaderProps": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "IDockviewPanelHeaderProps",
            "code": "IGroupPanelBaseProps<T>",
            "pieces": []
        }
    },
    "IDockviewPanelProps": {
        "kind": "typeAlias",
        "children": [],
        "metadata": {
            "name": "IDockviewPanelProps",
            "code": "IGroupPanelBaseProps<T>",
            "pieces": []
        }
    },
    "ReactPartContext": {
        "kind": "variable",
        "children": [],
        "metadata": {
            "name": "ReactPartContext",
            "code": "",
            "pieces": []
        }
    },
    "DockviewDefaultTab": {
        "kind": "function",
        "children": [
            {
                "name": "contextTypes",
                "code": "ValidationMap<any>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "defaultProps",
                "code": "Partial<IDockviewDefaultTabProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "displayName",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "propTypes",
                "code": "React.WeakValidationMap<IDockviewDefaultTabProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "DockviewReact": {
        "kind": "function",
        "children": [
            {
                "name": "$$typeof",
                "code": "symbol",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "defaultProps",
                "code": "Partial<React.RefAttributes<HTMLDivElement> & IDockviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "displayName",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "propTypes",
                "code": "React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IDockviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "GridviewReact": {
        "kind": "function",
        "children": [
            {
                "name": "$$typeof",
                "code": "symbol",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "defaultProps",
                "code": "Partial<React.RefAttributes<HTMLDivElement> & IGridviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "displayName",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "propTypes",
                "code": "React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IGridviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "PaneviewReact": {
        "kind": "function",
        "children": [
            {
                "name": "$$typeof",
                "code": "symbol",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "defaultProps",
                "code": "Partial<React.RefAttributes<HTMLDivElement> & IPaneviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "displayName",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "propTypes",
                "code": "React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IPaneviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "SplitviewReact": {
        "kind": "function",
        "children": [
            {
                "name": "$$typeof",
                "code": "symbol",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isReadonly": true
                },
                "pieces": []
            },
            {
                "name": "defaultProps",
                "code": "Partial<React.RefAttributes<HTMLDivElement> & ISplitviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "displayName",
                "code": "string",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            },
            {
                "name": "propTypes",
                "code": "React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & ISplitviewReactProps>",
                "kind": "property",
                "flags": {
                    "isExternal": true,
                    "isOptional": true
                },
                "pieces": []
            }
        ]
    },
    "isReactComponent": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "isReactComponent",
            "code": "(component: any): boolean",
            "pieces": []
        }
    },
    "usePortalsLifecycle": {
        "kind": "function",
        "children": [],
        "metadata": {
            "name": "usePortalsLifecycle",
            "code": "(): [React.ReactPortal[],(portal: React.ReactPortal): IDisposable]",
            "pieces": []
        }
    }
}