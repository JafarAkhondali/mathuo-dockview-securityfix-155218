"use strict";(self.webpackChunkdockview_docs=self.webpackChunkdockview_docs||[]).push([[1642,1800,1977],{4940:(e,i,t)=>{t.d(i,{Z:()=>s});t(6204);var n=t(541),o=t(3188);function s(e){let{children:i,fallback:t}=e;return(0,n.Z)()?(0,o.jsx)(o.Fragment,{children:i?.()}):t??null}},7888:(e,i,t)=>{t.d(i,{QW:()=>oe,CJ:()=>si,KU:()=>f,O4:()=>u,Gi:()=>y,Tn:()=>ne,Jf:()=>ai,Tg:()=>Te,i5:()=>W,y0:()=>te,W:()=>li,fX:()=>ie,Cx:()=>ri,hJ:()=>mi,M:()=>de});class n{}class o extends n{constructor(e,i,t){super(),this.viewId=e,this.groupId=i,this.panelId=t}}class s extends n{constructor(e,i){super(),this.viewId=e,this.paneId=i}}class a{constructor(){}static getInstance(){return a.INSTANCE}hasData(e){return e&&e===this.proto}clearData(e){this.hasData(e)&&(this.proto=void 0,this.data=void 0)}getData(e){if(this.hasData(e))return this.data}setData(e,i){i&&(this.data=e,this.proto=i)}}function r(){const e=a.getInstance();if(e.hasData(o.prototype))return e.getData(o.prototype)[0]}function d(){const e=a.getInstance();if(e.hasData(s.prototype))return e.getData(s.prototype)[0]}var p,c;a.INSTANCE=new a,function(e){e.any=function(){for(var e=arguments.length,i=new Array(e),t=0;t<e;t++)i[t]=arguments[t];return e=>{const t=i.map((i=>i(e)));return{dispose:()=>{t.forEach((e=>{e.dispose()}))}}}}}(p||(p={}));class l{constructor(){this._defaultPrevented=!1}get defaultPrevented(){return this._defaultPrevented}preventDefault(){this._defaultPrevented=!0}}class m{static create(){var e;return new m(null!==(e=(new Error).stack)&&void 0!==e?e:"")}constructor(e){this.value=e}print(){console.warn(this.value)}}class h{constructor(e,i){this.callback=e,this.stacktrace=i}}class u{static setLeakageMonitorEnabled(e){e!==u.ENABLE_TRACKING&&u.MEMORY_LEAK_WATCHER.clear(),u.ENABLE_TRACKING=e}get value(){return this._last}constructor(e){this.options=e,this._listeners=[],this._disposed=!1}get event(){return this._event||(this._event=e=>{var i;(null===(i=this.options)||void 0===i?void 0:i.replay)&&void 0!==this._last&&e(this._last);const t=new h(e,u.ENABLE_TRACKING?m.create():void 0);return this._listeners.push(t),{dispose:()=>{const e=this._listeners.indexOf(t);e>-1?this._listeners.splice(e,1):u.ENABLE_TRACKING}}},u.ENABLE_TRACKING&&u.MEMORY_LEAK_WATCHER.add(this._event,m.create())),this._event}fire(e){this._last=e;for(const i of this._listeners)i.callback(e)}dispose(){this._disposed||(this._disposed=!0,this._listeners.length>0&&(u.ENABLE_TRACKING&&queueMicrotask((()=>{var e;for(const i of this._listeners)console.warn(null===(e=i.stacktrace)||void 0===e?void 0:e.print())})),this._listeners=[]),u.ENABLE_TRACKING&&this._event&&u.MEMORY_LEAK_WATCHER.delete(this._event))}}function v(e,i,t,n){return e.addEventListener(i,t,n),{dispose:()=>{e.removeEventListener(i,t,n)}}}function g(e,i,t,n){return e.addEventListener(i,t,n),{dispose:()=>{e.removeEventListener(i,t,n)}}}u.ENABLE_TRACKING=!1,u.MEMORY_LEAK_WATCHER=new class{constructor(){this.events=new Map}get size(){return this.events.size}add(e,i){this.events.set(e,i)}delete(e){this.events.delete(e)}clear(){this.events.clear()}};class k{constructor(){this._onFired=new u,this.onEvent=this._onFired.event}fire(){this.timer&&clearTimeout(this.timer),this.timer=setTimeout((()=>{this._onFired.fire(),clearTimeout(this.timer)}))}dispose(){this._onFired.dispose()}}!function(e){e.NONE={dispose:()=>{}},e.from=function(e){return{dispose:()=>{e()}}}}(c||(c={}));class f{get isDisposed(){return this._isDisposed}constructor(){this._isDisposed=!1;for(var e=arguments.length,i=new Array(e),t=0;t<e;t++)i[t]=arguments[t];this._disposables=i}addDisposables(){for(var e=arguments.length,i=new Array(e),t=0;t<e;t++)i[t]=arguments[t];i.forEach((e=>this._disposables.push(e)))}dispose(){this._isDisposed||(this._isDisposed=!0,this._disposables.forEach((e=>e.dispose())),this._disposables=[])}}class y{constructor(){this._disposable=c.NONE}set value(e){this._disposable&&this._disposable.dispose(),this._disposable=e}dispose(){this._disposable&&(this._disposable.dispose(),this._disposable=c.NONE)}}function w(e,i){const t=new ResizeObserver((e=>{requestAnimationFrame((()=>{const t=e[0];i(t)}))}));return t.observe(e),{dispose:()=>{t.unobserve(e),t.disconnect()}}}const b=function(e){for(var i=arguments.length,t=new Array(i>1?i-1:0),n=1;n<i;n++)t[n-1]=arguments[n];for(const o of t)e.classList.contains(o)&&e.classList.remove(o)},P=function(e){for(var i=arguments.length,t=new Array(i>1?i-1:0),n=1;n<i;n++)t[n-1]=arguments[n];for(const o of t)e.classList.contains(o)||e.classList.add(o)},D=(e,i,t)=>{const n=e.classList.contains(i);t&&!n&&e.classList.add(i),!t&&n&&e.classList.remove(i)};function _(e,i){for(;e;){if(e===i)return!0;e=e.parentNode}return!1}function x(e){return Array.prototype.slice.call(document.getElementsByTagName(e),0)}function E(e){return new C(e)}class C extends f{constructor(e){super(),this._onDidFocus=new u,this.onDidFocus=this._onDidFocus.event,this._onDidBlur=new u,this.onDidBlur=this._onDidBlur.event,this.addDisposables(this._onDidFocus,this._onDidBlur);let i=_(document.activeElement,e),t=!1;const n=()=>{t=!1,i||(i=!0,this._onDidFocus.fire())},o=()=>{i&&(t=!0,window.setTimeout((()=>{t&&(t=!1,i=!1,this._onDidBlur.fire())}),0))};this._refreshStateHandler=()=>{_(document.activeElement,e)!==i&&(i?o():n())},e instanceof HTMLElement?(this.addDisposables(g(e,"focus",n,!0)),this.addDisposables(g(e,"blur",o,!0))):(this.addDisposables(v(e,"focus",n,!0)),this.addDisposables(v(e,"blur",o,!0)))}refreshState(){this._refreshStateHandler()}}const S="dv-quasiPreventDefault";function A(e){return e[S]}function G(e){const{left:i,top:t,width:n,height:o}=e.getBoundingClientRect();return{left:i+window.scrollX,top:t+window.scrollY,width:n,height:o}}function I(e){if(0===e.length)throw new Error("Invalid tail call");return[e.slice(0,e.length-1),e[e.length-1]]}function z(e,i){if(e.length!==i.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==i[t])return!1;return!0}function O(e,i){const t=e.indexOf(i);t>-1&&(e.splice(t,1),e.unshift(i))}function R(e,i){const t=e.indexOf(i);t>-1&&(e.splice(t,1),e.push(i))}function T(e,i){const t=e.findIndex((e=>e===i));return t>-1&&(e.splice(t,1),!0)}const L=(e,i,t)=>{if(i>t)throw new Error(`${i} > ${t} is an invalid condition`);return Math.min(t,Math.max(e,i))},V=()=>{let e=1;return{next:()=>(e++).toString()}},N=(e,i)=>{const t=[];if("number"!=typeof i&&(i=e,e=0),e<=i)for(let n=e;n<i;n++)t.push(n);else for(let n=e;n>i;n--)t.push(n);return t};class M{set size(e){this._size=e}get size(){return this._size}get cachedVisibleSize(){return this._cachedVisibleSize}get visible(){return void 0===this._cachedVisibleSize}get minimumSize(){return this.visible?this.view.minimumSize:0}get viewMinimumSize(){return this.view.minimumSize}get maximumSize(){return this.visible?this.view.maximumSize:0}get viewMaximumSize(){return this.view.maximumSize}get priority(){return this.view.priority}get snap(){return!!this.view.snap}set enabled(e){this.container.style.pointerEvents=e?"":"none"}constructor(e,i,t,n){this.container=e,this.view=i,this.disposable=n,this._cachedVisibleSize=void 0,"number"==typeof t?(this._size=t,this._cachedVisibleSize=void 0,e.classList.add("visible")):(this._size=0,this._cachedVisibleSize=t.cachedVisibleSize)}setVisible(e,i){var t;e!==this.visible&&(e?(this.size=L(null!==(t=this._cachedVisibleSize)&&void 0!==t?t:0,this.viewMinimumSize,this.viewMaximumSize),this._cachedVisibleSize=void 0):(this._cachedVisibleSize="number"==typeof i?i:this.size,this.size=0),this.container.classList.toggle("visible",e),this.view.setVisible&&this.view.setVisible(e))}dispose(){return this.disposable.dispose(),this.view}}var W,H,F,j;!function(e){e.HORIZONTAL="HORIZONTAL",e.VERTICAL="VERTICAL"}(W||(W={})),function(e){e[e.MAXIMUM=0]="MAXIMUM",e[e.MINIMUM=1]="MINIMUM",e[e.DISABLED=2]="DISABLED",e[e.ENABLED=3]="ENABLED"}(H||(H={})),function(e){e.Low="low",e.High="high",e.Normal="normal"}(F||(F={})),function(e){e.Distribute={type:"distribute"},e.Split=function(e){return{type:"split",index:e}},e.Invisible=function(e){return{type:"invisible",cachedVisibleSize:e}}}(j||(j={}));class B{get contentSize(){return this._contentSize}get size(){return this._size}set size(e){this._size=e}get orthogonalSize(){return this._orthogonalSize}set orthogonalSize(e){this._orthogonalSize=e}get length(){return this.viewItems.length}get proportions(){return this._proportions?[...this._proportions]:void 0}get orientation(){return this._orientation}set orientation(e){this._orientation=e;const i=this.size;this.size=this.orthogonalSize,this.orthogonalSize=i,b(this.element,"horizontal","vertical"),this.element.classList.add(this.orientation==W.HORIZONTAL?"horizontal":"vertical")}get minimumSize(){return this.viewItems.reduce(((e,i)=>e+i.minimumSize),0)}get maximumSize(){return 0===this.length?Number.POSITIVE_INFINITY:this.viewItems.reduce(((e,i)=>e+i.maximumSize),0)}get startSnappingEnabled(){return this._startSnappingEnabled}set startSnappingEnabled(e){this._startSnappingEnabled!==e&&(this._startSnappingEnabled=e,this.updateSashEnablement())}get endSnappingEnabled(){return this._endSnappingEnabled}set endSnappingEnabled(e){this._endSnappingEnabled!==e&&(this._endSnappingEnabled=e,this.updateSashEnablement())}get disabled(){return this._disabled}set disabled(e){this._disabled=e,D(this.element,"dv-splitview-disabled",e)}constructor(e,i){var t=this;this.container=e,this.viewItems=[],this.sashes=[],this._size=0,this._orthogonalSize=0,this._contentSize=0,this._proportions=void 0,this._startSnappingEnabled=!0,this._endSnappingEnabled=!0,this._disabled=!1,this._onDidSashEnd=new u,this.onDidSashEnd=this._onDidSashEnd.event,this._onDidAddView=new u,this.onDidAddView=this._onDidAddView.event,this._onDidRemoveView=new u,this.onDidRemoveView=this._onDidRemoveView.event,this.resize=function(e,i,n,o,s,a,r,d,p){if(void 0===n&&(n=t.viewItems.map((e=>e.size))),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY),e<0||e>t.viewItems.length)return 0;const c=N(e,-1),l=N(e+1,t.viewItems.length);if(s)for(const t of s)O(c,t),O(l,t);if(o)for(const t of o)R(c,t),R(l,t);const m=c.map((e=>t.viewItems[e])),h=c.map((e=>n[e])),u=l.map((e=>t.viewItems[e])),v=l.map((e=>n[e])),g=c.reduce(((e,i)=>e+t.viewItems[i].minimumSize-n[i]),0),k=c.reduce(((e,i)=>e+t.viewItems[i].maximumSize-n[i]),0),f=0===l.length?Number.POSITIVE_INFINITY:l.reduce(((e,i)=>e+n[i]-t.viewItems[i].minimumSize),0),y=0===l.length?Number.NEGATIVE_INFINITY:l.reduce(((e,i)=>e+n[i]-t.viewItems[i].maximumSize),0),w=Math.max(g,y),b=Math.min(f,k);let P=!1;if(d){const e=t.viewItems[d.index],n=i>=d.limitDelta;P=n!==e.visible,e.setVisible(n,d.size)}if(!P&&p){const e=t.viewItems[p.index],n=i<p.limitDelta;P=n!==e.visible,e.setVisible(n,p.size)}if(P)return t.resize(e,i,n,o,s,a,r);let D=0,_=L(i,w,b);for(let t=0;t<m.length;t++){const e=m[t],i=L(h[t]+_,e.minimumSize,e.maximumSize),n=i-h[t];D+=n,_-=n,e.size=i}let x=D;for(let t=0;t<u.length;t++){const e=u[t],i=L(v[t]-x,e.minimumSize,e.maximumSize);x+=i-v[t],e.size=i}return i},this._orientation=i.orientation,this.element=this.createContainer(),this.proportionalLayout=void 0===i.proportionalLayout||!!i.proportionalLayout,this.viewContainer=this.createViewContainer(),this.sashContainer=this.createSashContainer(),this.element.appendChild(this.sashContainer),this.element.appendChild(this.viewContainer),this.container.appendChild(this.element),this.style(i.styles),i.descriptor&&(this._size=i.descriptor.size,i.descriptor.views.forEach(((e,i)=>{const t=void 0===e.visible||e.visible?e.size:{type:"invisible",cachedVisibleSize:e.size},n=e.view;this.addView(n,t,i,!0)})),this._contentSize=this.viewItems.reduce(((e,i)=>e+i.size),0),this.saveProportions())}style(e){"transparent"===(null==e?void 0:e.separatorBorder)?(b(this.element,"separator-border"),this.element.style.removeProperty("--dv-separator-border")):(P(this.element,"separator-border"),(null==e?void 0:e.separatorBorder)&&this.element.style.setProperty("--dv-separator-border",e.separatorBorder))}isViewVisible(e){if(e<0||e>=this.viewItems.length)throw new Error("Index out of bounds");return this.viewItems[e].visible}setViewVisible(e,i){if(e<0||e>=this.viewItems.length)throw new Error("Index out of bounds");D(this.container,"visible",i);const t=this.viewItems[e];D(this.container,"visible",i),t.setVisible(i,t.size),this.distributeEmptySpace(e),this.layoutViews(),this.saveProportions()}getViewSize(e){return e<0||e>=this.viewItems.length?-1:this.viewItems[e].size}resizeView(e,i){if(e<0||e>=this.viewItems.length)return;const t=N(this.viewItems.length).filter((i=>i!==e)),n=[...t.filter((e=>this.viewItems[e].priority===F.Low)),e],o=t.filter((e=>this.viewItems[e].priority===F.High)),s=this.viewItems[e];i=Math.round(i),i=L(i,s.minimumSize,Math.min(s.maximumSize,this._size)),s.size=i,this.relayout(n,o)}getViews(){return this.viewItems.map((e=>e.view))}onDidChange(e,i){const t=this.viewItems.indexOf(e);if(t<0||t>=this.viewItems.length)return;i="number"==typeof i?i:e.size,i=L(i,e.minimumSize,e.maximumSize),e.size=i;const n=N(this.viewItems.length).filter((e=>e!==t)),o=[...n.filter((e=>this.viewItems[e].priority===F.Low)),t],s=n.filter((e=>this.viewItems[e].priority===F.High));this.relayout([...o,t],s)}addView(e,i,t,n){void 0===i&&(i={type:"distribute"}),void 0===t&&(t=this.viewItems.length);const o=document.createElement("div");let s;o.className="view",o.appendChild(e.element),s="number"==typeof i?i:"split"===i.type?this.getViewSize(i.index)/2:"invisible"===i.type?{cachedVisibleSize:i.cachedVisibleSize}:e.minimumSize;const a=e.onDidChange((e=>this.onDidChange(r,e.size))),r=new M(o,e,s,{dispose:()=>{a.dispose(),this.viewContainer.removeChild(o)}});if(t===this.viewItems.length?this.viewContainer.appendChild(o):this.viewContainer.insertBefore(o,this.viewContainer.children.item(t)),this.viewItems.splice(t,0,r),this.viewItems.length>1){const e=document.createElement("div");e.className="sash";const i=i=>{for(const e of this.viewItems)e.enabled=!1;const t=[...x("iframe"),...x("webview")];for(const e of t)e.style.pointerEvents="none";const n=this._orientation===W.HORIZONTAL?i.clientX:i.clientY,o=function(e,i){for(let t=0;t<e.length;t++)if(i(e[t]))return t;return-1}(this.sashes,(i=>i.container===e)),s=this.viewItems.map((e=>e.size));let a,r;const d=N(o,-1),p=N(o+1,this.viewItems.length),c=d.reduce(((e,i)=>e+(this.viewItems[i].minimumSize-s[i])),0),l=d.reduce(((e,i)=>e+(this.viewItems[i].viewMaximumSize-s[i])),0),m=0===p.length?Number.POSITIVE_INFINITY:p.reduce(((e,i)=>e+(s[i]-this.viewItems[i].minimumSize)),0),h=0===p.length?Number.NEGATIVE_INFINITY:p.reduce(((e,i)=>e+(s[i]-this.viewItems[i].viewMaximumSize)),0),u=Math.max(c,h),v=Math.min(m,l),g=this.findFirstSnapIndex(d),k=this.findFirstSnapIndex(p);if("number"==typeof g){const e=this.viewItems[g],i=Math.floor(e.viewMinimumSize/2);a={index:g,limitDelta:e.visible?u-i:u+i,size:e.size}}if("number"==typeof k){const e=this.viewItems[k],i=Math.floor(e.viewMinimumSize/2);r={index:k,limitDelta:e.visible?v+i:v-i,size:e.size}}const f=e=>{const i=(this._orientation===W.HORIZONTAL?e.clientX:e.clientY)-n;this.resize(o,i,s,void 0,void 0,u,v,a,r),this.distributeEmptySpace(),this.layoutViews()},y=()=>{for(const e of this.viewItems)e.enabled=!0;for(const e of t)e.style.pointerEvents="auto";this.saveProportions(),document.removeEventListener("pointermove",f),document.removeEventListener("pointerup",y),document.removeEventListener("pointercancel",y),this._onDidSashEnd.fire(void 0)};document.addEventListener("pointermove",f),document.addEventListener("pointerup",y),document.addEventListener("pointercancel",y)};e.addEventListener("pointerdown",i);const t={container:e,disposable:()=>{e.removeEventListener("pointerdown",i),this.sashContainer.removeChild(e)}};this.sashContainer.appendChild(e),this.sashes.push(t)}n||this.relayout([t]),n||"number"==typeof i||"distribute"!==i.type||this.distributeViewSizes(),this._onDidAddView.fire(e)}distributeViewSizes(){const e=[];let i=0;for(const a of this.viewItems)a.maximumSize-a.minimumSize>0&&(e.push(a),i+=a.size);const t=Math.floor(i/e.length);for(const a of e)a.size=L(t,a.minimumSize,a.maximumSize);const n=N(this.viewItems.length),o=n.filter((e=>this.viewItems[e].priority===F.Low)),s=n.filter((e=>this.viewItems[e].priority===F.High));this.relayout(o,s)}removeView(e,i,t){void 0===t&&(t=!1);const n=this.viewItems.splice(e,1)[0];if(n.dispose(),this.viewItems.length>=1){const i=Math.max(e-1,0);this.sashes.splice(i,1)[0].disposable()}return t||this.relayout(),i&&"distribute"===i.type&&this.distributeViewSizes(),this._onDidRemoveView.fire(n.view),n.view}getViewCachedVisibleSize(e){if(e<0||e>=this.viewItems.length)throw new Error("Index out of bounds");return this.viewItems[e].cachedVisibleSize}moveView(e,i){const t=this.getViewCachedVisibleSize(e),n=void 0===t?this.getViewSize(e):j.Invisible(t),o=this.removeView(e,void 0,!0);this.addView(o,n,i)}layout(e,i){const t=Math.max(this.size,this._contentSize);if(this.size=e,this.orthogonalSize=i,this.proportions){let i=0;for(let t=0;t<this.viewItems.length;t++){const n=this.viewItems[t],o=this.proportions[t];"number"==typeof o?i+=o:e-=n.size}for(let t=0;t<this.viewItems.length;t++){const n=this.viewItems[t],o=this.proportions[t];"number"==typeof o&&i>0&&(n.size=L(Math.round(o*e/i),n.minimumSize,n.maximumSize))}}else{const i=N(this.viewItems.length),n=i.filter((e=>this.viewItems[e].priority===F.Low)),o=i.filter((e=>this.viewItems[e].priority===F.High));this.resize(this.viewItems.length-1,e-t,void 0,n,o)}this.distributeEmptySpace(),this.layoutViews()}relayout(e,i){const t=this.viewItems.reduce(((e,i)=>e+i.size),0);this.resize(this.viewItems.length-1,this._size-t,void 0,e,i),this.distributeEmptySpace(),this.layoutViews(),this.saveProportions()}distributeEmptySpace(e){const i=this.viewItems.reduce(((e,i)=>e+i.size),0);let t=this.size-i;const n=N(this.viewItems.length-1,-1),o=n.filter((e=>this.viewItems[e].priority===F.Low)),s=n.filter((e=>this.viewItems[e].priority===F.High));for(const a of s)O(n,a);for(const a of o)R(n,a);"number"==typeof e&&R(n,e);for(let a=0;0!==t&&a<n.length;a++){const e=this.viewItems[n[a]],i=L(e.size+t,e.minimumSize,e.maximumSize);t-=i-e.size,e.size=i}}saveProportions(){this.proportionalLayout&&this._contentSize>0&&(this._proportions=this.viewItems.map((e=>e.visible?e.size/this._contentSize:void 0)))}layoutViews(){this._contentSize=this.viewItems.reduce(((e,i)=>e+i.size),0);let e=0;const i=[];this.updateSashEnablement();for(let t=0;t<this.viewItems.length-1;t++){e+=this.viewItems[t].size,i.push(e);const n=Math.min(Math.max(0,e-2),this.size-4);this._orientation===W.HORIZONTAL&&(this.sashes[t].container.style.left=`${n}px`,this.sashes[t].container.style.top="0px"),this._orientation===W.VERTICAL&&(this.sashes[t].container.style.left="0px",this.sashes[t].container.style.top=`${n}px`)}this.viewItems.forEach(((e,t)=>{this._orientation===W.HORIZONTAL&&(e.container.style.width=`${e.size}px`,e.container.style.left=0==t?"0px":`${i[t-1]}px`,e.container.style.top="",e.container.style.height=""),this._orientation===W.VERTICAL&&(e.container.style.height=`${e.size}px`,e.container.style.top=0==t?"0px":`${i[t-1]}px`,e.container.style.width="",e.container.style.left=""),e.view.layout(e.size,this._orthogonalSize)}))}findFirstSnapIndex(e){for(const i of e){const e=this.viewItems[i];if(e.visible&&e.snap)return i}for(const i of e){const e=this.viewItems[i];if(e.visible&&e.maximumSize-e.minimumSize>0)return;if(!e.visible&&e.snap)return i}}updateSashEnablement(){let e=!1;const i=this.viewItems.map((i=>e=i.size-i.minimumSize>0||e));e=!1;const t=this.viewItems.map((i=>e=i.maximumSize-i.size>0||e)),n=[...this.viewItems].reverse();e=!1;const o=n.map((i=>e=i.size-i.minimumSize>0||e)).reverse();e=!1;const s=n.map((i=>e=i.maximumSize-i.size>0||e)).reverse();let a=0;for(let r=0;r<this.sashes.length;r++){const e=this.sashes[r];a+=this.viewItems[r].size;const n=!(i[r]&&s[r+1]),d=!(t[r]&&o[r+1]);if(n&&d){const t=N(r,-1),n=N(r+1,this.viewItems.length),s=this.findFirstSnapIndex(t),d=this.findFirstSnapIndex(n),p="number"==typeof s&&!this.viewItems[s].visible,c="number"==typeof d&&!this.viewItems[d].visible;p&&o[r]&&(a>0||this.startSnappingEnabled)?this.updateSash(e,H.MINIMUM):c&&i[r]&&(a<this._contentSize||this.endSnappingEnabled)?this.updateSash(e,H.MAXIMUM):this.updateSash(e,H.DISABLED)}else n&&!d?this.updateSash(e,H.MINIMUM):!n&&d?this.updateSash(e,H.MAXIMUM):this.updateSash(e,H.ENABLED)}}updateSash(e,i){D(e.container,"disabled",i===H.DISABLED),D(e.container,"enabled",i===H.ENABLED),D(e.container,"maximum",i===H.MAXIMUM),D(e.container,"minimum",i===H.MINIMUM)}createViewContainer(){const e=document.createElement("div");return e.className="view-container",e}createSashContainer(){const e=document.createElement("div");return e.className="sash-container",e}createContainer(){const e=document.createElement("div"),i=this._orientation===W.HORIZONTAL?"horizontal":"vertical";return e.className=`split-view-container ${i}`,e}dispose(){this._onDidSashEnd.dispose(),this._onDidAddView.dispose(),this._onDidRemoveView.dispose();for(let e=0;e<this.element.children.length;e++)if(this.element.children.item(e)===this.element){this.element.removeChild(this.element);break}for(const e of this.viewItems)e.dispose();this.element.remove()}}class J extends f{get onDidAddView(){return this.splitview.onDidAddView}get onDidRemoveView(){return this.splitview.onDidRemoveView}get minimumSize(){return this.splitview.minimumSize}get maximumSize(){return this.splitview.maximumSize}get orientation(){return this.splitview.orientation}get size(){return this.splitview.size}get orthogonalSize(){return this.splitview.orthogonalSize}constructor(e,i){var t;super(),this.paneItems=[],this.skipAnimation=!1,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._orientation=null!==(t=i.orientation)&&void 0!==t?t:W.VERTICAL,this.element=document.createElement("div"),this.element.className="pane-container",e.appendChild(this.element),this.splitview=new B(this.element,{orientation:this._orientation,proportionalLayout:!1,descriptor:i.descriptor}),this.getPanes().forEach((e=>{const i=new f(e.onDidChangeExpansionState((()=>{this.setupAnimation(),this._onDidChange.fire(void 0)}))),t={pane:e,disposable:{dispose:()=>{i.dispose()}}};this.paneItems.push(t),e.orthogonalSize=this.splitview.orthogonalSize})),this.addDisposables(this._onDidChange,this.splitview.onDidSashEnd((()=>{this._onDidChange.fire(void 0)})),this.splitview.onDidAddView((()=>{this._onDidChange.fire()})),this.splitview.onDidRemoveView((()=>{this._onDidChange.fire()})))}addPane(e,i,t,n){void 0===t&&(t=this.splitview.length),void 0===n&&(n=!1);const o=e.onDidChangeExpansionState((()=>{this.setupAnimation(),this._onDidChange.fire(void 0)})),s={pane:e,disposable:{dispose:()=>{o.dispose()}}};this.paneItems.splice(t,0,s),e.orthogonalSize=this.splitview.orthogonalSize,this.splitview.addView(e,i,t,n)}getViewSize(e){return this.splitview.getViewSize(e)}getPanes(){return this.splitview.getViews()}removePane(e,i){void 0===i&&(i={skipDispose:!1});const t=this.paneItems.splice(e,1)[0];return this.splitview.removeView(e),i.skipDispose||(t.disposable.dispose(),t.pane.dispose()),t}moveView(e,i){if(e===i)return;const t=this.removePane(e,{skipDispose:!0});this.skipAnimation=!0;try{this.addPane(t.pane,t.pane.size,i,!1)}finally{this.skipAnimation=!1}}layout(e,i){this.splitview.layout(e,i)}setupAnimation(){this.skipAnimation||(this.animationTimer&&(clearTimeout(this.animationTimer),this.animationTimer=void 0),P(this.element,"animated"),this.animationTimer=setTimeout((()=>{this.animationTimer=void 0,b(this.element,"animated")}),200))}dispose(){super.dispose(),this.animationTimer&&(clearTimeout(this.animationTimer),this.animationTimer=void 0),this.paneItems.forEach((e=>{e.disposable.dispose(),e.pane.dispose()})),this.paneItems=[],this.splitview.dispose(),this.element.remove()}}class U{get minimumWidth(){return this.view.minimumWidth}get maximumWidth(){return this.view.maximumWidth}get minimumHeight(){return this.view.minimumHeight}get maximumHeight(){return this.view.maximumHeight}get priority(){return this.view.priority}get snap(){return this.view.snap}get minimumSize(){return this.orientation===W.HORIZONTAL?this.minimumHeight:this.minimumWidth}get maximumSize(){return this.orientation===W.HORIZONTAL?this.maximumHeight:this.maximumWidth}get minimumOrthogonalSize(){return this.orientation===W.HORIZONTAL?this.minimumWidth:this.minimumHeight}get maximumOrthogonalSize(){return this.orientation===W.HORIZONTAL?this.maximumWidth:this.maximumHeight}get orthogonalSize(){return this._orthogonalSize}get size(){return this._size}get element(){return this.view.element}get width(){return this.orientation===W.HORIZONTAL?this.orthogonalSize:this.size}get height(){return this.orientation===W.HORIZONTAL?this.size:this.orthogonalSize}constructor(e,i,t,n){void 0===n&&(n=0),this.view=e,this.orientation=i,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._orthogonalSize=t,this._size=n,this._disposable=this.view.onDidChange((e=>{e?this._onDidChange.fire({size:this.orientation===W.VERTICAL?e.width:e.height,orthogonalSize:this.orientation===W.VERTICAL?e.height:e.width}):this._onDidChange.fire({})}))}setVisible(e){this.view.setVisible&&this.view.setVisible(e)}layout(e,i){this._size=e,this._orthogonalSize=i,this.view.layout(this.width,this.height)}dispose(){this._onDidChange.dispose(),this._disposable.dispose()}}class $ extends f{get width(){return this.orientation===W.HORIZONTAL?this.size:this.orthogonalSize}get height(){return this.orientation===W.HORIZONTAL?this.orthogonalSize:this.size}get minimumSize(){return 0===this.children.length?0:Math.max(...this.children.map(((e,i)=>this.splitview.isViewVisible(i)?e.minimumOrthogonalSize:0)))}get maximumSize(){return Math.min(...this.children.map(((e,i)=>this.splitview.isViewVisible(i)?e.maximumOrthogonalSize:Number.POSITIVE_INFINITY)))}get minimumOrthogonalSize(){return this.splitview.minimumSize}get maximumOrthogonalSize(){return this.splitview.maximumSize}get orthogonalSize(){return this._orthogonalSize}get size(){return this._size}get minimumWidth(){return this.orientation===W.HORIZONTAL?this.minimumOrthogonalSize:this.minimumSize}get minimumHeight(){return this.orientation===W.HORIZONTAL?this.minimumSize:this.minimumOrthogonalSize}get maximumWidth(){return this.orientation===W.HORIZONTAL?this.maximumOrthogonalSize:this.maximumSize}get maximumHeight(){return this.orientation===W.HORIZONTAL?this.maximumSize:this.maximumOrthogonalSize}get priority(){if(0===this.children.length)return F.Normal;const e=this.children.map((e=>void 0===e.priority?F.Normal:e.priority));return e.some((e=>e===F.High))?F.High:e.some((e=>e===F.Low))?F.Low:F.Normal}get disabled(){return this.splitview.disabled}set disabled(e){this.splitview.disabled=e}constructor(e,i,t,n,o,s,a){if(super(),this.orientation=e,this.proportionalLayout=i,this.styles=t,this._childrenDisposable=c.NONE,this.children=[],this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._onDidVisibilityChange=new u,this.onDidVisibilityChange=this._onDidVisibilityChange.event,this._orthogonalSize=o,this._size=n,this.element=document.createElement("div"),this.element.className="branch-node",a){const e={views:a.map((e=>({view:e.node,size:e.node.size,visible:!(e.node instanceof U&&void 0!==e.visible)||e.visible}))),size:this.orthogonalSize};this.children=a.map((e=>e.node)),this.splitview=new B(this.element,{orientation:this.orientation,descriptor:e,proportionalLayout:i,styles:t})}else this.splitview=new B(this.element,{orientation:this.orientation,proportionalLayout:i,styles:t}),this.splitview.layout(this.size,this.orthogonalSize);this.disabled=s,this.addDisposables(this._onDidChange,this._onDidVisibilityChange,this.splitview.onDidSashEnd((()=>{this._onDidChange.fire({})}))),this.setupChildrenEvents()}setVisible(e){for(const i of this.children)i.setVisible(e)}isChildVisible(e){if(e<0||e>=this.children.length)throw new Error("Invalid index");return this.splitview.isViewVisible(e)}setChildVisible(e,i){if(e<0||e>=this.children.length)throw new Error("Invalid index");if(this.splitview.isViewVisible(e)===i)return;const t=0===this.splitview.contentSize;this.splitview.setViewVisible(e,i);const n=0===this.splitview.contentSize;(i&&t||!i&&n)&&this._onDidVisibilityChange.fire(i)}moveChild(e,i){if(e===i)return;if(e<0||e>=this.children.length)throw new Error("Invalid from index");e<i&&i--,this.splitview.moveView(e,i);const t=this._removeChild(e);this._addChild(t,i)}getChildSize(e){if(e<0||e>=this.children.length)throw new Error("Invalid index");return this.splitview.getViewSize(e)}resizeChild(e,i){if(e<0||e>=this.children.length)throw new Error("Invalid index");this.splitview.resizeView(e,i)}layout(e,i){this._size=i,this._orthogonalSize=e,this.splitview.layout(i,e)}addChild(e,i,t,n){if(t<0||t>this.children.length)throw new Error("Invalid index");this.splitview.addView(e,i,t,n),this._addChild(e,t)}getChildCachedVisibleSize(e){if(e<0||e>=this.children.length)throw new Error("Invalid index");return this.splitview.getViewCachedVisibleSize(e)}removeChild(e,i){if(e<0||e>=this.children.length)throw new Error("Invalid index");return this.splitview.removeView(e,i),this._removeChild(e)}_addChild(e,i){this.children.splice(i,0,e),this.setupChildrenEvents()}_removeChild(e){const[i]=this.children.splice(e,1);return this.setupChildrenEvents(),i}setupChildrenEvents(){this._childrenDisposable.dispose(),this._childrenDisposable=new f(p.any(...this.children.map((e=>e.onDidChange)))((e=>{this._onDidChange.fire({size:e.orthogonalSize})})),...this.children.map(((e,i)=>e instanceof $?e.onDidVisibilityChange((e=>{this.setChildVisible(i,e)})):c.NONE)))}dispose(){this._childrenDisposable.dispose(),this.splitview.dispose(),this.children.forEach((e=>e.dispose())),super.dispose()}}function Z(e,i){if(e instanceof U)return e;if(e instanceof $)return Z(e.children[i?e.children.length-1:0],i);throw new Error("invalid node")}function X(e,i,t){if(e instanceof $){const n=new $(q(e.orientation),e.proportionalLayout,e.styles,i,t,e.disabled);let o=0;for(let s=e.children.length-1;s>=0;s--){const a=e.children[s],r=a instanceof $?a.orthogonalSize:a.size;let d=0===e.size?0:Math.round(i*r/e.size);o+=d,0===s&&(d+=i-o),n.addChild(X(a,t,d),d,0,!0)}return n}return new U(e.view,q(e.orientation),t)}function Y(e){const i=e.parentElement;if(!i)throw new Error("Invalid grid element");if(/\bgrid-view\b/.test(i.className))return[];const t=function(e){const i=e.parentElement;if(!i)throw new Error("Invalid grid element");let t=i.firstElementChild,n=0;for(;t!==e&&t!==i.lastElementChild&&t;)t=t.nextElementSibling,n++;return n}(i);return[...Y(i.parentElement.parentElement.parentElement),t]}function K(e,i,t){const n=function(e,i){return i.length%2==0?q(e):e}(e,i),o=function(e){return"top"===e||"bottom"===e?W.VERTICAL:W.HORIZONTAL}(t);if(n===o){const[e,n]=I(i);let o=n;return"right"!==t&&"bottom"!==t||(o+=1),[...e,o]}{const e="right"===t||"bottom"===t?1:0;return[...i,e]}}const q=e=>e===W.HORIZONTAL?W.VERTICAL:W.HORIZONTAL;const Q=(e,i)=>{const t=i===W.VERTICAL?e.box.width:e.box.height;return function(e){return!!e.children}(e)?{type:"branch",data:e.children.map((e=>Q(e,q(i)))),size:t}:"number"==typeof e.cachedVisibleSize?{type:"leaf",data:e.view.toJSON(),size:e.cachedVisibleSize,visible:!1}:{type:"leaf",data:e.view.toJSON(),size:t}};class ee{get length(){return this._root?this._root.children.length:0}get orientation(){return this.root.orientation}set orientation(e){if(this.root.orientation===e)return;const{size:i,orthogonalSize:t}=this.root;this.root=X(this.root,t,i),this.root.layout(i,t)}get width(){return this.root.width}get height(){return this.root.height}get minimumWidth(){return this.root.minimumWidth}get minimumHeight(){return this.root.minimumHeight}get maximumWidth(){return this.root.maximumHeight}get maximumHeight(){return this.root.maximumHeight}get locked(){return this._locked}set locked(e){this._locked=e;const i=[this.root];for(;i.length>0;){const t=i.pop();t instanceof $&&(t.disabled=e,i.push(...t.children))}}maximizedView(){var e;return null===(e=this._maximizedNode)||void 0===e?void 0:e.leaf.view}hasMaximizedView(){return void 0!==this._maximizedNode}maximizeView(e){var i;const t=Y(e.element),[n,o]=this.getNode(t);if(!(o instanceof U))return;if((null===(i=this._maximizedNode)||void 0===i?void 0:i.leaf)===o)return;this.hasMaximizedView()&&this.exitMaximizedView();const s=[];!function e(i,t){for(let n=0;n<i.children.length;n++){const o=i.children[n];o instanceof U?o!==t&&(i.isChildVisible(n)?i.setChildVisible(n,!1):s.push(o)):e(o,t)}}(this.root,o),this._maximizedNode={leaf:o,hiddenOnMaximize:s},this._onDidMaximizedNodeChange.fire()}exitMaximizedView(){if(!this._maximizedNode)return;const e=this._maximizedNode.hiddenOnMaximize;!function i(t){for(let n=t.children.length-1;n>=0;n--){const o=t.children[n];o instanceof U?e.includes(o)||t.setChildVisible(n,!0):i(o)}}(this.root),this._maximizedNode=void 0,this._onDidMaximizedNodeChange.fire()}serialize(){this.hasMaximizedView()&&this.exitMaximizedView();return{root:Q(this.getView(),this.orientation),width:this.width,height:this.height,orientation:this.orientation}}dispose(){this.disposable.dispose(),this._onDidChange.dispose(),this._onDidMaximizedNodeChange.dispose(),this.root.dispose(),this._maximizedNode=void 0,this.element.remove()}clear(){const e=this.root.orientation;this.root=new $(e,this.proportionalLayout,this.styles,this.root.size,this.root.orthogonalSize,this._locked)}deserialize(e,i){const t=e.orientation,n=t===W.VERTICAL?e.height:e.width;this._deserialize(e.root,t,i,n)}_deserialize(e,i,t,n){this.root=this._deserializeNode(e,i,t,n)}_deserializeNode(e,i,t,n){let o;if("branch"===e.type){const s=e.data.map((n=>({node:this._deserializeNode(n,q(i),t,e.size),visible:n.visible})));o=new $(i,this.proportionalLayout,this.styles,e.size,n,this._locked,s)}else o=new U(t.fromJSON(e),i,n,e.size);return o}get root(){return this._root}set root(e){const i=this._root;i&&(i.dispose(),this._maximizedNode=void 0,this.element.removeChild(i.element)),this._root=e,this.element.appendChild(this._root.element),this.disposable.value=this._root.onDidChange((e=>{this._onDidChange.fire(e)}))}insertOrthogonalSplitviewAtRoot(){if(!this._root)return;const e=this.root;if(e.element.remove(),this._root=new $(q(e.orientation),this.proportionalLayout,this.styles,this.root.orthogonalSize,this.root.size,this._locked),0===e.children.length);else if(1===e.children.length){const i=e.children[0];e.removeChild(0).dispose(),e.dispose(),this._root.addChild(X(i,i.orthogonalSize,i.size),j.Distribute,0)}else this._root.addChild(e,j.Distribute,0);this.element.appendChild(this._root.element),this.disposable.value=this._root.onDidChange((e=>{this._onDidChange.fire(e)}))}next(e){return this.progmaticSelect(e)}previous(e){return this.progmaticSelect(e,!0)}getView(e){const i=e?this.getNode(e)[1]:this.root;return this._getViews(i,this.orientation)}_getViews(e,i,t){const n={height:e.height,width:e.width};if(e instanceof U)return{box:n,view:e.view,cachedVisibleSize:t};const o=[];for(let s=0;s<e.children.length;s++){const t=e.children[s],n=e.getChildCachedVisibleSize(s);o.push(this._getViews(t,q(i),n))}return{box:n,children:o}}progmaticSelect(e,i){void 0===i&&(i=!1);const[t,n]=this.getNode(e);if(!(n instanceof U))throw new Error("invalid location");for(let o=t.length-1;o>-1;o--){const n=t[o],s=e[o]||0;if(i?s-1>-1:s+1<n.children.length)return Z(n.children[i?s-1:s+1],i)}return Z(this.root,i)}constructor(e,i,t){this.proportionalLayout=e,this.styles=i,this._locked=!1,this._maximizedNode=void 0,this.disposable=new y,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._onDidMaximizedNodeChange=new u,this.onDidMaximizedNodeChange=this._onDidMaximizedNodeChange.event,this.element=document.createElement("div"),this.element.className="grid-view",this.root=new $(t,e,i,0,0,this._locked)}isViewVisible(e){const[i,t]=I(e),[,n]=this.getNode(i);if(!(n instanceof $))throw new Error("Invalid from location");return n.isChildVisible(t)}setViewVisible(e,i){this.hasMaximizedView()&&this.exitMaximizedView();const[t,n]=I(e),[,o]=this.getNode(t);if(!(o instanceof $))throw new Error("Invalid from location");o.setChildVisible(n,i)}moveView(e,i,t){this.hasMaximizedView()&&this.exitMaximizedView();const[,n]=this.getNode(e);if(!(n instanceof $))throw new Error("Invalid location");n.moveChild(i,t)}addView(e,i,t){this.hasMaximizedView()&&this.exitMaximizedView();const[n,o]=I(t),[s,a]=this.getNode(n);if(a instanceof $){const t=new U(e,q(a.orientation),a.orthogonalSize);a.addChild(t,i,o)}else{const[t,...r]=[...s].reverse(),[d,...p]=[...n].reverse();let c=0;const l=t.getChildCachedVisibleSize(d);"number"==typeof l&&(c=j.Invisible(l));t.removeChild(d).dispose();const m=new $(a.orientation,this.proportionalLayout,this.styles,a.size,a.orthogonalSize,this._locked);t.addChild(m,a.size,d);const h=new U(a.view,t.orientation,a.size);m.addChild(h,c,0),"number"!=typeof i&&"split"===i.type&&(i={type:"split",index:0});const u=new U(e,t.orientation,a.size);m.addChild(u,i,o)}}remove(e,i){const t=Y(e.element);return this.removeView(t,i)}removeView(e,i){this.hasMaximizedView()&&this.exitMaximizedView();const[t,n]=I(e),[o,s]=this.getNode(t);if(!(s instanceof $))throw new Error("Invalid location");const a=s.children[n];if(!(a instanceof U))throw new Error("Invalid location");if(s.removeChild(n,i),a.dispose(),1!==s.children.length)return a.view;const r=s.children[0];if(0===o.length)return r instanceof U||(s.removeChild(0,i),this.root=r),a.view;const[d,...p]=[...o].reverse(),[c,...l]=[...t].reverse(),m=s.isChildVisible(0);s.removeChild(0,i);const h=d.children.map(((e,i)=>d.getChildSize(i)));if(d.removeChild(c,i).dispose(),r instanceof $){h.splice(c,1,...r.children.map((e=>e.size)));for(let e=0;e<r.children.length;e++){const i=r.children[e];d.addChild(i,i.size,c+e)}for(;r.children.length>0;)r.removeChild(0)}else{const e=new U(r.view,q(r.orientation),r.size),i=m?r.orthogonalSize:j.Invisible(r.orthogonalSize);d.addChild(e,i,c)}r.dispose();for(let u=0;u<h.length;u++)d.resizeChild(u,h[u]);return a.view}layout(e,i){const[t,n]=this.root.orientation===W.HORIZONTAL?[i,e]:[e,i];this.root.layout(t,n)}getNode(e,i,t){if(void 0===i&&(i=this.root),void 0===t&&(t=[]),0===e.length)return[t,i];if(!(i instanceof $))throw new Error("Invalid location");const[n,...o]=e;if(n<0||n>=i.children.length)throw new Error("Invalid location");const s=i.children[n];return t.push(i),this.getNode(o,s,t)}}class ie{get minimumSize(){return this.component.minimumSize}get maximumSize(){return this.component.maximumSize}get width(){return this.component.width}get height(){return this.component.height}get length(){return this.component.length}get orientation(){return this.component.orientation}get panels(){return this.component.panels}get onDidLayoutFromJSON(){return this.component.onDidLayoutFromJSON}get onDidLayoutChange(){return this.component.onDidLayoutChange}get onDidAddView(){return this.component.onDidAddView}get onDidRemoveView(){return this.component.onDidRemoveView}constructor(e){this.component=e}updateOptions(e){this.component.updateOptions(e)}removePanel(e,i){this.component.removePanel(e,i)}focus(){this.component.focus()}getPanel(e){return this.component.getPanel(e)}layout(e,i){return this.component.layout(e,i)}addPanel(e){return this.component.addPanel(e)}movePanel(e,i){this.component.movePanel(e,i)}fromJSON(e){this.component.fromJSON(e)}toJSON(){return this.component.toJSON()}clear(){this.component.clear()}}class te{get minimumSize(){return this.component.minimumSize}get maximumSize(){return this.component.maximumSize}get width(){return this.component.width}get height(){return this.component.height}get panels(){return this.component.panels}get onDidLayoutChange(){return this.component.onDidLayoutChange}get onDidLayoutFromJSON(){return this.component.onDidLayoutFromJSON}get onDidAddView(){return this.component.onDidAddView}get onDidRemoveView(){return this.component.onDidRemoveView}get onDidDrop(){const e=new u,i=this.component.onDidDrop((i=>{e.fire(Object.assign(Object.assign({},i),{api:this}))}));return e.dispose=()=>{i.dispose(),e.dispose()},e.event}constructor(e){this.component=e}removePanel(e){this.component.removePanel(e)}getPanel(e){return this.component.getPanel(e)}movePanel(e,i){this.component.movePanel(e,i)}focus(){this.component.focus()}layout(e,i){this.component.layout(e,i)}addPanel(e){return this.component.addPanel(e)}fromJSON(e){this.component.fromJSON(e)}toJSON(){return this.component.toJSON()}clear(){this.component.clear()}}class ne{get width(){return this.component.width}get height(){return this.component.height}get minimumHeight(){return this.component.minimumHeight}get maximumHeight(){return this.component.maximumHeight}get minimumWidth(){return this.component.minimumWidth}get maximumWidth(){return this.component.maximumWidth}get onDidLayoutChange(){return this.component.onDidLayoutChange}get onDidAddPanel(){return this.component.onDidAddGroup}get onDidRemovePanel(){return this.component.onDidRemoveGroup}get onDidActivePanelChange(){return this.component.onDidActiveGroupChange}get onDidLayoutFromJSON(){return this.component.onDidLayoutFromJSON}get panels(){return this.component.groups}get orientation(){return this.component.orientation}set orientation(e){this.component.updateOptions({orientation:e})}constructor(e){this.component=e}focus(){this.component.focus()}layout(e,i,t){void 0===t&&(t=!1),this.component.layout(e,i,t)}addPanel(e){return this.component.addPanel(e)}removePanel(e,i){this.component.removePanel(e,i)}movePanel(e,i){this.component.movePanel(e,i)}getPanel(e){return this.component.getPanel(e)}fromJSON(e){return this.component.fromJSON(e)}toJSON(){return this.component.toJSON()}clear(){this.component.clear()}}class oe{get id(){return this.component.id}get width(){return this.component.width}get height(){return this.component.height}get minimumHeight(){return this.component.minimumHeight}get maximumHeight(){return this.component.maximumHeight}get minimumWidth(){return this.component.minimumWidth}get maximumWidth(){return this.component.maximumWidth}get size(){return this.component.size}get totalPanels(){return this.component.totalPanels}get onDidActiveGroupChange(){return this.component.onDidActiveGroupChange}get onDidAddGroup(){return this.component.onDidAddGroup}get onDidRemoveGroup(){return this.component.onDidRemoveGroup}get onDidActivePanelChange(){return this.component.onDidActivePanelChange}get onDidAddPanel(){return this.component.onDidAddPanel}get onDidRemovePanel(){return this.component.onDidRemovePanel}get onDidLayoutFromJSON(){return this.component.onDidLayoutFromJSON}get onDidLayoutChange(){return this.component.onDidLayoutChange}get onDidDrop(){return this.component.onDidDrop}get onWillDrop(){return this.component.onWillDrop}get onWillShowOverlay(){return this.component.onWillShowOverlay}get onWillDragGroup(){return this.component.onWillDragGroup}get onWillDragPanel(){return this.component.onWillDragPanel}get panels(){return this.component.panels}get groups(){return this.component.groups}get activePanel(){return this.component.activePanel}get activeGroup(){return this.component.activeGroup}constructor(e){this.component=e}focus(){this.component.focus()}getPanel(e){return this.component.getGroupPanel(e)}layout(e,i,t){void 0===t&&(t=!1),this.component.layout(e,i,t)}addPanel(e){return this.component.addPanel(e)}removePanel(e){this.component.removePanel(e)}addGroup(e){return this.component.addGroup(e)}closeAllGroups(){return this.component.closeAllGroups()}removeGroup(e){this.component.removeGroup(e)}getGroup(e){return this.component.getPanel(e)}addFloatingGroup(e,i){return this.component.addFloatingGroup(e,i)}fromJSON(e){this.component.fromJSON(e)}toJSON(){return this.component.toJSON()}clear(){this.component.clear()}moveToNext(e){this.component.moveToNext(e)}moveToPrevious(e){this.component.moveToPrevious(e)}maximizeGroup(e){this.component.maximizeGroup(e.group)}hasMaximizedGroup(){return this.component.hasMaximizedGroup()}exitMaximizedGroup(){this.component.exitMaximizedGroup()}get onDidMaximizedGroupChange(){return this.component.onDidMaximizedGroupChange}addPopoutGroup(e,i){return this.component.addPopoutGroup(e,i)}}class se extends f{constructor(e,i){super(),this.element=e,this.callbacks=i,this.target=null,this.registerListeners()}onDragEnter(e){this.target=e.target,this.callbacks.onDragEnter(e)}onDragOver(e){e.preventDefault(),this.callbacks.onDragOver&&this.callbacks.onDragOver(e)}onDragLeave(e){this.target===e.target&&(this.target=null,this.callbacks.onDragLeave(e))}onDragEnd(e){this.target=null,this.callbacks.onDragEnd(e)}onDrop(e){this.callbacks.onDrop(e)}registerListeners(){this.addDisposables(g(this.element,"dragenter",(e=>{this.onDragEnter(e)}),!0)),this.addDisposables(g(this.element,"dragover",(e=>{this.onDragOver(e)}),!0)),this.addDisposables(g(this.element,"dragleave",(e=>{this.onDragLeave(e)}))),this.addDisposables(g(this.element,"dragend",(e=>{this.onDragEnd(e)}))),this.addDisposables(g(this.element,"drop",(e=>{this.onDrop(e)})))}}class ae extends l{get nativeEvent(){return this.options.nativeEvent}get position(){return this.options.position}constructor(e){super(),this.options=e}}function re(e){switch(e){case"above":return"top";case"below":return"bottom";case"left":return"left";case"right":return"right";case"within":return"center";default:throw new Error(`invalid direction '${e}'`)}}function de(e){switch(e){case"top":return"above";case"bottom":return"below";case"left":return"left";case"right":return"right";case"center":return"within";default:throw new Error(`invalid position '${e}'`)}}const pe={value:20,type:"percentage"},ce={value:50,type:"percentage"};class le extends f{get state(){return this._state}constructor(e,i){super(),this.element=e,this.options=i,this._onDrop=new u,this.onDrop=this._onDrop.event,this._onWillShowOverlay=new u,this.onWillShowOverlay=this._onWillShowOverlay.event,this._acceptedTargetZonesSet=new Set(this.options.acceptedTargetZones),this.dnd=new se(this.element,{onDragEnter:()=>{},onDragOver:e=>{if(0===this._acceptedTargetZonesSet.size)return void this.removeDropTarget();const i=this.element.clientWidth,t=this.element.clientHeight;if(0===i||0===t)return;const n=e.currentTarget.getBoundingClientRect(),o=e.clientX-n.left,s=e.clientY-n.top,a=this.calculateQuadrant(this._acceptedTargetZonesSet,o,s,i,t);if(this.isAlreadyUsed(e)||null===a)return void this.removeDropTarget();const r=new ae({nativeEvent:e,position:a});if(this._onWillShowOverlay.fire(r),r.defaultPrevented)this.removeDropTarget();else{if("boolean"==typeof this.options.canDisplayOverlay){if(!this.options.canDisplayOverlay)return void this.removeDropTarget()}else if(!this.options.canDisplayOverlay(e,a))return void this.removeDropTarget();this.markAsUsed(e),this.targetElement||(this.targetElement=document.createElement("div"),this.targetElement.className="drop-target-dropzone",this.overlayElement=document.createElement("div"),this.overlayElement.className="drop-target-selection",this._state="center",this.targetElement.appendChild(this.overlayElement),this.element.classList.add("drop-target"),this.element.append(this.targetElement)),this.toggleClasses(a,i,t),this._state=a}},onDragLeave:()=>{this.removeDropTarget()},onDragEnd:()=>{this.removeDropTarget()},onDrop:e=>{e.preventDefault();const i=this._state;this.removeDropTarget(),i&&(e.stopPropagation(),this._onDrop.fire({position:i,nativeEvent:e}))}}),this.addDisposables(this._onDrop,this._onWillShowOverlay,this.dnd)}setTargetZones(e){this._acceptedTargetZonesSet=new Set(e)}setOverlayModel(e){this.options.overlayModel=e}dispose(){this.removeDropTarget(),super.dispose()}markAsUsed(e){e[le.USED_EVENT_ID]=!0}isAlreadyUsed(e){const i=e[le.USED_EVENT_ID];return"boolean"==typeof i&&i}toggleClasses(e,i,t){var n,o;if(!this.overlayElement)return;const s=i<100,a=t<100,r="left"===e,d="right"===e,p="top"===e,c="bottom"===e,l=!s&&d,m=!s&&r,h=!a&&p,u=!a&&c;let v=1;const g=null!==(o=null===(n=this.options.overlayModel)||void 0===n?void 0:n.size)&&void 0!==o?o:ce;"percentage"===g.type?v=L(g.value,0,100)/100:((l||m)&&(v=L(0,g.value,i)/i),(h||u)&&(v=L(0,g.value,t)/t));const k={top:"0px",left:"0px",width:"100%",height:"100%"};l?(k.left=100*(1-v)+"%",k.width=100*v+"%"):m?k.width=100*v+"%":h?k.height=100*v+"%":u&&(k.top=100*(1-v)+"%",k.height=100*v+"%"),this.overlayElement.style.top=k.top,this.overlayElement.style.left=k.left,this.overlayElement.style.width=k.width,this.overlayElement.style.height=k.height,D(this.overlayElement,"dv-drop-target-small-vertical",a),D(this.overlayElement,"dv-drop-target-small-horizontal",s),D(this.overlayElement,"dv-drop-target-left",r),D(this.overlayElement,"dv-drop-target-right",d),D(this.overlayElement,"dv-drop-target-top",p),D(this.overlayElement,"dv-drop-target-bottom",c),D(this.overlayElement,"dv-drop-target-center","center"===e)}calculateQuadrant(e,i,t,n,o){var s,a;const r=null!==(a=null===(s=this.options.overlayModel)||void 0===s?void 0:s.activationSize)&&void 0!==a?a:pe;return"percentage"===r.type?function(e,i,t,n,o,s){const a=100*i/n,r=100*t/o;if(e.has("left")&&a<s)return"left";if(e.has("right")&&a>100-s)return"right";if(e.has("top")&&r<s)return"top";if(e.has("bottom")&&r>100-s)return"bottom";if(!e.has("center"))return null;return"center"}(e,i,t,n,o,r.value):function(e,i,t,n,o,s){if(e.has("left")&&i<s)return"left";if(e.has("right")&&i>n-s)return"right";if(e.has("top")&&t<s)return"top";if(e.has("bottom")&&t>o-s)return"bottom";if(!e.has("center"))return null;return"center"}(e,i,t,n,o,r.value)}removeDropTarget(){this.targetElement&&(this._state=void 0,this.element.removeChild(this.targetElement),this.targetElement=void 0,this.overlayElement=void 0,this.element.classList.remove("drop-target"))}}le.USED_EVENT_ID="__dockview_droptarget_event_is_used__";class me extends f{get element(){return this._element}constructor(e,i){super(),this.accessor=e,this.group=i,this.disposable=new y,this._onDidFocus=new u,this.onDidFocus=this._onDidFocus.event,this._onDidBlur=new u,this.onDidBlur=this._onDidBlur.event,this._element=document.createElement("div"),this._element.className="content-container",this._element.tabIndex=-1,this.addDisposables(this._onDidFocus,this._onDidBlur),this.dropTarget=new le(this.element,{acceptedTargetZones:["top","bottom","left","right","center"],canDisplayOverlay:(e,i)=>{if("no-drop-target"===this.group.locked||this.group.locked&&"center"===i)return!1;const t=r();if(!t&&e.shiftKey&&"floating"!==this.group.location.type)return!1;if(t&&t.viewId===this.accessor.id){if(t.groupId===this.group.id){if("center"===i)return!1;if(null===t.panelId)return!1}return!(1===this.group.panels.length&&t.groupId===this.group.id)}return this.group.canDisplayOverlay(e,i,"panel")}}),this.addDisposables(this.dropTarget)}show(){this.element.style.display=""}hide(){this.element.style.display="none"}renderPanel(e,i){void 0===i&&(i={asActive:!0});const t=i.asActive||this.panel&&this.group.isPanelActive(this.panel);let n;switch(this.panel&&this.panel.view.content.element.parentElement===this._element&&this._element.removeChild(this.panel.view.content.element),this.panel=e,e.api.renderer){case"onlyWhenVisibile":this.group.renderContainer.detatch(e),this.panel&&t&&this._element.appendChild(this.panel.view.content.element),n=this._element;break;case"always":e.view.content.element.parentElement===this._element&&this._element.removeChild(e.view.content.element),n=this.group.renderContainer.attach({panel:e,referenceContainer:this})}if(t){const i=e.view.content.onDidFocus,t=e.view.content.onDidBlur,o=E(n),s=new f;s.addDisposables(o,o.onDidFocus((()=>this._onDidFocus.fire())),o.onDidBlur((()=>this._onDidBlur.fire()))),i&&s.addDisposables(i((()=>this._onDidFocus.fire()))),t&&s.addDisposables(t((()=>this._onDidBlur.fire()))),this.disposable.value=s}}openPanel(e){this.panel!==e&&this.renderPanel(e)}layout(e,i){}closePanel(){var e;this.panel&&"onlyWhenVisibile"===this.panel.api.renderer&&(null===(e=this.panel.view.content.element.parentElement)||void 0===e||e.removeChild(this.panel.view.content.element)),this.panel=void 0}dispose(){this.disposable.dispose(),super.dispose()}}class he extends f{constructor(e){super(),this.el=e,this.dataDisposable=new y,this.pointerEventsDisposable=new y,this._onDragStart=new u,this.onDragStart=this._onDragStart.event,this.addDisposables(this._onDragStart,this.dataDisposable,this.pointerEventsDisposable),this.configure()}isCancelled(e){return!1}configure(){this.addDisposables(this._onDragStart,g(this.el,"dragstart",(e=>{if(e.defaultPrevented||this.isCancelled(e))return void e.preventDefault();const i=[...x("iframe"),...x("webview")];this.pointerEventsDisposable.value={dispose:()=>{for(const e of i)e.style.pointerEvents="auto"}};for(const t of i)t.style.pointerEvents="none";if(this.el.classList.add("dv-dragged"),setTimeout((()=>this.el.classList.remove("dv-dragged")),0),this.dataDisposable.value=this.getData(e),this._onDragStart.fire(e),e.dataTransfer){e.dataTransfer.effectAllowed="move";e.dataTransfer.items.length>0||e.dataTransfer.setData("text/plain","__dockview_internal_drag_event__")}})),g(this.el,"dragend",(()=>{this.pointerEventsDisposable.dispose(),this.dataDisposable.dispose()})))}}class ue extends he{constructor(e,i,t,n){super(e),this.accessor=i,this.group=t,this.panel=n,this.panelTransfer=a.getInstance()}getData(e){return this.panelTransfer.setData([new o(this.accessor.id,this.group.id,this.panel.id)],o.prototype),{dispose:()=>{this.panelTransfer.clearData(o.prototype)}}}}class ve extends f{get element(){return this._element}constructor(e,i,t){super(),this.panel=e,this.accessor=i,this.group=t,this.content=void 0,this._onChanged=new u,this.onChanged=this._onChanged.event,this._onDropped=new u,this.onDrop=this._onDropped.event,this._onDragStart=new u,this.onDragStart=this._onDragStart.event,this._element=document.createElement("div"),this._element.className="tab",this._element.tabIndex=0,this._element.draggable=!0,D(this.element,"inactive-tab",!0);const n=new ue(this._element,this.accessor,this.group,this.panel);this.dropTarget=new le(this._element,{acceptedTargetZones:["center"],canDisplayOverlay:(e,i)=>{if(this.group.locked)return!1;const t=r();return t&&this.accessor.id===t.viewId?(null!==t.panelId||t.groupId!==this.group.id)&&this.panel.id!==t.panelId:this.group.model.canDisplayOverlay(e,i,"tab")}}),this.onWillShowOverlay=this.dropTarget.onWillShowOverlay,this.addDisposables(this._onChanged,this._onDropped,this._onDragStart,n.onDragStart((e=>{this._onDragStart.fire(e)})),n,g(this._element,"mousedown",(e=>{e.defaultPrevented||this._onChanged.fire(e)})),this.dropTarget.onDrop((e=>{this._onDropped.fire(e)})),this.dropTarget)}setActive(e){D(this.element,"active-tab",e),D(this.element,"inactive-tab",!e)}setContent(e){this.content&&this._element.removeChild(this.content.element),this.content=e,this._element.appendChild(this.content.element)}dispose(){super.dispose()}}class ge extends he{constructor(e,i,t){super(e),this.accessor=i,this.group=t,this.panelTransfer=a.getInstance(),this.addDisposables(g(e,"mousedown",(e=>{e.shiftKey&&(e[S]=!0)}),!0))}isCancelled(e){return"floating"===this.group.api.location.type&&!e.shiftKey}getData(e){const i=e.dataTransfer;this.panelTransfer.setData([new o(this.accessor.id,this.group.id,null)],o.prototype);const t=window.getComputedStyle(this.el),n=t.getPropertyValue("--dv-activegroup-visiblepanel-tab-background-color"),s=t.getPropertyValue("--dv-activegroup-visiblepanel-tab-color");if(i){const e=document.createElement("div");e.style.backgroundColor=n,e.style.color=s,e.style.padding="2px 8px",e.style.height="24px",e.style.fontSize="11px",e.style.lineHeight="20px",e.style.borderRadius="12px",e.style.position="absolute",e.textContent=`Multiple Panels (${this.group.size})`,function(e,i){P(i,"dv-dragged"),document.body.appendChild(i),e.setDragImage(i,0,0),setTimeout((()=>{b(i,"dv-dragged"),i.remove()}),0)}(i,e)}return{dispose:()=>{this.panelTransfer.clearData(o.prototype)}}}}class ke extends f{get element(){return this._element}constructor(e,i){super(),this.accessor=e,this.group=i,this._onDrop=new u,this.onDrop=this._onDrop.event,this._onDragStart=new u,this.onDragStart=this._onDragStart.event,this._element=document.createElement("div"),this._element.className="void-container",this._element.tabIndex=0,this._element.draggable=!0,this.addDisposables(this._onDrop,this._onDragStart,g(this._element,"click",(()=>{this.accessor.doSetGroupActive(this.group)})));const t=new ge(this._element,e,i);this.dropTraget=new le(this._element,{acceptedTargetZones:["center"],canDisplayOverlay:(e,t)=>{var n;const o=r();return o&&this.accessor.id===o.viewId?(null!==o.panelId||o.groupId!==this.group.id)&&(null===(n=(s=this.group.panels).length>0?s[s.length-1]:void 0)||void 0===n?void 0:n.id)!==o.panelId:i.model.canDisplayOverlay(e,t,"panel");var s}}),this.onWillShowOverlay=this.dropTraget.onWillShowOverlay,this.addDisposables(t,t.onDragStart((e=>{this._onDragStart.fire(e)})),this.dropTraget.onDrop((e=>{this._onDrop.fire(e)})),this.dropTraget)}}class fe extends f{get panels(){return this.tabs.map((e=>e.value.panel.id))}get size(){return this.tabs.length}get hidden(){return this._hidden}set hidden(e){this._hidden=e,this.element.style.display=e?"none":""}show(){this.hidden||(this.element.style.display="")}hide(){this._element.style.display="none"}setRightActionsElement(e){this.rightActions!==e&&(this.rightActions&&(this.rightActions.remove(),this.rightActions=void 0),e&&(this.rightActionsContainer.appendChild(e),this.rightActions=e))}setLeftActionsElement(e){this.leftActions!==e&&(this.leftActions&&(this.leftActions.remove(),this.leftActions=void 0),e&&(this.leftActionsContainer.appendChild(e),this.leftActions=e))}setPrefixActionsElement(e){this.preActions!==e&&(this.preActions&&(this.preActions.remove(),this.preActions=void 0),e&&(this.preActionsContainer.appendChild(e),this.preActions=e))}get element(){return this._element}isActive(e){return this.selectedIndex>-1&&this.tabs[this.selectedIndex].value===e}indexOf(e){return this.tabs.findIndex((i=>i.value.panel.id===e))}constructor(e,i){super(),this.accessor=e,this.group=i,this.tabs=[],this.selectedIndex=-1,this._hidden=!1,this._onDrop=new u,this.onDrop=this._onDrop.event,this._onTabDragStart=new u,this.onTabDragStart=this._onTabDragStart.event,this._onGroupDragStart=new u,this.onGroupDragStart=this._onGroupDragStart.event,this._onWillShowOverlay=new u,this.onWillShowOverlay=this._onWillShowOverlay.event,this._element=document.createElement("div"),this._element.className="tabs-and-actions-container",D(this._element,"dv-full-width-single-tab","fullwidth"===this.accessor.options.singleTabMode),this.rightActionsContainer=document.createElement("div"),this.rightActionsContainer.className="right-actions-container",this.leftActionsContainer=document.createElement("div"),this.leftActionsContainer.className="left-actions-container",this.preActionsContainer=document.createElement("div"),this.preActionsContainer.className="pre-actions-container",this.tabContainer=document.createElement("div"),this.tabContainer.className="tabs-container",this.voidContainer=new ke(this.accessor,this.group),this._element.appendChild(this.preActionsContainer),this._element.appendChild(this.tabContainer),this._element.appendChild(this.leftActionsContainer),this._element.appendChild(this.voidContainer.element),this._element.appendChild(this.rightActionsContainer),this.addDisposables(this.accessor.onDidAddPanel((e=>{e.api.group===this.group&&D(this._element,"dv-single-tab",1===this.size)})),this.accessor.onDidRemovePanel((e=>{e.api.group===this.group&&D(this._element,"dv-single-tab",1===this.size)})),this._onWillShowOverlay,this._onDrop,this._onTabDragStart,this._onGroupDragStart,this.voidContainer,this.voidContainer.onDragStart((e=>{this._onGroupDragStart.fire({nativeEvent:e,group:this.group})})),this.voidContainer.onDrop((e=>{this._onDrop.fire({event:e.nativeEvent,index:this.tabs.length})})),this.voidContainer.onWillShowOverlay((e=>{this._onWillShowOverlay.fire(new be(e,{kind:"header_space"}))})),g(this.voidContainer.element,"mousedown",(e=>{if(!this.accessor.options.disableFloatingGroups&&e.shiftKey&&"floating"!==this.group.api.location.type){e.preventDefault();const{top:i,left:t}=this.element.getBoundingClientRect(),{top:n,left:o}=this.accessor.element.getBoundingClientRect();this.accessor.addFloatingGroup(this.group,{x:t-o+20,y:i-n+20},{inDragMode:!0})}})),g(this.tabContainer,"mousedown",(e=>{if(e.defaultPrevented)return;0===e.button&&this.accessor.doSetGroupActive(this.group)})))}setActive(e){}addTab(e,i){if(void 0===i&&(i=this.tabs.length),i<0||i>this.tabs.length)throw new Error("invalid location");this.tabContainer.insertBefore(e.value.element,this.tabContainer.children[i]),this.tabs=[...this.tabs.slice(0,i),e,...this.tabs.slice(i)],this.selectedIndex<0&&(this.selectedIndex=i)}delete(e){const i=this.tabs.findIndex((i=>i.value.panel.id===e)),t=this.tabs.splice(i,1)[0],{value:n,disposable:o}=t;o.dispose(),n.dispose(),n.element.remove()}setActivePanel(e){this.tabs.forEach((i=>{const t=e.id===i.value.panel.id;i.value.setActive(t)}))}openPanel(e,i){var t;if(void 0===i&&(i=this.tabs.length),this.tabs.find((i=>i.value.panel.id===e.id)))return;const n=new ve(e,this.accessor,this.group);if(!(null===(t=e.view)||void 0===t?void 0:t.tab))throw new Error("invalid header component");n.setContent(e.view.tab);const o=new f(n.onDragStart((i=>{this._onTabDragStart.fire({nativeEvent:i,panel:e})})),n.onChanged((i=>{const t=!this.accessor.options.disableFloatingGroups,o="floating"===this.group.api.location.type&&1===this.size;if(t&&!o&&i.shiftKey){i.preventDefault();const e=this.accessor.getGroupPanel(n.panel.id),{top:t,left:o}=n.element.getBoundingClientRect(),{top:s,left:a}=this.accessor.element.getBoundingClientRect();return void this.accessor.addFloatingGroup(e,{x:o-a,y:t-s},{inDragMode:!0})}0===i.button&&!i.defaultPrevented&&this.group.activePanel!==e&&this.group.model.openPanel(e)})),n.onDrop((e=>{this._onDrop.fire({event:e.nativeEvent,index:this.tabs.findIndex((e=>e.value===n))})})),n.onWillShowOverlay((e=>{this._onWillShowOverlay.fire(new be(e,{kind:"tab"}))}))),s={value:n,disposable:o};this.addTab(s,i)}closePanel(e){this.delete(e.id)}dispose(){super.dispose();for(const{value:e,disposable:i}of this.tabs)i.dispose(),e.dispose();this.tabs=[]}}class ye extends l{get nativeEvent(){return this.options.nativeEvent}get position(){return this.options.position}get panel(){return this.options.panel}get group(){return this.options.group}get api(){return this.options.api}constructor(e){super(),this.options=e}getData(){return this.options.getData()}}class we extends ye{get kind(){return this._kind}constructor(e){super(e),this._kind=e.kind}}class be{get kind(){return this._kind}get nativeEvent(){return this.event.nativeEvent}get position(){return this.event.position}get defaultPrevented(){return this.event.defaultPrevented}preventDefault(){this.event.preventDefault()}constructor(e,i){this.event=e,this._kind=i.kind}}class Pe extends f{get element(){throw new Error("not supported")}get activePanel(){return this._activePanel}get locked(){return this._locked}set locked(e){this._locked=e,D(this.container,"locked-groupview","no-drop-target"===e||e)}get isActive(){return this._isGroupActive}get panels(){return this._panels}get size(){return this._panels.length}get isEmpty(){return 0===this._panels.length}get hasWatermark(){return!(!this.watermark||!this.container.contains(this.watermark.element))}get header(){return this.tabsContainer}get isContentFocused(){return!!document.activeElement&&_(document.activeElement,this.contentContainer.element)}get location(){return this._location}set location(e){switch(this._location=e,D(this.container,"dv-groupview-floating",!1),D(this.container,"dv-groupview-popout",!1),e.type){case"grid":this.contentContainer.dropTarget.setTargetZones(["top","bottom","left","right","center"]);break;case"floating":this.contentContainer.dropTarget.setTargetZones(["center"]),this.contentContainer.dropTarget.setTargetZones(e?["center"]:["top","bottom","left","right","center"]),D(this.container,"dv-groupview-floating",!0);break;case"popout":this.contentContainer.dropTarget.setTargetZones(["center"]),D(this.container,"dv-groupview-popout",!0)}this.groupPanel.api._onDidLocationChange.fire({location:this.location})}constructor(e,i,t,n,o){var s;super(),this.container=e,this.accessor=i,this.id=t,this.options=n,this.groupPanel=o,this._isGroupActive=!1,this._locked=!1,this._location={type:"grid"},this.mostRecentlyUsed=[],this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._width=0,this._height=0,this._panels=[],this._onMove=new u,this.onMove=this._onMove.event,this._onDidDrop=new u,this.onDidDrop=this._onDidDrop.event,this._onWillDrop=new u,this.onWillDrop=this._onWillDrop.event,this._onWillShowOverlay=new u,this.onWillShowOverlay=this._onWillShowOverlay.event,this._onTabDragStart=new u,this.onTabDragStart=this._onTabDragStart.event,this._onGroupDragStart=new u,this.onGroupDragStart=this._onGroupDragStart.event,this._onDidAddPanel=new u,this.onDidAddPanel=this._onDidAddPanel.event,this._onDidRemovePanel=new u,this.onDidRemovePanel=this._onDidRemovePanel.event,this._onDidActivePanelChange=new u,this.onDidActivePanelChange=this._onDidActivePanelChange.event,this._overwriteRenderContainer=null,D(this.container,"groupview",!0),this._api=new oe(this.accessor),this.tabsContainer=new fe(this.accessor,this.groupPanel),this.contentContainer=new me(this.accessor,this),e.append(this.tabsContainer.element,this.contentContainer.element),this.header.hidden=!!n.hideHeader,this.locked=null!==(s=n.locked)&&void 0!==s&&s,this.addDisposables(this._onTabDragStart,this._onGroupDragStart,this._onWillShowOverlay,this.tabsContainer.onTabDragStart((e=>{this._onTabDragStart.fire(e)})),this.tabsContainer.onGroupDragStart((e=>{this._onGroupDragStart.fire(e)})),this.tabsContainer.onDrop((e=>{this.handleDropEvent("header",e.event,"center",e.index)})),this.contentContainer.onDidFocus((()=>{this.accessor.doSetGroupActive(this.groupPanel)})),this.contentContainer.onDidBlur((()=>{})),this.contentContainer.dropTarget.onDrop((e=>{this.handleDropEvent("content",e.nativeEvent,e.position)})),this.tabsContainer.onWillShowOverlay((e=>{this._onWillShowOverlay.fire(e)})),this.contentContainer.dropTarget.onWillShowOverlay((e=>{this._onWillShowOverlay.fire(new be(e,{kind:"content"}))})),this._onMove,this._onDidChange,this._onDidDrop,this._onWillDrop,this._onDidAddPanel,this._onDidRemovePanel,this._onDidActivePanelChange)}focusContent(){this.contentContainer.element.focus()}set renderContainer(e){this.panels.forEach((e=>{this.renderContainer.detatch(e)})),this._overwriteRenderContainer=e,this.panels.forEach((e=>{this.rerender(e)}))}get renderContainer(){var e;return null!==(e=this._overwriteRenderContainer)&&void 0!==e?e:this.accessor.overlayRenderContainer}initialize(){this.options.panels&&this.options.panels.forEach((e=>{this.doAddPanel(e)})),this.options.activePanel&&this.openPanel(this.options.activePanel),this.setActive(this.isActive,!0),this.updateContainer(),this.accessor.options.createRightHeaderActionsElement&&(this._rightHeaderActions=this.accessor.options.createRightHeaderActionsElement(this.groupPanel),this.addDisposables(this._rightHeaderActions),this._rightHeaderActions.init({containerApi:this._api,api:this.groupPanel.api}),this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element)),this.accessor.options.createLeftHeaderActionsElement&&(this._leftHeaderActions=this.accessor.options.createLeftHeaderActionsElement(this.groupPanel),this.addDisposables(this._leftHeaderActions),this._leftHeaderActions.init({containerApi:this._api,api:this.groupPanel.api}),this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element)),this.accessor.options.createPrefixHeaderActionsElement&&(this._prefixHeaderActions=this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel),this.addDisposables(this._prefixHeaderActions),this._prefixHeaderActions.init({containerApi:this._api,api:this.groupPanel.api}),this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element))}rerender(e){this.contentContainer.renderPanel(e,{asActive:!1})}indexOf(e){return this.tabsContainer.indexOf(e.id)}toJSON(){var e;const i={views:this.tabsContainer.panels,activeView:null===(e=this._activePanel)||void 0===e?void 0:e.id,id:this.id};return!1!==this.locked&&(i.locked=this.locked),this.header.hidden&&(i.hideHeader=!0),i}moveToNext(e){e||(e={}),e.panel||(e.panel=this.activePanel);const i=e.panel?this.panels.indexOf(e.panel):-1;let t;if(i<this.panels.length-1)t=i+1;else{if(e.suppressRoll)return;t=0}this.openPanel(this.panels[t])}moveToPrevious(e){if(e||(e={}),e.panel||(e.panel=this.activePanel),!e.panel)return;const i=this.panels.indexOf(e.panel);let t;if(i>0)t=i-1;else{if(e.suppressRoll)return;t=this.panels.length-1}this.openPanel(this.panels[t])}containsPanel(e){return this.panels.includes(e)}init(e){}update(e){}focus(){var e;null===(e=this._activePanel)||void 0===e||e.focus()}openPanel(e,i){void 0===i&&(i={}),("number"!=typeof i.index||i.index>this.panels.length)&&(i.index=this.panels.length);const t=!!i.skipSetActive;e.updateParentGroup(this.groupPanel,{skipSetActive:i.skipSetActive}),this.doAddPanel(e,i.index,{skipSetActive:t}),this._activePanel!==e?(t||this.doSetActivePanel(e),i.skipSetGroupActive||this.accessor.doSetGroupActive(this.groupPanel),i.skipSetActive||this.updateContainer()):this.contentContainer.renderPanel(e,{asActive:!0})}removePanel(e,i){void 0===i&&(i={skipSetActive:!1});const t="string"==typeof e?e:e.id,n=this._panels.find((e=>e.id===t));if(!n)throw new Error("invalid operation");return this._removePanel(n,i)}closeAllPanels(){if(this.panels.length>0){const e=[...this.panels];for(const i of e)this.doClose(i)}else this.accessor.removeGroup(this.groupPanel)}closePanel(e){this.doClose(e)}doClose(e){this.accessor.removePanel(e)}isPanelActive(e){return this._activePanel===e}updateActions(e){this.tabsContainer.setRightActionsElement(e)}setActive(e,i){void 0===i&&(i=!1),(i||this.isActive!==e)&&(this._isGroupActive=e,D(this.container,"active-group",e),D(this.container,"inactive-group",!e),this.tabsContainer.setActive(this.isActive),!this._activePanel&&this.panels.length>0&&this.doSetActivePanel(this.panels[0]),this.updateContainer())}layout(e,i){var t;this._width=e,this._height=i,this.contentContainer.layout(this._width,this._height),(null===(t=this._activePanel)||void 0===t?void 0:t.layout)&&this._activePanel.layout(this._width,this._height)}_removePanel(e,i){const t=this._activePanel===e;if(this.doRemovePanel(e),t&&this.panels.length>0){const e=this.mostRecentlyUsed[0];this.openPanel(e,{skipSetActive:i.skipSetActive,skipSetGroupActive:i.skipSetActiveGroup})}return this._activePanel&&0===this.panels.length&&this.doSetActivePanel(void 0),i.skipSetActive||this.updateContainer(),e}doRemovePanel(e){const i=this.panels.indexOf(e);this._activePanel===e&&this.contentContainer.closePanel(),this.tabsContainer.delete(e.id),this._panels.splice(i,1),this.mostRecentlyUsed.includes(e)&&this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(e),1),this._onDidRemovePanel.fire({panel:e})}doAddPanel(e,i,t){void 0===i&&(i=this.panels.length),void 0===t&&(t={skipSetActive:!1});const n=this._panels.indexOf(e)>-1;this.tabsContainer.show(),this.contentContainer.show(),this.tabsContainer.openPanel(e,i),t.skipSetActive||this.contentContainer.openPanel(e),n||(this.updateMru(e),this.panels.splice(i,0,e),this._onDidAddPanel.fire({panel:e}))}doSetActivePanel(e){this._activePanel!==e&&(this._activePanel=e,e&&(this.tabsContainer.setActivePanel(e),e.layout(this._width,this._height),this.updateMru(e),this._onDidActivePanelChange.fire({panel:e})))}updateMru(e){this.mostRecentlyUsed.includes(e)&&this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(e),1),this.mostRecentlyUsed=[e,...this.mostRecentlyUsed]}updateContainer(){var e,i;if(D(this.container,"empty",this.isEmpty),this.panels.forEach((e=>e.runEvents())),this.isEmpty&&!this.watermark){const e=this.accessor.createWatermarkComponent();e.init({containerApi:this._api,group:this.groupPanel}),this.watermark=e,g(this.watermark.element,"click",(()=>{this.isActive||this.accessor.doSetGroupActive(this.groupPanel)})),this.tabsContainer.hide(),this.contentContainer.element.appendChild(this.watermark.element),this.watermark.updateParentGroup(this.groupPanel,!0)}!this.isEmpty&&this.watermark&&(this.watermark.element.remove(),null===(i=(e=this.watermark).dispose)||void 0===i||i.call(e),this.watermark=void 0,this.tabsContainer.show())}canDisplayOverlay(e,i,t){return!!this.accessor.options.showDndOverlay&&this.accessor.options.showDndOverlay({nativeEvent:e,target:t,group:this.accessor.getPanel(this.id),position:i,getData:r})}handleDropEvent(e,i,t,n){if("no-drop-target"===this.locked)return;const o="number"==typeof n?this.panels[n]:void 0,s=new we({nativeEvent:i,position:t,panel:o,getData:()=>r(),kind:function(){switch(e){case"header":return"number"==typeof n?"tab":"header_space";case"content":return"content"}}(),group:this.groupPanel,api:this._api});if(this._onWillDrop.fire(s),s.defaultPrevented)return;const a=r();if(a&&a.viewId===this.accessor.id){if(null===a.panelId){const{groupId:e}=a;return void this._onMove.fire({target:t,groupId:e,index:n})}if(-1!==this.tabsContainer.indexOf(a.panelId)&&1===this.tabsContainer.size)return;const{groupId:e,panelId:i}=a;if(this.id===e&&!t){if(this.tabsContainer.indexOf(i)===n)return}this._onMove.fire({target:t,groupId:a.groupId,itemId:a.panelId,index:n})}else this._onDidDrop.fire(new ye({nativeEvent:i,position:t,panel:o,getData:()=>r(),group:this.groupPanel,api:this._api}))}dispose(){var e,i,t;super.dispose(),null===(e=this.watermark)||void 0===e||e.element.remove(),null===(t=null===(i=this.watermark)||void 0===i?void 0:i.dispose)||void 0===t||t.call(i),this.watermark=void 0;for(const n of this.panels)n.dispose();this.tabsContainer.dispose(),this.contentContainer.dispose()}}class De extends f{get element(){return this._element}get disableResizing(){return this._disableResizing}set disableResizing(e){this._disableResizing=e}constructor(e,i){void 0===i&&(i=!1),super(),this._disableResizing=i,this._element=e,this.addDisposables(w(this._element,(e=>{if(this.isDisposed)return;if(this.disableResizing)return;if(!this._element.offsetParent)return;if(!function(e){let i=e;for(;null==i?void 0:i.parentNode;){if(i.parentNode===document)return!0;i=i.parentNode instanceof DocumentFragment?i.parentNode.host:i.parentNode}return!1}(this._element))return;const{width:i,height:t}=e.contentRect;this.layout(i,t)})))}}const _e=V();function xe(e){switch(e){case"left":return"left";case"right":return"right";case"above":return"top";case"below":return"bottom";default:return"center"}}class Ee extends De{get id(){return this._id}get size(){return this._groups.size}get groups(){return Array.from(this._groups.values()).map((e=>e.value))}get width(){return this.gridview.width}get height(){return this.gridview.height}get minimumHeight(){return this.gridview.minimumHeight}get maximumHeight(){return this.gridview.maximumHeight}get minimumWidth(){return this.gridview.minimumWidth}get maximumWidth(){return this.gridview.maximumWidth}get activeGroup(){return this._activeGroup}get locked(){return this.gridview.locked}set locked(e){this.gridview.locked=e}constructor(e){super(document.createElement("div"),e.disableAutoResizing),this._id=_e.next(),this._groups=new Map,this._onDidLayoutChange=new u,this.onDidLayoutChange=this._onDidLayoutChange.event,this._onDidRemove=new u,this.onDidRemove=this._onDidRemove.event,this._onDidAdd=new u,this.onDidAdd=this._onDidAdd.event,this._onDidActiveChange=new u,this.onDidActiveChange=this._onDidActiveChange.event,this._bufferOnDidLayoutChange=new k,this.element.style.height="100%",this.element.style.width="100%",e.parentElement.appendChild(this.element),this.gridview=new ee(!!e.proportionalLayout,e.styles,e.orientation),this.gridview.locked=!!e.locked,this.element.appendChild(this.gridview.element),this.layout(0,0,!0),this.addDisposables(c.from((()=>{var e;null===(e=this.element.parentElement)||void 0===e||e.removeChild(this.element)})),this.gridview.onDidChange((()=>{this._bufferOnDidLayoutChange.fire()})),p.any(this.onDidAdd,this.onDidRemove,this.onDidActiveChange)((()=>{this._bufferOnDidLayoutChange.fire()})),this._bufferOnDidLayoutChange.onEvent((()=>{this._onDidLayoutChange.fire()})),this._bufferOnDidLayoutChange)}setVisible(e,i){this.gridview.setViewVisible(Y(e.element),i),this._onDidLayoutChange.fire()}isVisible(e){return this.gridview.isViewVisible(Y(e.element))}maximizeGroup(e){this.gridview.maximizeView(e),this.doSetGroupActive(e)}isMaximizedGroup(e){return this.gridview.maximizedView()===e}exitMaximizedGroup(){this.gridview.exitMaximizedView()}hasMaximizedGroup(){return this.gridview.hasMaximizedView()}get onDidMaximizedGroupChange(){return this.gridview.onDidMaximizedNodeChange}doAddGroup(e,i,t){void 0===i&&(i=[0]),this.gridview.addView(e,null!=t?t:j.Distribute,i),this._onDidAdd.fire(e)}doRemoveGroup(e,i){if(!this._groups.has(e.id))throw new Error("invalid operation");const t=this._groups.get(e.id),n=this.gridview.remove(e,j.Distribute);if(t&&!(null==i?void 0:i.skipDispose)&&(t.disposable.dispose(),t.value.dispose(),this._groups.delete(e.id),this._onDidRemove.fire(e)),!(null==i?void 0:i.skipActive)&&this._activeGroup===e){const e=Array.from(this._groups.values());this.doSetGroupActive(e.length>0?e[0].value:void 0)}return n}getPanel(e){var i;return null===(i=this._groups.get(e))||void 0===i?void 0:i.value}doSetGroupActive(e){this._activeGroup!==e&&(this._activeGroup&&this._activeGroup.setActive(!1),e&&e.setActive(!0),this._activeGroup=e,this._onDidActiveChange.fire(e))}removeGroup(e){this.doRemoveGroup(e)}moveToNext(e){var i;if(e||(e={}),!e.group){if(!this.activeGroup)return;e.group=this.activeGroup}const t=Y(e.group.element),n=null===(i=this.gridview.next(t))||void 0===i?void 0:i.view;this.doSetGroupActive(n)}moveToPrevious(e){var i;if(e||(e={}),!e.group){if(!this.activeGroup)return;e.group=this.activeGroup}const t=Y(e.group.element),n=null===(i=this.gridview.previous(t))||void 0===i?void 0:i.view;this.doSetGroupActive(n)}layout(e,i,t){(null!=t?t:e!==this.width||i!==this.height)&&(this.gridview.element.style.height=`${i}px`,this.gridview.element.style.width=`${e}px`,this.gridview.layout(e,i))}dispose(){this._onDidActiveChange.dispose(),this._onDidAdd.dispose(),this._onDidRemove.dispose(),this._onDidLayoutChange.dispose();for(const e of this.groups)e.dispose();this.gridview.dispose(),super.dispose()}}class Ce extends l{constructor(){super()}}class Se extends f{get isFocused(){return this._isFocused}get isActive(){return this._isActive}get isVisible(){return this._isVisible}get isHidden(){return this._isHidden}get width(){return this._width}get height(){return this._height}constructor(e){super(),this.id=e,this._isFocused=!1,this._isActive=!1,this._isVisible=!0,this._isHidden=!1,this._width=0,this._height=0,this.panelUpdatesDisposable=new y,this._onDidDimensionChange=new u,this.onDidDimensionsChange=this._onDidDimensionChange.event,this._onDidChangeFocus=new u,this.onDidFocusChange=this._onDidChangeFocus.event,this._onWillFocus=new u,this.onWillFocus=this._onWillFocus.event,this._onDidVisibilityChange=new u,this.onDidVisibilityChange=this._onDidVisibilityChange.event,this._onDidHiddenChange=new u,this.onDidHiddenChange=this._onDidHiddenChange.event,this._onDidActiveChange=new u,this.onDidActiveChange=this._onDidActiveChange.event,this._onActiveChange=new u,this.onActiveChange=this._onActiveChange.event,this._onUpdateParameters=new u,this.onUpdateParameters=this._onUpdateParameters.event,this.addDisposables(this.onDidFocusChange((e=>{this._isFocused=e.isFocused})),this.onDidActiveChange((e=>{this._isActive=e.isActive})),this.onDidVisibilityChange((e=>{this._isVisible=e.isVisible})),this.onDidHiddenChange((e=>{this._isHidden=e.isHidden})),this.onDidDimensionsChange((e=>{this._width=e.width,this._height=e.height})),this.panelUpdatesDisposable,this._onDidDimensionChange,this._onDidChangeFocus,this._onDidVisibilityChange,this._onDidActiveChange,this._onWillFocus,this._onActiveChange,this._onUpdateParameters,this._onWillFocus,this._onDidHiddenChange,this._onUpdateParameters)}initialize(e){this.panelUpdatesDisposable.value=this._onUpdateParameters.event((i=>{e.update({params:i})}))}setHidden(e){this._onDidHiddenChange.fire({isHidden:e})}setActive(){this._onActiveChange.fire()}updateParameters(e){this._onUpdateParameters.fire(e)}}class Ae extends Se{constructor(e){super(e),this._onDidConstraintsChangeInternal=new u,this.onDidConstraintsChangeInternal=this._onDidConstraintsChangeInternal.event,this._onDidConstraintsChange=new u({replay:!0}),this.onDidConstraintsChange=this._onDidConstraintsChange.event,this._onDidSizeChange=new u,this.onDidSizeChange=this._onDidSizeChange.event,this.addDisposables(this._onDidConstraintsChangeInternal,this._onDidConstraintsChange,this._onDidSizeChange)}setConstraints(e){this._onDidConstraintsChangeInternal.fire(e)}setSize(e){this._onDidSizeChange.fire(e)}}class Ge extends Ae{set pane(e){this._pane=e}constructor(e){super(e),this._onDidExpansionChange=new u({replay:!0}),this.onDidExpansionChange=this._onDidExpansionChange.event,this._onMouseEnter=new u({}),this.onMouseEnter=this._onMouseEnter.event,this._onMouseLeave=new u({}),this.onMouseLeave=this._onMouseLeave.event,this.addDisposables(this._onDidExpansionChange,this._onMouseEnter,this._onMouseLeave)}setExpanded(e){var i;null===(i=this._pane)||void 0===i||i.setExpanded(e)}get isExpanded(){var e;return!!(null===(e=this._pane)||void 0===e?void 0:e.isExpanded())}}class Ie extends f{get element(){return this._element}get width(){return this._width}get height(){return this._height}get params(){var e;return null===(e=this._params)||void 0===e?void 0:e.params}constructor(e,i,t){super(),this.id=e,this.component=i,this.api=t,this._height=0,this._width=0,this._element=document.createElement("div"),this._element.tabIndex=-1,this._element.style.outline="none",this._element.style.height="100%",this._element.style.width="100%",this._element.style.overflow="hidden";const n=E(this._element);this.addDisposables(this.api,n.onDidFocus((()=>{this.api._onDidChangeFocus.fire({isFocused:!0})})),n.onDidBlur((()=>{this.api._onDidChangeFocus.fire({isFocused:!1})})),n)}focus(){const e=new Ce;this.api._onWillFocus.fire(e),e.defaultPrevented||this._element.focus()}layout(e,i){this._width=e,this._height=i,this.api._onDidDimensionChange.fire({width:e,height:i}),this.part&&this._params&&this.part.update(this._params.params)}init(e){this._params=e,this.part=this.getComponent()}update(e){var i,t;this._params=Object.assign(Object.assign({},this._params),{params:Object.assign(Object.assign({},null===(i=this._params)||void 0===i?void 0:i.params),e.params)});for(const n of Object.keys(e.params))void 0===e.params[n]&&delete this._params.params[n];null===(t=this.part)||void 0===t||t.update({params:this._params.params})}toJSON(){var e,i;const t=null!==(i=null===(e=this._params)||void 0===e?void 0:e.params)&&void 0!==i?i:{};return{id:this.id,component:this.component,params:Object.keys(t).length>0?t:void 0}}dispose(){var e;this.api.dispose(),null===(e=this.part)||void 0===e||e.dispose(),super.dispose()}}class ze extends Ie{set orientation(e){this._orientation=e}get orientation(){return this._orientation}get minimumSize(){return this.headerSize+(this.isExpanded()?this._minimumBodySize:0)}get maximumSize(){return this.headerSize+(this.isExpanded()?this._maximumBodySize:0)}get size(){return this._size}get orthogonalSize(){return this._orthogonalSize}set orthogonalSize(e){this._orthogonalSize=e}get minimumBodySize(){return this._minimumBodySize}set minimumBodySize(e){this._minimumBodySize="number"==typeof e?e:0}get maximumBodySize(){return this._maximumBodySize}set maximumBodySize(e){this._maximumBodySize="number"==typeof e?e:Number.POSITIVE_INFINITY}get headerVisible(){return this._headerVisible}set headerVisible(e){this._headerVisible=e,this.header.style.display=e?"":"none"}constructor(e,i,t,n,o,s){super(e,i,new Ge(e)),this.headerComponent=t,this._onDidChangeExpansionState=new u({replay:!0}),this.onDidChangeExpansionState=this._onDidChangeExpansionState.event,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this.headerSize=22,this._orthogonalSize=0,this._size=0,this._minimumBodySize=100,this._maximumBodySize=Number.POSITIVE_INFINITY,this._isExpanded=!1,this.expandedSize=0,this.api.pane=this,this.api.initialize(this),this._isExpanded=o,this._headerVisible=s,this._onDidChangeExpansionState.fire(this.isExpanded()),this._orientation=n,this.element.classList.add("pane"),this.addDisposables(this.api.onDidSizeChange((e=>{this._onDidChange.fire({size:e.size})})),g(this.element,"mouseenter",(e=>{this.api._onMouseEnter.fire(e)})),g(this.element,"mouseleave",(e=>{this.api._onMouseLeave.fire(e)}))),this.addDisposables(this._onDidChangeExpansionState,this.onDidChangeExpansionState((e=>{this.api._onDidExpansionChange.fire({isExpanded:e})})),this.api.onDidFocusChange((e=>{this.header&&(e.isFocused?P(this.header,"focused"):b(this.header,"focused"))}))),this.renderOnce()}setVisible(e){this.api._onDidVisibilityChange.fire({isVisible:e})}setActive(e){this.api._onDidActiveChange.fire({isActive:e})}isExpanded(){return this._isExpanded}setExpanded(e){this._isExpanded!==e&&(this._isExpanded=e,e?(this.animationTimer&&clearTimeout(this.animationTimer),this.body&&this.element.appendChild(this.body)):this.animationTimer=setTimeout((()=>{var e;null===(e=this.body)||void 0===e||e.remove()}),200),this._onDidChange.fire(e?{size:this.width}:{}),this._onDidChangeExpansionState.fire(e))}layout(e,i){this._size=e,this._orthogonalSize=i;const[t,n]=this.orientation===W.HORIZONTAL?[e,i]:[i,e];this.isExpanded()&&(this.expandedSize=t),super.layout(t,n)}init(e){var i,t;super.init(e),"number"==typeof e.minimumBodySize&&(this.minimumBodySize=e.minimumBodySize),"number"==typeof e.maximumBodySize&&(this.maximumBodySize=e.maximumBodySize),this.bodyPart=this.getBodyComponent(),this.headerPart=this.getHeaderComponent(),this.bodyPart.init(Object.assign(Object.assign({},e),{api:this.api})),this.headerPart.init(Object.assign(Object.assign({},e),{api:this.api})),null===(i=this.body)||void 0===i||i.append(this.bodyPart.element),null===(t=this.header)||void 0===t||t.append(this.headerPart.element),"boolean"==typeof e.isExpanded&&this.setExpanded(e.isExpanded)}toJSON(){const e=this._params;return Object.assign(Object.assign({},super.toJSON()),{headerComponent:this.headerComponent,title:e.title})}renderOnce(){this.header=document.createElement("div"),this.header.tabIndex=0,this.header.className="pane-header",this.header.style.height=`${this.headerSize}px`,this.header.style.lineHeight=`${this.headerSize}px`,this.header.style.minHeight=`${this.headerSize}px`,this.header.style.maxHeight=`${this.headerSize}px`,this.element.appendChild(this.header),this.body=document.createElement("div"),this.body.className="pane-body",this.element.appendChild(this.body)}getComponent(){return{update:e=>{var i,t;null===(i=this.bodyPart)||void 0===i||i.update({params:e}),null===(t=this.headerPart)||void 0===t||t.update({params:e})},dispose:()=>{var e,i;null===(e=this.bodyPart)||void 0===e||e.dispose(),null===(i=this.headerPart)||void 0===i||i.dispose()}}}}class Oe extends ze{constructor(e,i,t,n,o,s,a){super(i,t,n,o,s,!0),this.accessor=e,this._onDidDrop=new u,this.onDidDrop=this._onDidDrop.event,a||this.initDragFeatures()}initDragFeatures(){if(!this.header)return;const e=this.id,i=this.accessor.id;this.header.draggable=!0,this.handler=new class extends he{getData(){return a.getInstance().setData([new s(i,e)],s.prototype),{dispose:()=>{a.getInstance().clearData(s.prototype)}}}}(this.header),this.target=new le(this.element,{acceptedTargetZones:["top","bottom"],overlayModel:{activationSize:{type:"percentage",value:50}},canDisplayOverlay:e=>{const i=d();return!(!i||i.paneId===this.id||i.viewId!==this.accessor.id)||!!this.accessor.options.showDndOverlay&&this.accessor.options.showDndOverlay({nativeEvent:e,getData:d,panel:this})}}),this.addDisposables(this._onDidDrop,this.handler,this.target,this.target.onDrop((e=>{this.onDrop(e)})))}onDrop(e){const i=d();if(!i||i.viewId!==this.accessor.id)return void this._onDidDrop.fire(Object.assign(Object.assign({},e),{panel:this,api:new te(this.accessor),getData:d}));const t=this._params.containerApi,n=i.paneId,o=t.getPanel(n);if(!o)return void this._onDidDrop.fire(Object.assign(Object.assign({},e),{panel:this,getData:d,api:new te(this.accessor)}));const s=t.panels,a=s.indexOf(o);let r=t.panels.indexOf(this);"left"!==e.position&&"top"!==e.position||(r=Math.max(0,r-1)),"right"!==e.position&&"bottom"!==e.position||(a>r&&r++,r=Math.min(s.length-1,r)),t.movePanel(a,r)}}class Re extends Se{constructor(e,i){super(e),this._onDidConstraintsChangeInternal=new u,this.onDidConstraintsChangeInternal=this._onDidConstraintsChangeInternal.event,this._onDidConstraintsChange=new u,this.onDidConstraintsChange=this._onDidConstraintsChange.event,this._onDidSizeChange=new u,this.onDidSizeChange=this._onDidSizeChange.event,this.addDisposables(this._onDidConstraintsChangeInternal,this._onDidConstraintsChange,this._onDidSizeChange),i&&this.initialize(i)}setConstraints(e){this._onDidConstraintsChangeInternal.fire(e)}setSize(e){this._onDidSizeChange.fire(e)}}class Te extends Ie{get priority(){return this._priority}get snap(){return this._snap}get minimumWidth(){const e="function"==typeof this._minimumWidth?this._minimumWidth():this._minimumWidth;return e!==this._evaluatedMinimumWidth&&(this._evaluatedMinimumWidth=e,this.updateConstraints()),e}get minimumHeight(){const e="function"==typeof this._minimumHeight?this._minimumHeight():this._minimumHeight;return e!==this._evaluatedMinimumHeight&&(this._evaluatedMinimumHeight=e,this.updateConstraints()),e}get maximumHeight(){const e="function"==typeof this._maximumHeight?this._maximumHeight():this._maximumHeight;return e!==this._evaluatedMaximumHeight&&(this._evaluatedMaximumHeight=e,this.updateConstraints()),e}get maximumWidth(){const e="function"==typeof this._maximumWidth?this._maximumWidth():this._maximumWidth;return e!==this._evaluatedMaximumWidth&&(this._evaluatedMaximumWidth=e,this.updateConstraints()),e}get isActive(){return this.api.isActive}constructor(e,i,t,n){super(e,i,null!=n?n:new Re(e)),this._evaluatedMinimumWidth=0,this._evaluatedMaximumWidth=Number.MAX_SAFE_INTEGER,this._evaluatedMinimumHeight=0,this._evaluatedMaximumHeight=Number.MAX_SAFE_INTEGER,this._minimumWidth=0,this._minimumHeight=0,this._maximumWidth=Number.MAX_SAFE_INTEGER,this._maximumHeight=Number.MAX_SAFE_INTEGER,this._snap=!1,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,"number"==typeof(null==t?void 0:t.minimumWidth)&&(this._minimumWidth=t.minimumWidth),"number"==typeof(null==t?void 0:t.maximumWidth)&&(this._maximumWidth=t.maximumWidth),"number"==typeof(null==t?void 0:t.minimumHeight)&&(this._minimumHeight=t.minimumHeight),"number"==typeof(null==t?void 0:t.maximumHeight)&&(this._maximumHeight=t.maximumHeight),this.api.initialize(this),this.addDisposables(this.api.onDidHiddenChange((e=>{const{isHidden:i}=e,{accessor:t}=this._params;t.setVisible(this,!i)})),this.api.onActiveChange((()=>{const{accessor:e}=this._params;e.doSetGroupActive(this)})),this.api.onDidConstraintsChangeInternal((e=>{"number"!=typeof e.minimumWidth&&"function"!=typeof e.minimumWidth||(this._minimumWidth=e.minimumWidth),"number"!=typeof e.minimumHeight&&"function"!=typeof e.minimumHeight||(this._minimumHeight=e.minimumHeight),"number"!=typeof e.maximumWidth&&"function"!=typeof e.maximumWidth||(this._maximumWidth=e.maximumWidth),"number"!=typeof e.maximumHeight&&"function"!=typeof e.maximumHeight||(this._maximumHeight=e.maximumHeight)})),this.api.onDidSizeChange((e=>{this._onDidChange.fire({height:e.height,width:e.width})})),this._onDidChange)}setVisible(e){this.api._onDidVisibilityChange.fire({isVisible:e})}setActive(e){this.api._onDidActiveChange.fire({isActive:e})}init(e){e.maximumHeight&&(this._maximumHeight=e.maximumHeight),e.minimumHeight&&(this._minimumHeight=e.minimumHeight),e.maximumWidth&&(this._maximumWidth=e.maximumWidth),e.minimumWidth&&(this._minimumWidth=e.minimumWidth),this._priority=e.priority,this._snap=!!e.snap,super.init(e),"boolean"==typeof e.isVisible&&this.setVisible(e.isVisible)}updateConstraints(){this.api._onDidConstraintsChange.fire({minimumWidth:this._evaluatedMinimumWidth,maximumWidth:this._evaluatedMaximumWidth,minimumHeight:this._evaluatedMinimumHeight,maximumHeight:this._evaluatedMaximumHeight})}toJSON(){const e=super.toJSON(),i=e=>e===Number.MAX_SAFE_INTEGER?void 0:e,t=e=>e<=0?void 0:e;return Object.assign(Object.assign({},e),{minimumHeight:t(this.minimumHeight),maximumHeight:i(this.maximumHeight),minimumWidth:t(this.minimumWidth),maximumWidth:i(this.maximumWidth),snap:this.snap,priority:this.priority})}}const Le="DockviewGroupPanelApiImpl not initialized";class Ve extends Re{get location(){if(!this._group)throw new Error(Le);return this._group.model.location}constructor(e,i){super(e),this.accessor=i,this._onDidLocationChange=new u,this.onDidLocationChange=this._onDidLocationChange.event,this.addDisposables(this._onDidLocationChange)}close(){if(this._group)return this.accessor.removeGroup(this._group)}getWindow(){return"popout"===this.location.type?this.location.getWindow():window}moveTo(e){var i,t,n;if(!this._group)throw new Error(Le);const o=null!==(i=e.group)&&void 0!==i?i:this.accessor.addGroup({direction:de(null!==(t=e.position)&&void 0!==t?t:"right"),skipSetActive:!0});this.accessor.moveGroupOrPanel({from:{groupId:this._group.id},to:{group:o,position:e.group&&null!==(n=e.position)&&void 0!==n?n:"center"}})}maximize(){if(!this._group)throw new Error(Le);"grid"===this.location.type&&this.accessor.maximizeGroup(this._group)}isMaximized(){if(!this._group)throw new Error(Le);return this.accessor.isMaximizedGroup(this._group)}exitMaximized(){if(!this._group)throw new Error(Le);this.isMaximized()&&this.accessor.exitMaximizedGroup()}initialize(e){this._group=e}}class Ne extends Te{get panels(){return this._model.panels}get activePanel(){return this._model.activePanel}get size(){return this._model.size}get model(){return this._model}get locked(){return this._model.locked}set locked(e){this._model.locked=e}get header(){return this._model.header}constructor(e,i,t){super(i,"groupview_default",{minimumHeight:100,minimumWidth:100},new Ve(i,e)),this.api.initialize(this),this._model=new Pe(this.element,e,i,t,this)}focus(){this.api.isActive||this.api.setActive(),super.focus()}initialize(){this._model.initialize()}setActive(e){super.setActive(e),this.model.setActive(e)}layout(e,i){super.layout(e,i),this.model.layout(e,i)}getComponent(){return this._model}toJSON(){return this.model.toJSON()}}class Me extends Re{get location(){return this.group.api.location}get title(){return this.panel.title}get isGroupActive(){return this.group.isActive}get renderer(){return this.panel.renderer}set group(e){const i=this.isGroupActive;if(this._group!==e){this._group=e,this._onDidGroupChange.fire({});let t=i;this.groupEventsDisposable.value=new f(this.group.api.onDidLocationChange((e=>{this.group===this.panel.group&&this._onDidLocationChange.fire(e)})),this.group.api.onDidActiveChange((()=>{this.group===this.panel.group&&t!==this.isGroupActive&&(t=this.isGroupActive,this._onDidActiveGroupChange.fire({isActive:this.isGroupActive}))}))),this._onDidLocationChange.fire({location:this.group.api.location})}}get group(){return this._group}constructor(e,i,t){super(e.id),this.panel=e,this.accessor=t,this._onDidTitleChange=new u,this.onDidTitleChange=this._onDidTitleChange.event,this._onDidActiveGroupChange=new u,this.onDidActiveGroupChange=this._onDidActiveGroupChange.event,this._onDidGroupChange=new u,this.onDidGroupChange=this._onDidGroupChange.event,this._onDidRendererChange=new u,this.onDidRendererChange=this._onDidRendererChange.event,this._onDidLocationChange=new u,this.onDidLocationChange=this._onDidLocationChange.event,this.groupEventsDisposable=new y,this.initialize(e),this._group=i,this.addDisposables(this.groupEventsDisposable,this._onDidRendererChange,this._onDidTitleChange,this._onDidGroupChange,this._onDidActiveGroupChange,this._onDidLocationChange)}getWindow(){return this.group.api.getWindow()}moveTo(e){var i;this.accessor.moveGroupOrPanel({from:{groupId:this._group.id,panelId:this.panel.id},to:{group:e.group,position:null!==(i=e.position)&&void 0!==i?i:"center",index:e.index}})}setTitle(e){this.panel.setTitle(e)}setRenderer(e){this.panel.setRenderer(e)}close(){this.group.model.closePanel(this.panel)}maximize(){this.group.api.maximize()}isMaximized(){return this.group.api.isMaximized()}exitMaximized(){this.group.api.exitMaximized()}}class We extends f{get params(){return this._params}get title(){return this._title}get group(){return this._group}get renderer(){var e;return null!==(e=this._renderer)&&void 0!==e?e:this.accessor.renderer}constructor(e,i,t,n,o,s){super(),this.id=e,this.accessor=i,this.containerApi=t,this.view=o,this._renderer=s.renderer,this._group=n,this.api=new Me(this,this._group,i),this.addDisposables(this.api.onActiveChange((()=>{i.setActivePanel(this)})),this.api.onDidSizeChange((e=>{this.group.api.setSize(e)})),this.api.onDidRendererChange((e=>{this.group.model.rerender(this)})))}init(e){this._params=e.params,this.view.init(Object.assign(Object.assign({},e),{api:this.api,containerApi:this.containerApi})),this.setTitle(e.title)}focus(){const e=new Ce;this.api._onWillFocus.fire(e),e.defaultPrevented||this.api.isActive||this.api.setActive()}toJSON(){return{id:this.id,contentComponent:this.view.contentComponent,tabComponent:this.view.tabComponent,params:Object.keys(this._params||{}).length>0?this._params:void 0,title:this.title,renderer:this._renderer}}setTitle(e){e!==this.title&&(this._title=e,this.view.update({params:{params:this._params,title:this.title}}),this.api._onDidTitleChange.fire({title:e}))}setRenderer(e){e!==this.renderer&&(this._renderer=e,this.api._onDidRendererChange.fire({renderer:e}))}update(e){var i;this._params=Object.assign(Object.assign({},null!==(i=this._params)&&void 0!==i?i:{}),e.params);for(const t of Object.keys(e.params))void 0===e.params[t]&&delete this._params[t];this.view.update({params:{params:this._params,title:this.title}})}updateParentGroup(e,i){this._group=e,this.api.group=this._group;const t=this._group.model.isPanelActive(this),n=this.group.api.isActive&&t;(null==i?void 0:i.skipSetActive)||this.api.isActive!==n&&this.api._onDidActiveChange.fire({isActive:this.group.api.isActive&&t}),this.api.isVisible!==t&&this.api._onDidVisibilityChange.fire({isVisible:t})}runEvents(){const e=this._group.model.isPanelActive(this),i=this.group.api.isActive&&e;this.api.isActive!==i&&this.api._onDidActiveChange.fire({isActive:this.group.api.isActive&&e}),this.api.isVisible!==e&&this.api._onDidVisibilityChange.fire({isVisible:e})}layout(e,i){this.api._onDidDimensionChange.fire({width:e,height:i}),this.view.layout(e,i)}dispose(){this.api.dispose(),this.view.dispose()}}const He=e=>{const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttributeNS(null,"height",e.height),i.setAttributeNS(null,"width",e.width),i.setAttributeNS(null,"viewBox",e.viewbox),i.setAttributeNS(null,"aria-hidden","false"),i.setAttributeNS(null,"focusable","false"),i.classList.add("dockview-svg");const t=document.createElementNS("http://www.w3.org/2000/svg","path");return t.setAttributeNS(null,"d",e.path),i.appendChild(t),i},Fe=()=>He({width:"11",height:"11",viewbox:"0 0 28 28",path:"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z"});class je extends f{get element(){return this._element}constructor(){super(),this.params={},this._element=document.createElement("div"),this._element.className="default-tab",this._content=document.createElement("div"),this._content.className="tab-content",this._actionContainer=document.createElement("div"),this._actionContainer.className="action-container",this._list=document.createElement("ul"),this._list.className="tab-list",this.action=document.createElement("div"),this.action.className="tab-action",this.action.appendChild(Fe()),this._element.appendChild(this._content),this._element.appendChild(this._actionContainer),this._actionContainer.appendChild(this._list),this._list.appendChild(this.action),this.addDisposables(g(this._actionContainer,"mousedown",(e=>{e.preventDefault()}))),this.render()}update(e){this.params=Object.assign(Object.assign({},this.params),e.params),this.render()}focus(){}init(e){this.params=e,this._content.textContent=e.title,g(this.action,"click",(e=>{e.preventDefault(),this.params.api.close()}))}onGroupChange(e){this.render()}onPanelVisibleChange(e){this.render()}layout(e,i){}render(){this._content.textContent!==this.params.title&&(this._content.textContent=this.params.title)}}function Be(e,i,t,n,o,s){void 0===t&&(t={}),void 0===n&&(n={});const a="string"==typeof i?t[i]:void 0,r="string"==typeof i?n[i]:void 0;if(a&&r)throw new Error(`Cannot create '${e}'. component '${i}' registered as both a component and frameworkComponent`);if(r){if(!o)throw new Error(`Cannot create '${e}' for framework component '${i}'. you must register a frameworkPanelWrapper to use framework components`);return o.createComponent(e,i,r)}if(!a){if(s)return s();throw new Error(`Cannot create '${e}', no component '${i}' provided`)}return new a(e,i)}class Je{get content(){return this._content}get tab(){return this._tab}constructor(e,i,t,n){this.accessor=e,this.id=i,this.contentComponent=t,this.tabComponent=n,this._content=this.createContentComponent(this.id,t),this._tab=this.createTabComponent(this.id,n)}init(e){this.content.init(Object.assign(Object.assign({},e),{tab:this.tab})),this.tab.init(e)}updateParentGroup(e,i){}layout(e,i){var t,n;null===(n=(t=this.content).layout)||void 0===n||n.call(t,e,i)}update(e){var i,t,n,o;null===(t=(i=this.content).update)||void 0===t||t.call(i,e),null===(o=(n=this.tab).update)||void 0===o||o.call(n,e)}dispose(){var e,i,t,n;null===(i=(e=this.content).dispose)||void 0===i||i.call(e),null===(n=(t=this.tab).dispose)||void 0===n||n.call(t)}createContentComponent(e,i){var t,n;return Be(e,i,null!==(t=this.accessor.options.components)&&void 0!==t?t:{},this.accessor.options.frameworkComponents,null===(n=this.accessor.options.frameworkComponentFactory)||void 0===n?void 0:n.content)}createTabComponent(e,i){var t,n;return i?Be(e,i,this.accessor.options.tabComponents,this.accessor.options.frameworkTabComponents,null===(t=this.accessor.options.frameworkComponentFactory)||void 0===t?void 0:t.tab,(()=>new je)):this.accessor.options.defaultTabComponent?Be(e,this.accessor.options.defaultTabComponent,this.accessor.options.tabComponents,this.accessor.options.frameworkTabComponents,null===(n=this.accessor.options.frameworkComponentFactory)||void 0===n?void 0:n.tab,(()=>new je)):new je}}class Ue{constructor(e){this.accessor=e}fromJSON(e,i){var t,n;const o=e.id,s=e.params,a=e.title,r=e.view,d=r?r.content.id:null!==(t=e.contentComponent)&&void 0!==t?t:"unknown",p=r?null===(n=r.tab)||void 0===n?void 0:n.id:e.tabComponent,c=new Je(this.accessor,o,d,p),l=new We(o,this.accessor,new oe(this.accessor),i,c,{renderer:e.renderer});return l.init({title:null!=a?a:o,params:null!=s?s:{}}),l}}class $e extends f{get element(){return this._element}constructor(){super(),this._element=document.createElement("div"),this._element.className="watermark";const e=document.createElement("div");e.className="watermark-title";const i=document.createElement("span");i.style.flexGrow="1";const t=document.createElement("div");t.className="watermark-content",this._element.appendChild(e),this._element.appendChild(t);const n=document.createElement("div");n.className="actions-container";const o=document.createElement("div");o.className="close-action",o.appendChild(Fe()),n.appendChild(o),e.appendChild(i),e.appendChild(n),this.addDisposables(g(o,"click",(e=>{var i;e.preventDefault(),this._group&&(null===(i=this._api)||void 0===i||i.removeGroup(this._group))})))}update(e){}focus(){}layout(e,i){}init(e){this._api=e.containerApi,this.render()}updateParentGroup(e,i){this._group=e,this.render()}dispose(){super.dispose()}render(){const e=!!(this._api&&this._api.size<=1);D(this.element,"has-actions",e)}}const Ze=(()=>{let e=null;return function(i){e!==i&&null!==e&&D(e,"dv-bring-to-front",!1),D(i,"dv-bring-to-front",!0),e=i}})();class Xe extends f{set minimumInViewportWidth(e){this.options.minimumInViewportWidth=e}set minimumInViewportHeight(e){this.options.minimumInViewportHeight=e}constructor(e){super(),this.options=e,this._element=document.createElement("div"),this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this._onDidChangeEnd=new u,this.onDidChangeEnd=this._onDidChangeEnd.event,this.addDisposables(this._onDidChange,this._onDidChangeEnd),this._element.className="dv-resize-container",this.setupResize("top"),this.setupResize("bottom"),this.setupResize("left"),this.setupResize("right"),this.setupResize("topleft"),this.setupResize("topright"),this.setupResize("bottomleft"),this.setupResize("bottomright"),this._element.appendChild(this.options.content),this.options.container.appendChild(this._element),this.setBounds({height:this.options.height,width:this.options.width,top:this.options.top,left:this.options.left})}setBounds(e){void 0===e&&(e={}),"number"==typeof e.height&&(this._element.style.height=`${e.height}px`),"number"==typeof e.width&&(this._element.style.width=`${e.width}px`),"number"==typeof e.top&&(this._element.style.top=`${e.top}px`),"number"==typeof e.left&&(this._element.style.left=`${e.left}px`);const i=this.options.container.getBoundingClientRect(),t=this._element.getBoundingClientRect(),n=Math.max(0,this.getMinimumWidth(t.width)),o="number"==typeof this.options.minimumInViewportHeight?Math.max(0,this.getMinimumHeight(t.height)):0,s=L(t.left-i.left,-n,Math.max(0,i.width-t.width+n)),a=L(t.top-i.top,-o,Math.max(0,i.height-t.height+o));this._element.style.left=`${s}px`,this._element.style.top=`${a}px`,this._onDidChange.fire()}toJSON(){const e=this.options.container.getBoundingClientRect(),i=this._element.getBoundingClientRect();return{top:i.top-e.top,left:i.left-e.left,width:i.width,height:i.height}}setupDrag(e,i){void 0===i&&(i={inDragMode:!1});const t=new y,n=()=>{let e=null;const i=[...x("iframe"),...x("webview")];for(const t of i)t.style.pointerEvents="none";t.value=new f({dispose:()=>{for(const e of i)e.style.pointerEvents="auto"}},v(window,"mousemove",(i=>{const t=this.options.container.getBoundingClientRect(),n=i.clientX-t.left,o=i.clientY-t.top;D(this._element,"dv-resize-container-dragging",!0);const s=this._element.getBoundingClientRect();null===e&&(e={x:i.clientX-s.left,y:i.clientY-s.top});const a=Math.max(0,this.getMinimumWidth(s.width)),r=Math.max(0,this.options.minimumInViewportHeight?this.getMinimumHeight(s.height):0),d=L(n-e.x,-a,Math.max(0,t.width-s.width+a)),p=L(o-e.y,-r,Math.max(0,t.height-s.height+r));this.setBounds({top:p,left:d})})),v(window,"mouseup",(()=>{D(this._element,"dv-resize-container-dragging",!1),t.dispose(),this._onDidChangeEnd.fire()})))};this.addDisposables(t,g(e,"mousedown",(e=>{e.defaultPrevented?e.preventDefault():A(e)||n()})),g(this.options.content,"mousedown",(e=>{e.defaultPrevented||A(e)||e.shiftKey&&n()})),g(this.options.content,"mousedown",(()=>{Ze(this._element)}),!0)),Ze(this._element),i.inDragMode&&n()}setupResize(e){const i=document.createElement("div");i.className=`dv-resize-handle-${e}`,this._element.appendChild(i);const t=new y;this.addDisposables(t,g(i,"mousedown",(i=>{i.preventDefault();let n=null;const o=[...x("iframe"),...x("webview")];for(const e of o)e.style.pointerEvents="none";t.value=new f(v(window,"mousemove",(i=>{const t=this.options.container.getBoundingClientRect(),o=this._element.getBoundingClientRect(),s=i.clientY-t.top,a=i.clientX-t.left;let r,d,p,c;null===n&&(n={originalY:s,originalHeight:o.height,originalX:a,originalWidth:o.width});const l=()=>{r=L(s,-Number.MAX_VALUE,n.originalY+n.originalHeight>t.height?this.getMinimumHeight(t.height):Math.max(0,n.originalY+n.originalHeight-Xe.MINIMUM_HEIGHT)),d=n.originalY+n.originalHeight-r},m=()=>{r=n.originalY-n.originalHeight,d=L(s-r,r<0&&"number"==typeof this.options.minimumInViewportHeight?-r+this.options.minimumInViewportHeight:Xe.MINIMUM_HEIGHT,Number.MAX_VALUE)},h=()=>{p=L(a,-Number.MAX_VALUE,n.originalX+n.originalWidth>t.width?this.getMinimumWidth(t.width):Math.max(0,n.originalX+n.originalWidth-Xe.MINIMUM_WIDTH)),c=n.originalX+n.originalWidth-p},u=()=>{p=n.originalX-n.originalWidth,c=L(a-p,p<0&&"number"==typeof this.options.minimumInViewportWidth?-p+this.options.minimumInViewportWidth:Xe.MINIMUM_WIDTH,Number.MAX_VALUE)};switch(e){case"top":l();break;case"bottom":m();break;case"left":h();break;case"right":u();break;case"topleft":l(),h();break;case"topright":l(),u();break;case"bottomleft":m(),h();break;case"bottomright":m(),u()}this.setBounds({height:d,width:c,top:r,left:p})})),{dispose:()=>{for(const e of o)e.style.pointerEvents="auto"}},v(window,"mouseup",(()=>{t.dispose(),this._onDidChangeEnd.fire()})))})))}getMinimumWidth(e){return"number"==typeof this.options.minimumInViewportWidth?e-this.options.minimumInViewportWidth:0}getMinimumHeight(e){return"number"==typeof this.options.minimumInViewportHeight?e-this.options.minimumInViewportHeight:e}dispose(){this._element.remove(),super.dispose()}}Xe.MINIMUM_HEIGHT=20,Xe.MINIMUM_WIDTH=20;class Ye extends f{constructor(e,i){super(),this.group=e,this.overlay=i,this.addDisposables(i)}position(e){this.overlay.setBounds(e)}}const Ke=100,qe=100,Qe=100;class ei extends f{constructor(e){super(),this.element=e,this.map={},this._disposed=!1,this.addDisposables(c.from((()=>{for(const e of Object.values(this.map))e.disposable.dispose(),e.destroy.dispose();this._disposed=!0})))}detatch(e){if(this.map[e.api.id]){const{disposable:i,destroy:t}=this.map[e.api.id];return i.dispose(),t.dispose(),delete this.map[e.api.id],!0}return!1}attach(e){const{panel:i,referenceContainer:t}=e;if(!this.map[i.api.id]){const e=function(){const e=document.createElement("div");return e.tabIndex=-1,e}();e.className="dv-render-overlay",this.map[i.api.id]={panel:i,disposable:c.NONE,destroy:c.NONE,element:e}}const n=this.map[i.api.id].element;i.view.content.element.parentElement!==n&&n.appendChild(i.view.content.element),n.parentElement!==this.element&&this.element.appendChild(n);const o=()=>{const e=G(t.element),o=G(this.element);n.style.left=e.left-o.left+"px",n.style.top=e.top-o.top+"px",n.style.width=`${e.width}px`,n.style.height=`${e.height}px`,D(n,"dv-render-overlay-float","floating"===i.group.api.location.type)},s=()=>{i.api.isVisible&&o(),n.style.display=i.api.isVisible?"":"none"},a=new f(new se(n,{onDragEnd:e=>{t.dropTarget.dnd.onDragEnd(e)},onDragEnter:e=>{t.dropTarget.dnd.onDragEnter(e)},onDragLeave:e=>{t.dropTarget.dnd.onDragLeave(e)},onDrop:e=>{t.dropTarget.dnd.onDrop(e)},onDragOver:e=>{t.dropTarget.dnd.onDragOver(e)}}),i.api.onDidVisibilityChange((e=>{s()})),i.api.onDidDimensionsChange((()=>{i.api.isVisible&&o()})));return this.map[i.api.id].destroy=c.from((()=>{var e;i.view.content.element.parentElement===n&&n.removeChild(i.view.content.element),null===(e=n.parentElement)||void 0===e||e.removeChild(n)})),queueMicrotask((()=>{this.isDisposed||s()})),this.map[i.api.id].disposable.dispose(),this.map[i.api.id].disposable=a,n}}var ii=function(e,i,t,n){return new(t||(t=Promise))((function(o,s){function a(e){try{d(n.next(e))}catch(i){s(i)}}function r(e){try{d(n.throw(e))}catch(i){s(i)}}function d(e){var i;e.done?o(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(a,r)}d((n=n.apply(e,i||[])).next())}))};class ti extends f{get window(){var e,i;return null!==(i=null===(e=this._window)||void 0===e?void 0:e.value)&&void 0!==i?i:null}constructor(e,i,t){super(),this.target=e,this.className=i,this.options=t,this._onWillClose=new u,this.onWillClose=this._onWillClose.event,this._onDidClose=new u,this.onDidClose=this._onDidClose.event,this._window=null,this.addDisposables(this._onWillClose,this._onDidClose,{dispose:()=>{this.close()}})}dimensions(){if(!this._window)return null;const e=this._window.value.screenX;return{top:this._window.value.screenY,left:e,width:this._window.value.innerWidth,height:this._window.value.innerHeight}}close(){var e,i;this._window&&(this._onWillClose.fire(),null===(i=(e=this.options).onWillClose)||void 0===i||i.call(e,{id:this.target,window:this._window.value}),this._window.disposable.dispose(),this._window.value.close(),this._window=null,this._onDidClose.fire())}open(){var e,i;return ii(this,void 0,void 0,(function*(){if(this._window)throw new Error("instance of popout window is already open");const t=`${this.options.url}`,n=Object.entries({top:this.options.top,left:this.options.left,width:this.options.width,height:this.options.height}).map((e=>{let[i,t]=e;return`${i}=${t}`})).join(","),o=window.open(t,this.target,n);if(!o)return null;const s=new f;this._window={value:o,disposable:s},s.addDisposables(v(window,"beforeunload",(()=>{this.close()})));const a=this.createPopoutWindowContainer();return this.className&&a.classList.add(this.className),null===(i=(e=this.options).onDidOpen)||void 0===i||i.call(e,{id:this.target,window:o}),new Promise((e=>{o.addEventListener("unload",(e=>{})),o.addEventListener("load",(()=>{const i=o.document;i.title=document.title,i.body.appendChild(a),function(e,i){const t=Array.from(i);for(const o of t){if(o.href){const i=e.createElement("link");i.href=o.href,i.type=o.type,i.rel="stylesheet",e.head.appendChild(i)}let i=[];try{o.cssRules&&(i=Array.from(o.cssRules).map((e=>e.cssText)))}catch(n){}for(const t of i){const i=e.createElement("style");i.appendChild(e.createTextNode(t)),e.head.appendChild(i)}}}(i,window.document.styleSheets),v(o,"beforeunload",(()=>{this.close()})),e(a)}))}))}))}createPopoutWindowContainer(){const e=document.createElement("div");return e.classList.add("dv-popout-window"),e.id="dv-popout-window",e.style.position="absolute",e.style.width="100%",e.style.height="100%",e.style.top="0px",e.style.left="0px",e}}const ni={activationSize:{type:"pixels",value:10},size:{type:"pixels",value:20}};function oi(e){const i=e.from.activePanel;[...e.from.panels].map((i=>{const t=e.from.model.removePanel(i);return e.from.model.renderContainer.detatch(i),t})).forEach((t=>{e.to.model.openPanel(t,{skipSetActive:i!==t,skipSetGroupActive:!0})}))}class si extends Ee{get orientation(){return this.gridview.orientation}get totalPanels(){return this.panels.length}get panels(){return this.groups.flatMap((e=>e.panels))}get options(){return this._options}get activePanel(){const e=this.activeGroup;if(e)return e.activePanel}get renderer(){var e;return null!==(e=this.options.defaultRenderer)&&void 0!==e?e:"onlyWhenVisibile"}constructor(e){var i,t;super({proportionalLayout:!0,orientation:null!==(i=e.orientation)&&void 0!==i?i:W.HORIZONTAL,styles:e.styles,parentElement:e.parentElement,disableAutoResizing:e.disableAutoResizing,locked:e.locked}),this.nextGroupId=V(),this._deserializer=new Ue(this),this.watermark=null,this._onWillDragPanel=new u,this.onWillDragPanel=this._onWillDragPanel.event,this._onWillDragGroup=new u,this.onWillDragGroup=this._onWillDragGroup.event,this._onDidDrop=new u,this.onDidDrop=this._onDidDrop.event,this._onWillDrop=new u,this.onWillDrop=this._onWillDrop.event,this._onWillShowOverlay=new u,this.onWillShowOverlay=this._onWillShowOverlay.event,this._onDidRemovePanel=new u,this.onDidRemovePanel=this._onDidRemovePanel.event,this._onDidAddPanel=new u,this.onDidAddPanel=this._onDidAddPanel.event,this._onDidLayoutFromJSON=new u,this.onDidLayoutFromJSON=this._onDidLayoutFromJSON.event,this._onDidActivePanelChange=new u,this.onDidActivePanelChange=this._onDidActivePanelChange.event,this._onDidMovePanel=new u,this._floatingGroups=[],this._popoutGroups=[],this._ignoreEvents=0,this._onDidRemoveGroup=new u,this.onDidRemoveGroup=this._onDidRemoveGroup.event,this._onDidAddGroup=new u,this.onDidAddGroup=this._onDidAddGroup.event,this._onDidActiveGroupChange=new u,this.onDidActiveGroupChange=this._onDidActiveGroupChange.event,this._moving=!1;const n=document.createElement("div");n.className="dv-overlay-render-container",this.gridview.element.appendChild(n),this.overlayRenderContainer=new ei(n),D(this.gridview.element,"dv-dockview",!0),D(this.element,"dv-debug",!!e.debug),this.addDisposables(this.overlayRenderContainer,this._onWillDragPanel,this._onWillDragGroup,this._onWillShowOverlay,this._onDidActivePanelChange,this._onDidAddPanel,this._onDidRemovePanel,this._onDidLayoutFromJSON,this._onDidDrop,this._onWillDrop,this._onDidMovePanel,this._onDidAddGroup,this._onDidRemoveGroup,this._onDidActiveGroupChange,this.onDidAdd((e=>{this._moving||this._onDidAddGroup.fire(e)})),this.onDidRemove((e=>{this._moving||this._onDidRemoveGroup.fire(e)})),this.onDidActiveChange((e=>{this._moving||this._onDidActiveGroupChange.fire(e)})),p.any(this.onDidAdd,this.onDidRemove)((()=>{this.updateWatermark()})),p.any(this.onDidAddPanel,this.onDidRemovePanel,this.onDidActivePanelChange)((()=>{this._bufferOnDidLayoutChange.fire()})),c.from((()=>{for(const e of[...this._floatingGroups])e.dispose();for(const e of[...this._popoutGroups])e.disposable.dispose()}))),this._options=e,this.options.components||(this.options.components={}),this.options.frameworkComponents||(this.options.frameworkComponents={}),this.options.frameworkTabComponents||(this.options.frameworkTabComponents={}),this.options.tabComponents||(this.options.tabComponents={}),this.options.watermarkComponent||this.options.watermarkFrameworkComponent||(this.options.watermarkComponent=$e),this._rootDropTarget=new le(this.element,{canDisplayOverlay:(e,i)=>{const t=r();return t?t.viewId===this.id&&("center"!==i||0===this.gridview.length):!!this.options.showDndOverlay&&(("center"!==i||0===this.gridview.length)&&this.options.showDndOverlay({nativeEvent:e,position:i,target:"edge",getData:r}))},acceptedTargetZones:["top","bottom","left","right","center"],overlayModel:null!==(t=this.options.rootOverlayModel)&&void 0!==t?t:ni}),this.addDisposables(this._rootDropTarget.onDrop((e=>{var i;const t=new we({nativeEvent:e.nativeEvent,position:e.position,panel:void 0,api:this._api,group:void 0,getData:r,kind:"content"});if(this._onWillDrop.fire(t),t.defaultPrevented)return;const n=r();n?this.moveGroupOrPanel({from:{groupId:n.groupId,panelId:null!==(i=n.panelId)&&void 0!==i?i:void 0},to:{group:this.orthogonalize(e.position),position:"center"}}):this._onDidDrop.fire(new ye({nativeEvent:e.nativeEvent,position:e.position,panel:void 0,api:this._api,group:void 0,getData:r}))})),this._rootDropTarget),this._api=new oe(this),this.updateWatermark()}addPopoutGroup(e,i){var t,n,o;if(e instanceof We&&1===e.group.size)return this.addPopoutGroup(e.group);const s=function(e){function i(e){const i=[];for(let t=0;t<e.classList.length;t++)i.push(e.classList.item(t));return i}let t,n=e;for(;null!==n&&(t=i(n).find((e=>e.startsWith("dockview-theme-"))),"string"!=typeof t);)n=n.parentElement;return t}(this.gridview.element),a=this.element;const r=(null==i?void 0:i.position)?i.position:e instanceof Ne?e.element.getBoundingClientRect():e.group?e.group.element.getBoundingClientRect():a.getBoundingClientRect(),d=null!==(n=null===(t=null==i?void 0:i.overridePopoutGroup)||void 0===t?void 0:t.id)&&void 0!==n?n:this.getNextGroupId();"grid"===e.api.location.type&&e.api.setHidden(!0);const p=new ti(`${this.id}-${d}`,null!=s?s:"",{url:null!==(o=null==i?void 0:i.popoutUrl)&&void 0!==o?o:"/popout.html",left:window.screenX+r.left,top:window.screenY+r.top,width:r.width,height:r.height,onDidOpen:null==i?void 0:i.onDidOpen,onWillClose:null==i?void 0:i.onWillClose}),l=new f(p,p.onDidClose((()=>{l.dispose()})));return p.open().then((t=>{var n;if(p.isDisposed)return;if(null===t)return void l.dispose();const o=document.createElement("div");o.className="dv-overlay-render-container";const s=new ei(o),a=e instanceof We?e.group:e,r=e.api.location.type,m=null!==(n=null==i?void 0:i.overridePopoutGroup)&&void 0!==n?n:this.createGroup({id:d});if(m.model.renderContainer=s,(null==i?void 0:i.overridePopoutGroup)||this._onDidAddGroup.fire(m),e instanceof We)this.movingLock((()=>{const i=a.model.removePanel(e);m.model.openPanel(i)}));else switch(this.movingLock((()=>oi({from:a,to:m}))),r){case"grid":a.api.setHidden(!0);break;case"floating":case"popout":this.removeGroup(a)}let h;t.classList.add("dv-dockview"),t.style.overflow="hidden",t.appendChild(o),t.appendChild(m.element),m.model.location={type:"popout",getWindow:()=>p.window},this.doSetGroupAndPanelActive(m),l.addDisposables(m.api.onDidActiveChange((e=>{var i;e.isActive&&(null===(i=p.window)||void 0===i||i.focus())})),m.api.onWillFocus((()=>{var e;null===(e=p.window)||void 0===e||e.focus()})));const u={window:p,popoutGroup:m,referenceGroup:this.getPanel(a.id)?a.id:void 0,disposable:{dispose:()=>(l.dispose(),h)}};l.addDisposables(v(p.window,"resize",(()=>{m.layout(window.innerWidth,window.innerHeight)})),s,c.from((()=>{if(this.getPanel(a.id))this.movingLock((()=>oi({from:m,to:a}))),a.api.isHidden&&a.api.setHidden(!1),this.getPanel(m.id)&&this.doRemoveGroup(m,{skipPopoutAssociated:!0});else if(this.getPanel(m.id)){const e=this.doRemoveGroup(m,{skipDispose:!0,skipActive:!0});e.model.renderContainer=this.overlayRenderContainer,e.model.location={type:"grid"},h=e}}))),this._popoutGroups.push(u),this.updateWatermark()})).catch((e=>{console.error(e)}))}addFloatingGroup(e,i,t){var n,o,s,a,r,d,p;let c;if(e instanceof We)c=this.createGroup(),this._onDidAddGroup.fire(c),this.movingLock((()=>this.removePanel(e,{removeEmptyGroup:!0,skipDispose:!0,skipSetActiveGroup:!0}))),c.model.openPanel(e,{skipSetGroupActive:!0});else{c=e;const i=null===(n=this._popoutGroups.find((e=>e.popoutGroup===c)))||void 0===n?void 0:n.referenceGroup,o=i?this.getPanel(i):void 0;"boolean"==typeof(null==t?void 0:t.skipRemoveGroup)&&t.skipRemoveGroup||(o?(this.movingLock((()=>oi({from:e,to:o}))),this.doRemoveGroup(e,{skipPopoutReturn:!0,skipPopoutAssociated:!0}),this.doRemoveGroup(o,{skipDispose:!0}),c=o):this.doRemoveGroup(e,{skipDispose:!0,skipPopoutReturn:!0,skipPopoutAssociated:!!o}))}c.model.location={type:"floating"};const l="number"==typeof(null==i?void 0:i.x)?Math.max(i.x,0):qe,m="number"==typeof(null==i?void 0:i.y)?Math.max(i.y,0):Qe,h=new Xe({container:this.gridview.element,content:c.element,height:null!==(o=null==i?void 0:i.height)&&void 0!==o?o:300,width:null!==(s=null==i?void 0:i.width)&&void 0!==s?s:300,left:l,top:m,minimumInViewportWidth:"boundedWithinViewport"===this.options.floatingGroupBounds?void 0:null!==(r=null===(a=this.options.floatingGroupBounds)||void 0===a?void 0:a.minimumWidthWithinViewport)&&void 0!==r?r:Ke,minimumInViewportHeight:"boundedWithinViewport"===this.options.floatingGroupBounds?void 0:null!==(p=null===(d=this.options.floatingGroupBounds)||void 0===d?void 0:d.minimumHeightWithinViewport)&&void 0!==p?p:Ke}),u=c.element.querySelector(".void-container");if(!u)throw new Error("failed to find drag handle");h.setupDrag(u,{inDragMode:"boolean"==typeof(null==t?void 0:t.inDragMode)&&t.inDragMode});const v=new Ye(c,h),g=w(c.element,(e=>{const{width:i,height:t}=e.contentRect;c.layout(i,t)}));v.addDisposables(h.onDidChange((()=>{c.layout(c.height,c.width)})),h.onDidChangeEnd((()=>{this._bufferOnDidLayoutChange.fire()})),c.onDidChange((e=>{h.setBounds({height:null==e?void 0:e.height,width:null==e?void 0:e.width})})),{dispose:()=>{g.dispose(),c.model.location={type:"grid"},T(this._floatingGroups,v),this.updateWatermark()}}),this._floatingGroups.push(v),(null==t?void 0:t.skipActiveGroup)||this.doSetGroupAndPanelActive(c),this.updateWatermark()}orthogonalize(e){switch(e){case"top":case"bottom":this.gridview.orientation===W.HORIZONTAL&&this.gridview.insertOrthogonalSplitviewAtRoot();break;case"left":case"right":this.gridview.orientation===W.VERTICAL&&this.gridview.insertOrthogonalSplitviewAtRoot()}switch(e){case"top":case"left":case"center":return this.createGroupAtLocation([0]);case"bottom":case"right":return this.createGroupAtLocation([this.gridview.length]);default:throw new Error(`unsupported position ${e}`)}}updateOptions(e){var i,t;const n="string"==typeof e.orientation&&this.gridview.orientation!==e.orientation,o=void 0!==e.floatingGroupBounds&&e.floatingGroupBounds!==this.options.floatingGroupBounds,s=void 0!==e.rootOverlayModel&&e.rootOverlayModel!==this.options.rootOverlayModel;if(this._options=Object.assign(Object.assign({},this.options),e),n&&(this.gridview.orientation=e.orientation),o)for(const a of this._floatingGroups){switch(this.options.floatingGroupBounds){case"boundedWithinViewport":a.overlay.minimumInViewportHeight=void 0,a.overlay.minimumInViewportWidth=void 0;break;case void 0:a.overlay.minimumInViewportHeight=Ke,a.overlay.minimumInViewportWidth=Ke;break;default:a.overlay.minimumInViewportHeight=null===(i=this.options.floatingGroupBounds)||void 0===i?void 0:i.minimumHeightWithinViewport,a.overlay.minimumInViewportWidth=null===(t=this.options.floatingGroupBounds)||void 0===t?void 0:t.minimumWidthWithinViewport}a.overlay.setBounds({})}s&&this._rootDropTarget.setOverlayModel(e.rootOverlayModel),this.layout(this.gridview.width,this.gridview.height,!0)}layout(e,i,t){if(super.layout(e,i,t),this._floatingGroups)for(const n of this._floatingGroups)n.overlay.setBounds()}focus(){var e;null===(e=this.activeGroup)||void 0===e||e.focus()}getGroupPanel(e){return this.panels.find((i=>i.id===e))}setActivePanel(e){e.group.model.openPanel(e),this.doSetGroupAndPanelActive(e.group)}moveToNext(e){var i;if(void 0===e&&(e={}),!e.group){if(!this.activeGroup)return;e.group=this.activeGroup}if(e.includePanel&&e.group&&e.group.activePanel!==e.group.panels[e.group.panels.length-1])return void e.group.model.moveToNext({suppressRoll:!0});const t=Y(e.group.element),n=null===(i=this.gridview.next(t))||void 0===i?void 0:i.view;this.doSetGroupAndPanelActive(n)}moveToPrevious(e){var i;if(void 0===e&&(e={}),!e.group){if(!this.activeGroup)return;e.group=this.activeGroup}if(e.includePanel&&e.group&&e.group.activePanel!==e.group.panels[0])return void e.group.model.moveToPrevious({suppressRoll:!0});const t=Y(e.group.element),n=null===(i=this.gridview.previous(t))||void 0===i?void 0:i.view;n&&this.doSetGroupAndPanelActive(n)}toJSON(){var e;const i=this.gridview.serialize(),t=this.panels.reduce(((e,i)=>(e[i.id]=i.toJSON(),e)),{}),n=this._floatingGroups.map((e=>({data:e.group.toJSON(),position:e.overlay.toJSON()}))),o=this._popoutGroups.map((e=>({data:e.popoutGroup.toJSON(),gridReferenceGroup:e.referenceGroup,position:e.window.dimensions()}))),s={grid:i,panels:t,activeGroup:null===(e=this.activeGroup)||void 0===e?void 0:e.id};return n.length>0&&(s.floatingGroups=n),o.length>0&&(s.popoutGroups=o),s}fromJSON(e){var i,t,n;if(this.clear(),"object"!=typeof e||null===e)throw new Error("serialized layout must be a non-null object");const{grid:o,panels:s,activeGroup:a}=e;if("branch"!==o.root.type||!Array.isArray(o.root.data))throw new Error("root must be of type branch");try{const r=this.width,d=this.height,p=e=>{const{id:i,locked:t,hideHeader:n,views:o,activeView:a}=e;if("string"!=typeof i)throw new Error("group id must be of type string");const r=this.createGroup({id:i,locked:!!t,hideHeader:!!n}),d=[];for(const p of o){const e=this._deserializer.fromJSON(s[p],r);d.push(e)}this._onDidAddGroup.fire(r);for(let s=0;s<o.length;s++){const e=d[s],i="string"==typeof a&&a===e.id;r.model.openPanel(e,{skipSetActive:!i,skipSetGroupActive:!0})}return!r.activePanel&&r.panels.length>0&&r.model.openPanel(r.panels[r.panels.length-1],{skipSetGroupActive:!0}),r};this.gridview.deserialize(o,{fromJSON:e=>p(e.data)}),this.layout(r,d,!0);const c=null!==(i=e.floatingGroups)&&void 0!==i?i:[];for(const e of c){const{data:i,position:t}=e,n=p(i);this.addFloatingGroup(n,{x:t.left,y:t.top,height:t.height,width:t.width},{skipRemoveGroup:!0,inDragMode:!1})}const l=null!==(t=e.popoutGroups)&&void 0!==t?t:[];for(const e of l){const{data:i,position:t,gridReferenceGroup:o}=e,s=p(i);this.addPopoutGroup(null!==(n=o?this.getPanel(o):void 0)&&void 0!==n?n:s,{skipRemoveGroup:!0,position:null!=t?t:void 0,overridePopoutGroup:o?s:void 0})}for(const e of this._floatingGroups)e.overlay.setBounds();if("string"==typeof a){const e=this.getPanel(a);e&&this.doSetGroupAndPanelActive(e)}}catch(r){for(const e of this.groups)for(const i of e.panels)this.removePanel(i,{removeEmptyGroup:!1,skipDispose:!1});for(const e of this.groups)e.dispose(),this._groups.delete(e.id),this._onDidRemoveGroup.fire(e);for(const e of[...this._floatingGroups])e.dispose();throw this.clear(),r}this.updateWatermark(),this._onDidLayoutFromJSON.fire()}clear(){const e=Array.from(this._groups.values()).map((e=>e.value)),i=!!this.activeGroup;this.activePanel;for(const t of e)this.removeGroup(t,{skipActive:!0});i&&this.doSetGroupAndPanelActive(void 0),this.gridview.clear()}closeAllGroups(){for(const e of this._groups.entries()){const[i,t]=e;t.value.model.closeAllPanels()}}addPanel(e){var i,t;if(this.panels.find((i=>i.id===e.id)))throw new Error(`panel with id ${e.id} already exists`);let n;if(e.position&&e.floating)throw new Error("you can only provide one of: position, floating as arguments to .addPanel(...)");if(e.position)if(e.position.referencePanel){const i="string"==typeof e.position.referencePanel?this.getGroupPanel(e.position.referencePanel):e.position.referencePanel;if(!i)throw new Error(`referencePanel ${e.position.referencePanel} does not exist`);n=this.findGroup(i)}else{if(!function(e){return!!e.referenceGroup}(e.position)){const i=this.orthogonalize(re(e.position.direction)),t=this.createPanel(e,i);return i.model.openPanel(t),this.doSetGroupAndPanelActive(i),t}if(n="string"==typeof e.position.referenceGroup?null===(i=this._groups.get(e.position.referenceGroup))||void 0===i?void 0:i.value:e.position.referenceGroup,!n)throw new Error(`referencePanel ${e.position.referenceGroup} does not exist`)}else n=this.activeGroup;let o;if(n){const i=xe((null===(t=e.position)||void 0===t?void 0:t.direction)||"within");if(e.floating){const i=this.createGroup();this._onDidAddGroup.fire(i);const t="object"==typeof e.floating&&null!==e.floating?e.floating:{};this.addFloatingGroup(i,t,{inDragMode:!1,skipRemoveGroup:!0,skipActiveGroup:!0}),o=this.createPanel(e,i),i.model.openPanel(o)}else if("floating"===n.api.location.type||"center"===i)o=this.createPanel(e,n),n.model.openPanel(o),this.doSetGroupAndPanelActive(n);else{const t=Y(n.element),s=K(this.gridview.orientation,t,i),a=this.createGroupAtLocation(s);o=this.createPanel(e,a),a.model.openPanel(o),this.doSetGroupAndPanelActive(a)}}else if(e.floating){const i=this.createGroup();this._onDidAddGroup.fire(i);const t="object"==typeof e.floating&&null!==e.floating?e.floating:{};this.addFloatingGroup(i,t,{inDragMode:!1,skipRemoveGroup:!0,skipActiveGroup:!0}),o=this.createPanel(e,i),i.model.openPanel(o)}else{const i=this.createGroupAtLocation();o=this.createPanel(e,i),i.model.openPanel(o),this.doSetGroupAndPanelActive(i)}return o}removePanel(e,i){void 0===i&&(i={removeEmptyGroup:!0,skipDispose:!1});const t=e.group;if(!t)throw new Error(`cannot remove panel ${e.id}. it's missing a group.`);t.model.removePanel(e,{skipSetActiveGroup:i.skipSetActiveGroup}),i.skipDispose||(e.group.model.renderContainer.detatch(e),e.dispose()),0===t.size&&i.removeEmptyGroup&&this.removeGroup(t,{skipActive:i.skipSetActiveGroup})}createWatermarkComponent(){var e;return Be("watermark-id","watermark-name",this.options.watermarkComponent?{"watermark-name":this.options.watermarkComponent}:{},this.options.watermarkFrameworkComponent?{"watermark-name":this.options.watermarkFrameworkComponent}:{},null===(e=this.options.frameworkComponentFactory)||void 0===e?void 0:e.watermark)}updateWatermark(){var e,i;if(0===this.groups.filter((e=>"grid"===e.api.location.type&&!e.api.isHidden)).length){if(!this.watermark){this.watermark=this.createWatermarkComponent(),this.watermark.init({containerApi:new oe(this)});const e=document.createElement("div");e.className="dv-watermark-container",e.appendChild(this.watermark.element),this.gridview.element.appendChild(e)}}else this.watermark&&(this.watermark.element.parentElement.remove(),null===(i=(e=this.watermark).dispose)||void 0===i||i.call(e),this.watermark=null)}addGroup(e){var i;const t=this.createGroup(e);if(e){let n;if(e.referencePanel){const i="string"==typeof e.referencePanel?this.panels.find((i=>i.id===e.referencePanel)):e.referencePanel;if(!i)throw new Error(`reference panel ${e.referencePanel} does not exist`);if(n=this.findGroup(i),!n)throw new Error(`reference group for reference panel ${e.referencePanel} does not exist`)}else{if(!function(e){return!!e.referenceGroup}(e)){const i=this.orthogonalize(re(e.direction));return e.skipSetActive||this.doSetGroupAndPanelActive(i),i}if(n="string"==typeof e.referenceGroup?null===(i=this._groups.get(e.referenceGroup))||void 0===i?void 0:i.value:e.referenceGroup,!n)throw new Error(`reference group ${e.referenceGroup} does not exist`)}const o=xe(e.direction||"within"),s=Y(n.element),a=K(this.gridview.orientation,s,o);return this.doAddGroup(t,a),e.skipSetActive||this.doSetGroupAndPanelActive(t),t}return this.doAddGroup(t),this.doSetGroupAndPanelActive(t),t}removeGroup(e,i){this.doRemoveGroup(e,i)}doRemoveGroup(e,i){var t;const n=[...e.panels];if(!(null==i?void 0:i.skipDispose))for(const a of n)this.removePanel(a,{removeEmptyGroup:!1,skipDispose:null!==(t=null==i?void 0:i.skipDispose)&&void 0!==t&&t});const o=this.activePanel;if("floating"===e.api.location.type){const t=this._floatingGroups.find((i=>i.group===e));if(t){if((null==i?void 0:i.skipDispose)||(t.group.dispose(),this._groups.delete(e.id),this._onDidRemoveGroup.fire(e)),T(this._floatingGroups,t),t.dispose(),!(null==i?void 0:i.skipActive)&&this._activeGroup===e){const e=Array.from(this._groups.values());this.doSetGroupAndPanelActive(e.length>0?e[0].value:void 0)}return t.group}throw new Error("failed to find floating group")}if("popout"===e.api.location.type){const t=this._popoutGroups.find((i=>i.popoutGroup===e));if(t){if(!(null==i?void 0:i.skipDispose)){if(!(null==i?void 0:i.skipPopoutAssociated)){const e=t.referenceGroup?this.getPanel(t.referenceGroup):void 0;e&&this.removeGroup(e)}t.popoutGroup.dispose(),this._groups.delete(e.id),this._onDidRemoveGroup.fire(e)}const n=t.disposable.dispose();if(!(null==i?void 0:i.skipPopoutReturn)&&n&&(this.doAddGroup(n,[0]),this.doSetGroupAndPanelActive(n)),!(null==i?void 0:i.skipActive)&&this._activeGroup===e){const e=Array.from(this._groups.values());this.doSetGroupAndPanelActive(e.length>0?e[0].value:void 0)}return this.updateWatermark(),t.popoutGroup}throw new Error("failed to find popout group")}const s=super.doRemoveGroup(e,i);return(null==i?void 0:i.skipActive)||this.activePanel!==o&&this._onDidActivePanelChange.fire(this.activePanel),s}movingLock(e){const i=this._moving;try{return this._moving=!0,e()}finally{this._moving=i}}moveGroupOrPanel(e){var i;const t=e.to.group,n=e.from.groupId,o=e.from.panelId,s=e.to.position,a=e.to.index,r=n?null===(i=this._groups.get(n))||void 0===i?void 0:i.value:void 0;if(!r)throw new Error(`Failed to find group id ${n}`);if(void 0!==o)if(s&&"center"!==s){const e=Y(t.element),i=K(this.gridview.orientation,e,s);if(r.size<2){const[e,n]=I(i);if("grid"===r.api.location.type){const i=Y(r.element),[t,o]=I(i);if(z(t,e))return void this.gridview.moveView(t,o,n)}const o=this.movingLock((()=>this.doRemoveGroup(r,{skipActive:!0,skipDispose:!0}))),a=Y(t.element),d=K(this.gridview.orientation,a,s);this.movingLock((()=>this.doAddGroup(o,d))),this.doSetGroupAndPanelActive(o)}else{const i=this.movingLock((()=>r.model.removePanel(o,{skipSetActive:!1,skipSetActiveGroup:!0})));if(!i)throw new Error(`No panel with id ${o}`);const t=K(this.gridview.orientation,e,s),n=this.createGroupAtLocation(t);this.movingLock((()=>n.model.openPanel(i,{skipSetGroupActive:!0}))),this.doSetGroupAndPanelActive(n)}}else{const e=this.movingLock((()=>r.model.removePanel(o,{skipSetActive:!1,skipSetActiveGroup:!0})));if(!e)throw new Error(`No panel with id ${o}`);0===r.model.size&&this.doRemoveGroup(r,{skipActive:!0}),this.movingLock((()=>t.model.openPanel(e,{index:a,skipSetGroupActive:!0}))),this.doSetGroupAndPanelActive(t),this._onDidMovePanel.fire({panel:e})}else this.moveGroup({from:{group:r},to:{group:t,position:s}})}moveGroup(e){const i=e.from.group,t=e.to.group,n=e.to.position;if("center"===n){const e=i.activePanel,n=this.movingLock((()=>[...i.panels].map((e=>i.model.removePanel(e.id,{skipSetActive:!0})))));0===(null==i?void 0:i.model.size)&&this.doRemoveGroup(i,{skipActive:!0}),this.movingLock((()=>{for(const i of n)t.model.openPanel(i,{skipSetActive:i!==e,skipSetGroupActive:!0})})),this.doSetGroupAndPanelActive(t),n.forEach((e=>{this._onDidMovePanel.fire({panel:e})}))}else{switch(i.api.location.type){case"grid":this.gridview.removeView(Y(i.element));break;case"floating":{const e=this._floatingGroups.find((e=>e.group===i));if(!e)throw new Error("failed to find floating group");e.dispose();break}case"popout":{const e=this._popoutGroups.find((e=>e.popoutGroup===i));if(!e)throw new Error("failed to find popout group");e.disposable.dispose()}}const e=Y(t.element),o=K(this.gridview.orientation,e,n);this.gridview.addView(i,j.Distribute,o),i.panels.forEach((e=>{this._onDidMovePanel.fire({panel:e})}))}}doSetGroupActive(e){super.doSetGroupActive(e);const i=this.activePanel;this._moving||i===this._onDidActivePanelChange.value||this._onDidActivePanelChange.fire(i)}doSetGroupAndPanelActive(e){super.doSetGroupActive(e);const i=this.activePanel;e&&this.hasMaximizedGroup()&&!this.isMaximizedGroup(e)&&this.exitMaximizedGroup(),this._moving||i===this._onDidActivePanelChange.value||this._onDidActivePanelChange.fire(i)}getNextGroupId(){let e=this.nextGroupId.next();for(;this._groups.has(e);)e=this.nextGroupId.next();return e}createGroup(e){e||(e={});let i=null==e?void 0:e.id;if(i&&this._groups.has(e.id)&&(console.warn(`Duplicate group id ${null==e?void 0:e.id}. reassigning group id to avoid errors`),i=void 0),!i)for(i=this.nextGroupId.next();this._groups.has(i);)i=this.nextGroupId.next();const t=new Ne(this,i,e);if(t.init({params:{},accessor:this}),!this._groups.has(t.id)){const e=new f(t.model.onTabDragStart((e=>{this._onWillDragPanel.fire(e)})),t.model.onGroupDragStart((e=>{this._onWillDragGroup.fire(e)})),t.model.onMove((e=>{const{groupId:i,itemId:n,target:o,index:s}=e;this.moveGroupOrPanel({from:{groupId:i,panelId:n},to:{group:t,position:o,index:s}})})),t.model.onDidDrop((e=>{this._onDidDrop.fire(e)})),t.model.onWillDrop((e=>{this._onWillDrop.fire(e)})),t.model.onWillShowOverlay((e=>{this.options.disableDnd?e.preventDefault():this._onWillShowOverlay.fire(e)})),t.model.onDidAddPanel((e=>{this._moving||this._onDidAddPanel.fire(e.panel)})),t.model.onDidRemovePanel((e=>{this._moving||this._onDidRemovePanel.fire(e.panel)})),t.model.onDidActivePanelChange((e=>{this._moving||e.panel===this.activePanel&&this._onDidActivePanelChange.value!==e.panel&&this._onDidActivePanelChange.fire(e.panel)})));this._groups.set(t.id,{value:t,disposable:e})}return t.initialize(),t}createPanel(e,i){var t,n,o;const s=e.component,a=null!==(t=e.tabComponent)&&void 0!==t?t:this.options.defaultTabComponent,r=new Je(this,e.id,s,a),d=new We(e.id,this,this._api,i,r,{renderer:e.renderer});return d.init({title:null!==(n=e.title)&&void 0!==n?n:e.id,params:null!==(o=null==e?void 0:e.params)&&void 0!==o?o:{}}),d}createGroupAtLocation(e){void 0===e&&(e=[0]);const i=this.createGroup();return this.doAddGroup(i,e),i}findGroup(e){var i;return null===(i=Array.from(this._groups.values()).find((i=>i.value.model.containsPanel(e))))||void 0===i?void 0:i.value}}class ai extends Ee{get orientation(){return this.gridview.orientation}set orientation(e){this.gridview.orientation=e}get options(){return this._options}get deserializer(){return this._deserializer}set deserializer(e){this._deserializer=e}constructor(e){super({parentElement:e.parentElement,proportionalLayout:e.proportionalLayout,orientation:e.orientation,styles:e.styles,disableAutoResizing:e.disableAutoResizing}),this._onDidLayoutfromJSON=new u,this.onDidLayoutFromJSON=this._onDidLayoutfromJSON.event,this._onDidRemoveGroup=new u,this.onDidRemoveGroup=this._onDidRemoveGroup.event,this._onDidAddGroup=new u,this.onDidAddGroup=this._onDidAddGroup.event,this._onDidActiveGroupChange=new u,this.onDidActiveGroupChange=this._onDidActiveGroupChange.event,this._options=e,this.addDisposables(this._onDidAddGroup,this._onDidRemoveGroup,this._onDidActiveGroupChange,this.onDidAdd((e=>{this._onDidAddGroup.fire(e)})),this.onDidRemove((e=>{this._onDidRemoveGroup.fire(e)})),this.onDidActiveChange((e=>{this._onDidActiveGroupChange.fire(e)}))),this.options.components||(this.options.components={}),this.options.frameworkComponents||(this.options.frameworkComponents={})}updateOptions(e){const i="string"==typeof e.orientation&&this.gridview.orientation!==e.orientation;this._options=Object.assign(Object.assign({},this.options),e),i&&(this.gridview.orientation=e.orientation),this.layout(this.gridview.width,this.gridview.height,!0)}removePanel(e){this.removeGroup(e)}toJSON(){var e;return{grid:this.gridview.serialize(),activePanel:null===(e=this.activeGroup)||void 0===e?void 0:e.id}}setVisible(e,i){this.gridview.setViewVisible(Y(e.element),i)}setActive(e){this._groups.forEach(((i,t)=>{i.value.setActive(e===i.value)}))}focus(){var e;null===(e=this.activeGroup)||void 0===e||e.focus()}fromJSON(e){this.clear();const{grid:i,activePanel:t}=e;try{const e=[],n=this.width,o=this.height;if(this.gridview.deserialize(i,{fromJSON:i=>{var t,n;const{data:o}=i,s=Be(o.id,o.component,null!==(t=this.options.components)&&void 0!==t?t:{},null!==(n=this.options.frameworkComponents)&&void 0!==n?n:{},this.options.frameworkComponentFactory?{createComponent:this.options.frameworkComponentFactory.createComponent}:void 0);return e.push((()=>s.init({params:o.params,minimumWidth:o.minimumWidth,maximumWidth:o.maximumWidth,minimumHeight:o.minimumHeight,maximumHeight:o.maximumHeight,priority:o.priority,snap:!!o.snap,accessor:this,isVisible:i.visible}))),this._onDidAddGroup.fire(s),this.registerPanel(s),s}}),this.layout(n,o,!0),e.forEach((e=>e())),"string"==typeof t){const e=this.getPanel(t);e&&this.doSetGroupActive(e)}}catch(n){for(const e of this.groups)e.dispose(),this._groups.delete(e.id),this._onDidRemoveGroup.fire(e);throw this.clear(),n}this._onDidLayoutfromJSON.fire()}clear(){const e=this.activeGroup,i=Array.from(this._groups.values());for(const t of i)t.disposable.dispose(),this.doRemoveGroup(t.value,{skipActive:!0});e&&this.doSetGroupActive(void 0),this.gridview.clear()}movePanel(e,i){var t;let n;const o=this.gridview.remove(e),s=null===(t=this._groups.get(i.reference))||void 0===t?void 0:t.value;if(!s)throw new Error(`reference group ${i.reference} does not exist`);const a=xe(i.direction);if("center"===a)throw new Error(`${a} not supported as an option`);{const e=Y(s.element);n=K(this.gridview.orientation,e,a)}this.doAddGroup(o,n,i.size)}addPanel(e){var i,t,n,o,s,a;let r=null!==(i=e.location)&&void 0!==i?i:[0];if(null===(t=e.position)||void 0===t?void 0:t.referencePanel){const i=null===(n=this._groups.get(e.position.referencePanel))||void 0===n?void 0:n.value;if(!i)throw new Error(`reference group ${e.position.referencePanel} does not exist`);const t=xe(e.position.direction);if("center"===t)throw new Error(`${t} not supported as an option`);{const e=Y(i.element);r=K(this.gridview.orientation,e,t)}}const d=Be(e.id,e.component,null!==(o=this.options.components)&&void 0!==o?o:{},null!==(s=this.options.frameworkComponents)&&void 0!==s?s:{},this.options.frameworkComponentFactory?{createComponent:this.options.frameworkComponentFactory.createComponent}:void 0);return d.init({params:null!==(a=e.params)&&void 0!==a?a:{},minimumWidth:e.minimumWidth,maximumWidth:e.maximumWidth,minimumHeight:e.minimumHeight,maximumHeight:e.maximumHeight,priority:e.priority,snap:!!e.snap,accessor:this,isVisible:!0}),this.registerPanel(d),this.doAddGroup(d,r,e.size),this.doSetGroupActive(d),d}registerPanel(e){const i=new f(e.api.onDidFocusChange((i=>{i.isFocused&&this._groups.forEach((i=>{const t=i.value;t!==e?t.setActive(!1):t.setActive(!0)}))})));this._groups.set(e.id,{value:e,disposable:i})}moveGroup(e,i,t){const n=this.getPanel(i);if(!n)throw new Error("invalid operation");const o=Y(e.element),s=K(this.gridview.orientation,o,t),[a,r]=I(s),d=Y(n.element),[p,c]=I(d);if(z(p,a))return void this.gridview.moveView(p,c,r);const l=this.doRemoveGroup(n,{skipActive:!0,skipDispose:!0}),m=Y(e.element),h=K(this.gridview.orientation,m,t);this.doAddGroup(l,h)}removeGroup(e){super.removeGroup(e)}dispose(){super.dispose(),this._onDidLayoutfromJSON.dispose()}}class ri extends De{get panels(){return this.splitview.getViews()}get options(){return this._options}get length(){return this._panels.size}get orientation(){return this.splitview.orientation}get splitview(){return this._splitview}set splitview(e){this._splitview=e,this._splitviewChangeDisposable.value=new f(this._splitview.onDidSashEnd((()=>{this._onDidLayoutChange.fire(void 0)})),this._splitview.onDidAddView((e=>this._onDidAddView.fire(e))),this._splitview.onDidRemoveView((e=>this._onDidRemoveView.fire(e))))}get minimumSize(){return this.splitview.minimumSize}get maximumSize(){return this.splitview.maximumSize}get height(){return this.splitview.orientation===W.HORIZONTAL?this.splitview.orthogonalSize:this.splitview.size}get width(){return this.splitview.orientation===W.HORIZONTAL?this.splitview.size:this.splitview.orthogonalSize}constructor(e){super(e.parentElement,e.disableAutoResizing),this._splitviewChangeDisposable=new y,this._panels=new Map,this._onDidLayoutfromJSON=new u,this.onDidLayoutFromJSON=this._onDidLayoutfromJSON.event,this._onDidAddView=new u,this.onDidAddView=this._onDidAddView.event,this._onDidRemoveView=new u,this.onDidRemoveView=this._onDidRemoveView.event,this._onDidLayoutChange=new u,this.onDidLayoutChange=this._onDidLayoutChange.event,this._options=e,e.components||(e.components={}),e.frameworkComponents||(e.frameworkComponents={}),this.splitview=new B(this.element,e),this.addDisposables(this._onDidAddView,this._onDidLayoutfromJSON,this._onDidRemoveView,this._onDidLayoutChange)}updateOptions(e){const i="string"==typeof e.orientation&&this.options.orientation!==e.orientation;this._options=Object.assign(Object.assign({},this.options),e),i&&(this.splitview.orientation=e.orientation),this.splitview.layout(this.splitview.size,this.splitview.orthogonalSize)}focus(){var e;null===(e=this._activePanel)||void 0===e||e.focus()}movePanel(e,i){this.splitview.moveView(e,i)}setVisible(e,i){const t=this.panels.indexOf(e);this.splitview.setViewVisible(t,i)}setActive(e,i){this._activePanel=e,this.panels.filter((i=>i!==e)).forEach((e=>{e.api._onDidActiveChange.fire({isActive:!1}),i||e.focus()})),e.api._onDidActiveChange.fire({isActive:!0}),i||e.focus()}removePanel(e,i){const t=this._panels.get(e.id);if(!t)throw new Error(`unknown splitview panel ${e.id}`);t.dispose(),this._panels.delete(e.id);const n=this.panels.findIndex((i=>i===e));this.splitview.removeView(n,i).dispose();const o=this.panels;o.length>0&&this.setActive(o[o.length-1])}getPanel(e){return this.panels.find((i=>i.id===e))}addPanel(e){var i,t,n;if(this._panels.has(e.id))throw new Error(`panel ${e.id} already exists`);const o=Be(e.id,e.component,null!==(i=this.options.components)&&void 0!==i?i:{},null!==(t=this.options.frameworkComponents)&&void 0!==t?t:{},this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.createComponent}:void 0);o.orientation=this.splitview.orientation,o.init({params:null!==(n=e.params)&&void 0!==n?n:{},minimumSize:e.minimumSize,maximumSize:e.maximumSize,snap:e.snap,priority:e.priority,accessor:this});const s="number"==typeof e.size?e.size:j.Distribute,a="number"==typeof e.index?e.index:void 0;return this.splitview.addView(o,s,a),this.doAddView(o),this.setActive(o),o}layout(e,i){const[t,n]=this.splitview.orientation===W.HORIZONTAL?[e,i]:[i,e];this.splitview.layout(t,n)}doAddView(e){const i=e.api.onDidFocusChange((i=>{i.isFocused&&this.setActive(e,!0)}));this._panels.set(e.id,i)}toJSON(){var e;return{views:this.splitview.getViews().map(((e,i)=>({size:this.splitview.getViewSize(i),data:e.toJSON(),snap:!!e.snap,priority:e.priority}))),activeView:null===(e=this._activePanel)||void 0===e?void 0:e.id,size:this.splitview.size,orientation:this.splitview.orientation}}fromJSON(e){this.clear();const{views:i,orientation:t,size:n,activeView:o}=e,s=[],a=this.width,r=this.height;if(this.splitview=new B(this.element,{orientation:t,proportionalLayout:this.options.proportionalLayout,descriptor:{size:n,views:i.map((e=>{var i,n;const o=e.data;if(this._panels.has(o.id))throw new Error(`panel ${o.id} already exists`);const a=Be(o.id,o.component,null!==(i=this.options.components)&&void 0!==i?i:{},null!==(n=this.options.frameworkComponents)&&void 0!==n?n:{},this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.createComponent}:void 0);return s.push((()=>{var i;a.init({params:null!==(i=o.params)&&void 0!==i?i:{},minimumSize:o.minimumSize,maximumSize:o.maximumSize,snap:e.snap,priority:e.priority,accessor:this})})),a.orientation=t,this.doAddView(a),setTimeout((()=>{this._onDidAddView.fire(a)}),0),{size:e.size,view:a}}))}}),this.layout(a,r),s.forEach((e=>e())),"string"==typeof o){const e=this.getPanel(o);e&&this.setActive(e)}this._onDidLayoutfromJSON.fire()}clear(){for(const e of this._panels.values())e.dispose();for(this._panels.clear();this.splitview.length>0;){this.splitview.removeView(0,j.Distribute,!0).dispose()}}dispose(){for(const i of this._panels.values())i.dispose();this._panels.clear();const e=this.splitview.getViews();this._splitviewChangeDisposable.dispose(),this.splitview.dispose();for(const i of e)i.dispose();super.dispose()}}class di extends f{get element(){return this._element}constructor(){super(),this._expandedIcon=He({width:"11",height:"11",viewbox:"0 0 24 15",path:"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z"}),this._collapsedIcon=He({width:"11",height:"11",viewbox:"0 0 15 25",path:"M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z"}),this.disposable=new y,this.apiRef={api:null},this._element=document.createElement("div"),this.element.className="default-header",this._content=document.createElement("span"),this._expander=document.createElement("div"),this._expander.className="dockview-pane-header-icon",this.element.appendChild(this._expander),this.element.appendChild(this._content),this.addDisposables(g(this._element,"click",(()=>{var e;null===(e=this.apiRef.api)||void 0===e||e.setExpanded(!this.apiRef.api.isExpanded)})))}init(e){this.apiRef.api=e.api,this._content.textContent=e.title,this.updateIcon(),this.disposable.value=e.api.onDidExpansionChange((()=>{this.updateIcon()}))}updateIcon(){var e;const i=!!(null===(e=this.apiRef.api)||void 0===e?void 0:e.isExpanded);D(this._expander,"collapsed",!i),i?(this._expander.contains(this._collapsedIcon)&&this._collapsedIcon.remove(),this._expander.contains(this._expandedIcon)||this._expander.appendChild(this._expandedIcon)):(this._expander.contains(this._expandedIcon)&&this._expandedIcon.remove(),this._expander.contains(this._collapsedIcon)||this._expander.appendChild(this._collapsedIcon))}update(e){}dispose(){this.disposable.dispose(),super.dispose()}}const pi=V();class ci extends Oe{constructor(e){super(e.accessor,e.id,e.component,e.headerComponent,e.orientation,e.isExpanded,e.disableDnd),this.options=e}getBodyComponent(){return this.options.body}getHeaderComponent(){return this.options.header}}class li extends De{get id(){return this._id}get panels(){return this.paneview.getPanes()}set paneview(e){this._paneview=e,this._disposable.value=new f(this._paneview.onDidChange((()=>{this._onDidLayoutChange.fire(void 0)})),this._paneview.onDidAddView((e=>this._onDidAddView.fire(e))),this._paneview.onDidRemoveView((e=>this._onDidRemoveView.fire(e))))}get paneview(){return this._paneview}get minimumSize(){return this.paneview.minimumSize}get maximumSize(){return this.paneview.maximumSize}get height(){return this.paneview.orientation===W.HORIZONTAL?this.paneview.orthogonalSize:this.paneview.size}get width(){return this.paneview.orientation===W.HORIZONTAL?this.paneview.size:this.paneview.orthogonalSize}get options(){return this._options}constructor(e){super(e.parentElement,e.disableAutoResizing),this._id=pi.next(),this._disposable=new y,this._viewDisposables=new Map,this._onDidLayoutfromJSON=new u,this.onDidLayoutFromJSON=this._onDidLayoutfromJSON.event,this._onDidLayoutChange=new u,this.onDidLayoutChange=this._onDidLayoutChange.event,this._onDidDrop=new u,this.onDidDrop=this._onDidDrop.event,this._onDidAddView=new u,this.onDidAddView=this._onDidAddView.event,this._onDidRemoveView=new u,this.onDidRemoveView=this._onDidRemoveView.event,this.addDisposables(this._onDidLayoutChange,this._onDidLayoutfromJSON,this._onDidDrop,this._onDidAddView,this._onDidRemoveView),this._options=e,e.components||(e.components={}),e.frameworkComponents||(e.frameworkComponents={}),this.paneview=new J(this.element,{orientation:W.VERTICAL}),this.addDisposables(this._disposable)}focus(){}updateOptions(e){this._options=Object.assign(Object.assign({},this.options),e)}addPanel(e){var i,t,n,o;const s=Be(e.id,e.component,null!==(i=this.options.components)&&void 0!==i?i:{},null!==(t=this.options.frameworkComponents)&&void 0!==t?t:{},this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.body.createComponent}:void 0);let a;a=e.headerComponent?Be(e.id,e.headerComponent,null!==(n=this.options.headerComponents)&&void 0!==n?n:{},this.options.headerframeworkComponents,this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.header.createComponent}:void 0):new di;const r=new ci({id:e.id,component:e.component,headerComponent:e.headerComponent,header:a,body:s,orientation:W.VERTICAL,isExpanded:!!e.isExpanded,disableDnd:!!this.options.disableDnd,accessor:this});this.doAddPanel(r);const d="number"==typeof e.size?e.size:j.Distribute,p="number"==typeof e.index?e.index:void 0;return r.init({params:null!==(o=e.params)&&void 0!==o?o:{},minimumBodySize:e.minimumBodySize,maximumBodySize:e.maximumBodySize,isExpanded:e.isExpanded,title:e.title,containerApi:new te(this)}),this.paneview.addPane(r,d,p),r.orientation=this.paneview.orientation,r}removePanel(e){const i=this.panels.findIndex((i=>i===e));this.paneview.removePane(i),this.doRemovePanel(e)}movePanel(e,i){this.paneview.moveView(e,i)}getPanel(e){return this.panels.find((i=>i.id===e))}layout(e,i){const[t,n]=this.paneview.orientation===W.HORIZONTAL?[e,i]:[i,e];this.paneview.layout(t,n)}toJSON(){const e=e=>e===Number.MAX_SAFE_INTEGER||e===Number.POSITIVE_INFINITY?void 0:e;return{views:this.paneview.getPanes().map(((i,t)=>{return{size:this.paneview.getViewSize(t),data:i.toJSON(),minimumSize:(n=i.minimumBodySize,n<=0?void 0:n),maximumSize:e(i.maximumBodySize),expanded:i.isExpanded()};var n})),size:this.paneview.size}}fromJSON(e){this.clear();const{views:i,size:t}=e,n=[],o=this.width,s=this.height;this.paneview=new J(this.element,{orientation:W.VERTICAL,descriptor:{size:t,views:i.map((e=>{var i,t,o,s;const a=e.data,r=Be(a.id,a.component,null!==(i=this.options.components)&&void 0!==i?i:{},null!==(t=this.options.frameworkComponents)&&void 0!==t?t:{},this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.body.createComponent}:void 0);let d;d=a.headerComponent?Be(a.id,a.headerComponent,null!==(o=this.options.headerComponents)&&void 0!==o?o:{},null!==(s=this.options.headerframeworkComponents)&&void 0!==s?s:{},this.options.frameworkWrapper?{createComponent:this.options.frameworkWrapper.header.createComponent}:void 0):new di;const p=new ci({id:a.id,component:a.component,headerComponent:a.headerComponent,header:d,body:r,orientation:W.VERTICAL,isExpanded:!!e.expanded,disableDnd:!!this.options.disableDnd,accessor:this});return this.doAddPanel(p),n.push((()=>{var i;p.init({params:null!==(i=a.params)&&void 0!==i?i:{},minimumBodySize:e.minimumSize,maximumBodySize:e.maximumSize,title:a.title,isExpanded:!!e.expanded,containerApi:new te(this)}),p.orientation=this.paneview.orientation})),setTimeout((()=>{this._onDidAddView.fire(p)}),0),{size:e.size,view:p}}))}}),this.layout(o,s),n.forEach((e=>e())),this._onDidLayoutfromJSON.fire()}clear(){for(const[e,i]of this._viewDisposables.entries())i.dispose();this._viewDisposables.clear(),this.paneview.dispose()}doAddPanel(e){const i=e.onDidDrop((e=>{this._onDidDrop.fire(e)}));this._viewDisposables.set(e.id,i)}doRemovePanel(e){const i=this._viewDisposables.get(e.id);i&&(i.dispose(),this._viewDisposables.delete(e.id))}dispose(){super.dispose();for(const[e,i]of this._viewDisposables.entries())i.dispose();this._viewDisposables.clear(),this.paneview.dispose()}}class mi extends Ie{get priority(){return this._priority}set orientation(e){this._orientation=e}get orientation(){return this._orientation}get minimumSize(){const e="function"==typeof this._minimumSize?this._minimumSize():this._minimumSize;return e!==this._evaluatedMinimumSize&&(this._evaluatedMinimumSize=e,this.updateConstraints()),e}get maximumSize(){const e="function"==typeof this._maximumSize?this._maximumSize():this._maximumSize;return e!==this._evaluatedMaximumSize&&(this._evaluatedMaximumSize=e,this.updateConstraints()),e}get snap(){return this._snap}constructor(e,i){super(e,i,new Ae(e)),this._evaluatedMinimumSize=0,this._evaluatedMaximumSize=Number.POSITIVE_INFINITY,this._minimumSize=0,this._maximumSize=Number.POSITIVE_INFINITY,this._snap=!1,this._onDidChange=new u,this.onDidChange=this._onDidChange.event,this.api.initialize(this),this.addDisposables(this._onDidChange,this.api.onDidHiddenChange((e=>{const{isHidden:i}=e,{accessor:t}=this._params;t.setVisible(this,!i)})),this.api.onActiveChange((()=>{const{accessor:e}=this._params;e.setActive(this)})),this.api.onDidConstraintsChangeInternal((e=>{"number"!=typeof e.minimumSize&&"function"!=typeof e.minimumSize||(this._minimumSize=e.minimumSize),"number"!=typeof e.maximumSize&&"function"!=typeof e.maximumSize||(this._maximumSize=e.maximumSize),this.updateConstraints()})),this.api.onDidSizeChange((e=>{this._onDidChange.fire({size:e.size})})))}setVisible(e){this.api._onDidVisibilityChange.fire({isVisible:e})}setActive(e){this.api._onDidActiveChange.fire({isActive:e})}layout(e,i){const[t,n]=this.orientation===W.HORIZONTAL?[e,i]:[i,e];super.layout(t,n)}init(e){super.init(e),this._priority=e.priority,e.minimumSize&&(this._minimumSize=e.minimumSize),e.maximumSize&&(this._maximumSize=e.maximumSize),e.snap&&(this._snap=e.snap)}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{minimumSize:(e=this.minimumSize,e<=0?void 0:e),maximumSize:(e=>e===Number.MAX_SAFE_INTEGER||e===Number.POSITIVE_INFINITY?void 0:e)(this.maximumSize)});var e}updateConstraints(){this.api._onDidConstraintsChange.fire({maximumSize:this._evaluatedMaximumSize,minimumSize:this._evaluatedMinimumSize})}}},6376:(e,i,t)=>{t.d(i,{Pg:()=>w,O4:()=>n.O4,tu:()=>k,$R:()=>D,i5:()=>n.i5,Vm:()=>x,M:()=>n.M});var n=t(7888),o=t(6204),s=t(2457);const a=(e,i)=>{const[t,n]=o.useState(),s=o.useRef(e.componentProps);return o.useImperativeHandle(i,(()=>({update:e=>{s.current=Object.assign(Object.assign({},s.current),e),n(Date.now())}})),[]),o.createElement(e.component,s.current)};a.displayName="DockviewReactJsBridge";const r=(()=>{let e=1;return{next:()=>`dockview_react_portal_key_${(e++).toString()}`}})(),d=o.createContext({});class p{constructor(e,i,t,n,o){this.parent=e,this.portalStore=i,this.component=t,this.parameters=n,this.context=o,this._initialProps={},this.disposed=!1,this.createPortal()}update(e){if(this.disposed)throw new Error("invalid operation: resource is already disposed");this.componentInstance?this.componentInstance.update(e):this._initialProps=Object.assign(Object.assign({},this._initialProps),e)}createPortal(){if(this.disposed)throw new Error("invalid operation: resource is already disposed");if("function"!=typeof(e=this.component)&&!(null==e?void 0:e.$$typeof))throw new Error("Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components");var e;const i=o.createElement(o.forwardRef(a),{component:this.component,componentProps:this.parameters,ref:e=>{this.componentInstance=e,Object.keys(this._initialProps).length>0&&(this.componentInstance.update(this._initialProps),this._initialProps={})}}),t=this.context?o.createElement(d.Provider,{value:this.context},i):i,n=s.createPortal(t,this.parent,r.next());this.ref={portal:n,disposable:this.portalStore.addPortal(n)}}dispose(){var e;null===(e=this.ref)||void 0===e||e.disposable.dispose(),this.disposed=!0}}const c=()=>{const[e,i]=o.useState([]);o.useDebugValue(`Portal count: ${e.length}`);return[e,o.useCallback((e=>{i((i=>[...i,e]));let t=!1;return{dispose:()=>{if(t)throw new Error("invalid operation: resource already disposed");t=!0,i((i=>i.filter((i=>i!==e))))}}}),[])]};class l{get element(){return this._element}constructor(e,i,t){this.id=e,this.component=i,this.reactPortalStore=t,this._onDidFocus=new n.O4,this.onDidFocus=this._onDidFocus.event,this._onDidBlur=new n.O4,this.onDidBlur=this._onDidBlur.event,this._element=document.createElement("div"),this._element.className="dockview-react-part"}focus(){}init(e){this.part=new p(this.element,this.reactPortalStore,this.component,{params:e.params,api:e.api,containerApi:e.containerApi})}update(e){var i;null===(i=this.part)||void 0===i||i.update(e.params)}layout(e,i){}dispose(){var e;this._onDidFocus.dispose(),this._onDidBlur.dispose(),null===(e=this.part)||void 0===e||e.dispose()}}class m{get element(){return this._element}constructor(e,i,t){this.id=e,this.component=i,this.reactPortalStore=t,this._element=document.createElement("div"),this._element.className="dockview-react-part"}focus(){}init(e){this.part=new p(this.element,this.reactPortalStore,this.component,{params:e.params,api:e.api,containerApi:e.containerApi})}update(e){var i;null===(i=this.part)||void 0===i||i.update(e.params)}layout(e,i){}dispose(){var e;null===(e=this.part)||void 0===e||e.dispose()}}class h{get element(){return this._element}constructor(e,i,t){this.id=e,this.component=i,this.reactPortalStore=t,this._element=document.createElement("div"),this._element.className="dockview-react-part"}init(e){this.part=new p(this.element,this.reactPortalStore,this.component,{group:e.group,containerApi:e.containerApi,close:()=>{e.group&&e.containerApi.removeGroup(e.group)}})}focus(){}update(e){var i,t,n;this.parameters&&(this.parameters.params=e.params),null===(i=this.part)||void 0===i||i.update({params:null!==(n=null===(t=this.parameters)||void 0===t?void 0:t.params)&&void 0!==n?n:{}})}layout(e,i){}updateParentGroup(e,i){}dispose(){var e;null===(e=this.part)||void 0===e||e.dispose()}}class u{get element(){return this._element}get part(){return this._part}get group(){return this._group}constructor(e,i,t){this.component=e,this.reactPortalStore=i,this._group=t,this.mutableDisposable=new n.Gi,this._element=document.createElement("div"),this._element.className="dockview-react-part"}focus(){}init(e){this.mutableDisposable.value=new n.KU(this._group.model.onDidAddPanel((()=>{this.updatePanels()})),this._group.model.onDidRemovePanel((()=>{this.updatePanels()})),this._group.model.onDidActivePanelChange((()=>{this.updateActivePanel()})),e.api.onDidActiveChange((()=>{this.updateGroupActive()}))),this._part=new p(this.element,this.reactPortalStore,this.component,{api:e.api,containerApi:e.containerApi,panels:this._group.model.panels,activePanel:this._group.model.activePanel,isGroupActive:this._group.api.isActive,group:this._group})}update(e){var i;null===(i=this._part)||void 0===i||i.update(e.params)}dispose(){var e;this.mutableDisposable.dispose(),null===(e=this._part)||void 0===e||e.dispose()}updatePanels(){this.update({params:{panels:this._group.model.panels}})}updateActivePanel(){this.update({params:{activePanel:this._group.model.activePanel}})}updateGroupActive(){this.update({params:{isGroupActive:this._group.api.isActive}})}}function v(e,i){return e?t=>new u(e,i,t):void 0}const g="props.defaultTabComponent",k=o.forwardRef(((e,i)=>{const t=o.useRef(null),s=o.useRef(),[a,r]=c();return o.useImperativeHandle(i,(()=>t.current),[]),o.useEffect((()=>{var i;if(!t.current)return()=>{};const o={content:{createComponent:(e,i,t)=>new l(i,t,{addPortal:r})},tab:{createComponent:(e,i,t)=>new m(i,t,{addPortal:r})},watermark:{createComponent:(e,i,t)=>new h(i,t,{addPortal:r})}},a=null!==(i=e.tabComponents)&&void 0!==i?i:{};e.defaultTabComponent&&(a[g]=e.defaultTabComponent);const d=new n.CJ({parentElement:t.current,frameworkComponentFactory:o,frameworkComponents:e.components,disableAutoResizing:e.disableAutoResizing,frameworkTabComponents:a,watermarkFrameworkComponent:e.watermarkComponent,defaultTabComponent:e.defaultTabComponent?g:void 0,styles:e.hideBorders?{separatorBorder:"transparent"}:void 0,showDndOverlay:e.showDndOverlay,createLeftHeaderActionsElement:v(e.leftHeaderActionsComponent,{addPortal:r}),createRightHeaderActionsElement:v(e.rightHeaderActionsComponent,{addPortal:r}),createPrefixHeaderActionsElement:v(e.prefixHeaderActionsComponent,{addPortal:r}),singleTabMode:e.singleTabMode,disableFloatingGroups:e.disableFloatingGroups,floatingGroupBounds:e.floatingGroupBounds,defaultRenderer:e.defaultRenderer,debug:e.debug,rootOverlayModel:e.rootOverlayModel,locked:e.locked,disableDnd:e.disableDnd}),{clientWidth:p,clientHeight:c}=t.current;return d.layout(p,c),e.onReady&&e.onReady({api:new n.QW(d)}),s.current=d,()=>{d.dispose()}}),[]),o.useEffect((()=>{s.current&&(s.current.locked=!!e.locked)}),[e.locked]),o.useEffect((()=>{s.current&&s.current.updateOptions({disableDnd:e.disableDnd})}),[e.disableDnd]),o.useEffect((()=>{if(!s.current)return()=>{};const i=s.current.onDidDrop((i=>{e.onDidDrop&&e.onDidDrop(i)}));return()=>{i.dispose()}}),[e.onDidDrop]),o.useEffect((()=>{if(!s.current)return()=>{};const i=s.current.onWillDrop((i=>{e.onWillDrop&&e.onWillDrop(i)}));return()=>{i.dispose()}}),[e.onWillDrop]),o.useEffect((()=>{s.current&&s.current.updateOptions({frameworkComponents:e.components})}),[e.components]),o.useEffect((()=>{s.current&&s.current.updateOptions({floatingGroupBounds:e.floatingGroupBounds})}),[e.floatingGroupBounds]),o.useEffect((()=>{s.current&&s.current.updateOptions({watermarkFrameworkComponent:e.watermarkComponent})}),[e.watermarkComponent]),o.useEffect((()=>{s.current&&s.current.updateOptions({showDndOverlay:e.showDndOverlay})}),[e.showDndOverlay]),o.useEffect((()=>{s.current&&s.current.updateOptions({frameworkTabComponents:e.tabComponents})}),[e.tabComponents]),o.useEffect((()=>{s.current&&s.current.updateOptions({disableFloatingGroups:e.disableFloatingGroups})}),[e.disableFloatingGroups]),o.useEffect((()=>{var i;if(!s.current)return;const t=null!==(i=e.tabComponents)&&void 0!==i?i:{};e.defaultTabComponent&&(t[g]=e.defaultTabComponent),s.current.updateOptions({defaultTabComponent:e.defaultTabComponent?g:void 0,frameworkTabComponents:t})}),[e.defaultTabComponent]),o.useEffect((()=>{s.current&&s.current.updateOptions({createRightHeaderActionsElement:v(e.rightHeaderActionsComponent,{addPortal:r})})}),[e.rightHeaderActionsComponent]),o.useEffect((()=>{s.current&&s.current.updateOptions({createLeftHeaderActionsElement:v(e.leftHeaderActionsComponent,{addPortal:r})})}),[e.leftHeaderActionsComponent]),o.useEffect((()=>{s.current&&s.current.updateOptions({rootOverlayModel:e.rootOverlayModel})}),[e.rootOverlayModel]),o.useEffect((()=>{s.current&&s.current.updateOptions({createPrefixHeaderActionsElement:v(e.prefixHeaderActionsComponent,{addPortal:r})})}),[e.prefixHeaderActionsComponent]),o.createElement("div",{className:e.className,style:{height:"100%",width:"100%"},ref:t},a)}));k.displayName="DockviewComponent";const f=()=>o.createElement("svg",{height:"11",width:"11",viewBox:"0 0 28 28","aria-hidden":"false",focusable:!1,className:"dockview-svg"},o.createElement("path",{d:"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z"}));var y=function(e,i){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&i.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)i.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(t[n[o]]=e[n[o]])}return t};const w=e=>{var{api:i,containerApi:t,params:n,hideClose:s,closeActionOverride:a}=e,r=y(e,["api","containerApi","params","hideClose","closeActionOverride"]);const d=o.useCallback((e=>{e.preventDefault(),a?a():i.close()}),[i,a]),p=o.useCallback((e=>{e.preventDefault()}),[]),c=o.useCallback((e=>{e.defaultPrevented||(i.setActive(),r.onClick&&r.onClick(e))}),[i,r.onClick]);return o.createElement("div",Object.assign({"data-testid":"dockview-default-tab"},r,{onClick:c,className:"dockview-react-tab"}),o.createElement("span",{className:"dockview-react-tab-title"},i.title),!s&&o.createElement("div",{className:"dv-react-tab-close-btn",onMouseDown:p,onClick:d},o.createElement(f,null)))};class b extends n.hJ{constructor(e,i,t,n){super(e,i),this.reactComponent=t,this.reactPortalStore=n}getComponent(){var e,i;return new p(this.element,this.reactPortalStore,this.reactComponent,{params:null!==(i=null===(e=this._params)||void 0===e?void 0:e.params)&&void 0!==i?i:{},api:this.api,containerApi:new n.fX(this._params.accessor)})}}o.forwardRef(((e,i)=>{const t=o.useRef(null),s=o.useRef(),[a,r]=c();return o.useImperativeHandle(i,(()=>t.current),[]),o.useEffect((()=>{var i;const o=new n.Cx({parentElement:t.current,disableAutoResizing:e.disableAutoResizing,orientation:null!==(i=e.orientation)&&void 0!==i?i:n.i5.HORIZONTAL,frameworkComponents:e.components,frameworkWrapper:{createComponent:(e,i,t)=>new b(e,i,t,{addPortal:r})},proportionalLayout:"boolean"!=typeof e.proportionalLayout||e.proportionalLayout,styles:e.hideBorders?{separatorBorder:"transparent"}:void 0}),{clientWidth:a,clientHeight:d}=t.current;return o.layout(a,d),e.onReady&&e.onReady({api:new n.fX(o)}),s.current=o,()=>{o.dispose()}}),[]),o.useEffect((()=>{s.current&&s.current.updateOptions({frameworkComponents:e.components})}),[e.components]),o.createElement("div",{className:e.className,style:{height:"100%",width:"100%"},ref:t},a)})).displayName="SplitviewComponent";class P extends n.Tg{constructor(e,i,t,n){super(e,i),this.reactComponent=t,this.reactPortalStore=n}getComponent(){var e,i;return new p(this.element,this.reactPortalStore,this.reactComponent,{params:null!==(i=null===(e=this._params)||void 0===e?void 0:e.params)&&void 0!==i?i:{},api:this.api,containerApi:new n.Tn(this._params.accessor)})}}const D=o.forwardRef(((e,i)=>{const t=o.useRef(null),s=o.useRef(),[a,r]=c();return o.useImperativeHandle(i,(()=>t.current),[]),o.useEffect((()=>{var i;if(!t.current)return()=>{};const o=new n.Jf({parentElement:t.current,disableAutoResizing:e.disableAutoResizing,proportionalLayout:"boolean"!=typeof e.proportionalLayout||e.proportionalLayout,orientation:null!==(i=e.orientation)&&void 0!==i?i:n.i5.HORIZONTAL,frameworkComponents:e.components,frameworkComponentFactory:{createComponent:(e,i,t)=>new P(e,i,t,{addPortal:r})},styles:e.hideBorders?{separatorBorder:"transparent"}:void 0}),{clientWidth:a,clientHeight:d}=t.current;return o.layout(a,d),e.onReady&&e.onReady({api:new n.Tn(o)}),s.current=o,()=>{o.dispose()}}),[]),o.useEffect((()=>{s.current&&s.current.updateOptions({frameworkComponents:e.components})}),[e.components]),o.createElement("div",{className:e.className,style:{height:"100%",width:"100%"},ref:t},a)}));D.displayName="GridviewComponent";class _{get element(){return this._element}constructor(e,i,t){this.id=e,this.component=i,this.reactPortalStore=t,this._element=document.createElement("div"),this._element.style.height="100%",this._element.style.width="100%"}init(e){this.part=new p(this.element,this.reactPortalStore,this.component,{params:e.params,api:e.api,title:e.title,containerApi:e.containerApi})}toJSON(){return{id:this.id}}update(e){var i;null===(i=this.part)||void 0===i||i.update(e.params)}dispose(){var e;null===(e=this.part)||void 0===e||e.dispose()}}const x=o.forwardRef(((e,i)=>{const t=o.useRef(null),s=o.useRef(),[a,r]=c();return o.useImperativeHandle(i,(()=>t.current),[]),o.useEffect((()=>{const i=(e,i,t)=>new _(e,t,{addPortal:r}),o=new n.W({parentElement:t.current,disableAutoResizing:e.disableAutoResizing,frameworkComponents:e.components,components:{},headerComponents:{},disableDnd:e.disableDnd,headerframeworkComponents:e.headerComponents,frameworkWrapper:{header:{createComponent:i},body:{createComponent:i}},showDndOverlay:e.showDndOverlay}),a=new n.y0(o),{clientWidth:d,clientHeight:p}=t.current;return o.layout(d,p),e.onReady&&e.onReady({api:a}),s.current=o,()=>{o.dispose()}}),[]),o.useEffect((()=>{s.current&&s.current.updateOptions({frameworkComponents:e.components})}),[e.components]),o.useEffect((()=>{s.current&&s.current.updateOptions({headerframeworkComponents:e.headerComponents})}),[e.headerComponents]),o.useEffect((()=>{if(!s.current)return()=>{};const i=s.current,t=i.onDidDrop((t=>{e.onDidDrop&&e.onDidDrop(Object.assign(Object.assign({},t),{api:new n.y0(i)}))}));return()=>{t.dispose()}}),[e.onDidDrop]),o.useEffect((()=>{s.current&&s.current.updateOptions({showDndOverlay:e.showDndOverlay})}),[e.showDndOverlay]),o.createElement("div",{className:e.className,style:{height:"100%",width:"100%"},ref:t},a)}));x.displayName="PaneviewComponent"},1800:(e,i,t)=>{t.r(i),t.d(i,{attach:()=>a});var n=t(7888);class o{get element(){return this._element}constructor(){this._element=document.createElement("div"),this._element.style.display="flex",this._element.style.justifyContent="center",this._element.style.alignItems="center",this._element.style.color="white",this._element.style.height="100%",this._titleElement=document.createElement("span"),this._paramsElement=document.createElement("span"),this._element.appendChild(this._titleElement)}init(e){this.render(e.params)}update(e){this.render(e.params)}render(e){this._titleElement.textContent=e.title,e.x?(this._paramsElement.parentElement||this._element.appendChild(this._paramsElement),this._paramsElement.textContent=e.x):this._paramsElement.parentElement?.removeChild(this._paramsElement)}}class s{get element(){return this._element}constructor(){this._element=document.createElement("div"),this._element.className="my-custom-tab",this._title=document.createElement("span");const e=document.createElement("span");e.style.flexGrow="1";const i=document.createElement("span");i.className="my-custom-tab-icon material-symbols-outlined",i.textContent="minimize";const t=document.createElement("span");t.className="my-custom-tab-icon material-symbols-outlined",t.textContent="maximize";const n=document.createElement("span");n.className="my-custom-tab-icon material-symbols-outlined",n.textContent="close",this._element.appendChild(this._title),this._element.appendChild(e),this._element.appendChild(i),this._element.appendChild(t),this._element.appendChild(n)}init(e){this.render(e.params)}update(e){this.render(e.params)}render(e){this._title=e.title}}function a(e){const i=document.createElement("div");i.className="dockview-theme-abyss",i.style.height="100%",i.style.width="100%";const t=new n.CJ({components:{default:o},tabComponents:{default:s},singleTabMode:"fullwidth",parentElement:i});e.appendChild(i);const{clientWidth:a,clientHeight:r}=e;t.layout(a,r);t.addPanel({id:"panel_1",component:"default",tabComponent:"default",params:{title:"Window 1"}}).group.locked=!0;t.addPanel({id:"panel_2",component:"default",tabComponent:"default",params:{title:"Window 2"},position:{direction:"right"}}).group.locked=!0;return t.addPanel({id:"panel_3",component:"default",tabComponent:"default",params:{title:"Window 3"},position:{direction:"below"}}).group.locked=!0,{dispose:()=>{t.dispose(),i.remove()}}}},1977:(e,i,t)=>{t.r(i),t.d(i,{attach:()=>s});var n=t(7888);class o{get element(){return this._element}constructor(){this._element=document.createElement("div"),this._element.style.padding="20px",this._element.style.color="white"}init(e){this._element.textContent=e.params.title}update(e){this._element.textContent=e.params.title}}function s(e){const i=document.createElement("div");i.className="dockview-theme-abyss  skinny-tabs",i.style.height="100%",i.style.width="100%";const t=new n.CJ({components:{default:o},parentElement:i});e.appendChild(i);const{clientWidth:s,clientHeight:a}=e;return t.layout(s,a),t.addPanel({id:"panel_1",component:"default",params:{title:"Panel 1"}}),t.addPanel({id:"panel_2",component:"default",params:{title:"Panel 2"}}),t.addPanel({id:"panel_3",component:"default",params:{title:"Panel 3"},position:{referencePanel:"panel_1",direction:"right"}}),t.addPanel({id:"panel_4",component:"default",params:{title:"Panel 4"},position:{referencePanel:"panel_3",direction:"right"}}),t.addPanel({id:"panel_5",component:"default",params:{title:"Panel 5"},position:{referencePanel:"panel_4",direction:"below"}}),t.addPanel({id:"panel_6",component:"default",params:{title:"Panel 6"},position:{referencePanel:"panel_5",direction:"right"}}),{dispose:()=>{t.dispose(),i.remove()}}}},4537:(e,i,t)=>{t.d(i,{M:()=>r});var n=t(6204),o=t(5186),s=t(3188);const a=()=>{return e={width:"16",height:"16",viewbox:"0 0 50 58",path:"M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z"},(0,s.jsx)("svg",{height:e.height,width:e.width,viewBox:e.viewbox,focusable:!1,className:"dockview-svg",children:(0,s.jsx)("path",{d:e.path})});var e},r=e=>{const i=n.useMemo((()=>e.id?`https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes/${e.id}`:""),[e.id]);return(0,s.jsxs)(s.Fragment,{children:[!e.hideThemePicker&&(0,s.jsx)(o.JE,{}),(0,s.jsxs)("span",{className:"codesandbox-button",style:{display:"flex",alignItems:"center"},children:[(0,s.jsx)("span",{className:"codesandbox-button-pretext",children:"Open in "}),(0,s.jsxs)("a",{href:i,target:"_blank",rel:"noopener",className:"codesandbox-button-content",children:[(0,s.jsx)("span",{style:{fontWeight:"bold",paddingRight:"4px"},children:"CodeSandbox"}),(0,s.jsx)(a,{})]})]})]})}},5186:(e,i,t)=>{t.d(i,{Qj:()=>v,JE:()=>h});var n=t(6204),o=t(4537),s=t(6261),a=t(3188);const r=()=>(0,a.jsxs)("div",{className:"lds-ellipsis",children:[(0,a.jsx)("div",{}),(0,a.jsx)("div",{}),(0,a.jsx)("div",{}),(0,a.jsx)("div",{})]});var d=t(4940);const p=e=>(0,a.jsx)("img",{style:{marginRight:"0px 4px"},height:e.height,width:e.width,src:(0,s.Z)("img/react-icon.svg")}),c=e=>(0,a.jsx)("img",{style:{marginRight:"0px 4px"},height:e.height,width:e.width,src:(0,s.Z)("img/js-icon.svg")}),l=["dockview-theme-abyss","dockview-theme-dark","dockview-theme-light","dockview-theme-vs","dockview-theme-dracula","dockview-theme-replit"];function m(e,i){const[t,o]=n.useState(localStorage.getItem(e));return n.useEffect((()=>{const i=i=>{o(localStorage.getItem(e))};return window.addEventListener("storage",i),o(localStorage.getItem(e)),()=>{window.removeEventListener("storage",i)}}),[e]),null===t?i:t}const h=()=>{const[e,i]=n.useState(localStorage.getItem("dv-theme-class-name")||l[0]);return n.useEffect((()=>{localStorage.setItem("dv-theme-class-name",e),window.dispatchEvent(new StorageEvent("storage"))}),[e]),(0,a.jsxs)("div",{style:{height:"20px",display:"flex",alignItems:"center",padding:"0px 0px 0px 4px"},children:[(0,a.jsx)("span",{style:{paddingRight:"4px"},children:"Theme: "}),(0,a.jsx)("select",{style:{backgroundColor:"inherit",color:"inherit"},onChange:e=>i(e.target.value),value:e,children:l.map((e=>(0,a.jsx)("option",{value:e,children:e},e)))})]})};const u=e=>{const i=n.useRef(null),[t,s]=n.useState("React"),[d,l]=n.useState(!1),h=m("dv-theme-class-name","dockview-theme-abyss");n.useEffect((()=>{l(!0),setTimeout((()=>{l(!1)}),500)}),[t]),n.useEffect((()=>{if(i.current&&"Javascript"===t){const t=e.typescript(i.current);return()=>{t.dispose()}}}),[e.typescript,t]);const u=n.useMemo((()=>"Javascript"===t?`javascript/${e.sandboxId}`:e.sandboxId),[e.sandboxId,t]);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{ref:i,style:{position:"relative",height:e.height?`${e.height}px`:"300px"},children:[d&&(0,a.jsx)("div",{style:{background:"rgba(30,30,30)",position:"absolute",zIndex:9999,top:0,left:0,width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"},children:(0,a.jsx)(r,{})}),"React"===t&&(0,a.jsx)(e.react,{theme:h})]}),(0,a.jsxs)("div",{style:{margin:"2px 0px",padding:"2px 0px",display:"flex",alignItems:"center",fontSize:"14px",height:"24px"},children:[(0,a.jsxs)("div",{className:"framework-button",style:{display:"flex",alignItems:"center",cursor:"pointer"},children:[e.typescript&&("React"===t?(0,a.jsx)(p,{height:16,width:16}):(0,a.jsx)(c,{height:16,width:16})),e.typescript&&(0,a.jsxs)("select",{style:{border:"none",fontWeight:"bold",backgroundColor:"inherit",cursor:"inherit",color:"inherit",height:"24px"},onChange:e=>{const i=e.target;s(i.value)},children:[(0,a.jsx)("option",{value:"React",children:"React"}),(0,a.jsx)("option",{value:"Javascript",children:"Javascript"})]})]}),(0,a.jsx)("span",{style:{flexGrow:1}}),(0,a.jsx)(o.M,{id:u,hideThemePicker:e.hideThemePicker})]})]})},v=e=>(0,a.jsx)(d.Z,{children:()=>(0,a.jsx)(u,{...e})})},8610:(e,i,t)=>{t.d(i,{r8:()=>l});var n=t(6204),o=t(7348);const s=JSON.parse('{"DockviewEvent":{"kind":"interface","children":[],"metadata":{"name":"DockviewEvent","code":"","pieces":[]}},"Sizing":{"kind":"typeAlias","children":[],"metadata":{"name":"Sizing","code":"InvisibleSizing | SplitSizing | DistributeSizing","pieces":[null]}},"LayoutPriority":{"kind":"enum","children":[{"name":"High","code":"","pieces":[]},{"name":"Low","code":"","pieces":[]},{"name":"Normal","code":"","pieces":[]}]},"Orientation":{"kind":"enum","children":[{"name":"HORIZONTAL","code":"","pieces":[]},{"name":"VERTICAL","code":"","pieces":[]}]},"SashState":{"kind":"enum","children":[{"name":"DISABLED","code":"","pieces":[]},{"name":"ENABLED","code":"","pieces":[]},{"name":"MAXIMUM","code":"","pieces":[]},{"name":"MINIMUM","code":"","pieces":[]}]},"BaseGrid":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_activeGroup","code":"BaseGrid.T | undefined","kind":"property","flags":{"isProtected":true},"pieces":[]},{"name":"_bufferOnDidLayoutChange","code":"TickDelayedEvent","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["TickDelayedEvent"]},{"name":"_groups","code":"Map<string, IValueDisposable<BaseGrid.T>>","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"gridview","code":"Gridview","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["Gridview"]},{"name":"onDidActiveChange","code":"Event<BaseGrid.T | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAdd","code":"Event<BaseGrid.T>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemove","code":"Event<BaseGrid.T>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"activeGroup","code":"BaseGrid.T | undefined","kind":"accessor","pieces":[]},{"name":"disableResizing","code":"boolean","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"groups","code":"BaseGrid.T[]","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"id","code":"string","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"locked","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"accessor","pieces":["Event"]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"doAddGroup","code":"(group: BaseGrid.T, location: number[], size?: number): void","kind":"method","pieces":["T"]},{"name":"doRemoveGroup","code":"(group: BaseGrid.T, options?: { skipActive?: boolean, skipDispose?: boolean }): BaseGrid.T","kind":"method","pieces":["T"]},{"name":"doSetGroupActive","code":"(group: BaseGrid.T | undefined): void","kind":"method","pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(data: any): void","kind":"method","pieces":[]},{"name":"getPanel","code":"(id: string): BaseGrid.T | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: BaseGrid.T): boolean","kind":"method","pieces":["T"]},{"name":"isVisible","code":"(panel: BaseGrid.T): boolean","kind":"method","pieces":["T"]},{"name":"layout","code":"(width: number, height: number, forceResize?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: BaseGrid.T): void","kind":"method","pieces":["T"]},{"name":"moveToNext","code":"(options?: MovementOptions2): void","kind":"method","pieces":["MovementOptions2"]},{"name":"moveToPrevious","code":"(options?: MovementOptions2): void","kind":"method","pieces":["MovementOptions2"]},{"name":"removeGroup","code":"(group: BaseGrid.T): void","kind":"method","pieces":["T"]},{"name":"setVisible","code":"(panel: BaseGrid.T, visible: boolean): void","kind":"method","pieces":["T"]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]}]},"ContentContainer":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"dropTarget","code":"Droptarget","kind":"property","flags":{"isReadonly":true},"pieces":["Droptarget"]},{"name":"onDidBlur","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocus","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"closePanel","code":"(): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"hide","code":"(): void","kind":"method","pieces":[]},{"name":"layout","code":"(_width: number, _height: number): void","kind":"method","pieces":[]},{"name":"openPanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"renderPanel","code":"(panel: IDockviewPanel, options: { asActive: boolean }): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"show","code":"(): void","kind":"method","pieces":[]}]},"DefaultDockviewDeserialzier":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"fromJSON","code":"(panelData: GroupviewPanelState, group: DockviewGroupPanel): IDockviewPanel","kind":"method","pieces":["DockviewGroupPanel","GroupviewPanelState","IDockviewPanel"]}]},"DefaultTab":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(params: GroupPanelPartInitParameters): void","kind":"method","pieces":["GroupPanelPartInitParameters"]},{"name":"layout","code":"(_width: number, _height: number): void","kind":"method","pieces":[]},{"name":"onGroupChange","code":"(_group: DockviewGroupPanel): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"onPanelVisibleChange","code":"(_isPanelVisible: boolean): void","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"DockviewApi":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"activeGroup","code":"DockviewGroupPanel | undefined","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Active group object."}]},"pieces":[]},{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Active panel object."}]},"pieces":[]},{"name":"groups","code":"DockviewGroupPanel[]","kind":"accessor","comment":{"summary":[{"kind":"text","text":"All group objects."}]},"pieces":[]},{"name":"height","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Height of the component."}]},"pieces":[]},{"name":"id","code":"string","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The unique identifier for this instance. Used to manage scope of Drag\'n\'Drop events."}]},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Maximum height of the component."}]},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Maximum width of the component."}]},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Minimum height of the component."}]},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Minimum width of the component."}]},"pieces":[]},{"name":"onDidActiveGroupChange","code":"Event<DockviewGroupPanel | undefined>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when the active group changes. May be undefined if no group is active."}]},"pieces":["Event"]},{"name":"onDidActivePanelChange","code":"Event<IDockviewPanel | undefined>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when the active panel changes. May be undefined if no panel is active."}]},"pieces":["Event"]},{"name":"onDidAddGroup","code":"Event<DockviewGroupPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a group is added. May be called multiple times when moving groups."}]},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<IDockviewPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is added. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<DockviewDidDropEvent>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a Drag\'n\'Drop event occurs that the component was unable to handle. Exposed for custom Drag\'n\'Drop functionality."}]},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when any layout change occures, an aggregation of many events."}]},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked after a layout is deserialzied using the "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method."}]},"pieces":["Event"]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"accessor","pieces":["Event"]},{"name":"onDidRemoveGroup","code":"Event<DockviewGroupPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a group is removed. May be called multiple times when moving groups."}]},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<IDockviewPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is removed. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"onWillDragGroup","code":"Event<GroupDragEvent>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked before a group is dragged. Exposed for custom Drag\'n\'Drop functionality."}]},"pieces":["Event"]},{"name":"onWillDragPanel","code":"Event<TabDragEvent>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked before a panel is dragged. Exposed for custom Drag\'n\'Drop functionality."}]},"pieces":["Event"]},{"name":"onWillDrop","code":"Event<DockviewWillDropEvent>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a Drag\'n\'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\\nprevent the event from occuring using the standard "},{"kind":"code","text":"`preventDefault()`"},{"kind":"text","text":" syntax.\\n\\nPreventing certain events may causes unexpected behaviours, use carefully."}]},"pieces":["Event"]},{"name":"onWillShowOverlay","code":"Event<WillShowOverlayLocationEvent>","kind":"accessor","pieces":["Event"]},{"name":"panels","code":"IDockviewPanel[]","kind":"accessor","comment":{"summary":[{"kind":"text","text":"All panel objects."}]},"pieces":[]},{"name":"size","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Total number of groups."}]},"pieces":[]},{"name":"totalPanels","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Total number of panels."}]},"pieces":[]},{"name":"width","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Width of the component."}]},"pieces":[]},{"name":"addFloatingGroup","code":"(item: IDockviewPanel | DockviewGroupPanel, coord?: { x: number, y: number }): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a floating group"}]},"pieces":[]},{"name":"addGroup","code":"(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a group and return the created object."}]},"pieces":["DockviewGroupPanel"]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPanelOptions<T>): IDockviewPanel","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a panel and return the created object."}]},"pieces":["AddPanelOptions","IDockviewPanel","Parameters"]},{"name":"addPopoutGroup","code":"(item: IDockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, popoutUrl?: string, position?: Box }): Promise<void>","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a popout group in a new Window"}]},"pieces":[]},{"name":"clear","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Reset the component back to an empty and default state."}]},"pieces":[]},{"name":"closeAllGroups","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Close all groups and panels."}]},"pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Focus the component. Will try to focus an active panel if one exists."}]},"pieces":[]},{"name":"fromJSON","code":"(data: SerializedDockview): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a component from a serialized object."}]},"pieces":["SerializedDockview"]},{"name":"getGroup","code":"(id: string): DockviewGroupPanel | undefined","kind":"method","comment":{"summary":[{"kind":"text","text":"Get a group object given a "},{"kind":"code","text":"`string`"},{"kind":"text","text":" id. May return undefined."}]},"pieces":[]},{"name":"getPanel","code":"(id: string): IDockviewPanel | undefined","kind":"method","comment":{"summary":[{"kind":"text","text":"Get a panel object given a "},{"kind":"code","text":"`string`"},{"kind":"text","text":" id. May return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"."}]},"pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number, force: boolean): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Force resize the component to an exact width and height. Read about auto-resizing before using."}]},"pieces":[]},{"name":"maximizeGroup","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"moveToNext","code":"(options?: MovementOptions): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Move the focus progmatically to the next panel or group."}]},"pieces":["MovementOptions"]},{"name":"moveToPrevious","code":"(options?: MovementOptions): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Move the focus progmatically to the previous panel or group."}]},"pieces":["MovementOptions"]},{"name":"removeGroup","code":"(group: IDockviewGroupPanel): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Remove a group and any panels within the group."}]},"pieces":["IDockviewGroupPanel"]},{"name":"removePanel","code":"(panel: IDockviewPanel): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Remove a panel given the panel object."}]},"pieces":["IDockviewPanel"]},{"name":"toJSON","code":"(): SerializedDockview","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a serialized object of the current component."}]},"pieces":["SerializedDockview"]}]},"DockviewComponent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_activeGroup","code":"DockviewGroupPanel | undefined","kind":"property","flags":{"isProtected":true},"pieces":[]},{"name":"_bufferOnDidLayoutChange","code":"TickDelayedEvent","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["TickDelayedEvent"]},{"name":"_groups","code":"Map<string, IValueDisposable<DockviewGroupPanel>>","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"_onDidAddGroup","code":"Emitter<DockviewGroupPanel>","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["Emitter"]},{"name":"gridview","code":"Gridview","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["Gridview"]},{"name":"onDidActiveChange","code":"Event<DockviewGroupPanel | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidActiveGroupChange","code":"Event<DockviewGroupPanel | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidActivePanelChange","code":"Event<IDockviewPanel | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAdd","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddGroup","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<IDockviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<DockviewDidDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemove","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveGroup","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<IDockviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDragGroup","code":"Event<GroupDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDragPanel","code":"Event<TabDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDrop","code":"Event<DockviewWillDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillShowOverlay","code":"Event<WillShowOverlayLocationEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"overlayRenderContainer","code":"OverlayRenderContainer","kind":"property","flags":{"isReadonly":true},"pieces":["OverlayRenderContainer"]},{"name":"activeGroup","code":"BaseGrid.T | undefined","kind":"accessor","pieces":[]},{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"accessor","pieces":[]},{"name":"disableResizing","code":"boolean","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"groups","code":"BaseGrid.T[]","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"id","code":"string","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"locked","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"accessor","pieces":["Event"]},{"name":"options","code":"DockviewComponentOptions","kind":"accessor","pieces":["DockviewComponentOptions"]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"panels","code":"IDockviewPanel[]","kind":"accessor","pieces":[]},{"name":"renderer","code":"DockviewPanelRenderer","kind":"accessor","pieces":["DockviewPanelRenderer"]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"totalPanels","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"addFloatingGroup","code":"(item: DockviewPanel | DockviewGroupPanel, coord?: { height?: number, width?: number, x?: number, y?: number }, options?: { inDragMode: boolean, skipActiveGroup?: boolean, skipRemoveGroup?: boolean }): void","kind":"method","pieces":[]},{"name":"addGroup","code":"(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPanelOptions<T>): DockviewPanel","kind":"method","pieces":["AddPanelOptions","DockviewPanel","Parameters"]},{"name":"addPopoutGroup","code":"(itemToPopout: DockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, overridePopoutGroup?: DockviewGroupPanel, popoutUrl?: string, position?: Box, skipRemoveGroup?: boolean }): Promise<void>","kind":"method","pieces":[]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"closeAllGroups","code":"(): void","kind":"method","pieces":[]},{"name":"createGroup","code":"(options?: GroupOptions): DockviewGroupPanel","kind":"method","pieces":["DockviewGroupPanel","GroupOptions"]},{"name":"createWatermarkComponent","code":"(): IWatermarkRenderer","kind":"method","pieces":["IWatermarkRenderer"]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"doAddGroup","code":"(group: DockviewGroupPanel, location: number[], size?: number): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"doRemoveGroup","code":"(group: DockviewGroupPanel, options?: { skipActive?: boolean, skipDispose?: boolean, skipPopoutAssociated?: boolean }): DockviewGroupPanel","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"doSetGroupActive","code":"(group: DockviewGroupPanel | undefined): void","kind":"method","pieces":[]},{"name":"doSetGroupAndPanelActive","code":"(group: DockviewGroupPanel | undefined): void","kind":"method","pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(data: SerializedDockview): void","kind":"method","pieces":["SerializedDockview"]},{"name":"getGroupPanel","code":"(id: string): IDockviewPanel | undefined","kind":"method","pieces":[]},{"name":"getPanel","code":"(id: string): DockviewGroupPanel | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: DockviewGroupPanel): boolean","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"isVisible","code":"(panel: DockviewGroupPanel): boolean","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"layout","code":"(width: number, height: number, forceResize?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: DockviewGroupPanel): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"moveGroup","code":"(options: MoveGroupOptions): void","kind":"method","pieces":["MoveGroupOptions"]},{"name":"moveGroupOrPanel","code":"(options: MoveGroupOrPanelOptions): void","kind":"method","pieces":["MoveGroupOrPanelOptions"]},{"name":"moveToNext","code":"(options: MovementOptions): void","kind":"method","pieces":["MovementOptions"]},{"name":"moveToPrevious","code":"(options: MovementOptions): void","kind":"method","pieces":["MovementOptions"]},{"name":"movingLock","code":"<T>(func: (): T): T","kind":"method","pieces":["T"]},{"name":"removeGroup","code":"(group: DockviewGroupPanel, options?: { skipActive?: boolean, skipDispose?: boolean }): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"removePanel","code":"(panel: IDockviewPanel, options: { removeEmptyGroup: boolean, skipDispose: boolean, skipSetActiveGroup?: boolean }): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setActivePanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setVisible","code":"(panel: DockviewGroupPanel, visible: boolean): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"toJSON","code":"(): SerializedDockview","kind":"method","comment":{"summary":[{"kind":"text","text":"Serialize the current state of the layout"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A JSON respresentation of the layout"}]}]},"pieces":["SerializedDockview"]},{"name":"updateOptions","code":"(options: DockviewComponentUpdateOptions): void","kind":"method","pieces":["DockviewComponentUpdateOptions"]}]},"DockviewCompositeDisposable":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]}]},"DockviewDidDropEvent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"api","code":"DockviewApi","kind":"accessor","pieces":["DockviewApi"]},{"name":"defaultPrevented","code":"boolean","kind":"accessor","pieces":[]},{"name":"group","code":"DockviewGroupPanel | undefined","kind":"accessor","pieces":[]},{"name":"nativeEvent","code":"DragEvent","kind":"accessor","pieces":[]},{"name":"panel","code":"IDockviewPanel | undefined","kind":"accessor","pieces":[]},{"name":"position","code":"Position","kind":"accessor","pieces":["Position"]},{"name":"getData","code":"(): PanelTransfer | undefined","kind":"method","pieces":[]},{"name":"preventDefault","code":"(): void","kind":"method","pieces":[]}]},"DockviewEmitter":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"ENABLE_TRACKING","code":"boolean","kind":"property","flags":{"isStatic":true},"pieces":[]},{"name":"MEMORY_LEAK_WATCHER","code":"LeakageMonitor","kind":"property","flags":{"isStatic":true,"isReadonly":true},"pieces":["LeakageMonitor"]},{"name":"event","code":"Event<Emitter.T>","kind":"accessor","pieces":["Event"]},{"name":"value","code":"Emitter.T | undefined","kind":"accessor","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"fire","code":"(e: Emitter.T): void","kind":"method","pieces":["T"]},{"name":"setLeakageMonitorEnabled","code":"(isEnabled: boolean): void","kind":"method","pieces":[]}]},"DockviewGroupPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"DockviewGroupPanelApiImpl","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["DockviewGroupPanelApiImpl"]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"header","code":"IHeader","kind":"accessor","pieces":["IHeader"]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isActive","code":"boolean","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"locked","code":"DockviewGroupPanelLocked","kind":"accessor","pieces":["DockviewGroupPanelLocked"]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"model","code":"DockviewGroupPanelModel","kind":"accessor","pieces":["DockviewGroupPanelModel"]},{"name":"panels","code":"IDockviewPanel[]","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"snap","code":"boolean","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"init","code":"(parameters: GridviewInitParameters): void","kind":"method","pieces":["GridviewInitParameters"]},{"name":"initialize","code":"(): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): any","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"DockviewGroupPanelModel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true},"pieces":[]},{"name":"onDidActivePanelChange","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<DockviewDidDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onGroupDragStart","code":"Event<GroupDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onMove","code":"Event<GroupMoveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onTabDragStart","code":"Event<TabDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDrop","code":"Event<DockviewWillDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillShowOverlay","code":"Event<WillShowOverlayLocationEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"hasWatermark","code":"boolean","kind":"accessor","pieces":[]},{"name":"header","code":"IHeader","kind":"accessor","pieces":["IHeader"]},{"name":"isActive","code":"boolean","kind":"accessor","pieces":[]},{"name":"isContentFocused","code":"boolean","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"isEmpty","code":"boolean","kind":"accessor","pieces":[]},{"name":"location","code":"DockviewGroupLocation","kind":"accessor","pieces":["DockviewGroupLocation"]},{"name":"locked","code":"DockviewGroupPanelLocked","kind":"accessor","pieces":["DockviewGroupPanelLocked"]},{"name":"panels","code":"IDockviewPanel[]","kind":"accessor","pieces":[]},{"name":"renderContainer","code":"OverlayRenderContainer","kind":"accessor","pieces":["OverlayRenderContainer"]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"canDisplayOverlay","code":"(event: DragEvent, position: Position, target: DockviewDropTargets): boolean","kind":"method","pieces":["DockviewDropTargets","Position"]},{"name":"closeAllPanels","code":"(): void","kind":"method","pieces":[]},{"name":"closePanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"containsPanel","code":"(panel: IDockviewPanel): boolean","kind":"method","pieces":["IDockviewPanel"]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"focusContent","code":"(): void","kind":"method","pieces":[]},{"name":"indexOf","code":"(panel: IDockviewPanel): number","kind":"method","pieces":["IDockviewPanel"]},{"name":"init","code":"(_params: PanelInitParameters): void","kind":"method","pieces":["PanelInitParameters"]},{"name":"initialize","code":"(): void","kind":"method","pieces":[]},{"name":"isPanelActive","code":"(panel: IDockviewPanel): boolean","kind":"method","pieces":["IDockviewPanel"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"moveToNext","code":"(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void","kind":"method","pieces":[]},{"name":"moveToPrevious","code":"(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void","kind":"method","pieces":[]},{"name":"openPanel","code":"(panel: IDockviewPanel, options: { index?: number, skipSetActive?: boolean, skipSetGroupActive?: boolean }): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"removePanel","code":"(groupItemOrId: IDockviewPanel | string, options: { skipSetActive?: boolean, skipSetActiveGroup?: boolean }): IDockviewPanel","kind":"method","pieces":["IDockviewPanel"]},{"name":"rerender","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setActive","code":"(isGroupActive: boolean, force: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): GroupPanelViewState","kind":"method","pieces":["GroupPanelViewState"]},{"name":"update","code":"(_params: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]},{"name":"updateActions","code":"(element: HTMLElement | undefined): void","kind":"method","pieces":[]}]},"DockviewMutableDisposable":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]}]},"DockviewPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"api","code":"DockviewPanelApiImpl","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewPanelApiImpl"]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"view","code":"IDockviewPanelModel","kind":"property","flags":{"isReadonly":true},"pieces":["IDockviewPanelModel"]},{"name":"group","code":"DockviewGroupPanel","kind":"accessor","pieces":["DockviewGroupPanel"]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"renderer","code":"DockviewPanelRenderer","kind":"accessor","pieces":["DockviewPanelRenderer"]},{"name":"title","code":"string | undefined","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(params: IGroupPanelInitParameters): void","kind":"method","pieces":["IGroupPanelInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"runEvents","code":"(): void","kind":"method","pieces":[]},{"name":"setRenderer","code":"(renderer: DockviewPanelRenderer): void","kind":"method","pieces":["DockviewPanelRenderer"]},{"name":"setTitle","code":"(title: string): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): GroupviewPanelState","kind":"method","pieces":["GroupviewPanelState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]},{"name":"updateParentGroup","code":"(group: DockviewGroupPanel, options?: { skipSetActive?: boolean }): void","kind":"method","pieces":["DockviewGroupPanel"]}]},"DockviewWillDropEvent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"api","code":"DockviewApi","kind":"accessor","pieces":["DockviewApi"]},{"name":"defaultPrevented","code":"boolean","kind":"accessor","pieces":[]},{"name":"group","code":"DockviewGroupPanel | undefined","kind":"accessor","pieces":[]},{"name":"kind","code":"DockviewGroupDropLocation","kind":"accessor","pieces":["DockviewGroupDropLocation"]},{"name":"nativeEvent","code":"DragEvent","kind":"accessor","pieces":[]},{"name":"panel","code":"IDockviewPanel | undefined","kind":"accessor","pieces":[]},{"name":"position","code":"Position","kind":"accessor","pieces":["Position"]},{"name":"getData","code":"(): PanelTransfer | undefined","kind":"method","pieces":[]},{"name":"preventDefault","code":"(): void","kind":"method","pieces":[]}]},"DraggablePaneviewPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"PaneviewPanelApiImpl","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["PaneviewPanelApiImpl"]},{"name":"body","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"header","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidChangeExpansionState","code":"Event<boolean>","kind":"property","flags":{},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<PaneviewDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"headerVisible","code":"boolean","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"orthogonalSize","code":"number","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getBodyComponent","code":"(): IPaneBodyPart","kind":"method","pieces":["IPaneBodyPart"]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"getHeaderComponent","code":"(): IPaneHeaderPart","kind":"method","pieces":["IPaneHeaderPart"]},{"name":"init","code":"(parameters: PanePanelInitParameter): void","kind":"method","pieces":["PanePanelInitParameter"]},{"name":"isExpanded","code":"(): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setExpanded","code":"(expanded: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): PanePanelViewState","kind":"method","pieces":["PanePanelViewState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"Gridview":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidMaxmizedNodeChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"styles","code":"ISplitviewStyles | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"length","code":"number","kind":"accessor","pieces":[]},{"name":"locked","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addView","code":"(view: IGridView, size: InvisibleSizing | SplitSizing | DistributeSizing | number, location: number[]): void","kind":"method","pieces":["IGridView"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"deserialize","code":"<T>(json: SerializedGridview<T>, deserializer: IViewDeserializer): void","kind":"method","pieces":["IViewDeserializer","SerializedGridview"]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"exitMaximizedView","code":"(): void","kind":"method","pieces":[]},{"name":"getView","code":"(): GridBranchNode<IGridView>\\n(location?: number[]): GridNode<IGridView>","kind":"method","pieces":["GridBranchNode","GridNode"]},{"name":"hasMaximizedView","code":"(): boolean","kind":"method","pieces":[]},{"name":"insertOrthogonalSplitviewAtRoot","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\\nIf the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node"}]},"pieces":[]},{"name":"isViewVisible","code":"(location: number[]): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"maximizeView","code":"(view: IGridView): void","kind":"method","pieces":["IGridView"]},{"name":"maximizedView","code":"(): IGridView | undefined","kind":"method","pieces":[]},{"name":"moveView","code":"(parentLocation: number[], from: number, to: number): void","kind":"method","pieces":[]},{"name":"next","code":"(location: number[]): LeafNode","kind":"method","pieces":["LeafNode"]},{"name":"previous","code":"(location: number[]): LeafNode","kind":"method","pieces":["LeafNode"]},{"name":"remove","code":"(view: IGridView, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): IGridView","kind":"method","pieces":["IGridView"]},{"name":"removeView","code":"(location: number[], sizing?: InvisibleSizing | SplitSizing | DistributeSizing): IGridView","kind":"method","pieces":["IGridView"]},{"name":"serialize","code":"(): SerializedGridview<any>","kind":"method","pieces":["SerializedGridview"]},{"name":"setViewVisible","code":"(location: number[], visible: boolean): void","kind":"method","pieces":[]}]},"GridviewApi":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"height","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Height of the component."}]},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Maximum height of the component."}]},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Maximum width of the component."}]},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Minimum height of the component."}]},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Minimum width of the component."}]},"pieces":[]},{"name":"onDidActivePanelChange","code":"Event<IGridviewPanel<GridviewPanelApi> | undefined>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when the active panel changes. May be undefined if no panel is active."}]},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<IGridviewPanel<GridviewPanelApi>>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is added. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when any layout change occures, an aggregation of many events."}]},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked after a layout is deserialzied using the "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method."}]},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<IGridviewPanel<GridviewPanelApi>>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is removed. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"orientation","code":"Orientation","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Current orientation. Can be changed after initialization."}]},"pieces":["Orientation"]},{"name":"panels","code":"IGridviewPanel<GridviewPanelApi>[]","kind":"accessor","comment":{"summary":[{"kind":"text","text":"All panel objects."}]},"pieces":[]},{"name":"width","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Width of the component."}]},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a panel and return the created object."}]},"pieces":["AddComponentOptions","IGridviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Reset the component back to an empty and default state."}]},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Focus the component. Will try to focus an active panel if one exists."}]},"pieces":[]},{"name":"fromJSON","code":"(data: SerializedGridviewComponent): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a component from a serialized object."}]},"pieces":["SerializedGridviewComponent"]},{"name":"getPanel","code":"(id: string): IGridviewPanel<GridviewPanelApi> | undefined","kind":"method","comment":{"summary":[{"kind":"text","text":"Get a panel object given a "},{"kind":"code","text":"`string`"},{"kind":"text","text":" id. May return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"."}]},"pieces":[]},{"name":"layout","code":"(width: number, height: number, force: boolean): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Force resize the component to an exact width and height. Read about auto-resizing before using."}]},"pieces":[]},{"name":"movePanel","code":"(panel: IGridviewPanel<GridviewPanelApi>, options: { direction: Direction, reference: string, size?: number }): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Move a panel in a particular direction relative to another panel."}]},"pieces":["IGridviewPanel"]},{"name":"removePanel","code":"(panel: IGridviewPanel<GridviewPanelApi>, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Remove a panel given the panel object."}]},"pieces":["IGridviewPanel"]},{"name":"toJSON","code":"(): SerializedGridviewComponent","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a serialized object of the current component."}]},"pieces":["SerializedGridviewComponent"]}]},"GridviewComponent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_activeGroup","code":"GridviewPanel<GridviewPanelApiImpl> | undefined","kind":"property","flags":{"isProtected":true},"pieces":[]},{"name":"_bufferOnDidLayoutChange","code":"TickDelayedEvent","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["TickDelayedEvent"]},{"name":"_groups","code":"Map<string, IValueDisposable<GridviewPanel<GridviewPanelApiImpl>>>","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"_onDidAddGroup","code":"Emitter<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["Emitter"]},{"name":"gridview","code":"Gridview","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":["Gridview"]},{"name":"onDidActiveChange","code":"Event<GridviewPanel<GridviewPanelApiImpl> | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidActiveGroupChange","code":"Event<GridviewPanel<GridviewPanelApiImpl> | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAdd","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddGroup","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemove","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveGroup","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"activeGroup","code":"BaseGrid.T | undefined","kind":"accessor","pieces":[]},{"name":"deserializer","code":"IPanelDeserializer | undefined","kind":"accessor","pieces":[]},{"name":"disableResizing","code":"boolean","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"groups","code":"BaseGrid.T[]","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"id","code":"string","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"locked","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"accessor","pieces":["Event"]},{"name":"options","code":"GridviewComponentOptions","kind":"accessor","pieces":["GridviewComponentOptions"]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>","kind":"method","pieces":["AddComponentOptions","IGridviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"doAddGroup","code":"(group: GridviewPanel<GridviewPanelApiImpl>, location: number[], size?: number): void","kind":"method","pieces":["GridviewPanel"]},{"name":"doRemoveGroup","code":"(group: GridviewPanel<GridviewPanelApiImpl>, options?: { skipActive?: boolean, skipDispose?: boolean }): GridviewPanel<GridviewPanelApiImpl>","kind":"method","pieces":["GridviewPanel"]},{"name":"doSetGroupActive","code":"(group: GridviewPanel<GridviewPanelApiImpl> | undefined): void","kind":"method","pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedGridview: SerializedGridviewComponent): void","kind":"method","pieces":["SerializedGridviewComponent"]},{"name":"getPanel","code":"(id: string): GridviewPanel<GridviewPanelApiImpl> | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): boolean","kind":"method","pieces":["GridviewPanel"]},{"name":"isVisible","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): boolean","kind":"method","pieces":["GridviewPanel"]},{"name":"layout","code":"(width: number, height: number, forceResize?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): void","kind":"method","pieces":["GridviewPanel"]},{"name":"moveGroup","code":"(referenceGroup: IGridPanelComponentView, groupId: string, target: Position): void","kind":"method","pieces":["IGridPanelComponentView","Position"]},{"name":"movePanel","code":"(panel: GridviewPanel<GridviewPanelApiImpl>, options: { direction: Direction, reference: string, size?: number }): void","kind":"method","pieces":["GridviewPanel"]},{"name":"moveToNext","code":"(options?: MovementOptions2): void","kind":"method","pieces":["MovementOptions2"]},{"name":"moveToPrevious","code":"(options?: MovementOptions2): void","kind":"method","pieces":["MovementOptions2"]},{"name":"removeGroup","code":"(group: GridviewPanel<GridviewPanelApiImpl>): void","kind":"method","pieces":["GridviewPanel"]},{"name":"removePanel","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): void","kind":"method","pieces":["GridviewPanel"]},{"name":"setActive","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): void","kind":"method","pieces":["GridviewPanel"]},{"name":"setVisible","code":"(panel: GridviewPanel<GridviewPanelApiImpl>, visible: boolean): void","kind":"method","pieces":["GridviewPanel"]},{"name":"toJSON","code":"(): SerializedGridviewComponent","kind":"method","comment":{"summary":[{"kind":"text","text":"Serialize the current state of the layout"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A JSON respresentation of the layout"}]}]},"pieces":["SerializedGridviewComponent"]},{"name":"updateOptions","code":"(options: Partial<GridviewComponentUpdateOptions>): void","kind":"method","pieces":[]}]},"GridviewPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"GridviewPanel.T","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["T"]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isActive","code":"boolean","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"maximumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"minimumHeight","code":"number","kind":"accessor","pieces":[]},{"name":"minimumWidth","code":"number","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"accessor","pieces":[]},{"name":"snap","code":"boolean","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"init","code":"(parameters: GridviewInitParameters): void","kind":"method","pieces":["GridviewInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): GridPanelViewState","kind":"method","pieces":["GridPanelViewState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"LocalSelectionTransfer":{"kind":"class","children":[{"name":"clearData","code":"(proto: LocalSelectionTransfer.T): void","kind":"method","pieces":["T"]},{"name":"getData","code":"(proto: LocalSelectionTransfer.T): LocalSelectionTransfer.T[] | undefined","kind":"method","pieces":["T"]},{"name":"hasData","code":"(proto: LocalSelectionTransfer.T): boolean","kind":"method","pieces":["T"]},{"name":"setData","code":"(data: LocalSelectionTransfer.T[], proto: LocalSelectionTransfer.T): void","kind":"method","pieces":["T"]},{"name":"getInstance","code":"<T>(): LocalSelectionTransfer<T>","kind":"method","pieces":["LocalSelectionTransfer"]}]},"PaneFramework":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"PaneviewPanelApiImpl","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["PaneviewPanelApiImpl"]},{"name":"body","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"header","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidChangeExpansionState","code":"Event<boolean>","kind":"property","flags":{},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<PaneviewDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"headerVisible","code":"boolean","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"orthogonalSize","code":"number","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getBodyComponent","code":"(): IPaneBodyPart","kind":"method","pieces":["IPaneBodyPart"]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"getHeaderComponent","code":"(): IPaneHeaderPart","kind":"method","pieces":["IPaneHeaderPart"]},{"name":"init","code":"(parameters: PanePanelInitParameter): void","kind":"method","pieces":["PanePanelInitParameter"]},{"name":"isExpanded","code":"(): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setExpanded","code":"(expanded: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): PanePanelViewState","kind":"method","pieces":["PanePanelViewState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"PaneTransfer":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"paneId","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"viewId","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]}]},"PanelTransfer":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"groupId","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"panelId","code":"string | \'null\'","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"viewId","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]}]},"Paneview":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"onDidChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"onDidAddView","code":"Event<PaneviewPanel>","kind":"accessor","pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<PaneviewPanel>","kind":"accessor","pieces":["Event"]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"orthogonalSize","code":"number","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"addPane","code":"(pane: PaneviewPanel, size?: InvisibleSizing | SplitSizing | DistributeSizing | number, index: number, skipLayout: boolean): void","kind":"method","pieces":["PaneviewPanel"]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"getPanes","code":"(): PaneviewPanel[]","kind":"method","pieces":[]},{"name":"getViewSize","code":"(index: number): number","kind":"method","pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"moveView","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removePane","code":"(index: number, options: { skipDispose: boolean }): PaneItem","kind":"method","pieces":["PaneItem"]}]},"PaneviewApi":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"height","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Height of the component."}]},"pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The maximum size the component can reach where size is measured in the direction of orientation provided."}]},"pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The minimum size  the component can reach where size is measured in the direction of orientation provided."}]},"pieces":[]},{"name":"onDidAddView","code":"Event<IPaneviewPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is added. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<PaneviewDropEvent>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a Drag\'n\'Drop event occurs that the component was unable to handle. Exposed for custom Drag\'n\'Drop functionality."}]},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when any layout change occures, an aggregation of many events."}]},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked after a layout is deserialzied using the "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method."}]},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<IPaneviewPanel>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a panel is removed. May be called multiple times when moving panels."}]},"pieces":["Event"]},{"name":"panels","code":"IPaneviewPanel[]","kind":"accessor","comment":{"summary":[{"kind":"text","text":"All panel objects."}]},"pieces":[]},{"name":"width","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Width of the component."}]},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a panel and return the created object."}]},"pieces":["AddPaneviewComponentOptions","IPaneviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Reset the component back to an empty and default state."}]},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Focus the component. Will try to focus an active panel if one exists."}]},"pieces":[]},{"name":"fromJSON","code":"(data: SerializedPaneview): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a component from a serialized object."}]},"pieces":["SerializedPaneview"]},{"name":"getPanel","code":"(id: string): IPaneviewPanel | undefined","kind":"method","comment":{"summary":[{"kind":"text","text":"Get a panel object given a "},{"kind":"code","text":"`string`"},{"kind":"text","text":" id. May return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"."}]},"pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Force resize the component to an exact width and height. Read about auto-resizing before using."}]},"pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Move a panel given it\'s current and desired index."}]},"pieces":[]},{"name":"removePanel","code":"(panel: IPaneviewPanel): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Remove a panel given the panel object."}]},"pieces":["IPaneviewPanel"]},{"name":"toJSON","code":"(): SerializedPaneview","kind":"method","comment":{"summary":[{"kind":"text","text":"Create a serialized object of the current component."}]},"pieces":["SerializedPaneview"]}]},"PaneviewComponent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"onDidAddView","code":"Event<PaneviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<PaneviewDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<PaneviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"disableResizing","code":"boolean","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"id","code":"string","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"options","code":"PaneviewComponentOptions","kind":"accessor","pieces":["PaneviewComponentOptions"]},{"name":"panels","code":"PaneviewPanel[]","kind":"accessor","pieces":[]},{"name":"paneview","code":"Paneview","kind":"accessor","pieces":["Paneview"]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel","kind":"method","pieces":["AddPaneviewComponentOptions","IPaneviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedPaneview: SerializedPaneview): void","kind":"method","pieces":["SerializedPaneview"]},{"name":"getPanel","code":"(id: string): PaneviewPanel | undefined","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removePanel","code":"(panel: PaneviewPanel): void","kind":"method","pieces":["PaneviewPanel"]},{"name":"toJSON","code":"(): SerializedPaneview","kind":"method","pieces":["SerializedPaneview"]},{"name":"updateOptions","code":"(options: Partial<PaneviewComponentOptions>): void","kind":"method","pieces":[]}]},"PaneviewPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"PaneviewPanelApiImpl","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["PaneviewPanelApiImpl"]},{"name":"body","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"header","code":"HTMLElement","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidChangeExpansionState","code":"Event<boolean>","kind":"property","flags":{},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"headerVisible","code":"boolean","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumBodySize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"orthogonalSize","code":"number","kind":"accessor","pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getBodyComponent","code":"(): IPaneBodyPart","kind":"method","pieces":["IPaneBodyPart"]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"getHeaderComponent","code":"(): IPaneHeaderPart","kind":"method","pieces":["IPaneHeaderPart"]},{"name":"init","code":"(parameters: PanePanelInitParameter): void","kind":"method","pieces":["PanePanelInitParameter"]},{"name":"isExpanded","code":"(): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setExpanded","code":"(expanded: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): PanePanelViewState","kind":"method","pieces":["PanePanelViewState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"Splitview":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"onDidAddView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidSashEnd","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"contentSize","code":"number","kind":"accessor","pieces":[]},{"name":"disabled","code":"boolean","kind":"accessor","pieces":[]},{"name":"endSnappingEnabled","code":"boolean","kind":"accessor","pieces":[]},{"name":"length","code":"number","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"orthogonalSize","code":"number","kind":"accessor","pieces":[]},{"name":"proportions","code":"number | undefined[] | undefined","kind":"accessor","pieces":[]},{"name":"size","code":"number","kind":"accessor","pieces":[]},{"name":"startSnappingEnabled","code":"boolean","kind":"accessor","pieces":[]},{"name":"addView","code":"(view: IView, size: InvisibleSizing | SplitSizing | DistributeSizing | number, index: number, skipLayout?: boolean): void","kind":"method","pieces":["IView"]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"distributeViewSizes","code":"(): void","kind":"method","pieces":[]},{"name":"getViewCachedVisibleSize","code":"(index: number): number | undefined","kind":"method","pieces":[]},{"name":"getViewSize","code":"(index: number): number","kind":"method","pieces":[]},{"name":"getViews","code":"<T extends IView>(): T[]","kind":"method","pieces":["IView"]},{"name":"isViewVisible","code":"(index: number): boolean","kind":"method","pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"moveView","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removeView","code":"(index: number, sizing?: InvisibleSizing | SplitSizing | DistributeSizing, skipLayout: boolean): IView","kind":"method","pieces":["IView"]},{"name":"resizeView","code":"(index: number, size: number): void","kind":"method","pieces":[]},{"name":"setViewVisible","code":"(index: number, visible: boolean): void","kind":"method","pieces":[]},{"name":"style","code":"(styles?: ISplitviewStyles): void","kind":"method","pieces":["ISplitviewStyles"]}]},"SplitviewApi":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"height","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Height of the component."}]},"pieces":[]},{"name":"length","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The current number of panels."}]},"pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The maximum size the component can reach where size is measured in the direction of orientation provided."}]},"pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The minimum size  the component can reach where size is measured in the direction of orientation provided."}]},"pieces":[]},{"name":"onDidAddView","code":"Event<IView>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a view is added."}]},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked whenever any aspect of the layout changes.\\nIf listening to this event it may be worth debouncing ouputs."}]},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked after a layout is loaded through the "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method."}]},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<IView>","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Invoked when a view is removed."}]},"pieces":["Event"]},{"name":"orientation","code":"Orientation","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The current orientation of the component."}]},"pieces":["Orientation"]},{"name":"panels","code":"ISplitviewPanel[]","kind":"accessor","comment":{"summary":[{"kind":"text","text":"The list of current panels."}]},"pieces":[]},{"name":"width","code":"number","kind":"accessor","comment":{"summary":[{"kind":"text","text":"Width of the component."}]},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): ISplitviewPanel","kind":"method","comment":{"summary":[{"kind":"text","text":"Add a new panel and return the created instance."}]},"pieces":["AddSplitviewComponentOptions","ISplitviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Remove all panels and clear the component."}]},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Focus the component."}]},"pieces":[]},{"name":"fromJSON","code":"(data: SerializedSplitview): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Deserialize a layout to built a splitivew."}]},"pieces":["SerializedSplitview"]},{"name":"getPanel","code":"(id: string): ISplitviewPanel | undefined","kind":"method","comment":{"summary":[{"kind":"text","text":"Get the reference to a panel given it\'s "},{"kind":"code","text":"`string`"},{"kind":"text","text":" id."}]},"pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Layout the panel with a width and height."}]},"pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Move a panel given it\'s current and desired index."}]},"pieces":[]},{"name":"removePanel","code":"(panel: ISplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Removes an existing panel and optionally provide a "},{"kind":"code","text":"`Sizing`"},{"kind":"text","text":" method\\nfor the subsequent resize."}]},"pieces":["ISplitviewPanel"]},{"name":"toJSON","code":"(): SerializedSplitview","kind":"method","comment":{"summary":[{"kind":"text","text":"Serialize a layout"}]},"pieces":["SerializedSplitview"]},{"name":"updateOptions","code":"(options: SplitviewComponentUpdateOptions): void","kind":"method","comment":{"summary":[{"kind":"text","text":"Update configuratable options."}]},"pieces":["SplitviewComponentUpdateOptions"]}]},"SplitviewComponent":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"onDidAddView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"disableResizing","code":"boolean","kind":"accessor","pieces":[]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"length","code":"number","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"options","code":"SplitviewComponentOptions","kind":"accessor","pieces":["SplitviewComponentOptions"]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"panels","code":"SplitviewPanel[]","kind":"accessor","pieces":[]},{"name":"splitview","code":"Splitview","kind":"accessor","pieces":["Splitview"]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): SplitviewPanel","kind":"method","pieces":["AddSplitviewComponentOptions","Parameters","SplitviewPanel"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedSplitview: SerializedSplitview): void","kind":"method","pieces":["SerializedSplitview"]},{"name":"getPanel","code":"(id: string): SplitviewPanel | undefined","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removePanel","code":"(panel: SplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void","kind":"method","pieces":["SplitviewPanel"]},{"name":"setActive","code":"(view: SplitviewPanel, skipFocus?: boolean): void","kind":"method","pieces":["SplitviewPanel"]},{"name":"setVisible","code":"(panel: SplitviewPanel, visible: boolean): void","kind":"method","pieces":["SplitviewPanel"]},{"name":"toJSON","code":"(): SerializedSplitview","kind":"method","pieces":["SerializedSplitview"]},{"name":"updateOptions","code":"(options: Partial<SplitviewComponentUpdateOptions>): void","kind":"method","pieces":[]}]},"SplitviewPanel":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"_params","code":"PanelInitParameters","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["PanelInitParameters"]},{"name":"api","code":"SplitviewPanelApiImpl","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["SplitviewPanelApiImpl"]},{"name":"component","code":"string","kind":"property","flags":{"isProtected":true,"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"part","code":"IFrameworkPart","kind":"property","flags":{"isProtected":true,"isOptional":true},"pieces":["IFrameworkPart"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"height","code":"number","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"maximumSize","code":"number","kind":"accessor","pieces":[]},{"name":"minimumSize","code":"number","kind":"accessor","pieces":[]},{"name":"orientation","code":"Orientation","kind":"accessor","pieces":["Orientation"]},{"name":"params","code":"Parameters | undefined","kind":"accessor","pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"accessor","pieces":[]},{"name":"snap","code":"boolean","kind":"accessor","pieces":[]},{"name":"width","code":"number","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"getComponent","code":"(): IFrameworkPart","kind":"method","pieces":["IFrameworkPart"]},{"name":"init","code":"(parameters: PanelViewInitParameters): void","kind":"method","pieces":["PanelViewInitParameters"]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(isVisible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): { component: string, id: string, maximumSize: number | undefined, minimumSize: number | undefined, params?: Parameters }","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"Tab":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"onChanged","code":"Event<MouseEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDragStart","code":"Event<DragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDrop","code":"Event<DroptargetEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillShowOverlay","code":"Event<WillShowOverlayEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"panel","code":"IDockviewPanel","kind":"property","flags":{"isPublic":true,"isReadonly":true},"pieces":["IDockviewPanel"]},{"name":"element","code":"HTMLElement","kind":"accessor","pieces":[]},{"name":"isDisposed","code":"boolean","kind":"accessor","pieces":[]},{"name":"addDisposables","code":"(args: IDisposable[]): void","kind":"method","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setContent","code":"(part: ITabRenderer): void","kind":"method","pieces":["ITabRenderer"]}]},"ActiveEvent":{"kind":"interface","children":[{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"AddComponentOptions":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"location","code":"number[]","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"AddComponentOptions.T","kind":"property","flags":{"isOptional":true},"pieces":["T"]},{"name":"position","code":"{ direction: Direction, referencePanel: string }","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"AddPaneviewComponentOptions":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"headerComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"index","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"isExpanded","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"AddPaneviewComponentOptions.T","kind":"property","flags":{"isOptional":true},"pieces":["T"]},{"name":"size","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"AddSplitviewComponentOptions":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"index","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"AddSplitviewComponentOptions.T","kind":"property","flags":{"isOptional":true},"pieces":["T"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"BaseComponentOptions":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"params","code":"BaseComponentOptions.T","kind":"property","flags":{"isOptional":true},"pieces":["T"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"BaseGridOptions":{"kind":"interface","children":[{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"locked","code":"boolean","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"parentElement","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"styles","code":"ISplitviewStyles","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["ISplitviewStyles"]}]},"CommonApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(data: CommonApi.T): void","kind":"method","pieces":["T"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): CommonApi.T","kind":"method","pieces":["T"]}]},"DockviewComponentOptions":{"kind":"interface","children":[{"name":"components","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"createLeftHeaderActionsElement","code":"(group: DockviewGroupPanel): IHeaderActionsRenderer","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"createPrefixHeaderActionsElement","code":"(group: DockviewGroupPanel): IHeaderActionsRenderer","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"createRightHeaderActionsElement","code":"(group: DockviewGroupPanel): IHeaderActionsRenderer","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"debug","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"defaultRenderer","code":"\'always\' | \'onlyWhenVisibile\'","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"defaultTabComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableDnd","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableFloatingGroups","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"floatingGroupBounds","code":"\'boundedWithinViewport\' | { minimumHeightWithinViewport?: number, minimumWidthWithinViewport?: number }","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkComponentFactory","code":"GroupPanelFrameworkComponentFactory","kind":"property","flags":{"isOptional":true},"pieces":["GroupPanelFrameworkComponentFactory"]},{"name":"frameworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkTabComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"locked","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"orientation","code":"Orientation.VERTICAL | Orientation.HORIZONTAL","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"parentElement","code":"HTMLElement","kind":"property","flags":{},"pieces":[]},{"name":"popoutUrl","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"rootOverlayModel","code":"DroptargetOverlayModel","kind":"property","flags":{"isOptional":true},"pieces":["DroptargetOverlayModel"]},{"name":"showDndOverlay","code":"(event: DockviewDndOverlayEvent): boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"singleTabMode","code":"\'default\' | \'fullwidth\'","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"styles","code":"ISplitviewStyles","kind":"property","flags":{"isOptional":true},"pieces":["ISplitviewStyles"]},{"name":"tabComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"watermarkComponent","code":"WatermarkConstructor","kind":"property","flags":{"isOptional":true},"pieces":["WatermarkConstructor"]},{"name":"watermarkFrameworkComponent","code":"any","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"DockviewDndOverlayEvent":{"kind":"interface","children":[{"name":"getData","code":"(): PanelTransfer | undefined","kind":"property","flags":{},"pieces":[]},{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{"isOptional":true},"pieces":["DockviewGroupPanel"]},{"name":"nativeEvent","code":"DragEvent","kind":"property","flags":{},"pieces":[]},{"name":"position","code":"Position","kind":"property","flags":{},"pieces":["Position"]},{"name":"target","code":"DockviewDropTargets","kind":"property","flags":{},"pieces":["DockviewDropTargets"]}]},"DockviewGroupChangeEvent":{"kind":"interface","children":[{"name":"panel","code":"IDockviewPanel","kind":"property","flags":{"isReadonly":true},"pieces":["IDockviewPanel"]}]},"DockviewGroupPanelApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"location","code":"DockviewGroupLocation","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupLocation"]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidConstraintsChange","code":"Event<GridConstraintChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLocationChange","code":"Event<DockviewGroupPanelFloatingChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"exitMaximized","code":"(): void","kind":"method","pieces":[]},{"name":"getWindow","code":"(): Window","kind":"method","comment":{"summary":[{"kind":"text","text":"If you require the Window object"}]},"pieces":[]},{"name":"isMaximized","code":"(): boolean","kind":"method","pieces":[]},{"name":"maximize","code":"(): void","kind":"method","pieces":[]},{"name":"moveTo","code":"(options: { group?: DockviewGroupPanel, position?: \'right\' | \'bottom\' | \'top\' | \'left\' | \'center\' }): void","kind":"method","pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"setConstraints","code":"(value: GridConstraintChangeEvent2): void","kind":"method","pieces":["GridConstraintChangeEvent2"]},{"name":"setSize","code":"(event: SizeEvent): void","kind":"method","pieces":["SizeEvent"]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"DockviewGroupPanelFloatingChangeEvent":{"kind":"interface","children":[{"name":"location","code":"DockviewGroupLocation","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupLocation"]}]},"DockviewPanelApi":{"kind":"interface","children":[{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupPanel"]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isGroupActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"location","code":"DockviewGroupLocation","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupLocation"]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidActiveGroupChange","code":"Event<ActiveGroupEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidGroupChange","code":"Event<GroupChangedEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLocationChange","code":"Event<DockviewGroupPanelFloatingChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRendererChange","code":"Event<RendererChangedEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"renderer","code":"DockviewPanelRenderer","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewPanelRenderer"]},{"name":"title","code":"string | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"close","code":"(): void","kind":"method","pieces":[]},{"name":"exitMaximized","code":"(): void","kind":"method","pieces":[]},{"name":"getWindow","code":"(): Window","kind":"method","comment":{"summary":[{"kind":"text","text":"If you require the Window object"}]},"pieces":[]},{"name":"isMaximized","code":"(): boolean","kind":"method","pieces":[]},{"name":"maximize","code":"(): void","kind":"method","pieces":[]},{"name":"moveTo","code":"(options: { group: DockviewGroupPanel, index?: number, position?: \'right\' | \'bottom\' | \'top\' | \'left\' | \'center\' }): void","kind":"method","pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"setRenderer","code":"(renderer: DockviewPanelRenderer): void","kind":"method","pieces":["DockviewPanelRenderer"]},{"name":"setSize","code":"(event: SizeEvent): void","kind":"method","pieces":["SizeEvent"]},{"name":"setTitle","code":"(title: string): void","kind":"method","pieces":[]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"DockviewRenderFunctions":{"kind":"interface","children":[{"name":"components","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkTabComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"tabComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"ExpansionEvent":{"kind":"interface","children":[{"name":"isExpanded","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"FocusEvent":{"kind":"interface","children":[{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"FrameworkFactory":{"kind":"interface","children":[{"name":"createComponent","code":"(id: string, componentId: string, component: any): FrameworkFactory.T","kind":"property","flags":{},"pieces":[]}]},"GridBranchNode":{"kind":"interface","children":[{"name":"box","code":"{ height: number, width: number }","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"children","code":"GridNode<GridBranchNode.T>[]","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"GridConstraintChangeEvent":{"kind":"interface","children":[{"name":"maximumHeight","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]}]},"GridLeafNode":{"kind":"interface","children":[{"name":"box","code":"{ height: number, width: number }","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"cachedVisibleSize","code":"number | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"view","code":"GridLeafNode.T","kind":"property","flags":{"isReadonly":true},"pieces":["T"]}]},"GridPanelViewState":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["Parameters"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"GridviewComponentOptions":{"kind":"interface","children":[{"name":"components","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkComponentFactory","code":"FrameworkFactory<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isOptional":true},"pieces":["FrameworkFactory"]},{"name":"frameworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"orientation","code":"Orientation","kind":"property","flags":{},"pieces":["Orientation"]},{"name":"parentElement","code":"HTMLElement","kind":"property","flags":{},"pieces":[]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{},"pieces":[]},{"name":"styles","code":"ISplitviewStyles","kind":"property","flags":{"isOptional":true},"pieces":["ISplitviewStyles"]}]},"GridviewInitParameters":{"kind":"interface","children":[{"name":"accessor","code":"BaseGrid<IGridPanelView>","kind":"property","flags":{},"pieces":["BaseGrid"]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"GridviewPanelApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidConstraintsChange","code":"Event<GridConstraintChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"setConstraints","code":"(value: GridConstraintChangeEvent2): void","kind":"method","pieces":["GridConstraintChangeEvent2"]},{"name":"setSize","code":"(event: SizeEvent): void","kind":"method","pieces":["SizeEvent"]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"GroupDragEvent":{"kind":"interface","children":[{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupPanel"]},{"name":"nativeEvent","code":"DragEvent","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"GroupOptions":{"kind":"interface","children":[{"name":"activePanel","code":"IDockviewPanel","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["IDockviewPanel"]},{"name":"hideHeader","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"locked","code":"\'no-drop-target\' | boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"panels","code":"IDockviewPanel[]","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"skipSetActive","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"GroupPanelContentPartInitParameters":{"kind":"interface","children":[{"name":"api","code":"DockviewPanelApi","kind":"property","flags":{},"pieces":["DockviewPanelApi"]},{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"tab","code":"ITabRenderer","kind":"property","flags":{},"pieces":["ITabRenderer"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"GroupPanelFrameworkComponentFactory":{"kind":"interface","children":[{"name":"content","code":"FrameworkFactory<IContentRenderer>","kind":"property","flags":{},"pieces":["FrameworkFactory"]},{"name":"tab","code":"FrameworkFactory<ITabRenderer>","kind":"property","flags":{},"pieces":["FrameworkFactory"]},{"name":"watermark","code":"FrameworkFactory<IWatermarkRenderer>","kind":"property","flags":{},"pieces":["FrameworkFactory"]}]},"GroupPanelPartInitParameters":{"kind":"interface","children":[{"name":"api","code":"DockviewPanelApi","kind":"property","flags":{},"pieces":["DockviewPanelApi"]},{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"GroupPanelViewState":{"kind":"interface","children":[{"name":"activeView","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"hideHeader","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"locked","code":"\'no-drop-target\' | boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"skipSetActive","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"views","code":"string[]","kind":"property","flags":{},"pieces":[]}]},"GroupviewPanelState":{"kind":"interface","children":[{"name":"contentComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"params","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"renderer","code":"\'always\' | \'onlyWhenVisibile\'","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"tabComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"title","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"HeaderPartInitParameters":{"kind":"interface","children":[{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"IBaseGrid":{"kind":"interface","children":[{"name":"activeGroup","code":"IBaseGrid.T | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"groups","code":"IBaseGrid.T[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(data: any): void","kind":"method","pieces":[]},{"name":"getPanel","code":"(id: string): IBaseGrid.T | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: IBaseGrid.T): boolean","kind":"method","pieces":["T"]},{"name":"isVisible","code":"(panel: IBaseGrid.T): boolean","kind":"method","pieces":["T"]},{"name":"layout","code":"(width: number, height: number, force?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: IBaseGrid.T): void","kind":"method","pieces":["T"]},{"name":"setVisible","code":"(panel: IBaseGrid.T, visible: boolean): void","kind":"method","pieces":["T"]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]}]},"IBaseView":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IContentContainer":{"kind":"interface","children":[{"name":"closePanel","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"dropTarget","code":"Droptarget","kind":"property","flags":{"isReadonly":true},"pieces":["Droptarget"]},{"name":"element","code":"HTMLElement","kind":"property","flags":{},"pieces":[]},{"name":"onDidBlur","code":"Event<void>","kind":"property","flags":{},"pieces":["Event"]},{"name":"onDidFocus","code":"Event<void>","kind":"property","flags":{},"pieces":["Event"]},{"name":"openPanel","code":"(panel: IDockviewPanel): void","kind":"property","flags":{},"pieces":[]},{"name":"hide","code":"(): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"renderPanel","code":"(panel: IDockviewPanel, options: { asActive: boolean }): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"show","code":"(): void","kind":"method","pieces":[]}]},"IContentRenderer":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidBlur","code":"Event<void>","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocus","code":"Event<void>","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["Event"]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(parameters: GroupPanelContentPartInitParameters): void","kind":"method","pieces":["GroupPanelContentPartInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IDockviewComponent":{"kind":"interface","children":[{"name":"activeGroup","code":"DockviewGroupPanel | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"doSetGroupActive","code":"(group: DockviewGroupPanel, skipFocus?: boolean): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"getGroupPanel","code":"(id: string): IDockviewPanel | undefined","kind":"property","flags":{},"pieces":[]},{"name":"groups","code":"DockviewGroupPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidActiveGroupChange","code":"Event<DockviewGroupPanel | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidActivePanelChange","code":"Event<IDockviewPanel | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddGroup","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<IDockviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<DockviewDidDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveGroup","code":"Event<DockviewGroupPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<IDockviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDragGroup","code":"Event<GroupDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDragPanel","code":"Event<TabDragEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDrop","code":"Event<DockviewWillDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillShowOverlay","code":"Event<WillShowOverlayLocationEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"options","code":"DockviewComponentOptions","kind":"property","flags":{},"pieces":["DockviewComponentOptions"]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"panels","code":"IDockviewPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"removeGroup","code":"(group: DockviewGroupPanel): void","kind":"property","flags":{},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"totalPanels","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"addFloatingGroup","code":"(item: IDockviewPanel | DockviewGroupPanel, coord?: { x: number, y: number }): void","kind":"method","pieces":[]},{"name":"addGroup","code":"(options?: GroupOptions & AddGroupOptionsWithPanel | GroupOptions & AddGroupOptionsWithGroup | GroupOptions & AbsolutePosition): DockviewGroupPanel","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPanelOptions<T>): IDockviewPanel","kind":"method","pieces":["AddPanelOptions","IDockviewPanel","Parameters"]},{"name":"addPopoutGroup","code":"(item: IDockviewPanel | DockviewGroupPanel, options?: { onDidOpen?: (event: { id: string, window: Window }): void, onWillClose?: (event: { id: string, window: Window }): void, popoutUrl?: string, position?: Box }): Promise<void>","kind":"method","pieces":[]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"closeAllGroups","code":"(): void","kind":"method","pieces":[]},{"name":"createWatermarkComponent","code":"(): IWatermarkRenderer","kind":"method","pieces":["IWatermarkRenderer"]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(data: SerializedDockview): void","kind":"method","pieces":["SerializedDockview"]},{"name":"getPanel","code":"(id: string): DockviewGroupPanel | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: DockviewGroupPanel): boolean","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"isVisible","code":"(panel: DockviewGroupPanel): boolean","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"layout","code":"(width: number, height: number, force?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: DockviewGroupPanel): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"moveGroup","code":"(options: MoveGroupOptions): void","kind":"method","pieces":["MoveGroupOptions"]},{"name":"moveGroupOrPanel","code":"(options: MoveGroupOrPanelOptions): void","kind":"method","pieces":["MoveGroupOrPanelOptions"]},{"name":"moveToNext","code":"(options?: MovementOptions): void","kind":"method","pieces":["MovementOptions"]},{"name":"moveToPrevious","code":"(options?: MovementOptions): void","kind":"method","pieces":["MovementOptions"]},{"name":"removePanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setActivePanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setVisible","code":"(panel: DockviewGroupPanel, visible: boolean): void","kind":"method","pieces":["DockviewGroupPanel"]},{"name":"toJSON","code":"(): SerializedDockview","kind":"method","pieces":["SerializedDockview"]},{"name":"updateOptions","code":"(options: DockviewComponentUpdateOptions): void","kind":"method","pieces":["DockviewComponentUpdateOptions"]}]},"IDockviewDisposable":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]}]},"IDockviewGroupPanel":{"kind":"interface","children":[{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"api","code":"DockviewGroupPanelApi","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupPanelApi"]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"locked","code":"DockviewGroupPanelLocked","kind":"property","flags":{},"pieces":["DockviewGroupPanelLocked"]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"model","code":"IDockviewGroupPanelModel","kind":"property","flags":{},"pieces":["IDockviewGroupPanelModel"]},{"name":"panels","code":"IDockviewPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IDockviewGroupPanelModel":{"kind":"interface","children":[{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"header","code":"IHeader","kind":"property","flags":{"isReadonly":true},"pieces":["IHeader"]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isContentFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isPanelActive","code":"(panel: IDockviewPanel): boolean","kind":"property","flags":{},"pieces":[]},{"name":"locked","code":"DockviewGroupPanelLocked","kind":"property","flags":{},"pieces":["DockviewGroupPanelLocked"]},{"name":"onDidActivePanelChange","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddPanel","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<DockviewDidDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemovePanel","code":"Event<DockviewGroupChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onMove","code":"Event<GroupMoveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillDrop","code":"Event<DockviewWillDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"panels","code":"IDockviewPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"removePanel","code":"(panelOrId: IDockviewPanel | string): IDockviewPanel","kind":"property","flags":{},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"canDisplayOverlay","code":"(event: DragEvent, position: Position, target: DockviewDropTargets): boolean","kind":"method","pieces":["DockviewDropTargets","Position"]},{"name":"closeAllPanels","code":"(): void","kind":"method","pieces":[]},{"name":"closePanel","code":"(panel: IDockviewPanel): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"containsPanel","code":"(panel: IDockviewPanel): boolean","kind":"method","pieces":["IDockviewPanel"]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"indexOf","code":"(panel: IDockviewPanel): number","kind":"method","pieces":["IDockviewPanel"]},{"name":"init","code":"(params: PanelInitParameters): void","kind":"method","pieces":["PanelInitParameters"]},{"name":"initialize","code":"(): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"moveToNext","code":"(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void","kind":"method","pieces":[]},{"name":"moveToPrevious","code":"(options?: { panel?: IDockviewPanel, suppressRoll?: boolean }): void","kind":"method","pieces":[]},{"name":"openPanel","code":"(panel: IDockviewPanel, options?: { index?: number, skipFocus?: boolean, skipSetGroupActive?: boolean, skipSetPanelActive?: boolean }): void","kind":"method","pieces":["IDockviewPanel"]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IDockviewPanel":{"kind":"interface","children":[{"name":"api","code":"DockviewPanelApi","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewPanelApi"]},{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewGroupPanel"]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"title","code":"string | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"view","code":"IDockviewPanelModel","kind":"property","flags":{"isReadonly":true},"pieces":["IDockviewPanelModel"]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(params: IGroupPanelInitParameters): void","kind":"method","pieces":["IGroupPanelInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"runEvents","code":"(): void","kind":"method","pieces":[]},{"name":"setTitle","code":"(title: string): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): GroupviewPanelState","kind":"method","pieces":["GroupviewPanelState"]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]},{"name":"updateParentGroup","code":"(group: DockviewGroupPanel, options?: { skipSetActive?: boolean }): void","kind":"method","pieces":["DockviewGroupPanel"]}]},"IFrameworkPart":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"update","code":"(params: Parameters): void","kind":"method","pieces":["Parameters"]}]},"IGridPanelComponentView":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"init","code":"(params: GridviewInitParameters): void","kind":"property","flags":{},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(json: object): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(visible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IGridPanelView":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(json: object): void","kind":"method","pieces":[]},{"name":"init","code":"(params: PanelInitParameters): void","kind":"method","pieces":["PanelInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"setActive","code":"(isActive: boolean): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(visible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IGridView":{"kind":"interface","children":[{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidChange","code":"Event<IViewSize | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"fromJSON","code":"(json: object): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(visible: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]}]},"IGridviewComponent":{"kind":"interface","children":[{"name":"activeGroup","code":"GridviewPanel<GridviewPanelApiImpl> | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"groups","code":"GridviewPanel<GridviewPanelApiImpl>[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidActiveGroupChange","code":"Event<GridviewPanel<GridviewPanelApiImpl> | undefined>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidAddGroup","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidMaxmizedGroupChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveGroup","code":"Event<GridviewPanel<GridviewPanelApiImpl>>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddComponentOptions<T>): IGridviewPanel<GridviewPanelApi>","kind":"method","pieces":["AddComponentOptions","IGridviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"exitMaximizedGroup","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedGridview: SerializedGridviewComponent): void","kind":"method","pieces":["SerializedGridviewComponent"]},{"name":"getPanel","code":"(id: string): GridviewPanel<GridviewPanelApiImpl> | undefined","kind":"method","pieces":[]},{"name":"hasMaximizedGroup","code":"(): boolean","kind":"method","pieces":[]},{"name":"isMaximizedGroup","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): boolean","kind":"method","pieces":["GridviewPanel"]},{"name":"isVisible","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): boolean","kind":"method","pieces":["GridviewPanel"]},{"name":"layout","code":"(width: number, height: number, force?: boolean): void","kind":"method","pieces":[]},{"name":"maximizeGroup","code":"(panel: GridviewPanel<GridviewPanelApiImpl>): void","kind":"method","pieces":["GridviewPanel"]},{"name":"movePanel","code":"(panel: IGridviewPanel<GridviewPanelApi>, options: { direction: Direction, reference: string, size?: number }): void","kind":"method","pieces":["IGridviewPanel"]},{"name":"removePanel","code":"(panel: IGridviewPanel<GridviewPanelApi>, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void","kind":"method","pieces":["IGridviewPanel"]},{"name":"setActive","code":"(panel: IGridviewPanel<GridviewPanelApi>): void","kind":"method","pieces":["IGridviewPanel"]},{"name":"setVisible","code":"(panel: IGridviewPanel<GridviewPanelApi>, visible: boolean): void","kind":"method","pieces":["IGridviewPanel"]},{"name":"toJSON","code":"(): SerializedGridviewComponent","kind":"method","pieces":["SerializedGridviewComponent"]},{"name":"updateOptions","code":"(options: Partial<GridviewComponentUpdateOptions>): void","kind":"method","pieces":[]}]},"IGridviewPanel":{"kind":"interface","children":[{"name":"api","code":"IGridviewPanel.T","kind":"property","flags":{"isReadonly":true},"pieces":["T"]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumHeight","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumWidth","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IGroupPanelInitParameters":{"kind":"interface","children":[{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"IHeader":{"kind":"interface","children":[{"name":"hidden","code":"boolean","kind":"property","flags":{},"pieces":[]}]},"IHeaderActionsRenderer":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"init","code":"(params: { api: DockviewGroupPanelApi, containerApi: DockviewApi }): void","kind":"method","pieces":[]}]},"INodeDescriptor":{"kind":"interface","children":[{"name":"node","code":"Node","kind":"property","flags":{},"pieces":["Node"]},{"name":"visible","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IPaneBodyPart":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"init","code":"(parameters: PanePanelComponentInitParameter): void","kind":"method","pieces":["PanePanelComponentInitParameter"]},{"name":"update","code":"(params: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IPaneHeaderPart":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"init","code":"(parameters: PanePanelComponentInitParameter): void","kind":"method","pieces":["PanePanelComponentInitParameter"]},{"name":"update","code":"(params: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IPanel":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(params: PanelInitParameters): void","kind":"method","pieces":["PanelInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IPanelDeserializer":{"kind":"interface","children":[{"name":"fromJSON","code":"(panelData: GroupviewPanelState, group: DockviewGroupPanel): IDockviewPanel","kind":"method","pieces":["DockviewGroupPanel","GroupviewPanelState","IDockviewPanel"]}]},"IPaneview":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"DocumentFragment | HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidChangeExpansionState","code":"Event<boolean>","kind":"property","flags":{},"pieces":["Event"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(visible: boolean): void","kind":"method","pieces":[]}]},"IPaneviewComponent":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidAddView","code":"Event<PaneviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDrop","code":"Event<PaneviewDropEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<PaneviewPanel>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"options","code":"PaneviewComponentOptions","kind":"property","flags":{"isReadonly":true},"pieces":["PaneviewComponentOptions"]},{"name":"panels","code":"IPaneviewPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddPaneviewComponentOptions<T>): IPaneviewPanel","kind":"method","pieces":["AddPaneviewComponentOptions","IPaneviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedPaneview: SerializedPaneview): void","kind":"method","pieces":["SerializedPaneview"]},{"name":"getPanel","code":"(id: string): IPaneviewPanel | undefined","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removePanel","code":"(panel: IPaneviewPanel): void","kind":"method","pieces":["IPaneviewPanel"]},{"name":"toJSON","code":"(): SerializedPaneview","kind":"method","pieces":["SerializedPaneview"]},{"name":"updateOptions","code":"(options: Partial<PaneviewComponentOptions>): void","kind":"method","pieces":[]}]},"IPaneviewPanel":{"kind":"interface","children":[{"name":"api","code":"PaneviewPanelApiImpl","kind":"property","flags":{"isReadonly":true},"pieces":["PaneviewPanelApiImpl"]},{"name":"headerVisible","code":"boolean","kind":"property","flags":{},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumBodySize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumBodySize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"params","code":"Parameters | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"isExpanded","code":"(): boolean","kind":"method","pieces":[]},{"name":"setExpanded","code":"(isExpanded: boolean): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"ISerializedBranchNode":{"kind":"interface","children":[{"name":"data","code":"ISerializedNode[]","kind":"property","flags":{},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"type","code":"\'branch\'","kind":"property","flags":{},"pieces":[]}]},"ISerializedLeafNode":{"kind":"interface","children":[{"name":"data","code":"ISerializedLeafNode.T","kind":"property","flags":{},"pieces":["T"]},{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"type","code":"\'leaf\'","kind":"property","flags":{},"pieces":[]},{"name":"visible","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"ISplitViewDescriptor":{"kind":"interface","children":[{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"views","code":"{ size: number, view: IView, visible?: boolean }[]","kind":"property","flags":{},"pieces":[]}]},"ISplitviewComponent":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"length","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"onDidAddView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidLayoutChange","code":"Event<void>","kind":"property","flags":{},"pieces":["Event"]},{"name":"onDidLayoutFromJSON","code":"Event<void>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidRemoveView","code":"Event<IView>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"panels","code":"SplitviewPanel[]","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"addPanel","code":"<T extends object = Parameters>(options: AddSplitviewComponentOptions<T>): ISplitviewPanel","kind":"method","pieces":["AddSplitviewComponentOptions","ISplitviewPanel","Parameters"]},{"name":"clear","code":"(): void","kind":"method","pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"fromJSON","code":"(serializedSplitview: SerializedSplitview): void","kind":"method","pieces":["SerializedSplitview"]},{"name":"getPanel","code":"(id: string): ISplitviewPanel | undefined","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"movePanel","code":"(from: number, to: number): void","kind":"method","pieces":[]},{"name":"removePanel","code":"(panel: ISplitviewPanel, sizing?: InvisibleSizing | SplitSizing | DistributeSizing): void","kind":"method","pieces":["ISplitviewPanel"]},{"name":"setVisible","code":"(panel: ISplitviewPanel, visible: boolean): void","kind":"method","pieces":["ISplitviewPanel"]},{"name":"toJSON","code":"(): SerializedSplitview","kind":"method","pieces":["SerializedSplitview"]},{"name":"updateOptions","code":"(options: Partial<SplitviewComponentUpdateOptions>): void","kind":"method","pieces":[]}]},"ISplitviewPanel":{"kind":"interface","children":[{"name":"api","code":"SplitviewPanelApiImpl","kind":"property","flags":{"isReadonly":true},"pieces":["SplitviewPanelApiImpl"]},{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"params","code":"Parameters | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low | undefined","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"ISplitviewStyles":{"kind":"interface","children":[{"name":"separatorBorder","code":"string","kind":"property","flags":{},"pieces":[]}]},"ITabRenderer":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"init","code":"(parameters: GroupPanelPartInitParameters): void","kind":"method","pieces":["GroupPanelPartInitParameters"]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]}]},"IView":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"element","code":"DocumentFragment | HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"onDidChange","code":"Event<{ orthogonalSize?: number, size?: number }>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"layout","code":"(size: number, orthogonalSize: number): void","kind":"method","pieces":[]},{"name":"setVisible","code":"(visible: boolean): void","kind":"method","pieces":[]}]},"IViewDeserializer":{"kind":"interface","children":[{"name":"fromJSON","code":"(data: ISerializedLeafNode<any>): IGridView","kind":"property","flags":{},"pieces":[]}]},"IViewSize":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IWatermarkRenderer":{"kind":"interface","children":[{"name":"dispose","code":"(): void","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"element","code":"HTMLElement","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"init","code":"(params: WatermarkRendererInitParameters): void","kind":"property","flags":{},"pieces":[]},{"name":"focus","code":"(): void","kind":"method","pieces":[]},{"name":"layout","code":"(width: number, height: number): void","kind":"method","pieces":[]},{"name":"toJSON","code":"(): object","kind":"method","pieces":[]},{"name":"update","code":"(event: PanelUpdateEvent<Parameters>): void","kind":"method","pieces":["PanelUpdateEvent"]},{"name":"updateParentGroup","code":"(group: DockviewGroupPanel, visible: boolean): void","kind":"method","pieces":["DockviewGroupPanel"]}]},"MovementOptions":{"kind":"interface","children":[{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{"isOptional":true},"pieces":["DockviewGroupPanel"]},{"name":"includePanel","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"MovementOptions2":{"kind":"interface","children":[{"name":"group","code":"IGridView","kind":"property","flags":{"isOptional":true},"pieces":["IGridView"]}]},"PanePanelComponentInitParameter":{"kind":"interface","children":[{"name":"api","code":"PaneviewPanelApiImpl","kind":"property","flags":{},"pieces":["PaneviewPanelApiImpl"]},{"name":"containerApi","code":"PaneviewApi","kind":"property","flags":{},"pieces":["PaneviewApi"]},{"name":"isExpanded","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"PanePanelInitParameter":{"kind":"interface","children":[{"name":"containerApi","code":"PaneviewApi","kind":"property","flags":{},"pieces":["PaneviewApi"]},{"name":"isExpanded","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumBodySize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"PanePanelViewState":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"headerComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["Parameters"]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"PanelApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"PanelConstraintChangeEvent":{"kind":"interface","children":[{"name":"maximumSize","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]}]},"PanelDimensionChangeEvent":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"PanelInitParameters":{"kind":"interface","children":[{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]}]},"PanelOptions":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"params","code":"PanelOptions.P","kind":"property","flags":{"isOptional":true},"pieces":["P"]},{"name":"tabComponent","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"title","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"PanelReference":{"kind":"interface","children":[{"name":"remove","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"update","code":"(event: { params:  }): void","kind":"property","flags":{},"pieces":[]}]},"PanelSizeEvent":{"kind":"interface","children":[{"name":"size","code":"number","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"PanelUpdateEvent":{"kind":"interface","children":[{"name":"params","code":"Partial<PanelUpdateEvent.T>","kind":"property","flags":{},"pieces":[]}]},"PanelViewInitParameters":{"kind":"interface","children":[{"name":"accessor","code":"SplitviewComponent","kind":"property","flags":{},"pieces":["SplitviewComponent"]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"Parameters","kind":"property","flags":{},"pieces":["Parameters"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"PaneviewComponentOptions":{"kind":"interface","children":[{"name":"components","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableDnd","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkWrapper","code":"{ body: FrameworkFactory<IPaneBodyPart>, header: FrameworkFactory<IPaneHeaderPart> }","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"headerComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"headerframeworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"parentElement","code":"HTMLElement","kind":"property","flags":{},"pieces":[]},{"name":"showDndOverlay","code":"(event: PaneviewDndOverlayEvent): boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"PaneviewDndOverlayEvent":{"kind":"interface","children":[{"name":"getData","code":"(): PaneTransfer | undefined","kind":"property","flags":{},"pieces":[]},{"name":"nativeEvent","code":"DragEvent","kind":"property","flags":{},"pieces":[]},{"name":"panel","code":"IPaneviewPanel","kind":"property","flags":{},"pieces":["IPaneviewPanel"]}]},"PaneviewDropEvent":{"kind":"interface","children":[{"name":"api","code":"PaneviewApi","kind":"property","flags":{},"pieces":["PaneviewApi"]},{"name":"getData","code":"(): PaneTransfer | undefined","kind":"property","flags":{},"pieces":[]},{"name":"nativeEvent","code":"DragEvent","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"panel","code":"IPaneviewPanel","kind":"property","flags":{},"pieces":["IPaneviewPanel"]},{"name":"position","code":"Position","kind":"property","flags":{"isReadonly":true},"pieces":["Position"]}]},"PaneviewPanelApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isExpanded","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidConstraintsChange","code":"Event<PanelConstraintChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidExpansionChange","code":"Event<ExpansionEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onMouseEnter","code":"Event<MouseEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onMouseLeave","code":"Event<MouseEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"setConstraints","code":"(value: PanelConstraintChangeEvent2): void","kind":"method","pieces":["PanelConstraintChangeEvent2"]},{"name":"setExpanded","code":"(isExpanded: boolean): void","kind":"method","pieces":[]},{"name":"setSize","code":"(event: PanelSizeEvent): void","kind":"method","pieces":["PanelSizeEvent"]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"Parameters":{"kind":"interface","children":[],"metadata":{"name":"Parameters","comment":{"summary":[{"kind":"text","text":"A key-value object of anything that is a valid JavaScript Object."}]},"code":"","pieces":[]}},"RendererChangedEvent":{"kind":"interface","children":[{"name":"renderer","code":"DockviewPanelRenderer","kind":"property","flags":{"isReadonly":true},"pieces":["DockviewPanelRenderer"]}]},"SerializedDockview":{"kind":"interface","children":[{"name":"activeGroup","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"floatingGroups","code":"SerializedFloatingGroup[]","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"grid","code":"{ height: number, orientation: Orientation, root: SerializedGridObject<GroupPanelViewState>, width: number }","kind":"property","flags":{},"pieces":[]},{"name":"panels","code":"Record<string, GroupviewPanelState>","kind":"property","flags":{},"pieces":[]},{"name":"popoutGroups","code":"SerializedPopoutGroup[]","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"SerializedFloatingGroup":{"kind":"interface","children":[{"name":"data","code":"GroupPanelViewState","kind":"property","flags":{},"pieces":["GroupPanelViewState"]},{"name":"position","code":"Box","kind":"property","flags":{},"pieces":["Box"]}]},"SerializedGridObject":{"kind":"interface","children":[{"name":"data","code":"SerializedGridObject<SerializedGridObject.T>[] | SerializedGridObject.T","kind":"property","flags":{},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"type","code":"\'branch\' | \'leaf\'","kind":"property","flags":{},"pieces":[]},{"name":"visible","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"SerializedGridview":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"orientation","code":"Orientation","kind":"property","flags":{},"pieces":["Orientation"]},{"name":"root","code":"SerializedGridObject<SerializedGridview.T>","kind":"property","flags":{},"pieces":["SerializedGridObject"]},{"name":"width","code":"number","kind":"property","flags":{},"pieces":[]}]},"SerializedGridviewComponent":{"kind":"interface","children":[{"name":"activePanel","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"grid","code":"SerializedGridview<GridPanelViewState>","kind":"property","flags":{},"pieces":["SerializedGridview"]}]},"SerializedPaneview":{"kind":"interface","children":[{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"views","code":"SerializedPaneviewPanel[]","kind":"property","flags":{},"pieces":[]}]},"SerializedPaneviewPanel":{"kind":"interface","children":[{"name":"data","code":"{ component: string, headerComponent?: string, id: string, params?: , title: string }","kind":"property","flags":{},"pieces":[]},{"name":"expanded","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"SerializedPopoutGroup":{"kind":"interface","children":[{"name":"data","code":"GroupPanelViewState","kind":"property","flags":{},"pieces":["GroupPanelViewState"]},{"name":"gridReferenceGroup","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"position","code":"Box | \'null\'","kind":"property","flags":{},"pieces":[]}]},"SerializedSplitview":{"kind":"interface","children":[{"name":"activeView","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"orientation","code":"Orientation","kind":"property","flags":{},"pieces":["Orientation"]},{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"views","code":"SerializedSplitviewPanel[]","kind":"property","flags":{},"pieces":[]}]},"SerializedSplitviewPanel":{"kind":"interface","children":[{"name":"data","code":"SerializedSplitviewPanelData","kind":"property","flags":{},"pieces":["SerializedSplitviewPanelData"]},{"name":"priority","code":"LayoutPriority.Normal | LayoutPriority.High | LayoutPriority.Low","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"size","code":"number","kind":"property","flags":{},"pieces":[]},{"name":"snap","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"SerializedSplitviewPanelData":{"kind":"interface","children":[{"name":"component","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"maximumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"minimumSize","code":"number","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"params","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"SizeEvent":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"width","code":"number","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]}]},"SplitViewOptions":{"kind":"interface","children":[{"name":"descriptor","code":"ISplitViewDescriptor","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["ISplitViewDescriptor"]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"styles","code":"ISplitviewStyles","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["ISplitviewStyles"]}]},"SplitviewComponentOptions":{"kind":"interface","children":[{"name":"components","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"descriptor","code":"ISplitViewDescriptor","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["ISplitViewDescriptor"]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkComponents","code":"","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"frameworkWrapper","code":"FrameworkFactory<SplitviewPanel>","kind":"property","flags":{"isOptional":true},"pieces":["FrameworkFactory"]},{"name":"orientation","code":"Orientation","kind":"property","flags":{"isReadonly":true},"pieces":["Orientation"]},{"name":"parentElement","code":"HTMLElement","kind":"property","flags":{},"pieces":[]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":[]},{"name":"styles","code":"ISplitviewStyles","kind":"property","flags":{"isOptional":true,"isReadonly":true},"pieces":["ISplitviewStyles"]}]},"SplitviewPanelApi":{"kind":"interface","children":[{"name":"height","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel height in pixels"}]},"pieces":[]},{"name":"id","code":"string","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The id of the panel that would have been assigned when the panel was created"}]},"pieces":[]},{"name":"isActive","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is the actively selected panel"}]},"pieces":[]},{"name":"isFocused","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel holds the current focus"}]},"pieces":[]},{"name":"isHidden","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is hidden"}]},"pieces":[]},{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Whether the panel is visible"}]},"pieces":[]},{"name":"onDidActiveChange","code":"Event<ActiveEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidConstraintsChange","code":"Event<PanelConstraintChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidDimensionsChange","code":"Event<PanelDimensionChangeEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidFocusChange","code":"Event<FocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidHiddenChange","code":"Event<HiddenEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onDidVisibilityChange","code":"Event<VisibilityEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"onWillFocus","code":"Event<WillFocusEvent>","kind":"property","flags":{"isReadonly":true},"pieces":["Event"]},{"name":"width","code":"number","kind":"property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The panel width in pixels"}]},"pieces":[]},{"name":"setActive","code":"(): void","kind":"method","pieces":[]},{"name":"setConstraints","code":"(value: PanelConstraintChangeEvent2): void","kind":"method","pieces":["PanelConstraintChangeEvent2"]},{"name":"setSize","code":"(event: PanelSizeEvent): void","kind":"method","pieces":["PanelSizeEvent"]},{"name":"updateParameters","code":"(parameters: Parameters): void","kind":"method","pieces":["Parameters"]}]},"TabContextMenuEvent":{"kind":"interface","children":[{"name":"api","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"event","code":"MouseEvent","kind":"property","flags":{},"pieces":[]},{"name":"panel","code":"IDockviewPanel","kind":"property","flags":{},"pieces":["IDockviewPanel"]}]},"TabDragEvent":{"kind":"interface","children":[{"name":"nativeEvent","code":"DragEvent","kind":"property","flags":{"isReadonly":true},"pieces":[]},{"name":"panel","code":"IDockviewPanel","kind":"property","flags":{"isReadonly":true},"pieces":["IDockviewPanel"]}]},"TitleEvent":{"kind":"interface","children":[{"name":"title","code":"string","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"ViewFactoryData":{"kind":"interface","children":[{"name":"content","code":"string","kind":"property","flags":{},"pieces":[]},{"name":"tab","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"VisibilityEvent":{"kind":"interface","children":[{"name":"isVisible","code":"boolean","kind":"property","flags":{"isReadonly":true},"pieces":[]}]},"WatermarkConstructor":{"kind":"interface","children":[{"name":"constructor","code":"","pieces":[]}]},"WatermarkPartInitParameters":{"kind":"interface","children":[{"name":"accessor","code":"IDockviewComponent","kind":"property","flags":{},"pieces":["IDockviewComponent"]}]},"WatermarkRendererInitParameters":{"kind":"interface","children":[{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"group","code":"IDockviewGroupPanel","kind":"property","flags":{"isOptional":true},"pieces":["IDockviewGroupPanel"]}]},"WillShowOverlayLocationEvent":{"kind":"interface","children":[{"name":"event","code":"WillShowOverlayEvent","kind":"property","flags":{},"pieces":["WillShowOverlayEvent"]},{"name":"kind","code":"DockviewGroupDropLocation","kind":"property","flags":{},"pieces":["DockviewGroupDropLocation"]}]},"AddGroupOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"AddGroupOptions","code":"GroupOptions & AbsolutePosition | AddGroupOptionsWithPanel | AddGroupOptionsWithGroup","pieces":[null]}},"AddPanelOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"AddPanelOptions","code":"Partial<AddPanelOptionsUnion> & { component: string, id: string, params?: P, renderer?: DockviewPanelRenderer, tabComponent?: string, title?: string }","pieces":[null]}},"AddPanelPositionOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"AddPanelPositionOptions","code":"AbsolutePosition | RelativeGroup | RelativePanel","pieces":[null]}},"ComponentConstructor":{"kind":"typeAlias","children":[],"metadata":{"name":"ComponentConstructor","code":"","pieces":[null]}},"Direction":{"kind":"typeAlias","children":[],"metadata":{"name":"Direction","code":"\'within\' | \'below\' | \'above\' | \'right\' | \'left\'","pieces":[null]}},"DistributeSizing":{"kind":"typeAlias","children":[],"metadata":{"name":"DistributeSizing","code":"{ type: \'distribute\' }","pieces":[null]}},"DockviewComponentUpdateOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewComponentUpdateOptions","code":"Pick<DockviewComponentOptions, \'disableDnd\' | \'rootOverlayModel\' | \'floatingGroupBounds\' | \'disableFloatingGroups\' | \'createPrefixHeaderActionsElement\' | \'createRightHeaderActionsElement\' | \'createLeftHeaderActionsElement\' | \'defaultTabComponent\' | \'watermarkFrameworkComponent\' | \'showDndOverlay\' | \'frameworkTabComponents\' | \'tabComponents\' | \'frameworkComponents\' | \'components\' | \'orientation\'>","pieces":[null]}},"DockviewDropTargets":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewDropTargets","code":"\'edge\' | \'tabContainer\' | \'panel\' | \'tab\'","pieces":[null]}},"DockviewGroupDropLocation":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewGroupDropLocation","code":"\'content\' | \'header_space\' | \'tab\'","pieces":[null]}},"DockviewGroupLocation":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewGroupLocation","code":"{ getWindow: (): Window, type: \'popout\' } | { type: \'floating\' } | { type: \'grid\' }","pieces":[null]}},"DockviewGroupPanelLocked":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewGroupPanelLocked","code":"\'no-drop-target\' | boolean","pieces":[null]}},"DockviewPanelRenderer":{"kind":"typeAlias","children":[],"metadata":{"name":"DockviewPanelRenderer","code":"\'always\' | \'onlyWhenVisibile\'","pieces":[null]}},"DroptargetOverlayModel":{"kind":"typeAlias","children":[],"metadata":{"name":"DroptargetOverlayModel","code":"{ activationSize?: MeasuredValue, size?: MeasuredValue }","pieces":[null]}},"GridNode":{"kind":"typeAlias","children":[],"metadata":{"name":"GridNode","code":"GridBranchNode<T> | GridLeafNode<T>","pieces":[null]}},"GridviewComponentUpdateOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"GridviewComponentUpdateOptions","code":"Pick<GridviewComponentOptions, \'frameworkComponents\' | \'components\' | \'orientation\'>","pieces":[null]}},"IDockviewGroupPanelPublic":{"kind":"typeAlias","children":[],"metadata":{"name":"IDockviewGroupPanelPublic","code":"IDockviewGroupPanel","pieces":["IDockviewGroupPanel"]}},"ISerializedNode":{"kind":"typeAlias","children":[],"metadata":{"name":"ISerializedNode","code":"ISerializedBranchNode | ISerializedLeafNode","pieces":[null]}},"InvisibleSizing":{"kind":"typeAlias","children":[],"metadata":{"name":"InvisibleSizing","code":"{ cachedVisibleSize: number, type: \'invisible\' }","pieces":[null]}},"MeasuredValue":{"kind":"typeAlias","children":[],"metadata":{"name":"MeasuredValue","code":"{ type: \'percentage\' | \'pixels\', value: number }","pieces":[null]}},"Position":{"kind":"typeAlias","children":[],"metadata":{"name":"Position","code":"\'center\' | \'right\' | \'left\' | \'bottom\' | \'top\'","pieces":[null]}},"SplitSizing":{"kind":"typeAlias","children":[],"metadata":{"name":"SplitSizing","code":"{ index: number, type: \'split\' }","pieces":[null]}},"SplitviewComponentUpdateOptions":{"kind":"typeAlias","children":[],"metadata":{"name":"SplitviewComponentUpdateOptions","code":"Pick<SplitviewComponentOptions, \'frameworkComponents\' | \'components\' | \'orientation\'>","pieces":[null]}},"createComponent":{"kind":"function","children":[],"metadata":{"name":"createComponent","code":"<T>(id: string, componentName?: string, components: , frameworkComponents: , createFrameworkComponent?: FrameworkFactory<T>, fallback?: (): T): T","pieces":[null,null,null,null,"FrameworkFactory",null,"T"]}},"directionToPosition":{"kind":"function","children":[],"metadata":{"name":"directionToPosition","code":"(direction: Direction): Position","pieces":["Direction","Position"]}},"getDirectionOrientation":{"kind":"function","children":[],"metadata":{"name":"getDirectionOrientation","code":"(direction: Position): Orientation","pieces":["Position","Orientation"]}},"getGridLocation":{"kind":"function","children":[],"metadata":{"name":"getGridLocation","code":"(element: HTMLElement): number[]","pieces":[null,null]}},"getLocationOrientation":{"kind":"function","children":[],"metadata":{"name":"getLocationOrientation","code":"(rootOrientation: Orientation, location: number[]): Orientation","pieces":["Orientation",null,"Orientation"]}},"getPaneData":{"kind":"function","children":[],"metadata":{"name":"getPaneData","code":"(): undefined | PaneTransfer","pieces":[null]}},"getPanelData":{"kind":"function","children":[],"metadata":{"name":"getPanelData","code":"(): undefined | PanelTransfer","pieces":[null]}},"getRelativeLocation":{"kind":"function","children":[],"metadata":{"name":"getRelativeLocation","code":"(rootOrientation: Orientation, location: number[], direction: Position): number[]","pieces":["Orientation",null,"Position",null]}},"indexInParent":{"kind":"function","children":[],"metadata":{"name":"indexInParent","code":"(element: HTMLElement): number","pieces":[null,null]}},"isGridBranchNode":{"kind":"function","children":[],"metadata":{"name":"isGridBranchNode","code":"<T extends IGridView>(node: GridNode<T>): node is GridBranchNode<T>","pieces":["IGridView","GridNode",null]}},"isGroupOptionsWithGroup":{"kind":"function","children":[],"metadata":{"name":"isGroupOptionsWithGroup","code":"(data: AddGroupOptions): data is AddGroupOptionsWithGroup","pieces":["AddGroupOptions",null]}},"isGroupOptionsWithPanel":{"kind":"function","children":[],"metadata":{"name":"isGroupOptionsWithPanel","code":"(data: AddGroupOptions): data is AddGroupOptionsWithPanel","pieces":["AddGroupOptions",null]}},"isPanelOptionsWithGroup":{"kind":"function","children":[],"metadata":{"name":"isPanelOptionsWithGroup","code":"(data: AddPanelPositionOptions): data is RelativeGroup","pieces":["AddPanelPositionOptions",null]}},"isPanelOptionsWithPanel":{"kind":"function","children":[],"metadata":{"name":"isPanelOptionsWithPanel","code":"(data: AddPanelPositionOptions): data is RelativePanel","pieces":["AddPanelPositionOptions",null]}},"orthogonal":{"kind":"function","children":[],"metadata":{"name":"orthogonal","code":"(orientation: Orientation): Orientation","pieces":["Orientation",null]}},"positionToDirection":{"kind":"function","children":[],"metadata":{"name":"positionToDirection","code":"(position: Position): Direction","pieces":["Position","Direction"]}},"toTarget":{"kind":"function","children":[],"metadata":{"name":"toTarget","code":"(direction: Direction): Position","pieces":["Direction","Position"]}},"ReactPart":{"kind":"class","children":[{"name":"constructor","code":"","pieces":[]},{"name":"dispose","code":"(): void","kind":"method","pieces":[]},{"name":"update","code":"(props: ): void","kind":"method","pieces":[]}]},"DockviewReadyEvent":{"kind":"interface","children":[{"name":"api","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]}]},"GridviewReadyEvent":{"kind":"interface","children":[{"name":"api","code":"GridviewApi","kind":"property","flags":{},"pieces":["GridviewApi"]}]},"IDockviewHeaderActionsProps":{"kind":"interface","children":[{"name":"activePanel","code":"IDockviewPanel | undefined","kind":"property","flags":{},"pieces":[]},{"name":"api","code":"DockviewGroupPanelApi","kind":"property","flags":{},"pieces":["DockviewGroupPanelApi"]},{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"group","code":"DockviewGroupPanel","kind":"property","flags":{},"pieces":["DockviewGroupPanel"]},{"name":"isGroupActive","code":"boolean","kind":"property","flags":{},"pieces":[]},{"name":"panels","code":"IDockviewPanel[]","kind":"property","flags":{},"pieces":[]}]},"IDockviewReactProps":{"kind":"interface","children":[{"name":"className","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"components","code":"PanelCollection<IDockviewPanelProps<any>>","kind":"property","flags":{},"pieces":[]},{"name":"debug","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"defaultRenderer","code":"\'always\' | \'onlyWhenVisibile\'","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"defaultTabComponent","code":"React.FunctionComponent<IDockviewPanelHeaderProps<any>>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableDnd","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableFloatingGroups","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"floatingGroupBounds","code":"\'boundedWithinViewport\' | { minimumHeightWithinViewport?: number, minimumWidthWithinViewport?: number }","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"hideBorders","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"leftHeaderActionsComponent","code":"React.FunctionComponent<IDockviewHeaderActionsProps>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"locked","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onDidDrop","code":"(event: DockviewDidDropEvent): void","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onReady","code":"(event: DockviewReadyEvent): void","kind":"property","flags":{},"pieces":[]},{"name":"onWillDrop","code":"(event: DockviewWillDropEvent): void","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"prefixHeaderActionsComponent","code":"React.FunctionComponent<IDockviewHeaderActionsProps>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"rightHeaderActionsComponent","code":"React.FunctionComponent<IDockviewHeaderActionsProps>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"rootOverlayModel","code":"DroptargetOverlayModel","kind":"property","flags":{"isOptional":true},"pieces":["DroptargetOverlayModel"]},{"name":"showDndOverlay","code":"(event: DockviewDndOverlayEvent): boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"singleTabMode","code":"\'default\' | \'fullwidth\'","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"tabComponents","code":"PanelCollection<IDockviewPanelHeaderProps<any>>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"watermarkComponent","code":"React.FunctionComponent<IWatermarkPanelProps>","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IGridviewPanelProps":{"kind":"interface","children":[{"name":"api","code":"GridviewPanelApi","kind":"property","flags":{},"pieces":["GridviewPanelApi"]},{"name":"containerApi","code":"GridviewApi","kind":"property","flags":{},"pieces":["GridviewApi"]},{"name":"params","code":"IGridviewPanelProps.T","kind":"property","flags":{},"pieces":[]}]},"IGridviewReactProps":{"kind":"interface","children":[{"name":"className","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"components","code":"PanelCollection<IGridviewPanelProps<any>>","kind":"property","flags":{},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"hideBorders","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onReady","code":"(event: GridviewReadyEvent): void","kind":"property","flags":{},"pieces":[]},{"name":"orientation","code":"Orientation.VERTICAL | Orientation.HORIZONTAL","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IGroupPanelBaseProps":{"kind":"interface","children":[{"name":"api","code":"DockviewPanelApi","kind":"property","flags":{},"pieces":["DockviewPanelApi"]},{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"params","code":"IGroupPanelBaseProps.T","kind":"property","flags":{},"pieces":[]}]},"IPaneviewPanelProps":{"kind":"interface","children":[{"name":"api","code":"PaneviewPanelApi","kind":"property","flags":{},"pieces":["PaneviewPanelApi"]},{"name":"containerApi","code":"PaneviewApi","kind":"property","flags":{},"pieces":["PaneviewApi"]},{"name":"params","code":"IPaneviewPanelProps.T","kind":"property","flags":{},"pieces":[]},{"name":"title","code":"string","kind":"property","flags":{},"pieces":[]}]},"IPaneviewReactProps":{"kind":"interface","children":[{"name":"className","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"components","code":"PanelCollection<IPaneviewPanelProps<any>>","kind":"property","flags":{},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"disableDnd","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"headerComponents","code":"PanelCollection<IPaneviewPanelProps<any>>","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onReady","code":"(event: PaneviewReadyEvent): void","kind":"property","flags":{},"pieces":[]},{"name":"showDndOverlay","code":"(event: PaneviewDndOverlayEvent): boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onDidDrop","code":"(event: PaneviewDropEvent): void","kind":"method","pieces":["PaneviewDropEvent"]}]},"ISplitviewPanelProps":{"kind":"interface","children":[{"name":"api","code":"SplitviewPanelApi","kind":"property","flags":{},"pieces":["SplitviewPanelApi"]},{"name":"containerApi","code":"SplitviewApi","kind":"property","flags":{},"pieces":["SplitviewApi"]},{"name":"params","code":"ISplitviewPanelProps.T","kind":"property","flags":{},"pieces":[]}]},"ISplitviewReactProps":{"kind":"interface","children":[{"name":"className","code":"string","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"components","code":"PanelCollection<ISplitviewPanelProps<any>>","kind":"property","flags":{},"pieces":[]},{"name":"disableAutoResizing","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"hideBorders","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"onReady","code":"(event: SplitviewReadyEvent): void","kind":"property","flags":{},"pieces":[]},{"name":"orientation","code":"Orientation.VERTICAL | Orientation.HORIZONTAL","kind":"property","flags":{"isOptional":true},"pieces":[]},{"name":"proportionalLayout","code":"boolean","kind":"property","flags":{"isOptional":true},"pieces":[]}]},"IWatermarkPanelProps":{"kind":"interface","children":[{"name":"close","code":"(): void","kind":"property","flags":{},"pieces":[]},{"name":"containerApi","code":"DockviewApi","kind":"property","flags":{},"pieces":["DockviewApi"]},{"name":"group","code":"IDockviewGroupPanel","kind":"property","flags":{"isOptional":true},"pieces":["IDockviewGroupPanel"]}]},"PanelCollection":{"kind":"interface","children":[],"metadata":{"name":"PanelCollection","code":"","pieces":[]}},"PanelParameters":{"kind":"interface","children":[{"name":"params","code":"PanelParameters.T","kind":"property","flags":{},"pieces":[]}]},"PaneviewReadyEvent":{"kind":"interface","children":[{"name":"api","code":"PaneviewApi","kind":"property","flags":{},"pieces":["PaneviewApi"]}]},"ReactPortalStore":{"kind":"interface","children":[{"name":"addPortal","code":"(portal: React.ReactPortal): IDisposable","kind":"property","flags":{},"pieces":[]}]},"SplitviewReadyEvent":{"kind":"interface","children":[{"name":"api","code":"SplitviewApi","kind":"property","flags":{},"pieces":["SplitviewApi"]}]},"IDockviewDefaultTabProps":{"kind":"typeAlias","children":[],"metadata":{"name":"IDockviewDefaultTabProps","code":"{ closeActionOverride?: (): void, hideClose?: boolean } & React.DOMAttributes<HTMLDivElement> & IDockviewPanelHeaderProps","pieces":[null]}},"IDockviewPanelHeaderProps":{"kind":"typeAlias","children":[],"metadata":{"name":"IDockviewPanelHeaderProps","code":"IGroupPanelBaseProps<T>","pieces":[null]}},"IDockviewPanelProps":{"kind":"typeAlias","children":[],"metadata":{"name":"IDockviewPanelProps","code":"IGroupPanelBaseProps<T>","pieces":[null]}},"ReactPartContext":{"kind":"variable","children":[],"metadata":{"name":"ReactPartContext","code":"","pieces":[]}},"DockviewDefaultTab":{"kind":"function","children":[{"name":"contextTypes","code":"ValidationMap<any>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"defaultProps","code":"Partial<IDockviewDefaultTabProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"displayName","code":"string","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"propTypes","code":"React.WeakValidationMap<IDockviewDefaultTabProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]}]},"DockviewReact":{"kind":"function","children":[{"name":"$$typeof","code":"symbol","kind":"property","flags":{"isExternal":true,"isReadonly":true},"pieces":[]},{"name":"defaultProps","code":"Partial<React.RefAttributes<HTMLDivElement> & IDockviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"displayName","code":"string","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"propTypes","code":"React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IDockviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]}]},"GridviewReact":{"kind":"function","children":[{"name":"$$typeof","code":"symbol","kind":"property","flags":{"isExternal":true,"isReadonly":true},"pieces":[]},{"name":"defaultProps","code":"Partial<React.RefAttributes<HTMLDivElement> & IGridviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"displayName","code":"string","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"propTypes","code":"React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IGridviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]}]},"PaneviewReact":{"kind":"function","children":[{"name":"$$typeof","code":"symbol","kind":"property","flags":{"isExternal":true,"isReadonly":true},"pieces":[]},{"name":"defaultProps","code":"Partial<React.RefAttributes<HTMLDivElement> & IPaneviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"displayName","code":"string","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"propTypes","code":"React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & IPaneviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]}]},"SplitviewReact":{"kind":"function","children":[{"name":"$$typeof","code":"symbol","kind":"property","flags":{"isExternal":true,"isReadonly":true},"pieces":[]},{"name":"defaultProps","code":"Partial<React.RefAttributes<HTMLDivElement> & ISplitviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"displayName","code":"string","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]},{"name":"propTypes","code":"React.WeakValidationMap<React.RefAttributes<HTMLDivElement> & ISplitviewReactProps>","kind":"property","flags":{"isExternal":true,"isOptional":true},"pieces":[]}]},"isReactElement":{"kind":"function","children":[],"metadata":{"name":"isReactElement","code":"(element: unknown): element is React.ReactElement<any,  | (props: any, deprecatedLegacyContext?: any): React.ReactNode | string>","pieces":[null,null]}},"usePortalsLifecycle":{"kind":"function","children":[],"metadata":{"name":"usePortalsLifecycle","code":"(): [React.ReactPortal[],(portal: React.ReactPortal): IDisposable]","pieces":[null]}}}');var a=t(3188);const r=s,d=e=>(0,a.jsx)("div",{className:"doc-text",children:e.content.map(((e,i)=>{switch(e.kind){case"text":return(0,a.jsx)("span",{children:e.text},i);case"code":return(0,a.jsx)("code",{children:e.text.substring(1,e.text.length-1)},i);default:throw new Error(`unhandled piece ${e.kind}`)}}))}),p=e=>(0,a.jsx)("div",{children:(0,a.jsx)(d,{content:e.summary.summary??[]})}),c=e=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{style:{width:"40%",display:"flex"},children:(0,a.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignItems:"start"},children:[(0,a.jsx)("h6",{style:{fontFamily:"monospace",fontSize:"1.2em"},children:e.doc.name}),(0,a.jsx)("div",{style:{display:"flex",flexDirection:"column",alignItems:"start"}})]})}),(0,a.jsx)("th",{style:{width:"60%"},children:(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{children:e.doc.comment&&(0,a.jsx)(p,{summary:e.doc.comment})}),(0,a.jsx)(o.Z,{language:"tsx",children:e.doc.code})]})})]}),l=e=>{const i=n.useMemo((()=>r[e.declaration]),[e.declaration]),t=n.useMemo((()=>i?.children?.filter((i=>!(e.methods&&!e.methods.includes(i.name))))),[i]);return i?(0,a.jsx)("table",{className:"doc-ref-table",children:(0,a.jsx)("tbody",{children:t.map(((e,i)=>(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(c,{doc:e},i)})))})}):(0,a.jsx)("span",{children:`Failed to find docs for '${e.declaration}'`})}},5507:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>b,contentTitle:()=>y,default:()=>_,frontMatter:()=>f,metadata:()=>w,toc:()=>P});var n=t(3188),o=t(7832),s=t(5186),a=t(6376);t(6204);const r={default:e=>(0,n.jsx)("div",{style:{padding:"20px"},children:e.api.title})},d={default:e=>(0,n.jsx)(a.Pg,{onContextMenu:i=>{i.preventDefault(),alert(`This custom header was parsed the params ${JSON.stringify(e.params)}`)},...e})},p=e=>(0,n.jsx)(a.tu,{components:r,defaultTabComponent:d.default,onReady:e=>{e.api.addPanel({id:"panel_1",component:"default",title:"Panel 1",params:{valueA:"test value"}}),e.api.addPanel({id:"panel_2",component:"default",title:"Panel 2",params:{valueA:"test value"}}),e.api.addPanel({id:"panel_3",component:"default",title:"Panel 3",params:{valueA:"test value"}}),e.api.addPanel({id:"panel_4",component:"default",title:"Panel 4",position:{referencePanel:"panel_3",direction:"right"},params:{valueA:"test value"}}),e.api.addPanel({id:"panel_5",component:"default",title:"Panel 5",position:{referencePanel:"panel_4",direction:"within"},params:{valueA:"test value"}});const i=e.api.addPanel({id:"panel_6",component:"default",title:"Panel 6",position:{referencePanel:"panel_4",direction:"below"},params:{valueA:"test value"}});i.group.locked=!0,i.group.header.hidden=!0,e.api.addPanel({id:"panel_7",component:"default",title:"Panel 7",position:{referencePanel:"panel_6",direction:"right"},params:{valueA:"test value"}}),e.api.addPanel({id:"panel_8",component:"default",title:"Panel 8",position:{referencePanel:"panel_7",direction:"within"},params:{valueA:"test value"}}),e.api.addGroup()},className:`${e.theme||"dockview-theme-abyss"}`}),c={default:e=>(0,n.jsxs)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",color:"white",height:"100%"},children:[(0,n.jsx)("span",{children:`${e.params.title}`}),e.params.x&&(0,n.jsx)("span",{children:`  ${e.params.x}`})]})},l={default:e=>(0,n.jsxs)("div",{className:"my-custom-tab",children:[(0,n.jsx)("span",{children:e.params.title}),(0,n.jsx)("span",{style:{flexGrow:1}}),(0,n.jsx)("span",{className:"my-custom-tab-icon material-symbols-outlined",children:"minimize"}),(0,n.jsx)("span",{className:"my-custom-tab-icon material-symbols-outlined",children:"maximize"}),(0,n.jsx)("span",{className:"my-custom-tab-icon material-symbols-outlined",children:"close"})]})},m=e=>(0,n.jsx)(a.tu,{onReady:e=>{e.api.addPanel({id:"panel_1",component:"default",tabComponent:"default",params:{title:"Window 1"}}).group.locked=!0;e.api.addPanel({id:"panel_2",component:"default",tabComponent:"default",params:{title:"Window 2"},position:{direction:"right"}}).group.locked=!0;e.api.addPanel({id:"panel_3",component:"default",tabComponent:"default",params:{title:"Window 3"},position:{direction:"below"}}).group.locked=!0},components:c,tabComponents:l,className:`${e.theme||"dockview-theme-abyss"}`,singleTabMode:"fullwidth"});var h=t(1800),u=t(8610);const v={default:e=>(0,n.jsx)("div",{style:{padding:"20px",color:"white"},children:e.params.title})},g=e=>(0,n.jsx)(a.tu,{components:v,onReady:e=>{e.api.addPanel({id:"panel_1",component:"default",params:{title:"Panel 1"}}),e.api.addPanel({id:"panel_2",component:"default",params:{title:"Panel 2"}}),e.api.addPanel({id:"panel_3",component:"default",params:{title:"Panel 3"},position:{referencePanel:"panel_1",direction:"right"}}),e.api.addPanel({id:"panel_4",component:"default",params:{title:"Panel 4"},position:{referencePanel:"panel_3",direction:"right"}}),e.api.addPanel({id:"panel_5",component:"default",params:{title:"Panel 5"},position:{referencePanel:"panel_4",direction:"below"}}),e.api.addPanel({id:"panel_6",component:"default",params:{title:"Panel 6"},position:{referencePanel:"panel_5",direction:"right"}})},className:`${e.theme||"dockview-theme-abyss"} skinny-tabs`});var k=t(1977);const f={title:"Tabs",sidebar_position:2},y=void 0,w={id:"core/panels/tabs",title:"Tabs",description:"This section describes how to implement custom tab renderers",source:"@site/docs/core/panels/tabs.mdx",sourceDirName:"core/panels",slug:"/core/panels/tabs",permalink:"/docs/core/panels/tabs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core/panels/tabs.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Tabs",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Adding Panels",permalink:"/docs/core/panels/add"},next:{title:"Update Panel",permalink:"/docs/core/panels/update"}},b={},P=[{value:"Register a Tab Component",id:"register-a-tab-component",level:2},{value:"Default Tab Renderer",id:"default-tab-renderer",level:2},{value:"Accessing Custom Panel Parameters",id:"accessing-custom-panel-parameters",level:2},{value:"Extend the Default Tab Implementation",id:"extend-the-default-tab-implementation",level:2},{value:"Full Width Tab",id:"full-width-tab",level:2},{value:"Tab Height",id:"tab-height",level:2}];function D(e){const i={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components},{FrameworkSpecific:t}=i;return t||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("FrameworkSpecific",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"This section describes how to implement custom tab renderers"}),"\n",(0,n.jsx)(i.h2,{id:"register-a-tab-component",children:"Register a Tab Component"}),"\n",(0,n.jsx)(t,{framework:"React",children:(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"const components = {\n  tab_1: (props: IDockviewPanelHeaderProps) => {\n    const api: DockviewPanelApi  = props.api;\n    const containerApi: DockviewApi  = props.containerApi;\n\n    return <div>{/** logic */}</div>\n  },\n  tab_2: (props: IDockviewPanelHeaderProps) => {\n    return <div>{/** logic */}</div>\n  }\n};\n\nreturn <DockviewReact tabComponents={tabComponents}/>\n"})})}),"\n",(0,n.jsx)(t,{framework:"JavaScript",children:(0,n.jsx)(i.p,{children:"not implemented"})}),"\n",(0,n.jsx)(i.h2,{id:"default-tab-renderer",children:"Default Tab Renderer"}),"\n",(0,n.jsx)(t,{framework:"React",children:(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-jsx",children:"const CustomTabRenderer = (props: IDockviewPanelHeaderProps) => {\n  const api: DockviewPanelApi  = props.api;\n  const containerApi: DockviewApi  = props.containerApi;\n\n  return <div>{/** logic */}</div>\n}\n\nreturn <DockviewReact defaultTabRenderer={CustomTabRenderer}/>\n"})})}),"\n",(0,n.jsx)(t,{framework:"JavaScript",children:(0,n.jsx)(i.p,{children:"not implemented"})}),"\n",(0,n.jsx)(i.h2,{id:"accessing-custom-panel-parameters",children:"Accessing Custom Panel Parameters"}),"\n",(0,n.jsxs)(i.p,{children:["You can provide a generic type that matches the structure of the epxected custom panels parameters\nto provide type-hints for the panel parameters which can be accessed via the ",(0,n.jsx)(i.code,{children:"params"})," option."]}),"\n",(0,n.jsx)(t,{framework:"React",children:(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-jsx",children:"type MyParameters = { my_value: number };\n\nconst MyTab = (props: IDockviewPanelHeaderProps<MyParameters>) => {\n  const value: number = props.params.my_value;\n  return <div>{/** logic */}</div>\n}\n"})})}),"\n",(0,n.jsx)(i.h2,{id:"extend-the-default-tab-implementation",children:"Extend the Default Tab Implementation"}),"\n",(0,n.jsx)(i.p,{children:"If you only want to make minor changes to the tab rendering you may be able to use the\ndefault implementation as a base. This could include:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Hiding the close button"}),"\n",(0,n.jsx)(i.li,{children:"Attaching additional event listeners"}),"\n"]}),"\n",(0,n.jsx)(t,{framework:"React",children:(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"import { IDockviewPanelHeaderProps, DockviewDefaultTab } from 'dockview';\n\nconst MyCustomTab = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} hideClose={true} {...props} />;\n};\n"})})}),"\n",(0,n.jsx)(i.p,{children:"As a simple example the below attaches a custom event handler for the context menu on all tabs as a default tab renderer"}),"\n",(0,n.jsxs)(i.p,{children:["The below example uses a custom tab renderer to reigster a popover when the user right clicked on a tab.\nThis still makes use of the ",(0,n.jsx)(i.code,{children:"DockviewDefaultTab"})," since it's only a minor change."]}),"\n",(0,n.jsx)(s.Qj,{sandboxId:"customheader-dockview",react:p}),"\n",(0,n.jsx)(i.h2,{id:"full-width-tab",children:"Full Width Tab"}),"\n",(0,n.jsx)(i.p,{children:"When a group has only one single tab you may want that tab to take the full width."}),"\n",(0,n.jsx)(t,{framework:"React",children:(0,n.jsx)(u.r8,{declaration:"IDockviewReactProps",methods:["singleTabMode"]})}),"\n",(0,n.jsx)(t,{framework:"JavaScript",children:(0,n.jsx)(u.r8,{declaration:"DockviewComponentOptions",methods:["singleTabMode"]})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:'return <DockviewReactComponent singleTabMode="fullwidth" />\n'})}),"\n",(0,n.jsx)(s.Qj,{sandboxId:"fullwidthtab-dockview",react:m,typescript:h.attach}),"\n","\n","\n",(0,n.jsx)(i.h2,{id:"tab-height",children:"Tab Height"}),"\n",(0,n.jsx)(i.p,{children:"Tab height can be controlled through CSS."}),"\n",(0,n.jsx)(s.Qj,{sandboxId:"tabheight-dockview",react:g,typescript:k.attach})]})}function _(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(D,{...e})}):D(e)}}}]);
//# sourceMappingURL=acee1d6f.7a072dc6.js.map