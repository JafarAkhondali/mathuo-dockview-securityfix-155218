{"version":3,"file":"assets/js/be94ed75.3aff42f7.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/iframe-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/iframe.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        var _a, _b;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.classNames = [];\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        // const gready = document.createElement('div');\n        // gready.className = 'dv-overlay-render-container';\n        // this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super({\n            parentElement: parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.classNames = [];\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.classNames = [];\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import { DockviewReact, DockviewReadyEvent } from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    iframeComponent: () => {\n        return (\n            <iframe\n                style={{\n                    width: '100%',\n                    height: '100%',\n                }}\n                src=\"https://dockview.dev\"\n            />\n        );\n    },\n    basicComponent: () => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {'This panel is just a usual component '}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'basicComponent',\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default App;\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'iframes';\nexport const metadata = {\n  \"id\": \"advanced/iframe\",\n  \"title\": \"iframes\",\n  \"description\": \"iframes reload when repositioned within the DOM which can cause issues.\",\n  \"source\": \"@site/docs/advanced/iframe.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/iframe\",\n  \"permalink\": \"/docs/advanced/iframe\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/iframe.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Events\",\n    \"permalink\": \"/docs/advanced/events\"\n  },\n  \"next\": {\n    \"title\": \"Keyboard\",\n    \"permalink\": \"/docs/advanced/keyboard\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewWithIFrames from '@site/sandboxes/iframe-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"iframes\",\n      children: \"iframes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iframes reload when repositioned within the DOM which can cause issues.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iFrames required special attention because of a particular behaviour in how iFrames render:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Re-parenting an iFrame will reload the contents of the iFrame or the rephrase this, moving an iFrame within the DOM will cause a reload of its contents.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find many examples of discussions on this. Two reputable forums for example are linked \", _jsx(_components.a, {\n        href: \"https://bugzilla.mozilla.org/show_bug.cgi?id=254144\",\n        children: \"here\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/whatwg/html/issues/5484\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To ensure iFrames work as expected you should render them in panels with \", _jsx(_components.code, {\n        children: \"renderer: 'always'\"\n      }), \" to ensure they are never removed from the DOM, alternatively set the defaultRenderer to \", _jsx(_components.code, {\n        children: \"always\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"See the \", _jsx(_components.a, {\n          href: \"/docs/core/panels/rendering\",\n          children: \"Panel Rendering\"\n        }), \" section for more information of render modes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        metastring: \"title=\\\"Example of a panel using an alternative renderer\\\"\",\n        children: \"api.addPanel({\\n  id: 'my_panel_id',\\n  component: 'my_component',\\n  renderer: 'always',\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      sandboxId: \"iframe-dockview\",\n      height: 600,\n      react: DockviewWithIFrames\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_b","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","classNames","split","panel","isVisible","updateOptions","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","MultiFrameworkContainer","iframeComponent","basicComponent","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","a","blockquote","code","h1","pre","metastring","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}