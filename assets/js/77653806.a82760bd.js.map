{"version":3,"file":"assets/js/77653806.a82760bd.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./src/components/ui/exampleFrame.tsx","webpack://dockview-docs/./src/components/ui/reference/types.ts","webpack://dockview-docs/./src/components/ui/reference/docRef.tsx","webpack://dockview-docs/./docs/core/groups/floatingGroups.mdx","webpack://dockview-docs/./sandboxes/ lazy ^\\.\\/.*\\/.*\\/src\\/app$ namespace object"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst ExampleFrame = (props: {\n    framework: string;\n    theme?: string;\n    id: string;\n    height?: string;\n}) => {\n    const Component = React.useMemo(\n        () =>\n            React.lazy(\n                () =>\n                    import(\n                        `../../../sandboxes/${props.framework}/${props.id}/src/app`\n                    )\n            ),\n        [props.framework, props.id]\n    );\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <React.Suspense>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            flexGrow: 1,\n                        }}\n                    >\n                        <div\n                            style={{\n                                height: props.height ?? '500px',\n                                flexGrow: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                        >\n                            <Component theme={props.theme} />\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                            }}\n                        >\n                            <span style={{ width: '220px' }}>\n                                <CodeSandboxButton\n                                    id={`${props.framework}/${props.id}`}\n                                    hideThemePicker={true}\n                                />\n                            </span>\n                        </div>\n                    </div>\n                </React.Suspense>\n            )}\n        </BrowserOnly>\n    );\n};\n\nexport default ExampleFrame;\n","export type ExportedTypeFile = Record<string, TypeSystem.Type>;\n\nexport function firstLevelTypes(value: TypeDescriptor.Type | null) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return firstLevelTypes(value.value);\n        case 'literal':\n            return [];\n        case 'intrinsic':\n            return [];\n        case 'or':\n            return value.values.flatMap(firstLevelTypes);\n        case 'intersection':\n            return value.values.flatMap(firstLevelTypes);\n        case 'predicate':\n            return [];\n        case 'reference': {\n            const result = [];\n            if (\n                value.source.startsWith('dockview') &&\n                !value.refersToTypeParameter\n            ) {\n                result.push(value.value);\n            }\n            if (value.typeArguments) {\n                result.push(...value.typeArguments.flatMap(firstLevelTypes));\n            }\n            return result;\n        }\n        case 'reflection':\n            return firstLevel(value.value);\n        case 'tuple':\n            return value.value.map(codifyType);\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function firstLevel(value: TypeSystem.Type | null) {\n    if (!value) {\n        return [];\n    }\n\n    if (value.kind === 'property') {\n        return firstLevelTypes(value.type);\n    }\n\n    if (value.kind === 'accessor') {\n        return firstLevelTypes(value.value.returnType);\n    }\n\n    if (value.kind === 'method') {\n        return value.signature.flatMap(firstLevel);\n    }\n\n    if (value.kind === 'constructor') {\n        return [];\n    }\n\n    if (value.kind === 'typeLiteral') {\n        const result = [];\n        if (value.properties) {\n            result.push(...value.properties.flatMap(firstLevel));\n        }\n        if (value.signatures) {\n            result.push(...value.signatures.flatMap(firstLevel));\n        }\n        return result;\n    }\n\n    if (value.kind === 'callSignature') {\n        const result = [];\n\n        result.push(\n            ...firstLevelTypes(value.returnType),\n            ...value.typeParameters.flatMap((_) => {\n                return [...firstLevelTypes(_.extends)];\n            }),\n            ...value.parameters.flatMap(firstLevel)\n        );\n\n        return result;\n    }\n\n    if (value.kind === 'parameter') {\n        return firstLevelTypes(value.type);\n    }\n\n    console.log('test', value);\n    throw new Error('unreachable');\n}\n\nexport function codifyType(value: TypeDescriptor.Type | null) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return `${codifyType(value.value)}[]`;\n        case 'literal':\n            return `'${value.value}'`;\n        case 'intrinsic':\n            return value.value;\n        case 'or':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' | ')}`;\n        case 'intersection':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' & ')}`;\n        case 'predicate':\n            return `${value.lhs} is ${value.rhs}`;\n\n        case 'reference': {\n            if (value.typeArguments) {\n                return `${value.value}<${value.typeArguments.map(codifyType)}>`;\n            }\n            return `${value.value}`;\n        }\n        case 'reflection':\n            return codify(value.value);\n        case 'tuple':\n            return `[${value.value.map(codifyType).join(', ')}]`;\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function codify(value: TypeSystem.Type | null) {\n    if (!value) {\n        return null;\n    }\n\n    if (value.kind === 'accessor') {\n        const signature = value.value;\n        return `${signature.name}: ${codifyType(signature.returnType)}`;\n    }\n\n    if (value.kind === 'property') {\n        let code = '';\n\n        if (value.flags.isProtected) {\n            code += 'protected ';\n        }\n\n        if (value.flags.isReadonly) {\n            code += 'readonly ';\n        }\n        code += value.name;\n        if (value.flags.isOptional) {\n            code += '?';\n        }\n\n        code += `: ${codifyType(value.type)}`;\n        return code;\n    }\n\n    if (value.kind === 'method') {\n        return value.signature.map(codify).join('\\n');\n    }\n\n    if (value.kind === 'callSignature') {\n        let code = ``;\n\n        if (value.typeParameters.length > 0) {\n            code += '<';\n            code += value.typeParameters.map((typeParameter) => {\n                let typeCode = `${typeParameter.name}`;\n\n                if (typeParameter.extends) {\n                    typeCode += ' extends';\n                    typeCode += ` ${codifyType(typeParameter.extends)}`;\n                }\n\n                if (typeParameter.default) {\n                    typeCode += ' =';\n                    typeCode += ` ${typeParameter.default}`;\n                }\n                return typeCode;\n            });\n            code += '>';\n        }\n\n        code += '(';\n\n        code += value.parameters\n            .map((parameter) => {\n                return codify(parameter);\n            })\n            .join(', ');\n\n        code += `): ${codifyType(value.returnType)}`;\n\n        return code;\n    }\n\n    if (value.kind === 'parameter') {\n        return `${value.name}: ${codifyType(value.type)}`;\n    }\n\n    if (value.kind === 'typeLiteral') {\n        if (value.properties) {\n            return `{\\n${value.properties.map(codify).join(',\\n')}\\n}`;\n        }\n        if (value.signatures) {\n            return value.signatures.map(codify).join('\\n');\n        }\n    }\n\n    if (value.kind === 'constructor') {\n        return '';\n    }\n\n    if (value.kind === 'interface') {\n        return `interface ${value.name} {\\n${value.children\n            .map(codify)\n            .join(',\\n')}\\n}`;\n    }\n\n    if (value.kind === 'class') {\n        return `interface ${value.name} {\\n${value.children\n            .map(codify)\n            .join(',\\n')}\\n}`;\n    }\n\n    if (value.kind === 'typeAlias') {\n        return `type ${value.name} = ${codifyType(value.type)}`;\n    }\n\n    console.log('unreachable', value);\n    throw new Error(`unreachable`);\n}\n\nexport namespace TypeSystem {\n    export type Comment = any;\n\n    export type TypeParameter = {\n        name: string;\n        extends: TypeDescriptor.Type;\n        default: string;\n        comment?: Comment;\n    };\n\n    export type Accessor = {\n        name: string;\n        kind: 'accessor';\n        comment?: Comment;\n        value: TypeSystem.GetSignature;\n    };\n\n    export type GetSignature = {\n        kind: 'getSignature';\n        name: string;\n        returnType: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type CallSignature = {\n        kind: 'callSignature';\n        typeParameters: TypeSystem.TypeParameter[];\n        parameters: TypeSystem.Type[];\n        returnType: TypeDescriptor.Type;\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Method = {\n        name: string;\n        kind: 'method';\n        signature: TypeSystem.CallSignature[];\n        comment?: Comment;\n    };\n\n    export type Function = {\n        name: string;\n        kind: 'function';\n        signature: TypeSystem.CallSignature;\n        comment?: Comment;\n    };\n\n    export type Property = {\n        kind: 'property';\n        name: string;\n        type: TypeDescriptor.Type;\n        flags: TypeDescriptor.Flags;\n        comment?: Comment;\n    };\n\n    export type TypeAlias = {\n        name: string;\n        kind: 'typeAlias';\n        typeParameters: TypeSystem.TypeParameter[];\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Enum = {\n        name: string;\n        kind: 'enum';\n        children: TypeSystem.EnumMember[];\n        comment?: Comment;\n    };\n\n    export type EnumMember = {\n        kind: 'enumMember';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Class = {\n        name: string;\n        kind: 'class';\n        children: TypeSystem.Type[];\n        comment?: Comment;\n    };\n\n    export type Interface = {\n        name: string;\n        kind: 'interface';\n        children: TypeSystem.Type[];\n        comment?: Comment;\n    };\n\n    export type Parameter = {\n        name: string;\n        kind: 'parameter';\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Constructor = {\n        kind: 'constructor';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type ConstructorSignature = {\n        kind: 'constructorSignature';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type TypeLiteral = {\n        kind: 'typeLiteral';\n        name: string;\n        signatures?: (ConstructorSignature | TypeSystem.CallSignature)[];\n        properties?: TypeSystem.Property[];\n        comment?: Comment;\n    };\n\n    export type Type =\n        | TypeSystem.Accessor\n        | TypeSystem.GetSignature\n        | TypeSystem.CallSignature\n        | TypeSystem.Method\n        | TypeSystem.Property\n        | TypeSystem.TypeAlias\n        | TypeSystem.Enum\n        | TypeSystem.EnumMember\n        | TypeSystem.Class\n        | TypeSystem.Constructor\n        | TypeSystem.ConstructorSignature\n        | TypeSystem.TypeLiteral\n        | TypeSystem.Parameter\n        | TypeSystem.Interface\n        | TypeSystem.Function;\n}\n\nexport namespace TypeDescriptor {\n    export interface Union {\n        type: 'or';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Intrinsic {\n        type: 'intrinsic';\n        value: string;\n    }\n\n    export interface Literal {\n        type: 'literal';\n        value: string;\n    }\n\n    export type Reflection = { type: 'reflection'; value: TypeSystem.Type };\n\n    export interface Reference {\n        type: 'reference';\n        value: string;\n        source: string;\n        typeArguments?: TypeDescriptor.Type[];\n        refersToTypeParameter?: boolean;\n    }\n\n    export interface Array {\n        type: 'array';\n        value: TypeDescriptor.Type;\n    }\n\n    export interface Intersection {\n        type: 'intersection';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Predicate {\n        type: 'predicate';\n        lhs: string;\n        rhs: TypeDescriptor.Type;\n    }\n\n    export interface Tuple {\n        type: 'tuple';\n        value: TypeDescriptor.Type[];\n    }\n\n    export type Type =\n        | TypeDescriptor.Union\n        | TypeDescriptor.Intrinsic\n        | TypeDescriptor.Literal\n        | TypeDescriptor.Reflection\n        | TypeDescriptor.Reference\n        | TypeDescriptor.Array\n        | TypeDescriptor.Intersection\n        | TypeDescriptor.Predicate\n        | TypeDescriptor.Tuple;\n\n    export type Flags = {\n        isReadonly?: boolean;\n        isProtected?: boolean;\n        isOptional?: boolean;\n    };\n}\n","import * as React from 'react';\nimport CodeBlock from '@theme/CodeBlock';\nimport './docRef.scss';\n\nexport interface DocRefProps {\n    declaration: string;\n    methods?: string[];\n}\n\nimport docsJson_ from '../../../generated/api.output.json';\nimport { ExportedTypeFile, TypeSystem, codify, firstLevel } from './types';\nconst docsJson = docsJson_ as any as DocsJson;\n\ntype DocsContent = { kind: string; text: string; tag?: string };\ntype DocsTag = { tag: string; content: DocsContent[] };\ntype DocsComment = {\n    summary?: DocsContent[];\n    blockTags?: DocsTag[];\n};\n\ntype Piece = {\n    kind: 'return' | 'paramter' | 'signature' | 'typearg' | 'typearg_default';\n    value: string;\n};\n\ntype Doc = {\n    name: string;\n    code: string;\n    comment?: DocsComment;\n    kind: 'accessor' | 'property' | 'method';\n    pieces: Piece[];\n};\n\ntype DocJson = {\n    kind: string;\n    metadata?: Doc;\n    children: Doc[];\n};\n\ntype DocsJson = {\n    [index: string]: DocJson;\n};\n\nconst newJson = docsJson_ as ExportedTypeFile;\n\nexport const DocumentRef = (props: { value: TypeSystem.Type }) => {\n    const code = React.useMemo(() => {\n        if (!props.value) {\n            return null;\n        }\n\n        switch (props.value.kind) {\n            case 'typeAlias':\n                return codify(props.value);\n            case 'interface':\n                return codify(props.value);\n            case 'class':\n                return codify(props.value);\n            case 'function':\n                return codify(props.value);\n            default:\n                return null;\n        }\n    }, [props.value]);\n\n    if (!code) {\n        return null;\n    }\n\n    return <CodeBlock language=\"tsx\">{code}</CodeBlock>;\n};\n\nexport const Text = (props: { content: DocsContent[] }) => {\n    return (\n        <div className=\"doc-text\">\n            {props.content.map((piece, i) => {\n                switch (piece.kind) {\n                    case 'text': {\n                        return <span key={i}>{piece.text}</span>;\n                    }\n                    case 'code':\n                        return (\n                            <code key={i}>\n                                {piece.text.substring(1, piece.text.length - 1)}\n                            </code>\n                        );\n                    default:\n                        throw new Error(`unhandled piece ${piece.kind}`);\n                }\n            })}\n        </div>\n    );\n};\n\nexport const Tags = (props: { tags: DocsTag[] }) => {\n    return (\n        <div>\n            {props.tags.map((tag, i) => {\n                return (\n                    <div key={i}>\n                        <div>{tag.tag}</div>\n                        <Text content={tag.content} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport const Summary = (props: { summary: DocsComment }) => {\n    return (\n        <div>\n            <Text content={props.summary.summary ?? []} />\n            {/* <Tags tags={props.summary.blockTags ?? []} /> */}\n        </div>\n    );\n};\n\nexport const Markdown = (props: { children: string }) => {\n    return <span>{props.children}</span>;\n};\n\nconst Row = (props: { doc: TypeSystem.Type }) => {\n    const comment =\n        props.doc.kind === 'accessor'\n            ? props.doc.value.comment\n            : props.doc.comment;\n    return (\n        <tr>\n            <th\n                style={{\n                    width: '40%',\n                    display: 'flex',\n                }}\n            >\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'start',\n                    }}\n                >\n                    <h6\n                        style={{\n                            fontFamily: 'monospace',\n                            fontSize: '1.2em',\n                        }}\n                    >\n                        {props.doc.name}\n                    </h6>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'start',\n                        }}\n                    >\n                        {/* <span\n                            style={{\n                                fontSize: '0.75em',\n                                color: 'var(--ifm-color-content-secondary)',\n                            }}\n                        >\n                            {'Type'}\n                        </span>\n                        <span\n                            style={{\n                                color: 'var(--ifm-color-primary)',\n                            }}\n                        >\n                            {doc.type}\n                        </span> */}\n                    </div>\n                </div>\n            </th>\n            <th style={{ width: '60%' }}>\n                {/* <div>{'-'}</div> */}\n                <div>\n                    <div>{comment && <Summary summary={comment} />}</div>\n                    <CodeBlock language=\"tsx\">{codify(props.doc)}</CodeBlock>\n                </div>\n            </th>\n        </tr>\n    );\n};\n\nexport const DocRef = (props: DocRefProps) => {\n    const docs = React.useMemo(\n        () => newJson[props.declaration],\n        [props.declaration]\n    );\n\n    const filteredDocs = React.useMemo(\n        () =>\n            docs.kind === 'class'\n                ? docs.children.filter((child) => {\n                      if (\n                          props.methods &&\n                          !props.methods.includes(child.name)\n                      ) {\n                          return false;\n                      }\n                      return true;\n                  })\n                : [],\n        [docs]\n    );\n\n    if (!docs) {\n        return <span>{`Failed to find docs for '${props.declaration}'`}</span>;\n    }\n\n    return (\n        <table className=\"doc-ref-table\">\n            <tbody>\n                {filteredDocs.map((doc, i) => {\n                    return (\n                        <>\n                            <Row key={i} doc={doc} />\n                            {/* <div>\n                                {firstLevel(doc).map((x) => (\n                                    <span style={{ padding: '0px 2px' }}>\n                                        <DocumentRef value={newJson[x]} />\n                                    </span>\n                                ))}\n                            </div> */}\n                            {/* {doc.pieces?.map((piece) => (\n                                <tr>\n                                    <th colSpan={2}>\n                                        <Piece piece={piece} />\n                                    </th>\n                                </tr>\n                            ))} */}\n                        </>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n","\n\nexport const frontMatter = {\n\ttitle: 'Floating Groups'\n};\nexport const contentTitle = undefined;\nexport const metadata = {\n  \"id\": \"core/groups/floatingGroups\",\n  \"title\": \"Floating Groups\",\n  \"description\": \"This section describes floating groups.\",\n  \"source\": \"@site/docs/core/groups/floatingGroups.mdx\",\n  \"sourceDirName\": \"core/groups\",\n  \"slug\": \"/core/groups/floatingGroups\",\n  \"permalink\": \"/docs/core/groups/floatingGroups\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core/groups/floatingGroups.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"title\": \"Floating Groups\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Group Controls\",\n    \"permalink\": \"/docs/core/groups/controls\"\n  },\n  \"next\": {\n    \"title\": \"Hidden Header\",\n    \"permalink\": \"/docs/core/groups/hiddenHeader\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport LiveExample from '@site/src/components/ui/exampleFrame';\nimport {DocRef} from '@site/src/components/ui/reference/docRef';\nexport const toc = [{\n  \"value\": \"Options\",\n  \"id\": \"options\",\n  \"level\": 2\n}, {\n  \"value\": \"API\",\n  \"id\": \"api\",\n  \"level\": 2\n}, {\n  \"value\": \"Panel and Group API\",\n  \"id\": \"panel-and-group-api\",\n  \"level\": 2\n}, {\n  \"value\": \"Working with Floating Groups\",\n  \"id\": \"working-with-floating-groups\",\n  \"level\": 2\n}, {\n  \"value\": \"Live Example\",\n  \"id\": \"live-example\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {FrameworkSpecific} = _components;\n  if (!FrameworkSpecific) _missingMdxReference(\"FrameworkSpecific\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This section describes floating groups.\"\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [\"Floating groups \", _jsx(_components.strong, {\n          children: \"cannot\"\n        }), \" be maximized. Calling maximize function on groups in these states will have no effect.\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dockview has built-in support for floating groups. Each floating container can contain a single group with many panels\\nand you can have as many floating containers as needed. You cannot dock multiple groups together in the same floating container.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"options\",\n      children: \"Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following properties can be set to configure the behaviours of floating groups.\"\n    }), \"\\n\", _jsx(FrameworkSpecific, {\n      framework: \"React\",\n      children: _jsx(DocRef, {\n        declaration: \"IDockviewReactProps\",\n        methods: ['floatingGroupBounds', 'disableFloatingGroups']\n      })\n    }), \"\\n\", _jsx(FrameworkSpecific, {\n      framework: \"JavaScript\",\n      children: _jsx(DocRef, {\n        declaration: \"DockviewComponentOptions\",\n        methods: ['floatingGroupBounds', 'disableFloatingGroups']\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can control the bounding box of floating groups through the optional \", _jsx(_components.code, {\n        children: \"floatingGroupBounds\"\n      }), \" options:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"boundedWithinViewport\"\n        }), \" will force the entire floating group to be bounded within the docks viewport.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"{minimumHeightWithinViewport?: number, minimumWidthWithinViewport?: number}\"\n        }), \" sets the respective dimension minimums that must appears within the docks viewport\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If no options are provided the defaults of \", _jsx(_components.code, {\n          children: \"100px\"\n        }), \" minimum height and width within the viewport are set.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following properties can be used to create floating groups\"\n    }), \"\\n\", _jsx(DocRef, {\n      declaration: \"DockviewApi\",\n      methods: ['addFloatingGroup']\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"addFloatingGroup\"\n        }), \" only accepts existing panels and groups. See \", _jsx(_components.a, {\n          href: \"/docs/core/panels/add\",\n          children: \"Addding Panels\"\n        }), \" on how to firstly add panels.\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Floating groups can be programatically added through the dockview \", _jsx(_components.code, {\n        children: \"api\"\n      }), \" method \", _jsx(_components.code, {\n        children: \"api.addFloatingGroup(...)\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"panel-and-group-api\",\n      children: \"Panel and Group API\"\n    }), \"\\n\", _jsx(DocRef, {\n      declaration: \"DockviewPanelApi\",\n      methods: ['location', 'onDidLocationChange']\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can check whether a group is floating via the \", _jsx(_components.code, {\n        children: \"group.api.location\"\n      }), \" property. See examples for full code.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"working-with-floating-groups\",\n      children: \"Working with Floating Groups\"\n    }), \"\\n\", _jsxs(\"h4\", {\n      children: [\"Float an existing tab by holding \", _jsx(_components.code, {\n        children: \"shift\"\n      }), \" whilst interacting with the tab\"]\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '200px'\n        },\n        src: useBaseUrl('/img/float_add.svg')\n      })\n    }), \"\\n\", _jsxs(\"h4\", {\n      children: [\"Move a floating tab by holding \", _jsx(_components.code, {\n        children: \"shift\"\n      }), \" whilst moving the cursor or dragging the empty header space\"]\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '200px'\n        },\n        src: useBaseUrl('/img/float_move.svg')\n      })\n    }), \"\\n\", _jsxs(\"h4\", {\n      children: [\"Move an entire floating group by holding \", _jsx(_components.code, {\n        children: \"shift\"\n      }), \" whilst dragging the empty header space\"]\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '200px'\n        },\n        src: useBaseUrl('/img/float_group.svg')\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"live-example\",\n      children: \"Live Example\"\n    }), \"\\n\", _jsx(LiveExample, {\n      framework: \"react\",\n      id: \"dockview/floating-groups\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","var map = {\n\t\"./javascript/fullwidthtab-dockview/src/app\": [\n\t\t1800,\n\t\t532,\n\t\t1800\n\t],\n\t\"./javascript/simple-dockview/src/app\": [\n\t\t6807,\n\t\t6807\n\t],\n\t\"./javascript/tabheight-dockview/src/app\": [\n\t\t1977,\n\t\t532,\n\t\t1977\n\t],\n\t\"./javascript/vanilla-dockview/src/app\": [\n\t\t9094,\n\t\t9094\n\t],\n\t\"./react/dockview/constraints/src/app\": [\n\t\t9920,\n\t\t9920\n\t],\n\t\"./react/dockview/demo-dockview/src/app\": [\n\t\t3158,\n\t\t532,\n\t\t3158\n\t],\n\t\"./react/dockview/dnd-events/src/app\": [\n\t\t9944,\n\t\t9944\n\t],\n\t\"./react/dockview/floating-groups/src/app\": [\n\t\t9518,\n\t\t9582\n\t],\n\t\"./react/dockview/group-actions/src/app\": [\n\t\t9980,\n\t\t532,\n\t\t9980\n\t],\n\t\"./react/dockview/layout/src/app\": [\n\t\t601,\n\t\t8787\n\t],\n\t\"./react/dockview/locked/src/app\": [\n\t\t4156,\n\t\t4156\n\t],\n\t\"./react/dockview/maximize-group/src/app\": [\n\t\t7729,\n\t\t7729\n\t],\n\t\"./react/dockview/popout-group/src/app\": [\n\t\t9502,\n\t\t8678,\n\t\t6835,\n\t\t9502\n\t],\n\t\"./react/dockview/render-mode/src/app\": [\n\t\t7787,\n\t\t532,\n\t\t7787\n\t],\n\t\"./react/dockview/resize-container/src/app\": [\n\t\t5093,\n\t\t5093\n\t],\n\t\"./react/dockview/resize/src/app\": [\n\t\t6149,\n\t\t532,\n\t\t6149\n\t],\n\t\"./react/dockview/scrollbars/src/app\": [\n\t\t8029,\n\t\t532,\n\t\t8029\n\t],\n\t\"./react/dockview/tabview/src/app\": [\n\t\t8774,\n\t\t8774\n\t],\n\t\"./react/dockview/update-parameters/src/app\": [\n\t\t3215,\n\t\t3215\n\t],\n\t\"./react/dockview/update-title/src/app\": [\n\t\t9070,\n\t\t9070\n\t],\n\t\"./react/dockview/watermark/src/app\": [\n\t\t4074,\n\t\t4074\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3086;\nmodule.exports = webpackAsyncContext;"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","CloseButton","createSvgElementFromPath","params","width","height","viewbox","path","viewBox","focusable","className","d","CodeSandboxButton","props","url","React","id","_jsxs","hideThemePicker","ThemePicker","style","display","alignItems","href","target","rel","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","key","defaultValue","item","setItem","localStorage","getItem","listener","event","window","addEventListener","removeEventListener","theme","setTheme","dispatchEvent","StorageEvent","padding","backgroundColor","color","onChange","e","value","map","MultiFrameworkContainer2","ref","framework","setFramework","animation","setAnimation","setTimeout","current","disposable","typescript","dispose","sandboxId","position","background","zIndex","top","left","justifyContent","react","margin","fontSize","cursor","border","flexGrow","MultiFrameworkContainer","Component","flexDirection","codifyType","type","values","_","isComparator","code","join","lhs","rhs","typeArguments","codify","Error","kind","signature","name","returnType","flags","isProtected","isReadonly","isOptional","typeParameters","length","typeParameter","typeCode","extends","default","parameters","parameter","properties","signatures","console","log","newJson","docsJson_","Text","content","piece","i","text","substring","Summary","summary","Row","comment","doc","fontFamily","CodeBlock","language","DocRef","docs","declaration","filteredDocs","filter","child","methods","includes","frontMatter","title","contentTitle","undefined","metadata","assets","toc","_createMdxContent","_components","a","admonition","h2","li","p","strong","ul","components","FrameworkSpecific","component","_missingMdxReference","MDXContent","wrapper","MDXLayout","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","ids","all","slice","keys","Object","module","exports"],"sourceRoot":""}