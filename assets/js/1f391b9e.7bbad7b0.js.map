{"version":3,"file":"assets/js/1f391b9e.7bbad7b0.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXPage/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mdxPageWrapper\":\"mdxPageWrapper_SLvB\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport Layout from '@theme/Layout';\nimport MDXContent from '@theme/MDXContent';\nimport TOC from '@theme/TOC';\nimport styles from './styles.module.css';\nexport default function MDXPage(props) {\n  const {content: MDXPageContent} = props;\n  const {\n    metadata: {title, description, frontMatter},\n  } = MDXPageContent;\n  const {wrapperClassName, hide_table_of_contents: hideTableOfContents} =\n    frontMatter;\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        wrapperClassName ?? ThemeClassNames.wrapper.mdxPages,\n        ThemeClassNames.page.mdxPage,\n      )}>\n      <PageMetadata title={title} description={description} />\n      <Layout>\n        <main className=\"container container--fluid margin-vert--lg\">\n          <div className={clsx('row', styles.mdxPageWrapper)}>\n            <div className={clsx('col', !hideTableOfContents && 'col--8')}>\n              <article>\n                <MDXContent>\n                  <MDXPageContent />\n                </MDXContent>\n              </article>\n            </div>\n            {!hideTableOfContents && MDXPageContent.toc.length > 0 && (\n              <div className=\"col col--2\">\n                <TOC\n                  toc={MDXPageContent.toc}\n                  minHeadingLevel={frontMatter.toc_min_heading_level}\n                  maxHeadingLevel={frontMatter.toc_max_heading_level}\n                />\n              </div>\n            )}\n          </div>\n        </main>\n      </Layout>\n    </HtmlClassNameProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <a\n            href={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n"],"names":["MDXPage","props","content","MDXPageContent","metadata","title","description","frontMatter","wrapperClassName","hide_table_of_contents","hideTableOfContents","React","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","mdxPages","page","mdxPage","PageMetadata","Layout","styles","mdxPageWrapper","MDXContent","toc","length","TOC","minHeadingLevel","toc_min_heading_level","maxHeadingLevel","toc_max_heading_level","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","_ref","tableOfContents","TOCItems","_extends","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","map","heading","parentIndex","children","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","undefined","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","join","getAnchors","activeAnchor","activeLink","link","id","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","key","dangerouslySetInnerHTML","__html","value","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC"],"sourceRoot":""}