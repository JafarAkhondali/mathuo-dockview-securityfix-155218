{"version":3,"file":"assets/js/ccc49370.aab6c924.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/Metadata/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogPostPaginator(props) {\n  const {nextItem, prevItem} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.blog.post.paginator.navAriaLabel',\n        message: 'Blog post page navigation',\n        description: 'The ARIA label for the blog posts pagination',\n      })}>\n      {prevItem && (\n        <PaginatorNavLink\n          {...prevItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.newerPost\"\n              description=\"The blog post button label to navigate to the newer/previous post\">\n              Newer Post\n            </Translate>\n          }\n        />\n      )}\n      {nextItem && (\n        <PaginatorNavLink\n          {...nextItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.olderPost\"\n              description=\"The blog post button label to navigate to the older/next post\">\n              Older Post\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {PageMetadata} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostPageMetadata() {\n  const {assets, metadata} = useBlogPost();\n  const {title, description, date, tags, authors, frontMatter} = metadata;\n  const {keywords} = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <PageMetadata\n      title={title}\n      description={description}\n      keywords={keywords}\n      image={image}>\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"article:published_time\" content={date} />\n      {/* TODO double check those article meta array syntaxes, see https://ogp.me/#array */}\n      {authors.some((author) => author.url) && (\n        <meta\n          property=\"article:author\"\n          content={authors\n            .map((author) => author.url)\n            .filter(Boolean)\n            .join(',')}\n        />\n      )}\n      {tags.length > 0 && (\n        <meta\n          property=\"article:tag\"\n          content={tags.map((tag) => tag.label).join(',')}\n        />\n      )}\n    </PageMetadata>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {HtmlClassNameProvider, ThemeClassNames} from '@docusaurus/theme-common';\nimport {BlogPostProvider, useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport BlogPostPaginator from '@theme/BlogPostPaginator';\nimport BlogPostPageMetadata from '@theme/BlogPostPage/Metadata';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nfunction BlogPostPageContent({sidebar, children}) {\n  const {metadata, toc} = useBlogPost();\n  const {nextItem, prevItem, frontMatter, unlisted} = metadata;\n  const {\n    hide_table_of_contents: hideTableOfContents,\n    toc_min_heading_level: tocMinHeadingLevel,\n    toc_max_heading_level: tocMaxHeadingLevel,\n  } = frontMatter;\n  return (\n    <BlogLayout\n      sidebar={sidebar}\n      toc={\n        !hideTableOfContents && toc.length > 0 ? (\n          <TOC\n            toc={toc}\n            minHeadingLevel={tocMinHeadingLevel}\n            maxHeadingLevel={tocMaxHeadingLevel}\n          />\n        ) : undefined\n      }>\n      {unlisted && <Unlisted />}\n      <BlogPostItem>{children}</BlogPostItem>\n\n      {(nextItem || prevItem) && (\n        <BlogPostPaginator nextItem={nextItem} prevItem={prevItem} />\n      )}\n    </BlogLayout>\n  );\n}\nexport default function BlogPostPage(props) {\n  const BlogPostContent = props.content;\n  return (\n    <BlogPostProvider content={props.content} isBlogPostPage>\n      <HtmlClassNameProvider\n        className={clsx(\n          ThemeClassNames.wrapper.blogPages,\n          ThemeClassNames.page.blogPostPage,\n        )}>\n        <BlogPostPageMetadata />\n        <BlogPostPageContent sidebar={props.sidebar}>\n          <BlogPostContent />\n        </BlogPostPageContent>\n      </HtmlClassNameProvider>\n    </BlogPostProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        // const gready = document.createElement('div');\n        // gready.className = 'dv-overlay-render-container';\n        // this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super({\n            parentElement: parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    // { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogPostPaginator","props","nextItem","prevItem","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","subLabel","Translate","isNext","BlogPostPageMetadata","assets","metadata","useBlogPost","title","date","tags","authors","frontMatter","keywords","image","PageMetadata","property","content","some","author","url","map","filter","Boolean","join","length","tag","label","BlogPostPageContent","_ref","sidebar","toc","unlisted","hide_table_of_contents","hideTableOfContents","toc_min_heading_level","tocMinHeadingLevel","toc_max_heading_level","tocMaxHeadingLevel","BlogLayout","TOC","minHeadingLevel","maxHeadingLevel","undefined","Unlisted","BlogPostItem","BlogPostPage","BlogPostContent","BlogPostProvider","isBlogPostPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogPostPage","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","styles","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","Link","to","dangerouslySetInnerHTML","__html","value","React","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","_key","listener","disposables","child","dispose","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","index","splice","fire","e","queueMicrotask","delete","addDisposableWindowListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","contains","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","getElementsByTagName","call","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","width","height","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","sequentialNumberGenerator","next","toString","range","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","updateOptions","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","open","features","entries","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","_props","componentProps","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}