{"version":3,"file":"assets/js/a6aa9e1f.b5f9678b.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/flags.ts","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, coordinates, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","export const IS_PROD = false;\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    // { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Vue', label: 'Vue' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[0].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.toLowerCase()}`;\n    const path = `/templates/${props.id}/${framework.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","coord","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","o","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","IS_PROD","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","onChange","framework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","src","justifyContent","CodeSandbox","alignItems","fontWeight","paddingRight"],"sourceRoot":""}