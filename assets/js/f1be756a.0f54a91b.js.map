{"version":3,"file":"assets/js/f1be756a.0f54a91b.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/keyboard-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/keyboard.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const sashCount = this.viewItems.length - 1;\n        const marginReducedSize = (this.margin * sashCount) / this.viewItems.length;\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const offset = Math.min(Math.max(0, totalLeftOffset - 2), this.size - this.margin);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            const size = view.size - marginReducedSize;\n            const offset = i === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (i / sashCount) * marginReducedSize;\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport './app.scss';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        const [active, setActive] = React.useState<boolean>(props.api.isActive);\n        const ref = React.useRef<HTMLInputElement>(null);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidActiveChange((event) => {\n                setActive(props.api.isActive);\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        return (\n            <div\n                className=\"keyboard-example-panel\"\n                style={{ padding: '20px', color: 'white' }}\n            >\n                <div style={{ padding: '10px 0px' }}>\n                    <span>{props.api.title}</span>\n                </div>\n                <div className=\"keyboard-example-description\">\n                    {'Use '}\n                    <span className=\"keyboard-example-shortcut\">\n                        {'Ctrl+ArrowLeft'}\n                    </span>\n                    {' and '}\n                    <span className=\"keyboard-example-shortcut \">\n                        {'Ctrl+ArrowRight'}\n                    </span>\n                    {' to nativgate between tabs.'}\n                </div>\n\n                <div>\n                    <span>{'isPanelActive: '}</span>\n                    <span>{active ? 'true' : 'false'}</span>\n                </div>\n            </div>\n        );\n    },\n};\n\nconst DockviewDemo = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n\n        event.api.getPanel('panel_1')!.api.setActive();\n\n        setApi(event.api);\n    };\n\n    const onKeyDown = (event: React.KeyboardEvent) => {\n        if (!api) {\n            return;\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowLeft') {\n            // move backwards\n            api.moveToPrevious({ includePanel: true });\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowRight') {\n            // move backwards\n            api.moveToNext({ includePanel: true });\n        }\n    };\n\n    return (\n        <div style={{ height: '100%' }} onKeyDown={onKeyDown}>\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className={props.theme || 'dockview-theme-abyss'}\n            />\n        </div>\n    );\n};\n\nexport default DockviewDemo;\n","\n\nexport const frontMatter = {\n\ttitle: 'Keyboard'\n};\nexport const contentTitle = 'Keyboard Navigation';\nexport const metadata = {\n  \"id\": \"advanced/keyboard\",\n  \"title\": \"Keyboard\",\n  \"description\": \"Keyboard shortcuts\",\n  \"source\": \"@site/docs/advanced/keyboard.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/keyboard\",\n  \"permalink\": \"/docs/advanced/keyboard\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/keyboard.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"title\": \"Keyboard\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"iframes\",\n    \"permalink\": \"/docs/advanced/iframe\"\n  },\n  \"next\": {\n    \"title\": \"Nested Instances\",\n    \"permalink\": \"/docs/advanced/nested\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewKeyboard from '@site/sandboxes/keyboard-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"keyboard-navigation\",\n      children: \"Keyboard Navigation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keyboard shortcuts\"\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      height: 600,\n      sandboxId: \"keyboard-dockview\",\n      react: DockviewKeyboard\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","setAttribute","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","zIndex","justifyContent","react","cursor","border","MultiFrameworkContainer","default","active","setApi","onKeyDown","ctrlKey","code","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","h1","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}