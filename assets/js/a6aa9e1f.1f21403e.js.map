{"version":3,"file":"assets/js/a6aa9e1f.1f21403e.js","mappings":"sPAkBA,SAASA,EAAqBC,GAC5B,MAAM,SAACC,GAAYD,GAEjBE,YAAaC,MAAOC,KAClBC,EAAAA,EAAAA,MACE,gBAACC,EAAe,UAAEC,EAAS,UAAEC,GAAaP,EAE1CE,EAD+B,MAAdK,EACQJ,EAAYG,EAC3C,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACV,MAAOA,EAAOW,YAAaR,KACzCM,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,IAAI,sBAG1B,CACA,SAASC,EAAoBjB,GAC3B,MAAM,SAACC,EAAQ,MAAEiB,EAAK,QAAEC,GAAWnB,EACnC,OACES,EAAAA,EAAAA,MAACW,EAAAA,EAAU,CAACD,QAASA,EAAQR,SAAA,EAC3BC,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAACH,MAAOA,KACtBN,EAAAA,EAAAA,KAACU,EAAAA,EAAiB,CAACrB,SAAUA,MAGnC,CACe,SAASsB,EAAavB,GACnC,OACES,EAAAA,EAAAA,MAACe,EAAAA,GAAqB,CACpBC,WAAWC,EAAAA,EAAAA,GACTC,EAAAA,EAAgBC,QAAQC,UACxBF,EAAAA,EAAgBG,KAAKC,cACrBpB,SAAA,EACFC,EAAAA,EAAAA,KAACb,EAAoB,IAAKC,KAC1BY,EAAAA,EAAAA,KAACK,EAAmB,IAAKjB,MAG/B,C,2EC5Ce,SAASsB,EAAkBtB,GACxC,MAAM,SAACC,GAAYD,GACb,aAACgC,EAAY,SAAEC,GAAYhC,EACjC,OACEQ,EAAAA,EAAAA,MAAA,OACEgB,UAAU,iBACV,cAAYS,EAAAA,EAAAA,GAAU,CACpBC,GAAI,oCACJC,QAAS,4BACTtB,YAAa,2CACZH,SAAA,CACFqB,IACCpB,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CACf7B,UAAWwB,EACX7B,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,oCACHrB,YAAY,0EAAyEH,SAAC,oBAM7FsB,IACCrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CACf7B,UAAWyB,EACX9B,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,oCACHrB,YAAY,sEAAqEH,SAAC,kBAItF4B,QAAM,MAKhB,C,4ECtCe,SAASlB,EAAamB,GAGjC,IAHkC,MACpCtB,EACAuB,UAAWC,EAAwBC,EAAAA,GACpCH,EACC,OACE5B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACGO,EAAM0B,KAAIC,IAAA,IAAEC,QAASC,GAAgBF,EAAA,OACpCjC,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAEfF,QAASC,EAAgBpC,UACzBC,EAAAA,EAAAA,KAAC8B,EAAqB,CAAA/B,UACpBC,EAAAA,EAAAA,KAACmC,EAAe,OAHbA,EAAgB9C,SAASO,UAKb,KAI3B,C,6LC1BA,MAAMyC,GAEC,MAAMC,UAAsBD,EAC/BE,WAAAA,CAAYC,EAAQC,EAASC,GACzBC,QACAC,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,CACnB,EAEG,MAAMG,UAAqBR,EAC9BE,WAAAA,CAAYC,EAAQM,GAChBH,QACAC,KAAKJ,OAASA,EACdI,KAAKE,OAASA,CAClB,EAKG,MAAMC,EACTR,WAAAA,GACI,CAEJ,kBAAOS,GACH,OAAOD,EAAuBE,QAClC,CACAC,OAAAA,CAAQC,GACJ,OAAOA,GAASA,IAAUP,KAAKO,KACnC,CACAC,SAAAA,CAAUD,GACFP,KAAKM,QAAQC,KACbP,KAAKO,WAAQE,EACbT,KAAKU,UAAOD,EAEpB,CACAE,OAAAA,CAAQJ,GACJ,GAAIP,KAAKM,QAAQC,GACb,OAAOP,KAAKU,IAGpB,CACAE,OAAAA,CAAQF,EAAMH,GACNA,IACAP,KAAKU,KAAOA,EACZV,KAAKO,MAAQA,EAErB,EAGG,SAASM,IACZ,MAAMC,EAAgBX,EAAuBC,cAE7C,GADqBU,EAAcR,QAAQZ,EAAcqB,WAIzD,OAAOD,EAAcH,QAAQjB,EAAcqB,WAAW,EAC1D,CACO,SAASC,IACZ,MAAMC,EAAed,EAAuBC,cAE5C,GADqBa,EAAaX,QAAQL,EAAac,WAIvD,OAAOE,EAAaN,QAAQV,EAAac,WAAW,EACxD,CCjEO,IAAIG,ECAAC,EFiDXhB,EAAuBE,SAAW,IAAIF,EChDtC,SAAWe,GACPA,EAAME,IAAM,WAAkB,IAAD,IAAAC,EAAAC,UAAAC,OAAbpE,EAAQ,IAAAqE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAARtE,EAAQsE,GAAAH,UAAAG,GACpB,OAAQC,IACJ,MAAMC,EAAcxE,EAASiC,KAAKwC,GAAUA,EAAMF,KAClD,MAAO,CACHG,QAASA,KACLF,EAAYG,SAASC,IACjBA,EAAEF,SAAS,GACb,EAET,CAET,CACH,CAbD,CAaGX,IAAUA,EAAQ,CAAC,IACf,MAAMc,EACTrC,WAAAA,GACIK,KAAKiC,mBAAoB,CAC7B,CACA,oBAAIC,GACA,OAAOlC,KAAKiC,iBAChB,CACAE,cAAAA,GACInC,KAAKiC,mBAAoB,CAC7B,EAmBJ,MAAMG,EACF,aAAOC,GACH,IAAIC,EACJ,OAAO,IAAIF,EAAwC,QAA5BE,GAAK,IAAIC,OAAQC,aAA0B,IAAPF,EAAgBA,EAAK,GACpF,CACA3C,WAAAA,CAAY8C,GACRzC,KAAKyC,MAAQA,CACjB,CACAC,KAAAA,GACIC,QAAQC,KAAK5C,KAAKyC,MACtB,EAEJ,MAAMI,EACFlD,WAAAA,CAAYmD,EAAUC,GAClB/C,KAAK8C,SAAWA,EAChB9C,KAAK+C,WAAaA,CACtB,EAGG,MAAMC,EACT,+BAAOC,CAAyBC,GACxBA,IAAcF,EAAQG,iBACtBH,EAAQI,oBAAoBC,QAEhCL,EAAQG,gBAAkBD,CAC9B,CACA,SAAIT,GACA,OAAOzC,KAAKsD,KAChB,CACA3D,WAAAA,CAAY4D,GACRvD,KAAKuD,QAAUA,EACfvD,KAAKwD,WAAa,GAClBxD,KAAKyD,WAAY,CACrB,CACA,SAAIC,GA4BA,OA3BK1D,KAAK2D,SACN3D,KAAK2D,OAAUb,IACX,IAAIR,GACyB,QAAvBA,EAAKtC,KAAKuD,eAA4B,IAAPjB,OAAgB,EAASA,EAAGsB,cAA0BnD,IAAfT,KAAKsD,OAC7ER,EAAS9C,KAAKsD,OAElB,MAAM5B,EAAW,IAAImB,EAASC,EAAUE,EAAQG,gBAAkBf,EAAWC,cAAW5B,GAExF,OADAT,KAAKwD,WAAWK,KAAKnC,GACd,CACHG,QAASA,KACL,MAAMiC,EAAQ9D,KAAKwD,WAAWO,QAAQrC,GAClCoC,GAAS,EACT9D,KAAKwD,WAAWQ,OAAOF,EAAO,GAEzBd,EAAQG,eAIb,EAGX,EAEDH,EAAQG,iBACRH,EAAQI,oBAAoBa,IAAIjE,KAAK2D,OAAQvB,EAAWC,WAGzDrC,KAAK2D,MAChB,CACAO,IAAAA,CAAKC,GACDnE,KAAKsD,MAAQa,EACb,IAAK,MAAMzC,KAAY1B,KAAKwD,WACxB9B,EAASoB,SAASqB,EAE1B,CACAtC,OAAAA,GACS7B,KAAKyD,YACNzD,KAAKyD,WAAY,EACbzD,KAAKwD,WAAWjC,OAAS,IACrByB,EAAQG,iBACRiB,gBAAe,KACX,IAAI9B,EAEJ,IAAK,MAAMZ,KAAY1B,KAAKwD,WACxBb,QAAQC,KAAoC,QAA9BN,EAAKZ,EAASqB,kBAA+B,IAAPT,OAAgB,EAASA,EAAGI,QACpF,IAGR1C,KAAKwD,WAAa,IAElBR,EAAQG,iBAAmBnD,KAAK2D,QAChCX,EAAQI,oBAAoBiB,OAAOrE,KAAK2D,QAGpD,EAIG,SAASW,EAA4BC,EAASC,EAAM9C,EAAU6B,GAEjE,OADAgB,EAAQE,iBAAiBD,EAAM9C,EAAU6B,GAClC,CACH1B,QAASA,KACL0C,EAAQG,oBAAoBF,EAAM9C,EAAU6B,EAAQ,EAGhE,CACO,SAASoB,EAAsBJ,EAASC,EAAM9C,EAAU6B,GAE3D,OADAgB,EAAQE,iBAAiBD,EAAM9C,EAAU6B,GAClC,CACH1B,QAASA,KACL0C,EAAQG,oBAAoBF,EAAM9C,EAAU6B,EAAQ,EAGhE,CAjBAP,EAAQG,iBAAkB,EAC1BH,EAAQI,oBAAsB,IA7G9B,MACIzD,WAAAA,GACIK,KAAK4E,OAAS,IAAIC,GACtB,CACA,QAAIC,GACA,OAAO9E,KAAK4E,OAAOE,IACvB,CACAb,GAAAA,CAAIP,EAAOX,GACP/C,KAAK4E,OAAOG,IAAIrB,EAAOX,EAC3B,CACAsB,OAAOX,GACH1D,KAAK4E,OAAOP,OAAOX,EACvB,CACAL,KAAAA,GACIrD,KAAK4E,OAAOvB,OAChB,GA+GG,MAAM2B,EACTrF,WAAAA,GACIK,KAAKiF,SAAW,IAAIjC,EACpBhD,KAAKkF,QAAUlF,KAAKiF,SAASvB,KACjC,CACAQ,IAAAA,GACQlE,KAAKmF,OACLC,aAAapF,KAAKmF,OAEtBnF,KAAKmF,MAAQE,YAAW,KACpBrF,KAAKiF,SAASf,OACdkB,aAAapF,KAAKmF,MAAM,GAEhC,CACAtD,OAAAA,GACI7B,KAAKiF,SAASpD,SAClB,GCvKJ,SAAWV,GACPA,EAAWmE,KAAO,CACdzD,QAASA,QAWbV,EAAWoE,KAPX,SAAcC,GACV,MAAO,CACH3D,QAASA,KACL2D,GAAM,EAGlB,CAEH,CAdD,CAcGrE,IAAeA,EAAa,CAAC,IACzB,MAAMsE,EACT,cAAIC,GACA,OAAO1F,KAAK2F,WAChB,CACAhG,WAAAA,GACIK,KAAK2F,aAAc,EAAM,QAAAtE,EAAAC,UAAAC,OADdqE,EAAI,IAAApE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJmE,EAAInE,GAAAH,UAAAG,GAEfzB,KAAK6F,aAAeD,CACxB,CACAE,cAAAA,GAAyB,IAAD,IAAAC,EAAAzE,UAAAC,OAANqE,EAAI,IAAApE,MAAAuE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,GAAA1E,UAAA0E,GAClBJ,EAAK9D,SAASmE,GAAQjG,KAAK6F,aAAahC,KAAKoC,IACjD,CACApE,OAAAA,GACQ7B,KAAK2F,cAGT3F,KAAK2F,aAAc,EACnB3F,KAAK6F,aAAa/D,SAASmE,GAAQA,EAAIpE,YACvC7B,KAAK6F,aAAe,GACxB,EAEG,MAAMK,EACTvG,WAAAA,GACIK,KAAKmG,YAAchF,EAAWmE,IAClC,CACA,SAAI7C,CAAM2D,GACFpG,KAAKmG,aACLnG,KAAKmG,YAAYtE,UAErB7B,KAAKmG,YAAcC,CACvB,CACAvE,OAAAA,GACQ7B,KAAKmG,cACLnG,KAAKmG,YAAYtE,UACjB7B,KAAKmG,YAAchF,EAAWmE,KAEtC,ECjDG,SAASe,EAAmB9B,EAAS+B,GACxC,MAAMC,EAAW,IAAIC,gBAAgBC,IAMjCC,uBAAsB,KAClB,MAAMC,EAAaF,EAAQ,GAC3BH,EAAGK,EAAW,GAChB,IAGN,OADAJ,EAASK,QAAQrC,GACV,CACH1C,QAASA,KACL0E,EAASM,UAAUtC,GACnBgC,EAASO,YAAY,EAGjC,CACO,MAAMC,EAAgB,SAACxC,GAAyB,IAAD,IAAAlD,EAAAC,UAAAC,OAAZyF,EAAO,IAAAxF,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPuF,EAAOvF,EAAA,GAAAH,UAAAG,GAC7C,IAAK,MAAMwF,KAAaD,EAChBzC,EAAQ2C,UAAUC,SAASF,IAC3B1C,EAAQ2C,UAAUE,OAAOH,EAGrC,EACaI,EAAa,SAAC9C,GAAyB,IAAD,IAAAwB,EAAAzE,UAAAC,OAAZyF,EAAO,IAAAxF,MAAAuE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPgB,EAAOhB,EAAA,GAAA1E,UAAA0E,GAC1C,IAAK,MAAMiB,KAAaD,EACfzC,EAAQ2C,UAAUC,SAASF,IAC5B1C,EAAQ2C,UAAUjD,IAAIgD,EAGlC,EACaK,EAAcA,CAAC/C,EAAStG,EAAWsJ,KAC5C,MAAMC,EAAWjD,EAAQ2C,UAAUC,SAASlJ,GACxCsJ,IAAcC,GACdjD,EAAQ2C,UAAUjD,IAAIhG,IAErBsJ,GAAaC,GACdjD,EAAQ2C,UAAUE,OAAOnJ,EAC7B,EAEG,SAASwJ,EAAWC,EAAWC,GAClC,KAAOD,GAAW,CACd,GAAIA,IAAcC,EACd,OAAO,EAEXD,EAAYA,EAAUE,UAC1B,CACA,OAAO,CACX,CACO,SAASC,EAAqBrK,GACjC,OAAOgE,MAAMT,UAAU+G,MAAMC,KAAKC,SAASH,qBAAqBrK,GAAM,EAC1E,CACO,SAASyK,EAAW1D,GACvB,OAAO,IAAI2D,EAAa3D,EAC5B,CAIA,MAAM2D,UAAqBzC,EACvB9F,WAAAA,CAAY4E,GACRxE,QACAC,KAAKmI,YAAc,IAAInF,EACvBhD,KAAKoI,WAAapI,KAAKmI,YAAYzE,MACnC1D,KAAKqI,WAAa,IAAIrF,EACtBhD,KAAKsI,UAAYtI,KAAKqI,WAAW3E,MACjC1D,KAAK8F,eAAe9F,KAAKmI,YAAanI,KAAKqI,YAC3C,IAAIE,EAAWd,EAAWO,SAASQ,cAAejE,GAC9CkE,GAAe,EACnB,MAAMC,EAAUA,KACZD,GAAe,EACVF,IACDA,GAAW,EACXvI,KAAKmI,YAAYjE,OACrB,EAEEyE,EAASA,KACPJ,IACAE,GAAe,EACfG,OAAOvD,YAAW,KACVoD,IACAA,GAAe,EACfF,GAAW,EACXvI,KAAKqI,WAAWnE,OACpB,GACD,GACP,EAEJlE,KAAK6I,qBAAuB,KACIpB,EAAWO,SAASQ,cAAejE,KACnCgE,IACpBA,EACAI,IAGAD,IAER,EAEAnE,aAAmBuE,aACnB9I,KAAK8F,eAAenB,EAAsBJ,EAAS,QAASmE,GAAS,IACrE1I,KAAK8F,eAAenB,EAAsBJ,EAAS,OAAQoE,GAAQ,MAGnE3I,KAAK8F,eAAexB,EAA4BC,EAAS,QAASmE,GAAS,IAC3E1I,KAAK8F,eAAexB,EAA4BC,EAAS,OAAQoE,GAAQ,IAEjF,CACAI,YAAAA,GACI/I,KAAK6I,sBACT,EAGJ,MAAMG,EAA4B,yBAM3B,SAASC,EAAsBvF,GAClC,OAAOA,EAAMsF,EACjB,CA2BO,SAASE,EAAuBC,GACnC,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,OAAEC,GAAWJ,EAAQK,wBAC7C,MAAO,CACHJ,KAAMA,EAAOR,OAAOa,QACpBJ,IAAKA,EAAMT,OAAOc,QAClBJ,MAAOA,EACPC,OAAQA,EAEhB,CChKO,SAASI,EAAKC,GACjB,GAAmB,IAAfA,EAAIrI,OACJ,MAAM,IAAIgB,MAAM,qBAEpB,MAAO,CAACqH,EAAI9B,MAAM,EAAG8B,EAAIrI,OAAS,GAAIqI,EAAIA,EAAIrI,OAAS,GAC3D,CAIO,SAASsI,EAAeC,EAAMC,GACjC,GAAID,EAAKvI,SAAWwI,EAAKxI,OACrB,OAAO,EAEX,IAAK,IAAIyI,EAAI,EAAGA,EAAIF,EAAKvI,OAAQyI,IAC7B,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,CACX,CAIO,SAASC,EAAYL,EAAKnH,GAC7B,MAAMqB,EAAQ8F,EAAI7F,QAAQtB,GACtBqB,GAAS,IACT8F,EAAI5F,OAAOF,EAAO,GAClB8F,EAAIM,QAAQzH,GAEpB,CAIO,SAAS0H,EAAUP,EAAKnH,GAC3B,MAAMqB,EAAQ8F,EAAI7F,QAAQtB,GACtBqB,GAAS,IACT8F,EAAI5F,OAAOF,EAAO,GAClB8F,EAAI/F,KAAKpB,GAEjB,CAUO,SAAS2E,EAAOgD,EAAO3H,GAC1B,MAAMqB,EAAQsG,EAAMC,WAAWC,GAAMA,IAAM7H,IAC3C,OAAIqB,GAAS,IACTsG,EAAMpG,OAAOF,EAAO,IACb,EAGf,CCxDO,MAAMyG,EAAQA,CAAC9H,EAAO+H,EAAKC,KAC9B,GAAID,EAAMC,EACN,MAAM,IAAIlI,MAAO,GAAEiI,OAASC,6BAEhC,OAAOC,KAAKF,IAAIC,EAAKC,KAAKD,IAAIhI,EAAO+H,GAAK,EAEjCG,EAA4BA,KACrC,IAAIlI,EAAQ,EACZ,MAAO,CAAEmI,KAAMA,KAAOnI,KAASoI,WAAY,EAElCC,EAAQA,CAACvF,EAAMwF,KACxB,MAAMC,EAAS,GAKf,GAJkB,iBAAPD,IACPA,EAAKxF,EACLA,EAAO,GAEPA,GAAQwF,EACR,IAAK,IAAIf,EAAIzE,EAAMyE,EAAIe,EAAIf,IACvBgB,EAAOnH,KAAKmG,QAIhB,IAAK,IAAIA,EAAIzE,EAAMyE,EAAIe,EAAIf,IACvBgB,EAAOnH,KAAKmG,GAGpB,OAAOgB,CAAM,ECzBV,MAAMC,EACT,QAAInG,CAAKA,GACL9E,KAAKkL,MAAQpG,CACjB,CACA,QAAIA,GACA,OAAO9E,KAAKkL,KAChB,CACA,qBAAIC,GACA,OAAOnL,KAAKoL,kBAChB,CACA,WAAIC,GACA,YAA0C,IAA5BrL,KAAKoL,kBACvB,CACA,eAAIE,GACA,OAAOtL,KAAKqL,QAAUrL,KAAKuL,KAAKD,YAAc,CAClD,CACA,mBAAIE,GACA,OAAOxL,KAAKuL,KAAKD,WACrB,CACA,eAAIG,GACA,OAAOzL,KAAKqL,QAAUrL,KAAKuL,KAAKE,YAAc,CAClD,CACA,mBAAIC,GACA,OAAO1L,KAAKuL,KAAKE,WACrB,CACA,YAAIE,GACA,OAAO3L,KAAKuL,KAAKI,QACrB,CACA,QAAIC,GACA,QAAS5L,KAAKuL,KAAKK,IACvB,CACA,WAAIC,CAAQA,GACR7L,KAAK8L,UAAUC,MAAMC,cAAgBH,EAAU,GAAK,MACxD,CACAlM,WAAAA,CAAYmM,EAAWP,EAAMzG,EAAMsB,GAC/BpG,KAAK8L,UAAYA,EACjB9L,KAAKuL,KAAOA,EACZvL,KAAKoG,WAAaA,EAClBpG,KAAKoL,wBAAqB3K,EACN,iBAATqE,GACP9E,KAAKkL,MAAQpG,EACb9E,KAAKoL,wBAAqB3K,EAC1BqL,EAAU5E,UAAUjD,IAAI,aAGxBjE,KAAKkL,MAAQ,EACblL,KAAKoL,mBAAqBtG,EAAKqG,kBAEvC,CACAc,UAAAA,CAAWZ,EAASvG,GAChB,IAAIxC,EACA+I,IAAYrL,KAAKqL,UAGjBA,GACArL,KAAK8E,KAAOyF,EAAyC,QAAlCjI,EAAKtC,KAAKoL,0BAAuC,IAAP9I,EAAgBA,EAAK,EAAGtC,KAAKwL,gBAAiBxL,KAAK0L,iBAChH1L,KAAKoL,wBAAqB3K,IAG1BT,KAAKoL,mBACe,iBAATtG,EAAoBA,EAAO9E,KAAK8E,KAC3C9E,KAAK8E,KAAO,GAEhB9E,KAAK8L,UAAU5E,UAAUgF,OAAO,UAAWb,GACvCrL,KAAKuL,KAAKU,YACVjM,KAAKuL,KAAKU,WAAWZ,GAE7B,CACAxJ,OAAAA,GAEI,OADA7B,KAAKoG,WAAWvE,UACT7B,KAAKuL,IAChB,EC/DG,IAAIY,EAKAC,EAOAC,EAMAC,GAjBX,SAAWH,GACPA,EAAwB,WAAI,aAC5BA,EAAsB,SAAI,UAC7B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,SACzC,CALD,CAKGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAOC,WAAa,CAAE/H,KAAM,cAI5B8H,EAAOE,MAHP,SAAe1I,GACX,MAAO,CAAEU,KAAM,QAASV,QAC5B,EAKAwI,EAAOG,UAHP,SAAmBtB,GACf,MAAO,CAAE3G,KAAM,YAAa2G,oBAChC,CAEH,CAVD,CAUGmB,IAAWA,EAAS,CAAC,IACjB,MAAMI,EACT,eAAIC,GACA,OAAO3M,KAAK4M,YAChB,CACA,QAAI9H,GACA,OAAO9E,KAAKkL,KAChB,CACA,QAAIpG,CAAKrC,GACLzC,KAAKkL,MAAQzI,CACjB,CACA,kBAAIoK,GACA,OAAO7M,KAAK8M,eAChB,CACA,kBAAID,CAAepK,GACfzC,KAAK8M,gBAAkBrK,CAC3B,CACA,UAAIlB,GACA,OAAOvB,KAAK+M,UAAUxL,MAC1B,CACA,eAAIyL,GACA,OAAOhN,KAAKiN,aAAe,IAAIjN,KAAKiN,mBAAgBxM,CACxD,CACA,eAAIyM,GACA,OAAOlN,KAAKmN,YAChB,CACA,eAAID,CAAYzK,GACZzC,KAAKmN,aAAe1K,EACpB,MAAM2K,EAAMpN,KAAK8E,KACjB9E,KAAK8E,KAAO9E,KAAK6M,eACjB7M,KAAK6M,eAAiBO,EACtBrG,EAAc/G,KAAKuE,QAAS,aAAc,YAC1CvE,KAAKuE,QAAQ2C,UAAUjD,IAAIjE,KAAKkN,aAAef,EAAYkB,WACrD,aACA,WACV,CACA,eAAI/B,GACA,OAAOtL,KAAK+M,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAKlC,aAAa,EACpE,CACA,eAAIG,GACA,OAAuB,IAAhBzL,KAAKuB,OACNkM,OAAOC,kBACP1N,KAAK+M,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAK/B,aAAa,EACnE,CACA,wBAAIkC,GACA,OAAO3N,KAAK4N,qBAChB,CACA,wBAAID,CAAqBA,GACjB3N,KAAK4N,wBAA0BD,IAGnC3N,KAAK4N,sBAAwBD,EAC7B3N,KAAK6N,uBACT,CACA,sBAAIC,GACA,OAAO9N,KAAK+N,mBAChB,CACA,sBAAID,CAAmBA,GACf9N,KAAK+N,sBAAwBD,IAGjC9N,KAAK+N,oBAAsBD,EAC3B9N,KAAK6N,uBACT,CACA,YAAIG,GACA,OAAOhO,KAAKiO,SAChB,CACA,YAAID,CAASvL,GACTzC,KAAKiO,UAAYxL,EACjB6E,EAAYtH,KAAKuE,QAAS,wBAAyB9B,EACvD,CACA9C,WAAAA,CAAYmM,EAAWvI,GAAU,IAAD2K,EAAA,KAC5BlO,KAAK8L,UAAYA,EACjB9L,KAAK+M,UAAY,GACjB/M,KAAKmO,OAAS,GACdnO,KAAKkL,MAAQ,EACblL,KAAK8M,gBAAkB,EACvB9M,KAAK4M,aAAe,EACpB5M,KAAKiN,kBAAexM,EACpBT,KAAK4N,uBAAwB,EAC7B5N,KAAK+N,qBAAsB,EAC3B/N,KAAKiO,WAAY,EACjBjO,KAAKoO,cAAgB,IAAIpL,EACzBhD,KAAKqO,aAAerO,KAAKoO,cAAc1K,MACvC1D,KAAKsO,cAAgB,IAAItL,EACzBhD,KAAKuO,aAAevO,KAAKsO,cAAc5K,MACvC1D,KAAKwO,iBAAmB,IAAIxL,EAC5BhD,KAAKyO,gBAAkBzO,KAAKwO,iBAAiB9K,MAC7C1D,KAAK0O,OAAS,SAAC5K,EAAO6K,EAAOC,EAA2CC,EAAoBC,EAAqBC,EAA6CC,EAA6CC,EAAYC,GACnN,QAD8B,IAALN,IAAAA,EAAQV,EAAKnB,UAAU3N,KAAK+P,GAAMA,EAAErK,aAAgE,IAAhBiK,IAAAA,EAAmBtB,OAAO2B,wBAAmC,IAAhBJ,IAAAA,EAAmBvB,OAAOC,mBAChL5J,EAAQ,GAAKA,EAAQoK,EAAKnB,UAAUxL,OACpC,OAAO,EAEX,MAAM8N,EAAYvE,EAAMhH,GAAQ,GAC1BwL,EAAcxE,EAAMhH,EAAQ,EAAGoK,EAAKnB,UAAUxL,QAEpD,GAAIuN,EACA,IAAK,MAAM9E,KAAK8E,EACZ7E,EAAYoF,EAAWrF,GACvBC,EAAYqF,EAAatF,GAGjC,GAAI6E,EACA,IAAK,MAAM7E,KAAK6E,EACZ1E,EAAUkF,EAAWrF,GACrBG,EAAUmF,EAAatF,GAI/B,MAAMuF,EAAUF,EAAUjQ,KAAK4K,GAAMkE,EAAKnB,UAAU/C,KAC9CwF,EAAUH,EAAUjQ,KAAK4K,GAAM4E,EAAM5E,KAErCyF,EAAYH,EAAYlQ,KAAK4K,GAAMkE,EAAKnB,UAAU/C,KAClD0F,EAAYJ,EAAYlQ,KAAK4K,GAAM4E,EAAM5E,KAEzC2F,EAAaN,EAAU/B,QAAO,CAACsC,EAAG5F,IAAM4F,EAAI1B,EAAKnB,UAAU/C,GAAGsB,YAAcsD,EAAM5E,IAAI,GACtF6F,EAAaR,EAAU/B,QAAO,CAACsC,EAAG5F,IAAM4F,EAAI1B,EAAKnB,UAAU/C,GAAGyB,YAAcmD,EAAM5E,IAAI,GAEtF8F,EAAsC,IAAvBR,EAAY/N,OAC3BkM,OAAOC,kBACP4B,EAAYhC,QAAO,CAACsC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKnB,UAAU/C,GAAGsB,aAAa,GAC3EyE,EAAsC,IAAvBT,EAAY/N,OAC3BkM,OAAO2B,kBACPE,EAAYhC,QAAO,CAACsC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKnB,UAAU/C,GAAGyB,aAAa,GAE3EuE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAExC,IAAIK,GAAU,EACd,GAAIjB,EAAY,CACZ,MAAMkB,EAAWjC,EAAKnB,UAAUkC,EAAWnL,OACrCuH,EAAUsD,GAASM,EAAWmB,WACpCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASlE,WAAWZ,EAAS4D,EAAWnK,KAC5C,CACA,IAAKoL,GAAWhB,EAAW,CACvB,MAAMiB,EAAWjC,EAAKnB,UAAUmC,EAAUpL,OACpCuH,EAAUsD,EAAQO,EAAUkB,WAClCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASlE,WAAWZ,EAAS6D,EAAUpK,KAC3C,CACA,GAAIoL,EACA,OAAOhC,EAAKQ,OAAO5K,EAAO6K,EAAOC,EAAOC,EAAoBC,EAAqBC,EAAkBC,GAIvG,IAAIqB,EAAc,EAEdC,EAHmB/F,EAAMoE,EAAOqB,EAAUC,GAI9C,IAAK,IAAIjG,EAAI,EAAGA,EAAIuF,EAAQhO,OAAQyI,IAAK,CACrC,MAAMwD,EAAO+B,EAAQvF,GACflF,EAAOyF,EAAMiF,EAAQxF,GAAKsG,EAAS9C,EAAKlC,YAAakC,EAAK/B,aAC1D8E,EAAYzL,EAAO0K,EAAQxF,GACjCqG,GAAeE,EACfD,GAAWC,EACX/C,EAAK1I,KAAOA,CAChB,CAEA,IAAI0L,EAAYH,EAChB,IAAK,IAAIrG,EAAI,EAAGA,EAAIyF,EAAUlO,OAAQyI,IAAK,CACvC,MAAMwD,EAAOiC,EAAUzF,GACjBlF,EAAOyF,EAAMmF,EAAU1F,GAAKwG,EAAWhD,EAAKlC,YAAakC,EAAK/B,aAEpE+E,GADkB1L,EAAO4K,EAAU1F,GAEnCwD,EAAK1I,KAAOA,CAChB,CAEA,OAAO6J,CACX,EACA3O,KAAKmN,aAAe5J,EAAQ2J,YAC5BlN,KAAKuE,QAAUvE,KAAKyQ,kBACpBzQ,KAAK0Q,wBAC8BjQ,IAA/B8C,EAAQmN,sBAEAnN,EAAQmN,mBACpB1Q,KAAK2Q,cAAgB3Q,KAAK4Q,sBAC1B5Q,KAAK6Q,cAAgB7Q,KAAK8Q,sBAC1B9Q,KAAKuE,QAAQwM,YAAY/Q,KAAK6Q,eAC9B7Q,KAAKuE,QAAQwM,YAAY/Q,KAAK2Q,eAC9B3Q,KAAK8L,UAAUiF,YAAY/Q,KAAKuE,SAChCvE,KAAK+L,MAAMxI,EAAQyN,QAEfzN,EAAQ0N,aACRjR,KAAKkL,MAAQ3H,EAAQ0N,WAAWnM,KAChCvB,EAAQ0N,WAAWC,MAAMpP,SAAQ,CAACqP,EAAgBrN,KAC9C,MAAMsN,OAAoC3Q,IAA3B0Q,EAAe9F,SAC1B8F,EAAe9F,QACb8F,EAAerM,KACf,CACEN,KAAM,YACN2G,kBAAmBgG,EAAerM,MAEpCyG,EAAO4F,EAAe5F,KAC5BvL,KAAKqR,QAAQ9F,EAAM6F,EAAQtN,GAAO,EAEjC,IAGL9D,KAAK4M,aAAe5M,KAAK+M,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAElF,MAAM,GAChE9E,KAAKsR,kBAEb,CACAvF,KAAAA,CAAMiF,GAC+E,iBAA5EA,aAAuC,EAASA,EAAOO,kBACxDxK,EAAc/G,KAAKuE,QAAS,oBAC5BvE,KAAKuE,QAAQwH,MAAMyF,eAAe,2BAGlCnK,EAAWrH,KAAKuE,QAAS,qBACrByM,aAAuC,EAASA,EAAOO,kBACvDvR,KAAKuE,QAAQwH,MAAM0F,YAAY,wBAAyBT,EAAOO,iBAG3E,CACAG,aAAAA,CAAc5N,GACV,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,OACrC,MAAM,IAAIgB,MAAM,uBAGpB,OADiBvC,KAAK+M,UAAUjJ,GAChBuH,OACpB,CACAsG,cAAAA,CAAe7N,EAAOuH,GAClB,GAAIvH,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,OACrC,MAAM,IAAIgB,MAAM,uBAEpB+E,EAAYtH,KAAK8L,UAAW,UAAWT,GACvC,MAAMuG,EAAW5R,KAAK+M,UAAUjJ,GAChCwD,EAAYtH,KAAK8L,UAAW,UAAWT,GACvCuG,EAAS3F,WAAWZ,EAASuG,EAAS9M,MACtC9E,KAAK6R,qBAAqB/N,GAC1B9D,KAAK8R,cACL9R,KAAKsR,iBACT,CACAS,WAAAA,CAAYjO,GACR,OAAIA,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,QAC7B,EAELvB,KAAK+M,UAAUjJ,GAAOgB,IACjC,CACAkN,UAAAA,CAAWlO,EAAOgB,GACd,GAAIhB,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,OACrC,OAEJ,MAAM0Q,EAAUnH,EAAM9K,KAAK+M,UAAUxL,QAAQ2Q,QAAQlI,GAAMA,IAAMlG,IAC3D+K,EAAqB,IACpBoD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACvErO,GAEEgL,EAAsBmD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAC1F5E,EAAOxN,KAAK+M,UAAUjJ,GAC5BgB,EAAO4F,KAAK2H,MAAMvN,GAClBA,EAAOyF,EAAMzF,EAAM0I,EAAKlC,YAAaZ,KAAKF,IAAIgD,EAAK/B,YAAazL,KAAKkL,QACrEsC,EAAK1I,KAAOA,EACZ9E,KAAKsS,SAASzD,EAAoBC,EACtC,CACAyD,QAAAA,GACI,OAAOvS,KAAK+M,UAAU3N,KAAK+P,GAAMA,EAAE5D,MACvC,CACAiH,WAAAA,CAAYhF,EAAM1I,GACd,MAAMhB,EAAQ9D,KAAK+M,UAAUhJ,QAAQyJ,GACrC,GAAI1J,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,OACrC,OAEJuD,EAAuB,iBAATA,EAAoBA,EAAO0I,EAAK1I,KAC9CA,EAAOyF,EAAMzF,EAAM0I,EAAKlC,YAAakC,EAAK/B,aAC1C+B,EAAK1I,KAAOA,EACZ,MAAMmN,EAAUnH,EAAM9K,KAAK+M,UAAUxL,QAAQ2Q,QAAQlI,GAAMA,IAAMlG,IAC3D+K,EAAqB,IACpBoD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACvErO,GAEEgL,EAAsBmD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAKhGpS,KAAKsS,SAAS,IAAIzD,EAAoB/K,GAAQgL,EAClD,CACAuC,OAAAA,CAAQ9F,EAAMzG,EAA+BhB,EAA+B2O,QAA1D,IAAJ3N,IAAAA,EAAO,CAAEN,KAAM,oBAAqB,IAALV,IAAAA,EAAQ9D,KAAK+M,UAAUxL,QAChE,MAAMuK,EAAY9D,SAAS0K,cAAc,OAGzC,IAAIC,EAFJ7G,EAAU7N,UAAY,OACtB6N,EAAUiF,YAAYxF,EAAKhH,SAGvBoO,EADgB,iBAAT7N,EACIA,EAEQ,UAAdA,EAAKN,KACCxE,KAAK+R,YAAYjN,EAAKhB,OAAS,EAEvB,cAAdgB,EAAKN,KACC,CAAE2G,kBAAmBrG,EAAKqG,mBAG1BI,EAAKD,YAEpB,MAAMlF,EAAamF,EAAKiH,aAAaI,GAAY5S,KAAKwS,YAAYZ,EAAUgB,EAAQ9N,QAC9E8M,EAAW,IAAI3G,EAASa,EAAWP,EAAMoH,EAAU,CACrD9Q,QAASA,KACLuE,EAAWvE,UACX7B,KAAK2Q,cAAckC,YAAY/G,EAAU,IAUjD,GAPIhI,IAAU9D,KAAK+M,UAAUxL,OACzBvB,KAAK2Q,cAAcI,YAAYjF,GAG/B9L,KAAK2Q,cAAcmC,aAAahH,EAAW9L,KAAK2Q,cAAcxT,SAASqQ,KAAK1J,IAEhF9D,KAAK+M,UAAU/I,OAAOF,EAAO,EAAG8N,GAC5B5R,KAAK+M,UAAUxL,OAAS,EAAG,CAE3B,MAAMwR,EAAO/K,SAAS0K,cAAc,OACpCK,EAAK9U,UAAY,OACjB,MAAM+U,EAAkBtP,IACpB,IAAK,MAAM8J,KAAQxN,KAAK+M,UACpBS,EAAK3B,SAAU,EAEnB,MAAMoH,EAAU,IACTpL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMqL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjC,MAAMmH,EAAQnT,KAAKmN,eAAiBhB,EAAYkB,WAC1C3J,EAAM0P,QACN1P,EAAM2P,QACNC,EHpUf,SAAoBlJ,EAAOmJ,GAC9B,IAAK,IAAIvJ,EAAI,EAAGA,EAAII,EAAM7I,OAAQyI,IAE9B,GAAIuJ,EADYnJ,EAAMJ,IAElB,OAAOA,EAGf,OAAQ,CACZ,CG4TkCwJ,CAAWxT,KAAKmO,QAASsF,GAAMA,EAAE3H,YAAciH,IAE3DnE,EAAQ5O,KAAK+M,UAAU3N,KAAK+P,GAAMA,EAAErK,OAE1C,IAAImK,EACAC,EACJ,MAAMG,EAAYvE,EAAMwI,GAAY,GAC9BhE,EAAcxE,EAAMwI,EAAY,EAAGtT,KAAK+M,UAAUxL,QAClDoO,EAAaN,EAAU/B,QAAO,CAACC,EAAGvD,IAAMuD,GAAKvN,KAAK+M,UAAU/C,GAAGsB,YAAcsD,EAAM5E,KAAK,GACxF6F,EAAaR,EAAU/B,QAAO,CAACC,EAAGvD,IAAMuD,GAAKvN,KAAK+M,UAAU/C,GAAG0B,gBAAkBkD,EAAM5E,KAAK,GAC5F8F,EAAsC,IAAvBR,EAAY/N,OAC3BkM,OAAOC,kBACP4B,EAAYhC,QAAO,CAACC,EAAGvD,IAAMuD,GAC1BqB,EAAM5E,GAAKhK,KAAK+M,UAAU/C,GAAGsB,cAAc,GAC9CyE,EAAsC,IAAvBT,EAAY/N,OAC3BkM,OAAO2B,kBACPE,EAAYhC,QAAO,CAACC,EAAGvD,IAAMuD,GAC1BqB,EAAM5E,GACHhK,KAAK+M,UAAU/C,GAAG0B,kBAAkB,GAC1CsE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAClC6D,EAAkB1T,KAAK2T,mBAAmBtE,GAC1CuE,EAAiB5T,KAAK2T,mBAAmBrE,GAC/C,GAA+B,iBAApBoE,EAA8B,CACrC,MAAMG,EAAkB7T,KAAK+M,UAAU2G,GACjCI,EAAWpJ,KAAKqJ,MAAMF,EAAgBrI,gBAAkB,GAC9DyD,EAAa,CACTnL,MAAO4P,EACPtD,WAAYyD,EAAgBxI,QACtB2E,EAAW8D,EACX9D,EAAW8D,EACjBhP,KAAM+O,EAAgB/O,KAE9B,CACA,GAA8B,iBAAnB8O,EAA6B,CACpC,MAAMC,EAAkB7T,KAAK+M,UAAU6G,GACjCE,EAAWpJ,KAAKqJ,MAAMF,EAAgBrI,gBAAkB,GAC9D0D,EAAY,CACRpL,MAAO8P,EACPxD,WAAYyD,EAAgBxI,QACtB4E,EAAW6D,EACX7D,EAAW6D,EACjBhP,KAAM+O,EAAgB/O,KAE9B,CACA,MAAMkP,EAAiBtQ,IACnB,MAGMiL,GAHU3O,KAAKmN,eAAiBhB,EAAYkB,WAC5C3J,EAAM0P,QACN1P,EAAM2P,SACYF,EACxBnT,KAAK0O,OAAO4E,EAAW3E,EAAOC,OAAOnO,OAAWA,EAAWuP,EAAUC,EAAUhB,EAAYC,GAC3FlP,KAAK6R,uBACL7R,KAAK8R,aAAa,EAEhBmC,EAAMA,KACR,IAAK,MAAMzG,KAAQxN,KAAK+M,UACpBS,EAAK3B,SAAU,EAEnB,IAAK,MAAMqH,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjChM,KAAKsR,kBACLtJ,SAAStD,oBAAoB,cAAesP,GAC5ChM,SAAStD,oBAAoB,YAAauP,GAC1CjM,SAAStD,oBAAoB,gBAAiBuP,GAC9CjU,KAAKoO,cAAclK,UAAKzD,EAAU,EAEtCuH,SAASvD,iBAAiB,cAAeuP,GACzChM,SAASvD,iBAAiB,YAAawP,GACvCjM,SAASvD,iBAAiB,gBAAiBwP,EAAI,EAEnDlB,EAAKtO,iBAAiB,cAAeuO,GACrC,MAAMkB,EAAW,CACbpI,UAAWiH,EACX3M,WAAYA,KACR2M,EAAKrO,oBAAoB,cAAesO,GACxChT,KAAK6Q,cAAcgC,YAAYE,EAAK,GAG5C/S,KAAK6Q,cAAcE,YAAYgC,GAC/B/S,KAAKmO,OAAOtK,KAAKqQ,EACrB,CACKzB,GACDzS,KAAKsS,SAAS,CAACxO,IAEd2O,GACe,iBAAT3N,GACO,eAAdA,EAAKN,MACLxE,KAAKmU,sBAETnU,KAAKsO,cAAcpK,KAAKqH,EAC5B,CACA4I,mBAAAA,GACI,MAAMC,EAAoB,GAC1B,IAAIC,EAAe,EACnB,IAAK,MAAM7G,KAAQxN,KAAK+M,UAChBS,EAAK/B,YAAc+B,EAAKlC,YAAc,IACtC8I,EAAkBvQ,KAAK2J,GACvB6G,GAAgB7G,EAAK1I,MAG7B,MAAMA,EAAO4F,KAAKqJ,MAAMM,EAAeD,EAAkB7S,QACzD,IAAK,MAAMiM,KAAQ4G,EACf5G,EAAK1I,KAAOyF,EAAMzF,EAAM0I,EAAKlC,YAAakC,EAAK/B,aAEnD,MAAMwG,EAAUnH,EAAM9K,KAAK+M,UAAUxL,QAC/BsN,EAAqBoD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChGpS,KAAKsS,SAASzD,EAAoBC,EACtC,CACAwF,UAAAA,CAAWxQ,EAAOsN,EAAQqB,QAAU,IAAVA,IAAAA,GAAa,GAEnC,MAAMb,EAAW5R,KAAK+M,UAAU/I,OAAOF,EAAO,GAAG,GAGjD,GAFA8N,EAAS/P,UAEL7B,KAAK+M,UAAUxL,QAAU,EAAG,CAC5B,MAAM+R,EAAY5I,KAAKD,IAAI3G,EAAQ,EAAG,GACrB9D,KAAKmO,OAAOnK,OAAOsP,EAAW,GAAG,GACzClN,YACb,CAQA,OAPKqM,GACDzS,KAAKsS,WAELlB,GAA0B,eAAhBA,EAAO5M,MACjBxE,KAAKmU,sBAETnU,KAAKwO,iBAAiBtK,KAAK0N,EAASrG,MAC7BqG,EAASrG,IACpB,CACAgJ,wBAAAA,CAAyBzQ,GACrB,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK+M,UAAUxL,OACrC,MAAM,IAAIgB,MAAM,uBAGpB,OADiBvC,KAAK+M,UAAUjJ,GAChBqH,iBACpB,CACAqJ,QAAAA,CAASjP,EAAMwF,GACX,MAAMI,EAAoBnL,KAAKuU,yBAAyBhP,GAClD6L,OAAsC,IAAtBjG,EAChBnL,KAAK+R,YAAYxM,GACjB+G,EAAOG,UAAUtB,GACjBI,EAAOvL,KAAKsU,WAAW/O,OAAM9E,GAAW,GAC9CT,KAAKqR,QAAQ9F,EAAM6F,EAAQrG,EAC/B,CACA0J,MAAAA,CAAO3P,EAAM+H,GACT,MAAM6H,EAAehK,KAAKD,IAAIzK,KAAK8E,KAAM9E,KAAK4M,cAG9C,GAFA5M,KAAK8E,KAAOA,EACZ9E,KAAK6M,eAAiBA,EACjB7M,KAAKgN,YAML,CACD,IAAI2H,EAAQ,EACZ,IAAK,IAAI3K,EAAI,EAAGA,EAAIhK,KAAK+M,UAAUxL,OAAQyI,IAAK,CAC5C,MAAMwD,EAAOxN,KAAK+M,UAAU/C,GACtB4K,EAAa5U,KAAKgN,YAAYhD,GACV,iBAAf4K,EACPD,GAASC,EAGT9P,GAAQ0I,EAAK1I,IAErB,CACA,IAAK,IAAIkF,EAAI,EAAGA,EAAIhK,KAAK+M,UAAUxL,OAAQyI,IAAK,CAC5C,MAAMwD,EAAOxN,KAAK+M,UAAU/C,GACtB4K,EAAa5U,KAAKgN,YAAYhD,GACV,iBAAf4K,GAA2BD,EAAQ,IAC1CnH,EAAK1I,KAAOyF,EAAMG,KAAK2H,MAAOuC,EAAa9P,EAAQ6P,GAAQnH,EAAKlC,YAAakC,EAAK/B,aAE1F,CACJ,KAzBuB,CACnB,MAAMwG,EAAUnH,EAAM9K,KAAK+M,UAAUxL,QAC/BsN,EAAqBoD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChGpS,KAAK0O,OAAO1O,KAAK+M,UAAUxL,OAAS,EAAGuD,EAAO4P,OAAcjU,EAAWoO,EAAoBC,EAC/F,CAqBA9O,KAAK6R,uBACL7R,KAAK8R,aACT,CACAQ,QAAAA,CAASzD,EAAoBC,GACzB,MAAMnC,EAAc3M,KAAK+M,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAElF,MAAM,GAChE9E,KAAK0O,OAAO1O,KAAK+M,UAAUxL,OAAS,EAAGvB,KAAKkL,MAAQyB,OAAalM,EAAWoO,EAAoBC,GAChG9O,KAAK6R,uBACL7R,KAAK8R,cACL9R,KAAKsR,iBACT,CACAO,oBAAAA,CAAqBgD,GACjB,MAAMlI,EAAc3M,KAAK+M,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAElF,MAAM,GAChE,IAAIgQ,EAAa9U,KAAK8E,KAAO6H,EAC7B,MAAMsF,EAAUnH,EAAM9K,KAAK+M,UAAUxL,OAAS,GAAI,GAC5CsN,EAAqBoD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMhK,KAAK+M,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChG,IAAK,MAAMtO,KAASgL,EAChB7E,EAAYgI,EAASnO,GAEzB,IAAK,MAAMA,KAAS+K,EAChB1E,EAAU8H,EAASnO,GAES,iBAArB+Q,GACP1K,EAAU8H,EAAS4C,GAEvB,IAAK,IAAI7K,EAAI,EAAkB,IAAf8K,GAAoB9K,EAAIiI,EAAQ1Q,OAAQyI,IAAK,CACzD,MAAMwD,EAAOxN,KAAK+M,UAAUkF,EAAQjI,IAC9BlF,EAAOyF,EAAMiD,EAAK1I,KAAOgQ,EAAYtH,EAAKlC,YAAakC,EAAK/B,aAElEqJ,GADkBhQ,EAAO0I,EAAK1I,KAE9B0I,EAAK1I,KAAOA,CAChB,CACJ,CACAwM,eAAAA,GACQtR,KAAK0Q,oBAAsB1Q,KAAK4M,aAAe,IAC/C5M,KAAKiN,aAAejN,KAAK+M,UAAU3N,KAAK4K,GAAMA,EAAEqB,QAAUrB,EAAElF,KAAO9E,KAAK4M,kBAAenM,IAE/F,CACAqR,WAAAA,GACI9R,KAAK4M,aAAe5M,KAAK+M,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAElF,MAAM,GAChE,IAAIiQ,EAAM,EACV,MAAM5F,EAAI,GACVnP,KAAK6N,uBACL,IAAK,IAAI7D,EAAI,EAAGA,EAAIhK,KAAK+M,UAAUxL,OAAS,EAAGyI,IAAK,CAChD+K,GAAO/U,KAAK+M,UAAU/C,GAAGlF,KACzBqK,EAAEtL,KAAKkR,GACP,MAAMC,EAAStK,KAAKF,IAAIE,KAAKD,IAAI,EAAGsK,EAAM,GAAI/U,KAAK8E,KAAO,GACtD9E,KAAKmN,eAAiBhB,EAAYkB,aAClCrN,KAAKmO,OAAOnE,GAAG8B,UAAUC,MAAM3C,KAAQ,GAAE4L,MACzChV,KAAKmO,OAAOnE,GAAG8B,UAAUC,MAAM1C,IAAO,OAEtCrJ,KAAKmN,eAAiBhB,EAAY8I,WAClCjV,KAAKmO,OAAOnE,GAAG8B,UAAUC,MAAM3C,KAAQ,MACvCpJ,KAAKmO,OAAOnE,GAAG8B,UAAUC,MAAM1C,IAAO,GAAE2L,MAEhD,CACAhV,KAAK+M,UAAUjL,SAAQ,CAACyJ,EAAMvB,KACtBhK,KAAKmN,eAAiBhB,EAAYkB,aAClC9B,EAAKO,UAAUC,MAAMzC,MAAS,GAAEiC,EAAKzG,SACrCyG,EAAKO,UAAUC,MAAM3C,KAAY,GAALY,EAAS,MAAS,GAAEmF,EAAEnF,EAAI,OACtDuB,EAAKO,UAAUC,MAAM1C,IAAM,GAC3BkC,EAAKO,UAAUC,MAAMxC,OAAS,IAE9BvJ,KAAKmN,eAAiBhB,EAAY8I,WAClC1J,EAAKO,UAAUC,MAAMxC,OAAU,GAAEgC,EAAKzG,SACtCyG,EAAKO,UAAUC,MAAM1C,IAAW,GAALW,EAAS,MAAS,GAAEmF,EAAEnF,EAAI,OACrDuB,EAAKO,UAAUC,MAAMzC,MAAQ,GAC7BiC,EAAKO,UAAUC,MAAM3C,KAAO,IAEhCmC,EAAKA,KAAKkJ,OAAOlJ,EAAKzG,KAAM9E,KAAK8M,gBAAgB,GAEzD,CACA6G,kBAAAA,CAAmB1B,GAEf,IAAK,MAAMnO,KAASmO,EAAS,CACzB,MAAML,EAAW5R,KAAK+M,UAAUjJ,GAChC,GAAK8N,EAASvG,SAGVuG,EAAShG,KACT,OAAO9H,CAEf,CAEA,IAAK,MAAMA,KAASmO,EAAS,CACzB,MAAML,EAAW5R,KAAK+M,UAAUjJ,GAChC,GAAI8N,EAASvG,SACTuG,EAASnG,YAAcmG,EAAStG,YAAc,EAC9C,OAEJ,IAAKsG,EAASvG,SAAWuG,EAAShG,KAC9B,OAAO9H,CAEf,CAEJ,CACA+J,oBAAAA,GACI,IAAIqH,GAAW,EACf,MAAMC,EAAgBnV,KAAK+M,UAAU3N,KAAK4K,GAAOkL,EAAWlL,EAAElF,KAAOkF,EAAEsB,YAAc,GAAK4J,IAC1FA,GAAW,EACX,MAAME,EAAcpV,KAAK+M,UAAU3N,KAAK4K,GAAOkL,EAAWlL,EAAEyB,YAAczB,EAAElF,KAAO,GAAKoQ,IAClFG,EAAe,IAAIrV,KAAK+M,WAAWuI,UACzCJ,GAAW,EACX,MAAMK,EAAcF,EACfjW,KAAK4K,GAAOkL,EAAWlL,EAAElF,KAAOkF,EAAEsB,YAAc,GAAK4J,IACrDI,UACLJ,GAAW,EACX,MAAMM,EAAYH,EACbjW,KAAK4K,GAAOkL,EAAWlL,EAAEyB,YAAczB,EAAElF,KAAO,GAAKoQ,IACrDI,UACL,IAAIG,EAAW,EACf,IAAK,IAAI3R,EAAQ,EAAGA,EAAQ9D,KAAKmO,OAAO5M,OAAQuC,IAAS,CACrD,MAAMiP,EAAO/S,KAAKmO,OAAOrK,GAEzB2R,GADiBzV,KAAK+M,UAAUjJ,GACXgB,KACrB,MAAM0F,IAAQ2K,EAAcrR,IAAU0R,EAAU1R,EAAQ,IAClD2G,IAAQ2K,EAAYtR,IAAUyR,EAAYzR,EAAQ,IACxD,GAAI0G,GAAOC,EAAK,CACZ,MAAM4E,EAAYvE,EAAMhH,GAAQ,GAC1BwL,EAAcxE,EAAMhH,EAAQ,EAAG9D,KAAK+M,UAAUxL,QAC9CmS,EAAkB1T,KAAK2T,mBAAmBtE,GAC1CuE,EAAiB5T,KAAK2T,mBAAmBrE,GACzCoG,EAA2C,iBAApBhC,IACxB1T,KAAK+M,UAAU2G,GAAiBrI,QAC/BsK,EAAyC,iBAAnB/B,IACvB5T,KAAK+M,UAAU6G,GAAgBvI,QAChCqK,GACAH,EAAYzR,KACX2R,EAAW,GAAKzV,KAAK2N,sBACtB3N,KAAK4V,WAAW7C,EAAM3G,EAAUyJ,SAE3BF,GACLR,EAAcrR,KACb2R,EAAWzV,KAAK4M,cAAgB5M,KAAK8N,oBACtC9N,KAAK4V,WAAW7C,EAAM3G,EAAU0J,SAGhC9V,KAAK4V,WAAW7C,EAAM3G,EAAU2J,SAExC,MACSvL,IAAQC,EACbzK,KAAK4V,WAAW7C,EAAM3G,EAAUyJ,UAE1BrL,GAAOC,EACbzK,KAAK4V,WAAW7C,EAAM3G,EAAU0J,SAGhC9V,KAAK4V,WAAW7C,EAAM3G,EAAU4J,QAExC,CACJ,CACAJ,UAAAA,CAAW7C,EAAMkD,GACb3O,EAAYyL,EAAKjH,UAAW,WAAYmK,IAAU7J,EAAU2J,UAC5DzO,EAAYyL,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAU4J,SAC3D1O,EAAYyL,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAU0J,SAC3DxO,EAAYyL,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAUyJ,QAC/D,CACAjF,mBAAAA,GACI,MAAMrM,EAAUyD,SAAS0K,cAAc,OAEvC,OADAnO,EAAQtG,UAAY,iBACbsG,CACX,CACAuM,mBAAAA,GACI,MAAMvM,EAAUyD,SAAS0K,cAAc,OAEvC,OADAnO,EAAQtG,UAAY,iBACbsG,CACX,CACAkM,eAAAA,GACI,MAAMlM,EAAUyD,SAAS0K,cAAc,OACjCwD,EAAuBlW,KAAKmN,eAAiBhB,EAAYkB,WACzD,aACA,WAEN,OADA9I,EAAQtG,UAAa,wBAAuBiY,IACrC3R,CACX,CACA1C,OAAAA,GACI7B,KAAKoO,cAAcvM,UACnB7B,KAAKsO,cAAczM,UACnB7B,KAAKwO,iBAAiB3M,UACtB,IAAK,IAAImI,EAAI,EAAGA,EAAIhK,KAAKuE,QAAQpH,SAASoE,OAAQyI,IAC9C,GAAIhK,KAAKuE,QAAQpH,SAASqQ,KAAKxD,KAAOhK,KAAKuE,QAAS,CAChDvE,KAAKuE,QAAQsO,YAAY7S,KAAKuE,SAC9B,KACJ,CAEJ,IAAK,MAAMqN,KAAY5R,KAAK+M,UACxB6E,EAAS/P,UAEb7B,KAAKuE,QAAQ6C,QACjB,ECntBG,MAAM+O,UAAiB1Q,EAC1B,gBAAI8I,GACA,OAAOvO,KAAKoW,UAAU7H,YAC1B,CACA,mBAAIE,GACA,OAAOzO,KAAKoW,UAAU3H,eAC1B,CACA,eAAInD,GACA,OAAOtL,KAAKoW,UAAU9K,WAC1B,CACA,eAAIG,GACA,OAAOzL,KAAKoW,UAAU3K,WAC1B,CACA,eAAIyB,GACA,OAAOlN,KAAKoW,UAAUlJ,WAC1B,CACA,QAAIpI,GACA,OAAO9E,KAAKoW,UAAUtR,IAC1B,CACA,kBAAI+H,GACA,OAAO7M,KAAKoW,UAAUvJ,cAC1B,CACAlN,WAAAA,CAAYmM,EAAWvI,GACnB,IAAIjB,EACJvC,QACAC,KAAKqW,UAAY,GACjBrW,KAAKsW,eAAgB,EACrBtW,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAKmN,aAA8C,QAA9B7K,EAAKiB,EAAQ2J,mBAAgC,IAAP5K,EAAgBA,EAAK6J,EAAY8I,SAC5FjV,KAAKuE,QAAUyD,SAAS0K,cAAc,OACtC1S,KAAKuE,QAAQtG,UAAY,iBACzB6N,EAAUiF,YAAY/Q,KAAKuE,SAC3BvE,KAAKoW,UAAY,IAAI1J,EAAU1M,KAAKuE,QAAS,CACzC2I,YAAalN,KAAKmN,aAClBuD,oBAAoB,EACpBO,WAAY1N,EAAQ0N,aAIxBjR,KAAKwW,WAAW1U,SAAS2U,IACrB,MAAMrQ,EAAa,IAAIX,EAAoBgR,EAAKC,2BAA0B,KACtE1W,KAAK2W,iBACL3W,KAAKuW,aAAarS,UAAKzD,EAAU,KAE/BmW,EAAW,CACbH,OACArQ,WAAY,CACRvE,QAASA,KACLuE,EAAWvE,SAAS,IAIhC7B,KAAKqW,UAAUxS,KAAK+S,GACpBH,EAAK5J,eAAiB7M,KAAKoW,UAAUvJ,cAAc,IAEvD7M,KAAK8F,eAAe9F,KAAKuW,aAAcvW,KAAKoW,UAAU/H,cAAa,KAC/DrO,KAAKuW,aAAarS,UAAKzD,EAAU,IACjCT,KAAKoW,UAAU7H,cAAa,KAC5BvO,KAAKuW,aAAarS,MAAM,IACxBlE,KAAKoW,UAAU3H,iBAAgB,KAC/BzO,KAAKuW,aAAarS,MAAM,IAEhC,CACAyN,cAAAA,CAAe7N,EAAOuH,GAClBrL,KAAKoW,UAAUzE,eAAe7N,EAAOuH,EACzC,CACAwL,OAAAA,CAAQJ,EAAM3R,EAAMhB,EAA+B2O,QAA1B,IAAL3O,IAAAA,EAAQ9D,KAAKoW,UAAU7U,aAAkB,IAAVkR,IAAAA,GAAa,GAC5D,MAAMrM,EAAaqQ,EAAKC,2BAA0B,KAC9C1W,KAAK2W,iBACL3W,KAAKuW,aAAarS,UAAKzD,EAAU,IAE/BmW,EAAW,CACbH,OACArQ,WAAY,CACRvE,QAASA,KACLuE,EAAWvE,SAAS,IAIhC7B,KAAKqW,UAAUrS,OAAOF,EAAO,EAAG8S,GAChCH,EAAK5J,eAAiB7M,KAAKoW,UAAUvJ,eACrC7M,KAAKoW,UAAU/E,QAAQoF,EAAM3R,EAAMhB,EAAO2O,EAC9C,CACAV,WAAAA,CAAYjO,GACR,OAAO9D,KAAKoW,UAAUrE,YAAYjO,EACtC,CACA0S,QAAAA,GACI,OAAOxW,KAAKoW,UAAU7D,UAC1B,CACAuE,UAAAA,CAAWhT,EAAOP,QAAO,IAAPA,IAAAA,EAAU,CAAEwT,aAAa,IACvC,MAAMH,EAAW5W,KAAKqW,UAAUrS,OAAOF,EAAO,GAAG,GAMjD,OALA9D,KAAKoW,UAAU9B,WAAWxQ,GACrBP,EAAQwT,cACTH,EAASxQ,WAAWvE,UACpB+U,EAASH,KAAK5U,WAEX+U,CACX,CACApC,QAAAA,CAASjP,EAAMwF,GACX,GAAIxF,IAASwF,EACT,OAEJ,MAAMQ,EAAOvL,KAAK8W,WAAWvR,EAAM,CAAEwR,aAAa,IAClD/W,KAAKsW,eAAgB,EACrB,IACItW,KAAK6W,QAAQtL,EAAKkL,KAAMlL,EAAKkL,KAAK3R,KAAMiG,GAAI,EAChD,CAAC,QAEG/K,KAAKsW,eAAgB,CACzB,CACJ,CACA7B,MAAAA,CAAO3P,EAAM+H,GACT7M,KAAKoW,UAAU3B,OAAO3P,EAAM+H,EAChC,CACA8J,cAAAA,GACQ3W,KAAKsW,gBAGLtW,KAAKgX,iBACL5R,aAAapF,KAAKgX,gBAClBhX,KAAKgX,oBAAiBvW,GAE1B4G,EAAWrH,KAAKuE,QAAS,YACzBvE,KAAKgX,eAAiB3R,YAAW,KAC7BrF,KAAKgX,oBAAiBvW,EACtBsG,EAAc/G,KAAKuE,QAAS,WAAW,GACxC,KACP,CACA1C,OAAAA,GACI9B,MAAM8B,UACF7B,KAAKgX,iBACL5R,aAAapF,KAAKgX,gBAClBhX,KAAKgX,oBAAiBvW,GAE1BT,KAAKqW,UAAUvU,SAAS8U,IACpBA,EAASxQ,WAAWvE,UACpB+U,EAASH,KAAK5U,SAAS,IAE3B7B,KAAKqW,UAAY,GACjBrW,KAAKoW,UAAUvU,UACf7B,KAAKuE,QAAQ6C,QACjB,EC5IG,MAAM6P,EACT,gBAAIC,GACA,OAAOlX,KAAKuL,KAAK2L,YACrB,CACA,gBAAIC,GACA,OAAOnX,KAAKuL,KAAK4L,YACrB,CACA,iBAAIC,GACA,OAAOpX,KAAKuL,KAAK6L,aACrB,CACA,iBAAIC,GACA,OAAOrX,KAAKuL,KAAK8L,aACrB,CACA,YAAI1L,GACA,OAAO3L,KAAKuL,KAAKI,QACrB,CACA,QAAIC,GACA,OAAO5L,KAAKuL,KAAKK,IACrB,CACA,eAAIN,GACA,OAAOtL,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKoX,cACLpX,KAAKkX,YACf,CACA,eAAIzL,GACA,OAAOzL,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKqX,cACLrX,KAAKmX,YACf,CACA,yBAAIG,GACA,OAAOtX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKkX,aACLlX,KAAKoX,aACf,CACA,yBAAIG,GACA,OAAOvX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKmX,aACLnX,KAAKqX,aACf,CACA,kBAAIxK,GACA,OAAO7M,KAAK8M,eAChB,CACA,QAAIhI,GACA,OAAO9E,KAAKkL,KAChB,CACA,WAAI3G,GACA,OAAOvE,KAAKuL,KAAKhH,OACrB,CACA,SAAI+E,GACA,OAAOtJ,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAK6M,eACL7M,KAAK8E,IACf,CACA,UAAIyE,GACA,OAAOvJ,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAK8E,KACL9E,KAAK6M,cACf,CACAlN,WAAAA,CAAY4L,EAAM2B,EAAaL,EAAgB/H,QAAI,IAAJA,IAAAA,EAAO,GAClD9E,KAAKuL,KAAOA,EACZvL,KAAKkN,YAAcA,EACnBlN,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAK8M,gBAAkBD,EACvB7M,KAAKkL,MAAQpG,EACb9E,KAAKmG,YAAcnG,KAAKuL,KAAKiH,aAAa9O,IAClCA,EACA1D,KAAKuW,aAAarS,KAAK,CACnBY,KAAM9E,KAAKkN,cAAgBf,EAAY8I,SACjCvR,EAAM4F,MACN5F,EAAM6F,OACZsD,eAAgB7M,KAAKkN,cAAgBf,EAAY8I,SAC3CvR,EAAM6F,OACN7F,EAAM4F,QAIhBtJ,KAAKuW,aAAarS,KAAK,CAAC,EAC5B,GAER,CACA+H,UAAAA,CAAWZ,GACHrL,KAAKuL,KAAKU,YACVjM,KAAKuL,KAAKU,WAAWZ,EAE7B,CACAoJ,MAAAA,CAAO3P,EAAM+H,GACT7M,KAAKkL,MAAQpG,EACb9E,KAAK8M,gBAAkBD,EACvB7M,KAAKuL,KAAKkJ,OAAOzU,KAAKsJ,MAAOtJ,KAAKuJ,OACtC,CACA1H,OAAAA,GACI7B,KAAKuW,aAAa1U,UAClB7B,KAAKmG,YAAYtE,SACrB,EC5FG,MAAM2V,UAAmB/R,EAC5B,SAAI6D,GACA,OAAOtJ,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAK8E,KACL9E,KAAK6M,cACf,CACA,UAAItD,GACA,OAAOvJ,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAK6M,eACL7M,KAAK8E,IACf,CACA,eAAIwG,GACA,OAAgC,IAAzBtL,KAAK7C,SAASoE,OACf,EACAmJ,KAAKD,OAAOzK,KAAK7C,SAASiC,KAAI,CAACqY,EAAG3T,IAAU9D,KAAKoW,UAAU1E,cAAc5N,GACrE2T,EAAEH,sBACF,IACd,CACA,eAAI7L,GACA,OAAOf,KAAKF,OAAOxK,KAAK7C,SAASiC,KAAI,CAACqY,EAAG3T,IAAU9D,KAAKoW,UAAU1E,cAAc5N,GAC1E2T,EAAEF,sBACF9J,OAAOC,oBACjB,CACA,yBAAI4J,GACA,OAAOtX,KAAKoW,UAAU9K,WAC1B,CACA,yBAAIiM,GACA,OAAOvX,KAAKoW,UAAU3K,WAC1B,CACA,kBAAIoB,GACA,OAAO7M,KAAK8M,eAChB,CACA,QAAIhI,GACA,OAAO9E,KAAKkL,KAChB,CACA,gBAAIgM,GACA,OAAOlX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKsX,sBACLtX,KAAKsL,WACf,CACA,iBAAI8L,GACA,OAAOpX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKsL,YACLtL,KAAKsX,qBACf,CACA,gBAAIH,GACA,OAAOnX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKuX,sBACLvX,KAAKyL,WACf,CACA,iBAAI4L,GACA,OAAOrX,KAAKkN,cAAgBf,EAAYkB,WAClCrN,KAAKyL,YACLzL,KAAKuX,qBACf,CACA,YAAI5L,GACA,GAA6B,IAAzB3L,KAAK7C,SAASoE,OACd,OAAO8K,EAAeqL,OAE1B,MAAMC,EAAa3X,KAAK7C,SAASiC,KAAKqY,QAA4B,IAAfA,EAAE9L,SAC/CU,EAAeqL,OACfD,EAAE9L,WACR,OAAIgM,EAAWC,MAAMC,GAAMA,IAAMxL,EAAe+F,OACrC/F,EAAe+F,KAEjBuF,EAAWC,MAAMC,GAAMA,IAAMxL,EAAe8F,MAC1C9F,EAAe8F,IAEnB9F,EAAeqL,MAC1B,CACA,YAAI1J,GACA,OAAOhO,KAAKoW,UAAUpI,QAC1B,CACA,YAAIA,CAASvL,GACTzC,KAAKoW,UAAUpI,SAAWvL,CAC9B,CACA9C,WAAAA,CAAYuN,EAAawD,EAAoBM,EAAQlM,EAAM+H,EAAgBmB,EAAU8J,GAejF,GAdA/X,QACAC,KAAKkN,YAAcA,EACnBlN,KAAK0Q,mBAAqBA,EAC1B1Q,KAAKgR,OAASA,EACdhR,KAAK+X,oBAAsB5W,EAAWmE,KACtCtF,KAAK7C,SAAW,GAChB6C,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAKgY,uBAAyB,IAAIhV,EAClChD,KAAKiY,sBAAwBjY,KAAKgY,uBAAuBtU,MACzD1D,KAAK8M,gBAAkBD,EACvB7M,KAAKkL,MAAQpG,EACb9E,KAAKuE,QAAUyD,SAAS0K,cAAc,OACtC1S,KAAKuE,QAAQtG,UAAY,cACpB6Z,EAQA,CACD,MAAM7G,EAAa,CACfC,MAAO4G,EAAiB1Y,KAAK8Y,IAClB,CACH3M,KAAM2M,EAAgBC,KACtBrT,KAAMoT,EAAgBC,KAAKrT,KAC3BuG,UAAS6M,EAAgBC,gBAAgBlB,QACTxW,IAA5ByX,EAAgB7M,UACd6M,EAAgB7M,YAI9BvG,KAAM9E,KAAK6M,gBAEf7M,KAAK7C,SAAW2a,EAAiB1Y,KAAKqY,GAAMA,EAAEU,OAC9CnY,KAAKoW,UAAY,IAAI1J,EAAU1M,KAAKuE,QAAS,CACzC2I,YAAalN,KAAKkN,YAClB+D,aACAP,qBACAM,UAER,MA5BIhR,KAAKoW,UAAY,IAAI1J,EAAU1M,KAAKuE,QAAS,CACzC2I,YAAalN,KAAKkN,YAClBwD,qBACAM,WAEJhR,KAAKoW,UAAU3B,OAAOzU,KAAK8E,KAAM9E,KAAK6M,gBAwB1C7M,KAAKgO,SAAWA,EAChBhO,KAAK8F,eAAe9F,KAAKuW,aAAcvW,KAAKgY,uBAAwBhY,KAAKoW,UAAU/H,cAAa,KAC5FrO,KAAKuW,aAAarS,KAAK,CAAC,EAAE,KAE9BlE,KAAKoY,qBACT,CACAnM,UAAAA,CAAWZ,GACP,IAAK,MAAMzJ,KAAS5B,KAAK7C,SACrByE,EAAMqK,WAAWZ,EAEzB,CACAgN,cAAAA,CAAevU,GACX,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAKoW,UAAU1E,cAAc5N,EACxC,CACAwU,eAAAA,CAAgBxU,EAAOuH,GACnB,GAAIvH,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,GAAIvC,KAAKoW,UAAU1E,cAAc5N,KAAWuH,EACxC,OAEJ,MAAMkN,EAAuD,IAA/BvY,KAAKoW,UAAUzJ,YAC7C3M,KAAKoW,UAAUzE,eAAe7N,EAAOuH,GACrC,MAAMmN,EAAsD,IAA/BxY,KAAKoW,UAAUzJ,aAGvCtB,GAAWkN,IACVlN,GAAWmN,IACbxY,KAAKgY,uBAAuB9T,KAAKmH,EAEzC,CACAoN,SAAAA,CAAUlT,EAAMwF,GACZ,GAAIxF,IAASwF,EACT,OAEJ,GAAIxF,EAAO,GAAKA,GAAQvF,KAAK7C,SAASoE,OAClC,MAAM,IAAIgB,MAAM,sBAEhBgD,EAAOwF,GACPA,IAEJ/K,KAAKoW,UAAU5B,SAASjP,EAAMwF,GAC9B,MAAMnJ,EAAQ5B,KAAK0Y,aAAanT,GAChCvF,KAAK2Y,UAAU/W,EAAOmJ,EAC1B,CACA6N,YAAAA,CAAa9U,GACT,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAKoW,UAAUrE,YAAYjO,EACtC,CACA+U,WAAAA,CAAY/U,EAAOgB,GACf,GAAIhB,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAEpBvC,KAAKoW,UAAUpE,WAAWlO,EAAOgB,EACrC,CACA2P,MAAAA,CAAO3P,EAAM+H,GACT7M,KAAKkL,MAAQ2B,EACb7M,KAAK8M,gBAAkBhI,EACvB9E,KAAKoW,UAAU3B,OAAO5H,EAAgB/H,EAC1C,CACAgU,QAAAA,CAASX,EAAMrT,EAAMhB,EAAO2O,GACxB,GAAI3O,EAAQ,GAAKA,EAAQ9D,KAAK7C,SAASoE,OACnC,MAAM,IAAIgB,MAAM,iBAEpBvC,KAAKoW,UAAU/E,QAAQ8G,EAAMrT,EAAMhB,EAAO2O,GAC1CzS,KAAK2Y,UAAUR,EAAMrU,EACzB,CACAiV,yBAAAA,CAA0BjV,GACtB,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAKoW,UAAU7B,yBAAyBzQ,EACnD,CACA+O,WAAAA,CAAY/O,EAAOsN,GACf,GAAItN,EAAQ,GAAKA,GAAS9D,KAAK7C,SAASoE,OACpC,MAAM,IAAIgB,MAAM,iBAGpB,OADAvC,KAAKoW,UAAU9B,WAAWxQ,EAAOsN,GAC1BpR,KAAK0Y,aAAa5U,EAC7B,CACA6U,SAAAA,CAAUR,EAAMrU,GACZ9D,KAAK7C,SAAS6G,OAAOF,EAAO,EAAGqU,GAC/BnY,KAAKoY,qBACT,CACAM,YAAAA,CAAa5U,GACT,MAAOlC,GAAS5B,KAAK7C,SAAS6G,OAAOF,EAAO,GAE5C,OADA9D,KAAKoY,sBACExW,CACX,CACAwW,mBAAAA,GACIpY,KAAK+X,oBAAoBlW,UACzB7B,KAAK+X,oBAAsB,IAAItS,EAAoBvE,EAAME,OAAOpB,KAAK7C,SAASiC,KAAKqY,GAAMA,EAAEjF,cAAxCtR,EAAuDiD,IAKtGnE,KAAKuW,aAAarS,KAAK,CAAEY,KAAMX,EAAE0I,gBAAiB,OAC/C7M,KAAK7C,SAASiC,KAAI,CAACqY,EAAGzN,IACrByN,aAAaD,EACNC,EAAEQ,uBAAuB5M,IAC5BrL,KAAKsY,gBAAgBtO,EAAGqB,EAAQ,IAGjClK,EAAWmE,OAE1B,CACAzD,OAAAA,GACI7B,KAAK+X,oBAAoBlW,UACzB7B,KAAKoW,UAAUvU,UACf7B,KAAK7C,SAAS2E,SAASF,GAAUA,EAAMC,YACvC9B,MAAM8B,SACV,EC3OJ,SAASmX,EAASC,EAAcC,GAC5B,GAAID,aAAwBhC,EACxB,OAAOgC,EAEX,GAAIA,aAAwBzB,EACxB,OAAOwB,EAASC,EAAa9b,SAAS+b,EAAOD,EAAa9b,SAASoE,OAAS,EAAI,GAAI2X,GAExF,MAAM,IAAI3W,MAAM,eACpB,CACA,SAAS4W,EAAShB,EAAMrT,EAAM+H,GAC1B,GAAIsL,aAAgBX,EAAY,CAC5B,MAAMxM,EAAS,IAAIwM,EAAW4B,EAAWjB,EAAKjL,aAAciL,EAAKzH,mBAAoByH,EAAKnH,OAAQlM,EAAM+H,EAAgBsL,EAAKnK,UAC7H,IAAIqL,EAAY,EAChB,IAAK,IAAIrP,EAAImO,EAAKhb,SAASoE,OAAS,EAAGyI,GAAK,EAAGA,IAAK,CAChD,MAAMpI,EAAQuW,EAAKhb,SAAS6M,GACtBsP,EAAY1X,aAAiB4V,EAAa5V,EAAMiL,eAAiBjL,EAAMkD,KAC7E,IAAI8N,EAAwB,IAAduF,EAAKrT,KACb,EACA4F,KAAK2H,MAAOvN,EAAOwU,EAAanB,EAAKrT,MAC3CuU,GAAazG,EAEH,IAAN5I,IACA4I,GAAW9N,EAAOuU,GAEtBrO,EAAO8N,SAASK,EAASvX,EAAOiL,EAAgB+F,GAAUA,EAAS,GAAG,EAC1E,CACA,OAAO5H,CACX,CAEI,OAAO,IAAIiM,EAASkB,EAAK5M,KAAM6N,EAAWjB,EAAKjL,aAAcL,EAErE,CAoBO,SAAS0M,EAAgBhV,GAC5B,MAAMiV,EAAgBjV,EAAQiV,cAC9B,IAAKA,EACD,MAAM,IAAIjX,MAAM,wBAEpB,GAAI,gBAAgBkX,KAAKD,EAAcvb,WACnC,MAAO,GAEX,MAAM6F,EA3BH,SAAuBS,GAC1B,MAAMiV,EAAgBjV,EAAQiV,cAC9B,IAAKA,EACD,MAAM,IAAIjX,MAAM,wBAEpB,IAAImX,EAAKF,EAAcG,kBACnB7V,EAAQ,EACZ,KAAO4V,IAAOnV,GAAWmV,IAAOF,EAAcI,kBAAoBF,GAC9DA,EAAKA,EAAGG,mBACR/V,IAEJ,OAAOA,CACX,CAekBgW,CAAcN,GAE5B,MAAO,IAAID,EADMC,EAAcA,cAAcA,cAAcA,eACrB1V,EAC1C,CACO,SAASiW,EAAoBC,EAAiBC,EAAUC,GAC3D,MAAMhN,EAoBH,SAAgC8M,EAAiBC,GACpD,OAAOA,EAAS1Y,OAAS,GAAM,EACzB6X,EAAWY,GACXA,CACV,CAxBwBG,CAAuBH,EAAiBC,GACtDG,EAcH,SAAiCF,GACpC,MAAqB,QAAdA,GAAqC,WAAdA,EACxB/N,EAAY8I,SACZ9I,EAAYkB,UACtB,CAlBiCgN,CAAwBH,GACrD,GAAIhN,IAAgBkN,EAAsB,CACtC,MAAOE,EAAMC,GAAU5Q,EAAKsQ,GAC5B,IAAInW,EAAQyW,EAIZ,MAHkB,UAAdL,GAAuC,WAAdA,IACzBpW,GAAS,GAEN,IAAIwW,EAAMxW,EACrB,CACK,CACD,MAAMA,EAAsB,UAAdoW,GAAuC,WAAdA,EAAyB,EAAI,EACpE,MAAO,IAAID,EAAUnW,EACzB,CACJ,CAWO,MAAMsV,EAAclM,GAAgBA,IAAgBf,EAAYkB,WACjElB,EAAY8I,SACZ9I,EAAYkB,WAIlB,MAAMmN,EAAsBA,CAACrC,EAAMjL,KAC/B,MAAMpI,EAAOoI,IAAgBf,EAAY8I,SAAWkD,EAAKsC,IAAInR,MAAQ6O,EAAKsC,IAAIlR,OAC9E,OALG,SAA0B4O,GAC7B,QAASA,EAAKhb,QAClB,CAGSud,CAAiBvC,GAWf,CACH3T,KAAM,SACN9D,KAAMyX,EAAKhb,SAASiC,KAAKqY,GAAM+C,EAAoB/C,EAAG2B,EAAWlM,MACjEpI,QAbsC,iBAA3BqT,EAAKhN,kBACL,CACH3G,KAAM,OACN9D,KAAMyX,EAAK5M,KAAKoP,SAChB7V,KAAMqT,EAAKhN,kBACXE,SAAS,GAGV,CAAE7G,KAAM,OAAQ9D,KAAMyX,EAAK5M,KAAKoP,SAAU7V,OAMpD,EAEE,MAAM8V,GACT,UAAIrZ,GACA,OAAOvB,KAAK6a,MAAQ7a,KAAK6a,MAAM1d,SAASoE,OAAS,CACrD,CACA,eAAI2L,GACA,OAAOlN,KAAK8a,KAAK5N,WACrB,CACA,eAAIA,CAAYA,GACZ,GAAIlN,KAAK8a,KAAK5N,cAAgBA,EAC1B,OAEJ,MAAM,KAAEpI,EAAI,eAAE+H,GAAmB7M,KAAK8a,KACtC9a,KAAK8a,KAAO3B,EAASnZ,KAAK8a,KAAMjO,EAAgB/H,GAChD9E,KAAK8a,KAAKrG,OAAO3P,EAAM+H,EAC3B,CACA,SAAIvD,GACA,OAAOtJ,KAAK8a,KAAKxR,KACrB,CACA,UAAIC,GACA,OAAOvJ,KAAK8a,KAAKvR,MACrB,CACA,gBAAI2N,GACA,OAAOlX,KAAK8a,KAAK5D,YACrB,CACA,iBAAIE,GACA,OAAOpX,KAAK8a,KAAK1D,aACrB,CACA,gBAAID,GACA,OAAOnX,KAAK8a,KAAKzD,aACrB,CACA,iBAAIA,GACA,OAAOrX,KAAK8a,KAAKzD,aACrB,CACA,UAAI0D,GACA,OAAO/a,KAAKgb,OAChB,CACA,UAAID,CAAOtY,GACPzC,KAAKgb,QAAUvY,EACf,MAAMwY,EAAS,CAACjb,KAAK8a,MAMrB,KAAOG,EAAO1Z,OAAS,GAAG,CACtB,MAAM4W,EAAO8C,EAAOC,MAChB/C,aAAgBX,IAChBW,EAAKnK,SAAWvL,EAChBwY,EAAOpX,QAAQsU,EAAKhb,UAE5B,CACJ,CACAge,aAAAA,GACI,IAAI7Y,EACJ,OAAsC,QAA9BA,EAAKtC,KAAKob,sBAAmC,IAAP9Y,OAAgB,EAASA,EAAG+Y,KAAK9P,IACnF,CACA+P,gBAAAA,GACI,YAA+B7a,IAAxBT,KAAKob,cAChB,CACAG,YAAAA,CAAahQ,GACT,IAAIjJ,EACJ,MAAM2X,EAAWV,EAAgBhO,EAAKhH,UAC/BqL,EAAGuI,GAAQnY,KAAKwb,QAAQvB,GAC/B,KAAM9B,aAAgBlB,GAClB,OAEJ,IAAoC,QAA9B3U,EAAKtC,KAAKob,sBAAmC,IAAP9Y,OAAgB,EAASA,EAAG+Y,QAAUlD,EAC9E,OAEAnY,KAAKsb,oBACLtb,KAAKyb,oBAET,MAAMC,EAAmB,IACzB,SAASC,EAAgBC,EAAQC,GAC7B,IAAK,IAAI7R,EAAI,EAAGA,EAAI4R,EAAOze,SAASoE,OAAQyI,IAAK,CAC7C,MAAMpI,EAAQga,EAAOze,SAAS6M,GAC1BpI,aAAiBqV,EACbrV,IAAUia,IACND,EAAOvD,eAAerO,GACtB4R,EAAOtD,gBAAgBtO,GAAG,GAG1B0R,EAAiB7X,KAAKjC,IAK9B+Z,EAAgB/Z,EAAOia,EAE/B,CACJ,CACAF,CAAgB3b,KAAK8a,KAAM3C,GAC3BnY,KAAKob,eAAiB,CAAEC,KAAMlD,EAAMuD,oBACpC1b,KAAK8b,0BAA0B5X,MACnC,CACAuX,iBAAAA,GACI,IAAKzb,KAAKob,eACN,OAEJ,MAAMM,EAAmB1b,KAAKob,eAAeM,kBAC7C,SAASK,EAAwBH,GAC7B,IAAK,IAAI9X,EAAQ8X,EAAOze,SAASoE,OAAS,EAAGuC,GAAS,EAAGA,IAAS,CAC9D,MAAMlC,EAAQga,EAAOze,SAAS2G,GAC1BlC,aAAiBqV,EACZyE,EAAiBM,SAASpa,IAC3Bga,EAAOtD,gBAAgBxU,GAAO,GAIlCiY,EAAwBna,EAEhC,CACJ,CACAma,CAAwB/b,KAAK8a,MAC7B9a,KAAKob,oBAAiB3a,EACtBT,KAAK8b,0BAA0B5X,MACnC,CACA+X,SAAAA,GACQjc,KAAKsb,oBAKLtb,KAAKyb,oBAGT,MAAO,CACHX,KAFSN,EAAoBxa,KAAKkc,UAAWlc,KAAKkN,aAGlD5D,MAAOtJ,KAAKsJ,MACZC,OAAQvJ,KAAKuJ,OACb2D,YAAalN,KAAKkN,YAE1B,CACArL,OAAAA,GACI7B,KAAKoG,WAAWvE,UAChB7B,KAAKuW,aAAa1U,UAClB7B,KAAK8b,0BAA0Bja,UAC/B7B,KAAK8a,KAAKjZ,UACV7B,KAAKob,oBAAiB3a,EACtBT,KAAKuE,QAAQ6C,QACjB,CACA/D,KAAAA,GACI,MAAM6J,EAAclN,KAAK8a,KAAK5N,YAC9BlN,KAAK8a,KAAO,IAAItD,EAAWtK,EAAalN,KAAK0Q,mBAAoB1Q,KAAKgR,OAAQhR,KAAK8a,KAAKhW,KAAM9E,KAAK8a,KAAKjO,eAAgB7M,KAAKgb,QACjI,CACAmB,WAAAA,CAAYC,EAAMC,GACd,MAAMnP,EAAckP,EAAKlP,YACnB3D,EAAS2D,IAAgBf,EAAY8I,SAAWmH,EAAK7S,OAAS6S,EAAK9S,MACzEtJ,KAAKsc,aAAaF,EAAKtB,KAAM5N,EAAamP,EAAc9S,EAC5D,CACA+S,YAAAA,CAAaxB,EAAM5N,EAAamP,EAAcxP,GAC1C7M,KAAK8a,KAAO9a,KAAKuc,iBAAiBzB,EAAM5N,EAAamP,EAAcxP,EACvE,CACA0P,gBAAAA,CAAiBpE,EAAMjL,EAAamP,EAAcxP,GAC9C,IAAI7B,EACJ,GAAkB,WAAdmN,EAAK3T,KAAmB,CACxB,MACMrH,EADqBgb,EAAKzX,KACItB,KAAKod,IAC9B,CACHrE,KAAMnY,KAAKuc,iBAAiBC,EAAiBpD,EAAWlM,GAAcmP,EAAclE,EAAKrT,MACzFuG,QAASmR,EAAgBnR,YAGjCL,EAAS,IAAIwM,EAAWtK,EAAalN,KAAK0Q,mBAAoB1Q,KAAKgR,OAAQmH,EAAKrT,KAChF+H,EACA7M,KAAKgb,QAAS7d,EAClB,MAEI6N,EAAS,IAAIiM,EAASoF,EAAaI,SAAStE,GAAOjL,EAAaL,EAAgBsL,EAAKrT,MAEzF,OAAOkG,CACX,CACA,QAAI8P,GACA,OAAO9a,KAAK6a,KAChB,CACA,QAAIC,CAAKA,GACL,MAAM4B,EAAU1c,KAAK6a,MACjB6B,IACAA,EAAQ7a,UACR7B,KAAKob,oBAAiB3a,EACtBT,KAAKuE,QAAQsO,YAAY6J,EAAQnY,UAErCvE,KAAK6a,MAAQC,EACb9a,KAAKuE,QAAQwM,YAAY/Q,KAAK6a,MAAMtW,SACpCvE,KAAKoG,WAAW3D,MAAQzC,KAAK6a,MAAMrI,aAAarO,IAC5CnE,KAAKuW,aAAarS,KAAKC,EAAE,GAEjC,CAKAwY,+BAAAA,GACI,IAAK3c,KAAK6a,MACN,OAEJ,MAAM6B,EAAU1c,KAAK8a,KAGrB,GAFA4B,EAAQnY,QAAQ6C,SAChBpH,KAAK6a,MAAQ,IAAIrD,EAAW4B,EAAWsD,EAAQxP,aAAclN,KAAK0Q,mBAAoB1Q,KAAKgR,OAAQhR,KAAK8a,KAAKjO,eAAgB7M,KAAK8a,KAAKhW,KAAM9E,KAAKgb,SAClH,IAA5B0B,EAAQvf,SAASoE,aAGhB,GAAgC,IAA5Bmb,EAAQvf,SAASoE,OAAc,CAEpC,MAAMqb,EAAiBF,EAAQvf,SAAS,GAC1Buf,EAAQ7J,YAAY,GAC5BhR,UACN6a,EAAQ7a,UACR7B,KAAK6a,MAAM/B,SAOXK,EAASyD,EAAgBA,EAAe/P,eAAgB+P,EAAe9X,MAAOwH,EAAOC,WAAY,EACrG,MAEIvM,KAAK6a,MAAM/B,SAAS4D,EAASpQ,EAAOC,WAAY,GAEpDvM,KAAKuE,QAAQwM,YAAY/Q,KAAK6a,MAAMtW,SACpCvE,KAAKoG,WAAW3D,MAAQzC,KAAK6a,MAAMrI,aAAarO,IAC5CnE,KAAKuW,aAAarS,KAAKC,EAAE,GAEjC,CACAyG,IAAAA,CAAKqP,GACD,OAAOja,KAAK6c,gBAAgB5C,EAChC,CACA/E,QAAAA,CAAS+E,GACL,OAAOja,KAAK6c,gBAAgB5C,GAAU,EAC1C,CACAiC,OAAAA,CAAQjC,GACJ,MAAM9B,EAAO8B,EAAWja,KAAKwb,QAAQvB,GAAU,GAAKja,KAAK8a,KACzD,OAAO9a,KAAK8c,UAAU3E,EAAMnY,KAAKkN,YACrC,CACA4P,SAAAA,CAAU3E,EAAMjL,EAAa/B,GACzB,MAAMsP,EAAM,CAAElR,OAAQ4O,EAAK5O,OAAQD,MAAO6O,EAAK7O,OAC/C,GAAI6O,aAAgBlB,EAChB,MAAO,CAAEwD,MAAKlP,KAAM4M,EAAK5M,KAAMJ,qBAEnC,MAAMhO,EAAW,GACjB,IAAK,IAAI6M,EAAI,EAAGA,EAAImO,EAAKhb,SAASoE,OAAQyI,IAAK,CAC3C,MAAMpI,EAAQuW,EAAKhb,SAAS6M,GACtB+S,EAAwB5E,EAAKY,0BAA0B/O,GAC7D7M,EAAS0G,KAAK7D,KAAK8c,UAAUlb,EAAOwX,EAAWlM,GAAc6P,GACjE,CACA,MAAO,CAAEtC,MAAKtd,WAClB,CACA0f,eAAAA,CAAgB5C,EAAU3E,QAAO,IAAPA,IAAAA,GAAU,GAChC,MAAO0H,EAAM7E,GAAQnY,KAAKwb,QAAQvB,GAClC,KAAM9B,aAAgBlB,GAClB,MAAM,IAAI1U,MAAM,oBAEpB,IAAK,IAAIyH,EAAIgT,EAAKzb,OAAS,EAAGyI,GAAK,EAAGA,IAAK,CACvC,MAAMiT,EAAID,EAAKhT,GACTkT,EAAIjD,EAASjQ,IAAM,EAIzB,GAHkCsL,EAC5B4H,EAAI,GAAK,EACTA,EAAI,EAAID,EAAE9f,SAASoE,OAErB,OAAOyX,EAASiE,EAAE9f,SAASmY,EAAU4H,EAAI,EAAIA,EAAI,GAAI5H,EAE7D,CACA,OAAO0D,EAAShZ,KAAK8a,KAAMxF,EAC/B,CACA3V,WAAAA,CAAY+Q,EAAoBM,EAAQ9D,GACpClN,KAAK0Q,mBAAqBA,EAC1B1Q,KAAKgR,OAASA,EACdhR,KAAKgb,SAAU,EACfhb,KAAKob,oBAAiB3a,EACtBT,KAAKoG,WAAa,IAAIF,EACtBlG,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAK8b,0BAA4B,IAAI9Y,EACrChD,KAAKmd,yBAA2Bnd,KAAK8b,0BAA0BpY,MAC/D1D,KAAKuE,QAAUyD,SAAS0K,cAAc,OACtC1S,KAAKuE,QAAQtG,UAAY,YACzB+B,KAAK8a,KAAO,IAAItD,EAAWtK,EAAawD,EAAoBM,EAAQ,EAAG,EAAGhR,KAAKgb,QACnF,CACAtJ,aAAAA,CAAcuI,GACV,MAAOK,EAAMxW,GAAS6F,EAAKsQ,IACpB,CAAE2B,GAAU5b,KAAKwb,QAAQlB,GAChC,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIjV,MAAM,yBAEpB,OAAOqZ,EAAOvD,eAAevU,EACjC,CACA6N,cAAAA,CAAesI,EAAU5O,GACjBrL,KAAKsb,oBACLtb,KAAKyb,oBAET,MAAOnB,EAAMxW,GAAS6F,EAAKsQ,IACpB,CAAE2B,GAAU5b,KAAKwb,QAAQlB,GAChC,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIjV,MAAM,yBAEpBqZ,EAAOtD,gBAAgBxU,EAAOuH,EAClC,CACAmJ,QAAAA,CAAS4I,EAAgB7X,EAAMwF,GACvB/K,KAAKsb,oBACLtb,KAAKyb,oBAET,MAAO,CAAEG,GAAU5b,KAAKwb,QAAQ4B,GAChC,KAAMxB,aAAkBpE,GACpB,MAAM,IAAIjV,MAAM,oBAEpBqZ,EAAOnD,UAAUlT,EAAMwF,EAC3B,CACAsG,OAAAA,CAAQ9F,EAAMzG,EAAMmV,GACZja,KAAKsb,oBACLtb,KAAKyb,oBAET,MAAOnB,EAAMxW,GAAS6F,EAAKsQ,IACpBoD,EAAczB,GAAU5b,KAAKwb,QAAQlB,GAC5C,GAAIsB,aAAkBpE,EAAY,CAC9B,MAAMW,EAAO,IAAIlB,EAAS1L,EAAM6N,EAAWwC,EAAO1O,aAAc0O,EAAO/O,gBACvE+O,EAAO9C,SAASX,EAAMrT,EAAMhB,EAChC,KACK,CACD,MAAOwZ,KAAgB1N,GAAK,IAAIyN,GAAc/H,WACvCiI,KAAgBC,GAAM,IAAIlD,GAAMhF,UACvC,IAAImI,EAAiB,EACrB,MAAMC,EAA8BJ,EAAYvE,0BAA0BwE,GAC/B,iBAAhCG,IACPD,EAAiBnR,EAAOG,UAAUiR,IAExBJ,EAAYzK,YAAY0K,GAChC1b,UACN,MAAM8b,EAAY,IAAInG,EAAWoE,EAAO1O,YAAalN,KAAK0Q,mBAAoB1Q,KAAKgR,OAAQ4K,EAAO9W,KAAM8W,EAAO/O,eAAgB7M,KAAKgb,SACpIsC,EAAYxE,SAAS6E,EAAW/B,EAAO9W,KAAMyY,GAC7C,MAAMK,EAAa,IAAI3G,EAAS2E,EAAOrQ,KAAM+R,EAAYpQ,YAAa0O,EAAO9W,MAC7E6Y,EAAU7E,SAAS8E,EAAYH,EAAgB,GAC3B,iBAAT3Y,GAAmC,UAAdA,EAAKN,OACjCM,EAAO,CAAEN,KAAM,QAASV,MAAO,IAEnC,MAAMqU,EAAO,IAAIlB,EAAS1L,EAAM+R,EAAYpQ,YAAa0O,EAAO9W,MAChE6Y,EAAU7E,SAASX,EAAMrT,EAAMhB,EACnC,CACJ,CACAsD,MAAAA,CAAOmE,EAAM6F,GACT,MAAM6I,EAAWV,EAAgBhO,EAAKhH,SACtC,OAAOvE,KAAKsU,WAAW2F,EAAU7I,EACrC,CACAkD,UAAAA,CAAW2F,EAAU7I,GACbpR,KAAKsb,oBACLtb,KAAKyb,oBAET,MAAOnB,EAAMxW,GAAS6F,EAAKsQ,IACpBoD,EAAczB,GAAU5b,KAAKwb,QAAQlB,GAC5C,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIjV,MAAM,oBAEpB,MAAMsb,EAAejC,EAAOze,SAAS2G,GACrC,KAAM+Z,aAAwB5G,GAC1B,MAAM,IAAI1U,MAAM,oBAIpB,GAFAqZ,EAAO/I,YAAY/O,EAAOsN,GAC1ByM,EAAahc,UACkB,IAA3B+Z,EAAOze,SAASoE,OAChB,OAAOsc,EAAatS,KAOxB,MAAMuS,EAAUlC,EAAOze,SAAS,GAChC,GAA4B,IAAxBkgB,EAAa9b,OAEb,OAAIuc,aAAmB7G,IAOvB2E,EAAO/I,YAAY,EAAGzB,GAEtBpR,KAAK8a,KAAOgD,GAPDD,EAAatS,KAW5B,MAAO+R,KAAgB1N,GAAK,IAAIyN,GAAc/H,WACvCiI,KAAgBC,GAAM,IAAIlD,GAAMhF,UACjCyI,EAAmBnC,EAAOvD,eAAe,GAE/CuD,EAAO/I,YAAY,EAAGzB,GAEtB,MAAMxC,EAAQ0O,EAAYngB,SAASiC,KAAI,CAAC8L,EAAOlB,IAAMsT,EAAY1E,aAAa5O,KAI9E,GADAsT,EAAYzK,YAAY0K,EAAanM,GAAQvP,UACzCic,aAAmBtG,EAAY,CAE/B5I,EAAM5K,OAAOuZ,EAAa,KAAMO,EAAQ3gB,SAASiC,KAAKqY,GAAMA,EAAE3S,QAE9D,IAAK,IAAIkF,EAAI,EAAGA,EAAI8T,EAAQ3gB,SAASoE,OAAQyI,IAAK,CAC9C,MAAMpI,EAAQkc,EAAQ3gB,SAAS6M,GAC/BsT,EAAYxE,SAASlX,EAAOA,EAAMkD,KAAMyY,EAAcvT,EAC1D,CAMA,KAAO8T,EAAQ3gB,SAASoE,OAAS,GAC7Buc,EAAQjL,YAAY,EAE5B,KACK,CAED,MAAM+K,EAAa,IAAI3G,EAAS6G,EAAQvS,KAAM6N,EAAW0E,EAAQ5Q,aAAc4Q,EAAQhZ,MACjFkZ,EAAgBD,EAChBD,EAAQjR,eACRP,EAAOG,UAAUqR,EAAQjR,gBAC/ByQ,EAAYxE,SAAS8E,EAAYI,EAAeT,EACpD,CAEAO,EAAQjc,UAER,IAAK,IAAImI,EAAI,EAAGA,EAAI4E,EAAMrN,OAAQyI,IAC9BsT,EAAYzE,YAAY7O,EAAG4E,EAAM5E,IAErC,OAAO6T,EAAatS,IACxB,CACAkJ,MAAAA,CAAOnL,EAAOC,GACV,MAAOzE,EAAM+H,GAAkB7M,KAAK8a,KAAK5N,cAAgBf,EAAYkB,WAC/D,CAAC9D,EAAQD,GACT,CAACA,EAAOC,GACdvJ,KAAK8a,KAAKrG,OAAO3P,EAAM+H,EAC3B,CACA2O,OAAAA,CAAQvB,EAAU9B,EAAkB6E,GAChC,QADkB,IAAJ7E,IAAAA,EAAOnY,KAAK8a,WAAU,IAAJkC,IAAAA,EAAO,IACf,IAApB/C,EAAS1Y,OACT,MAAO,CAACyb,EAAM7E,GAElB,KAAMA,aAAgBX,GAClB,MAAM,IAAIjV,MAAM,oBAEpB,MAAOuB,KAAUwW,GAAQL,EACzB,GAAInW,EAAQ,GAAKA,GAASqU,EAAKhb,SAASoE,OACpC,MAAM,IAAIgB,MAAM,oBAEpB,MAAMX,EAAQuW,EAAKhb,SAAS2G,GAE5B,OADAkZ,EAAKnZ,KAAKsU,GACHnY,KAAKwb,QAAQlB,EAAM1Y,EAAOob,EACrC,ECvjBG,MAAMiB,WAAkBxY,EAC3B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACA,mBAAIC,GACA,OAAOne,KAAKoe,gBAChB,CACA,mBAAID,CAAgB1b,GAChBzC,KAAKoe,iBAAmB3b,CAC5B,CACA9C,WAAAA,CAAY6Z,EAAe2E,QAAe,IAAfA,IAAAA,GAAkB,GACzCpe,QACAC,KAAKoe,iBAAmBD,EACxBne,KAAKke,SAAW1E,EAChBxZ,KAAK8F,eAAeO,EAAmBrG,KAAKke,UAAWG,IACnD,GAAIre,KAAK0F,WAKL,OAEJ,GAAI1F,KAAKme,gBACL,OAEJ,IAAKne,KAAKke,SAASI,aAaf,OAEJ,IT2HL,SAAsB/Z,GACzB,IAAIga,EAAiBha,EACrB,KAAOga,aAAuD,EAASA,EAAe3W,YAAY,CAC9F,GAAI2W,EAAe3W,aAAeI,SAC9B,OAAO,EAIPuW,EAFKA,EAAe3W,sBAAsB4W,iBAEzBD,EAAe3W,WAAW6W,KAG1BF,EAAe3W,UAExC,CACA,OAAO,CACX,CS1IiB8W,CAAa1e,KAAKke,UAMnB,OAEJ,MAAM,MAAE5U,EAAK,OAAEC,GAAW8U,EAAMM,YAChC3e,KAAKyU,OAAOnL,EAAOC,EAAO,IAElC,EC/CJ,MAAMqV,GAAejU,IACd,SAASkU,GAAS3E,GACrB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SAEX,QACI,MAAO,SAEnB,CACO,MAAM4E,WAAiBb,GAC1B,MAAItf,GACA,OAAOqB,KAAK+e,GAChB,CACA,QAAIja,GACA,OAAO9E,KAAKgf,QAAQla,IACxB,CACA,UAAIma,GACA,OAAOzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UAAU9f,KAAKwQ,GAAMA,EAAEnN,OAC1D,CACA,SAAI6G,GACA,OAAOtJ,KAAKmf,SAAS7V,KACzB,CACA,UAAIC,GACA,OAAOvJ,KAAKmf,SAAS5V,MACzB,CACA,iBAAI6N,GACA,OAAOpX,KAAKmf,SAAS/H,aACzB,CACA,iBAAIC,GACA,OAAOrX,KAAKmf,SAAS9H,aACzB,CACA,gBAAIH,GACA,OAAOlX,KAAKmf,SAASjI,YACzB,CACA,gBAAIC,GACA,OAAOnX,KAAKmf,SAAShI,YACzB,CACA,eAAIiI,GACA,OAAOpf,KAAKqf,YAChB,CACA,UAAItE,GACA,OAAO/a,KAAKmf,SAASpE,MACzB,CACA,UAAIA,CAAOtY,GACPzC,KAAKmf,SAASpE,OAAStY,CAC3B,CACA9C,WAAAA,CAAY4D,GACRxD,MAAMiI,SAAS0K,cAAc,OAAQnP,EAAQ+b,qBAC7Ctf,KAAK+e,IAAMH,GAAahU,OACxB5K,KAAKgf,QAAU,IAAIna,IACnB7E,KAAKuf,mBAAqB,IAAIvc,EAC9BhD,KAAKwf,kBAAoBxf,KAAKuf,mBAAmB7b,MACjD1D,KAAKyf,aAAe,IAAIzc,EACxBhD,KAAK0f,YAAc1f,KAAKyf,aAAa/b,MACrC1D,KAAK2f,UAAY,IAAI3c,EACrBhD,KAAK4f,SAAW5f,KAAK2f,UAAUjc,MAC/B1D,KAAK6f,mBAAqB,IAAI7c,EAC9BhD,KAAK8f,kBAAoB9f,KAAK6f,mBAAmBnc,MACjD1D,KAAK+f,yBAA2B,IAAI/a,EACpChF,KAAKuE,QAAQwH,MAAMxC,OAAS,OAC5BvJ,KAAKuE,QAAQwH,MAAMzC,MAAQ,OAC3B/F,EAAQiW,cAAczI,YAAY/Q,KAAKuE,SACvCvE,KAAKmf,SAAW,IAAIvE,KAAWrX,EAAQmN,mBAAoBnN,EAAQyN,OAAQzN,EAAQ2J,aACnFlN,KAAKmf,SAASpE,SAAWxX,EAAQwX,OACjC/a,KAAKuE,QAAQwM,YAAY/Q,KAAKmf,SAAS5a,SACvCvE,KAAKyU,OAAO,EAAG,GAAG,GAClBzU,KAAK8F,eAAe3E,EAAWoE,MAAK,KAChC,IAAIjD,EACkC,QAArCA,EAAKtC,KAAKuE,QAAQiV,qBAAkC,IAAPlX,GAAyBA,EAAGuQ,YAAY7S,KAAKuE,QAAQ,IACnGvE,KAAKmf,SAAS3M,aAAY,KAC1BxS,KAAK+f,yBAAyB7b,MAAM,IACpChD,EAAME,IAAIpB,KAAK4f,SAAU5f,KAAK0f,YAAa1f,KAAK8f,kBAAhD5e,EAAmE,KACnElB,KAAK+f,yBAAyB7b,MAAM,IACpClE,KAAK+f,yBAAyB7a,SAAQ,KACtClF,KAAKuf,mBAAmBrb,MAAM,IAC9BlE,KAAK+f,yBACb,CACA9T,UAAAA,CAAW+T,EAAO3U,GACdrL,KAAKmf,SAASxN,eAAe4H,EAAgByG,EAAMzb,SAAU8G,GAC7DrL,KAAKuf,mBAAmBrb,MAC5B,CACA+b,SAAAA,CAAUD,GACN,OAAOhgB,KAAKmf,SAASzN,cAAc6H,EAAgByG,EAAMzb,SAC7D,CACA2b,aAAAA,CAAcF,GACVhgB,KAAKmf,SAAS5D,aAAayE,GAC3BhgB,KAAKmgB,iBAAiBH,EAC1B,CACAI,gBAAAA,CAAiBJ,GACb,OAAOhgB,KAAKmf,SAAShE,kBAAoB6E,CAC7C,CACAK,kBAAAA,GACIrgB,KAAKmf,SAAS1D,mBAClB,CACA6E,iBAAAA,GACI,OAAOtgB,KAAKmf,SAAS7D,kBACzB,CACA,6BAAIiF,GACA,OAAOvgB,KAAKmf,SAAShC,wBACzB,CACAqD,UAAAA,CAAWC,EAAOxG,EAAgBnV,QAAR,IAARmV,IAAAA,EAAW,CAAC,IAC1Bja,KAAKmf,SAAS9N,QAAQoP,EAAO3b,QAAmCA,EAAOwH,EAAOC,WAAY0N,GAC1Fja,KAAK2f,UAAUzb,KAAKuc,EACxB,CACAC,aAAAA,CAAcD,EAAOld,GACjB,IAAKvD,KAAKgf,QAAQ2B,IAAIF,EAAM9hB,IACxB,MAAM,IAAI4D,MAAM,qBAEpB,MAAMiL,EAAOxN,KAAKgf,QAAQ4B,IAAIH,EAAM9hB,IAC9B4M,EAAOvL,KAAKmf,SAAS/X,OAAOqZ,EAAOnU,EAAOC,YAOhD,GANIiB,KAAUjK,aAAyC,EAASA,EAAQwT,eACpEvJ,EAAKpH,WAAWvE,UAChB2L,EAAK/K,MAAMZ,UACX7B,KAAKgf,QAAQ3a,OAAOoc,EAAM9hB,IAC1BqB,KAAKyf,aAAavb,KAAKuc,MAErBld,aAAyC,EAASA,EAAQsd,aAAe7gB,KAAKqf,eAAiBoB,EAAO,CACxG,MAAMxB,EAASzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UACvClf,KAAKmgB,iBAAiBlB,EAAO1d,OAAS,EAAI0d,EAAO,GAAGxc,WAAQhC,EAChE,CACA,OAAO8K,CACX,CACAuV,QAAAA,CAASniB,GACL,IAAI2D,EACJ,OAAuC,QAA/BA,EAAKtC,KAAKgf,QAAQ4B,IAAIjiB,UAAwB,IAAP2D,OAAgB,EAASA,EAAGG,KAC/E,CACA0d,gBAAAA,CAAiBM,GACTzgB,KAAKqf,eAAiBoB,IAGtBzgB,KAAKqf,cACLrf,KAAKqf,aAAa0B,WAAU,GAE5BN,GACAA,EAAMM,WAAU,GAEpB/gB,KAAKqf,aAAeoB,EACpBzgB,KAAK6f,mBAAmB3b,KAAKuc,GACjC,CACAO,WAAAA,CAAYP,GACRzgB,KAAK0gB,cAAcD,EACvB,CACAQ,UAAAA,CAAW1d,GACP,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQkd,MAAO,CAChB,IAAKzgB,KAAKof,YACN,OAEJ7b,EAAQkd,MAAQzgB,KAAKof,WACzB,CACA,MAAMnF,EAAWV,EAAgBhW,EAAQkd,MAAMlc,SACzCqG,EAA+C,QAAvCtI,EAAKtC,KAAKmf,SAASvU,KAAKqP,UAA8B,IAAP3X,OAAgB,EAASA,EAAGiJ,KACzFvL,KAAKmgB,iBAAiBvV,EAC1B,CACAsW,cAAAA,CAAe3d,GACX,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQkd,MAAO,CAChB,IAAKzgB,KAAKof,YACN,OAEJ7b,EAAQkd,MAAQzgB,KAAKof,WACzB,CACA,MAAMnF,EAAWV,EAAgBhW,EAAQkd,MAAMlc,SACzCqG,EAAmD,QAA3CtI,EAAKtC,KAAKmf,SAASjK,SAAS+E,UAA8B,IAAP3X,OAAgB,EAASA,EAAGiJ,KAC7FvL,KAAKmgB,iBAAiBvV,EAC1B,CACA6J,MAAAA,CAAOnL,EAAOC,EAAQ4X,IACAA,QAAiDA,EAAe7X,IAAUtJ,KAAKsJ,OAASC,IAAWvJ,KAAKuJ,UAI1HvJ,KAAKmf,SAAS5a,QAAQwH,MAAMxC,OAAU,GAAEA,MACxCvJ,KAAKmf,SAAS5a,QAAQwH,MAAMzC,MAAS,GAAEA,MACvCtJ,KAAKmf,SAAS1K,OAAOnL,EAAOC,GAChC,CACA1H,OAAAA,GACI7B,KAAK6f,mBAAmBhe,UACxB7B,KAAK2f,UAAU9d,UACf7B,KAAKyf,aAAa5d,UAClB7B,KAAKuf,mBAAmB1d,UACxB,IAAK,MAAM4e,KAASzgB,KAAKif,OACrBwB,EAAM5e,UAEV7B,KAAKmf,SAAStd,UACd9B,MAAM8B,SACV,EC3MG,MAAMuf,GAIT,eAAI9V,GACA,OAAOtL,KAAKf,UAAUqM,WAC1B,CAIA,eAAIG,GACA,OAAOzL,KAAKf,UAAUwM,WAC1B,CAIA,SAAInC,GACA,OAAOtJ,KAAKf,UAAUqK,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAKf,UAAUsK,MAC1B,CAIA,UAAIhI,GACA,OAAOvB,KAAKf,UAAUsC,MAC1B,CAIA,eAAI2L,GACA,OAAOlN,KAAKf,UAAUiO,WAC1B,CAIA,UAAImU,GACA,OAAOrhB,KAAKf,UAAUoiB,MAC1B,CAIA,uBAAIC,GACA,OAAOthB,KAAKf,UAAUqiB,mBAC1B,CAKA,qBAAI9B,GACA,OAAOxf,KAAKf,UAAUugB,iBAC1B,CAIA,gBAAIjR,GACA,OAAOvO,KAAKf,UAAUsP,YAC1B,CAIA,mBAAIE,GACA,OAAOzO,KAAKf,UAAUwP,eAC1B,CACA9O,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAsiB,aAAAA,CAAche,GACVvD,KAAKf,UAAUsiB,cAAche,EACjC,CAKAie,WAAAA,CAAYxB,EAAO5O,GACfpR,KAAKf,UAAUuiB,YAAYxB,EAAO5O,EACtC,CAIAqQ,KAAAA,GACIzhB,KAAKf,UAAUwiB,OACnB,CAIAX,QAAAA,CAASniB,GACL,OAAOqB,KAAKf,UAAU6hB,SAASniB,EACnC,CAIA8V,MAAAA,CAAOnL,EAAOC,GACV,OAAOvJ,KAAKf,UAAUwV,OAAOnL,EAAOC,EACxC,CAIAmY,QAAAA,CAASne,GACL,OAAOvD,KAAKf,UAAUyiB,SAASne,EACnC,CAIAoe,SAAAA,CAAUpc,EAAMwF,GACZ/K,KAAKf,UAAU0iB,UAAUpc,EAAMwF,EACnC,CAIA0R,QAAAA,CAAS/b,GACLV,KAAKf,UAAUwd,SAAS/b,EAC5B,CAEAia,MAAAA,GACI,OAAO3a,KAAKf,UAAU0b,QAC1B,CAIAtX,KAAAA,GACIrD,KAAKf,UAAUoE,OACnB,EAEG,MAAMue,GAIT,eAAItW,GACA,OAAOtL,KAAKf,UAAUqM,WAC1B,CAIA,eAAIG,GACA,OAAOzL,KAAKf,UAAUwM,WAC1B,CAIA,SAAInC,GACA,OAAOtJ,KAAKf,UAAUqK,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAKf,UAAUsK,MAC1B,CAIA,UAAI8X,GACA,OAAOrhB,KAAKf,UAAUoiB,MAC1B,CAIA,qBAAI7B,GACA,OAAOxf,KAAKf,UAAUugB,iBAC1B,CAIA,uBAAI8B,GACA,OAAOthB,KAAKf,UAAUqiB,mBAC1B,CAIA,gBAAI/S,GACA,OAAOvO,KAAKf,UAAUsP,YAC1B,CAIA,mBAAIE,GACA,OAAOzO,KAAKf,UAAUwP,eAC1B,CAIA,aAAIoT,GACA,MAAMC,EAAU,IAAI9e,EACdoD,EAAapG,KAAKf,UAAU4iB,WAAW1d,IACzC2d,EAAQ5d,KAAK6d,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7d,GAAI,CAAE8d,IAAKjiB,OAAQ,IAMpE,OAJA8hB,EAAQjgB,QAAU,KACduE,EAAWvE,UACXigB,EAAQjgB,SAAS,EAEdigB,EAAQpe,KACnB,CACA/D,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAuiB,WAAAA,CAAYxB,GACRhgB,KAAKf,UAAUuiB,YAAYxB,EAC/B,CAIAc,QAAAA,CAASniB,GACL,OAAOqB,KAAKf,UAAU6hB,SAASniB,EACnC,CAIAgjB,SAAAA,CAAUpc,EAAMwF,GACZ/K,KAAKf,UAAU0iB,UAAUpc,EAAMwF,EACnC,CAIA0W,KAAAA,GACIzhB,KAAKf,UAAUwiB,OACnB,CAIAhN,MAAAA,CAAOnL,EAAOC,GACVvJ,KAAKf,UAAUwV,OAAOnL,EAAOC,EACjC,CAIAmY,QAAAA,CAASne,GACL,OAAOvD,KAAKf,UAAUyiB,SAASne,EACnC,CAIAkZ,QAAAA,CAAS/b,GACLV,KAAKf,UAAUwd,SAAS/b,EAC5B,CAIAia,MAAAA,GACI,OAAO3a,KAAKf,UAAU0b,QAC1B,CAIAtX,KAAAA,GACIrD,KAAKf,UAAUoE,OACnB,EAEG,MAAM6e,GAIT,SAAI5Y,GACA,OAAOtJ,KAAKf,UAAUqK,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAKf,UAAUsK,MAC1B,CAIA,iBAAI6N,GACA,OAAOpX,KAAKf,UAAUmY,aAC1B,CAIA,iBAAIC,GACA,OAAOrX,KAAKf,UAAUoY,aAC1B,CAIA,gBAAIH,GACA,OAAOlX,KAAKf,UAAUiY,YAC1B,CAIA,gBAAIC,GACA,OAAOnX,KAAKf,UAAUkY,YAC1B,CAIA,qBAAIqI,GACA,OAAOxf,KAAKf,UAAUugB,iBAC1B,CAIA,iBAAI2C,GACA,OAAOniB,KAAKf,UAAUmjB,aAC1B,CAIA,oBAAIC,GACA,OAAOriB,KAAKf,UAAUqjB,gBAC1B,CAIA,0BAAIC,GACA,OAAOviB,KAAKf,UAAUujB,sBAC1B,CAIA,uBAAIlB,GACA,OAAOthB,KAAKf,UAAUqiB,mBAC1B,CAIA,UAAID,GACA,OAAOrhB,KAAKf,UAAUggB,MAC1B,CAIA,eAAI/R,GACA,OAAOlN,KAAKf,UAAUiO,WAC1B,CACA,eAAIA,CAAYzK,GACZzC,KAAKf,UAAUsiB,cAAc,CAAErU,YAAazK,GAChD,CACA9C,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAwiB,KAAAA,GACIzhB,KAAKf,UAAUwiB,OACnB,CAIAhN,MAAAA,CAAOnL,EAAOC,EAAQkZ,QAAK,IAALA,IAAAA,GAAQ,GAC1BziB,KAAKf,UAAUwV,OAAOnL,EAAOC,EAAQkZ,EACzC,CAIAf,QAAAA,CAASne,GACL,OAAOvD,KAAKf,UAAUyiB,SAASne,EACnC,CAIAie,WAAAA,CAAYxB,EAAO5O,GACfpR,KAAKf,UAAUuiB,YAAYxB,EAAO5O,EACtC,CAIAuQ,SAAAA,CAAU3B,EAAOzc,GACbvD,KAAKf,UAAU0iB,UAAU3B,EAAOzc,EACpC,CAIAud,QAAAA,CAASniB,GACL,OAAOqB,KAAKf,UAAU6hB,SAASniB,EACnC,CAIA8d,QAAAA,CAAS/b,GACL,OAAOV,KAAKf,UAAUwd,SAAS/b,EACnC,CAIAia,MAAAA,GACI,OAAO3a,KAAKf,UAAU0b,QAC1B,CAIAtX,KAAAA,GACIrD,KAAKf,UAAUoE,OACnB,EAEG,MAAMqf,GAIT,MAAI/jB,GACA,OAAOqB,KAAKf,UAAUN,EAC1B,CAIA,SAAI2K,GACA,OAAOtJ,KAAKf,UAAUqK,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAKf,UAAUsK,MAC1B,CAIA,iBAAI6N,GACA,OAAOpX,KAAKf,UAAUmY,aAC1B,CAIA,iBAAIC,GACA,OAAOrX,KAAKf,UAAUoY,aAC1B,CAIA,gBAAIH,GACA,OAAOlX,KAAKf,UAAUiY,YAC1B,CAIA,gBAAIC,GACA,OAAOnX,KAAKf,UAAUkY,YAC1B,CAIA,QAAIrS,GACA,OAAO9E,KAAKf,UAAU6F,IAC1B,CAIA,eAAI6d,GACA,OAAO3iB,KAAKf,UAAU0jB,WAC1B,CAIA,0BAAIH,GACA,OAAOxiB,KAAKf,UAAUujB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOpiB,KAAKf,UAAUmjB,aAC1B,CAIA,oBAAIE,GACA,OAAOtiB,KAAKf,UAAUqjB,gBAC1B,CAIA,0BAAIC,GACA,OAAOviB,KAAKf,UAAUsjB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOniB,KAAKf,UAAUkjB,aAC1B,CAIA,oBAAIE,GACA,OAAOriB,KAAKf,UAAUojB,gBAC1B,CAIA,uBAAIf,GACA,OAAOthB,KAAKf,UAAUqiB,mBAC1B,CAIA,qBAAI9B,GACA,OAAOxf,KAAKf,UAAUugB,iBAC1B,CAIA,aAAIqC,GACA,OAAO7hB,KAAKf,UAAU4iB,SAC1B,CAOA,cAAIe,GACA,OAAO5iB,KAAKf,UAAU2jB,UAC1B,CAOA,qBAAIC,GACA,OAAO7iB,KAAKf,UAAU4jB,iBAC1B,CAOA,mBAAIC,GACA,OAAO9iB,KAAKf,UAAU6jB,eAC1B,CAMA,mBAAIC,GACA,OAAO/iB,KAAKf,UAAU8jB,eAC1B,CACA,4BAAIC,GACA,OAAOhjB,KAAKf,UAAU+jB,wBAC1B,CAIA,UAAI3B,GACA,OAAOrhB,KAAKf,UAAUoiB,MAC1B,CAIA,UAAIpC,GACA,OAAOjf,KAAKf,UAAUggB,MAC1B,CAIA,eAAIgE,GACA,OAAOjjB,KAAKf,UAAUgkB,WAC1B,CAIA,eAAI7D,GACA,OAAOpf,KAAKf,UAAUmgB,WAC1B,CACAzf,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAwiB,KAAAA,GACIzhB,KAAKf,UAAUwiB,OACnB,CAIAX,QAAAA,CAASniB,GACL,OAAOqB,KAAKf,UAAUikB,cAAcvkB,EACxC,CAIA8V,MAAAA,CAAOnL,EAAOC,EAAQkZ,QAAK,IAALA,IAAAA,GAAQ,GAC1BziB,KAAKf,UAAUwV,OAAOnL,EAAOC,EAAQkZ,EACzC,CAIAf,QAAAA,CAASne,GACL,OAAOvD,KAAKf,UAAUyiB,SAASne,EACnC,CAIAie,WAAAA,CAAYxB,GACRhgB,KAAKf,UAAUuiB,YAAYxB,EAC/B,CAIAmD,QAAAA,CAAS5f,GACL,OAAOvD,KAAKf,UAAUkkB,SAAS5f,EACnC,CAIA6f,cAAAA,GACI,OAAOpjB,KAAKf,UAAUmkB,gBAC1B,CAIApC,WAAAA,CAAYP,GACRzgB,KAAKf,UAAU+hB,YAAYP,EAC/B,CAIA4C,QAAAA,CAAS1kB,GACL,OAAOqB,KAAKf,UAAU6hB,SAASniB,EACnC,CAIA2kB,gBAAAA,CAAiB9V,EAAM+V,GACnB,OAAOvjB,KAAKf,UAAUqkB,iBAAiB9V,EAAM+V,EACjD,CAIA9G,QAAAA,CAAS/b,GACLV,KAAKf,UAAUwd,SAAS/b,EAC5B,CAIAia,MAAAA,GACI,OAAO3a,KAAKf,UAAU0b,QAC1B,CAIAtX,KAAAA,GACIrD,KAAKf,UAAUoE,OACnB,CAIA4d,UAAAA,CAAW1d,GACPvD,KAAKf,UAAUgiB,WAAW1d,EAC9B,CAIA2d,cAAAA,CAAe3d,GACXvD,KAAKf,UAAUiiB,eAAe3d,EAClC,CACA2c,aAAAA,CAAcF,GACVhgB,KAAKf,UAAUihB,cAAcF,EAAMS,MACvC,CACAH,iBAAAA,GACI,OAAOtgB,KAAKf,UAAUqhB,mBAC1B,CACAD,kBAAAA,GACIrgB,KAAKf,UAAUohB,oBACnB,CACA,6BAAIE,GACA,OAAOvgB,KAAKf,UAAUshB,yBAC1B,CAIAiD,cAAAA,CAAehW,EAAMjK,GACjB,OAAOvD,KAAKf,UAAUukB,eAAehW,EAAMjK,EAC/C,ECrqBG,MAAMkgB,WAAoBhe,EAC7B9F,WAAAA,CAAY+Z,GACR3Z,QACAC,KAAK0Z,GAAKA,EACV1Z,KAAK0jB,eAAiB,IAAIxd,EAC1BlG,KAAK2jB,wBAA0B,IAAIzd,EACnClG,KAAK4jB,aAAe,IAAI5gB,EACxBhD,KAAK6jB,YAAc7jB,KAAK4jB,aAAalgB,MACrC1D,KAAK8F,eAAe9F,KAAK4jB,aAAc5jB,KAAK0jB,eAAgB1jB,KAAK2jB,yBACjE3jB,KAAK8jB,WACT,CACAC,WAAAA,CAAYpgB,GACR,OAAO,CACX,CACAmgB,SAAAA,GACI9jB,KAAK8F,eAAe9F,KAAK4jB,aAAcjf,EAAsB3E,KAAK0Z,GAAI,aAAchW,IAChF,GAAIA,EAAMxB,kBAAoBlC,KAAK+jB,YAAYrgB,GAE3C,YADAA,EAAMvB,iBAGV,MAAM8Q,EAAU,IACTpL,EAAqB,aACrBA,EAAqB,YAE5B7H,KAAK2jB,wBAAwBlhB,MAAQ,CACjCZ,QAASA,KACL,IAAK,MAAMqR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAGR,IAAK,MAAMkH,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAMjC,GAJAhM,KAAK0Z,GAAGxS,UAAUjD,IAAI,cACtBoB,YAAW,IAAMrF,KAAK0Z,GAAGxS,UAAUE,OAAO,eAAe,GACzDpH,KAAK0jB,eAAejhB,MAAQzC,KAAKW,QAAQ+C,GACzC1D,KAAK4jB,aAAa1f,KAAKR,GACnBA,EAAMsgB,aAAc,CACpBtgB,EAAMsgB,aAAaC,cAAgB,OACnBvgB,EAAMsgB,aAAatmB,MAAM6D,OAAS,GAW9CmC,EAAMsgB,aAAapjB,QAAQ,aAAc,mCAEjD,KACA+D,EAAsB3E,KAAK0Z,GAAI,WAAW,KAC1C1Z,KAAK2jB,wBAAwB9hB,UAC7B7B,KAAK0jB,eAAe7hB,SAAS,IAErC,EC3DG,MAAMqiB,WAA4Bze,EACrC9F,WAAAA,CAAY4E,EAAS4f,GACjBpkB,QACAC,KAAKuE,QAAUA,EACfvE,KAAKmkB,UAAYA,EACjBnkB,KAAKokB,OAAS,KACdpkB,KAAKqkB,mBACT,CACAC,WAAAA,CAAYngB,GACRnE,KAAKokB,OAASjgB,EAAEigB,OAChBpkB,KAAKmkB,UAAUG,YAAYngB,EAC/B,CACAogB,UAAAA,CAAWpgB,GACPA,EAAEhC,iBACEnC,KAAKmkB,UAAUI,YACfvkB,KAAKmkB,UAAUI,WAAWpgB,EAElC,CACAqgB,WAAAA,CAAYrgB,GACJnE,KAAKokB,SAAWjgB,EAAEigB,SAClBpkB,KAAKokB,OAAS,KACdpkB,KAAKmkB,UAAUK,YAAYrgB,GAEnC,CACAsgB,SAAAA,CAAUtgB,GACNnE,KAAKokB,OAAS,KACdpkB,KAAKmkB,UAAUM,UAAUtgB,EAC7B,CACAugB,MAAAA,CAAOvgB,GACHnE,KAAKmkB,UAAUO,OAAOvgB,EAC1B,CACAkgB,iBAAAA,GACIrkB,KAAK8F,eAAenB,EAAsB3E,KAAKuE,QAAS,aAAcJ,IAClEnE,KAAKskB,YAAYngB,EAAE,IACpB,IACHnE,KAAK8F,eAAenB,EAAsB3E,KAAKuE,QAAS,YAAaJ,IACjEnE,KAAKukB,WAAWpgB,EAAE,IACnB,IACHnE,KAAK8F,eAAenB,EAAsB3E,KAAKuE,QAAS,aAAcJ,IAClEnE,KAAKwkB,YAAYrgB,EAAE,KAEvBnE,KAAK8F,eAAenB,EAAsB3E,KAAKuE,QAAS,WAAYJ,IAChEnE,KAAKykB,UAAUtgB,EAAE,KAErBnE,KAAK8F,eAAenB,EAAsB3E,KAAKuE,QAAS,QAASJ,IAC7DnE,KAAK0kB,OAAOvgB,EAAE,IAEtB,EC5CG,MAAMwgB,WAA6B3iB,EACtC,eAAI4iB,GACA,OAAO5kB,KAAKuD,QAAQqhB,WACxB,CACA,YAAInP,GACA,OAAOzV,KAAKuD,QAAQkS,QACxB,CACA9V,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,CACnB,EAEG,SAASshB,GAAoB3K,GAChC,OAAQA,GACJ,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI3X,MAAO,sBAAqB2X,MAElD,CACO,SAAS4K,GAAoBrP,GAChC,OAAQA,GACJ,IAAK,MACD,MAAO,QACX,IAAK,SACD,MAAO,QACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAIlT,MAAO,qBAAoBkT,MAEjD,CACA,MAAMsP,GAA0B,CAC5BtiB,MAAO,GACP+B,KAAM,cAEJwgB,GAAe,CACjBviB,MAAO,GACP+B,KAAM,cAIH,MAAMygB,WAAmBxf,EAC5B,SAAIwQ,GACA,OAAOjW,KAAKklB,MAChB,CACAvlB,WAAAA,CAAY4E,EAAShB,GACjBxD,QACAC,KAAKuE,QAAUA,EACfvE,KAAKuD,QAAUA,EACfvD,KAAKmlB,QAAU,IAAIniB,EACnBhD,KAAK0kB,OAAS1kB,KAAKmlB,QAAQzhB,MAC3B1D,KAAKolB,mBAAqB,IAAIpiB,EAC9BhD,KAAK6iB,kBAAoB7iB,KAAKolB,mBAAmB1hB,MAEjD1D,KAAKqlB,wBAA0B,IAAIC,IAAItlB,KAAKuD,QAAQgiB,qBACpDvlB,KAAKwlB,IAAM,IAAItB,GAAoBlkB,KAAKuE,QAAS,CAC7C+f,YAAaA,KAAe,EAC5BC,WAAapgB,IACT,GAA0C,IAAtCnE,KAAKqlB,wBAAwBvgB,KAE7B,YADA9E,KAAKylB,mBAGT,MAAMnc,EAAQtJ,KAAKuE,QAAQmhB,YACrBnc,EAASvJ,KAAKuE,QAAQohB,aAC5B,GAAc,IAAVrc,GAA0B,IAAXC,EACf,OAEJ,MAAMqc,EAAOzhB,EAAE0hB,cAAcrc,wBACvB2F,EAAIhL,EAAEiP,QAAUwS,EAAKxc,KACrB0c,EAAI3hB,EAAEkP,QAAUuS,EAAKvc,IACrB0c,EAAW/lB,KAAKgmB,kBAAkBhmB,KAAKqlB,wBAAyBlW,EAAG2W,EAAGxc,EAAOC,GAMnF,GAAIvJ,KAAKimB,cAAc9hB,IAAmB,OAAb4hB,EAGzB,YADA/lB,KAAKylB,mBAGT,IAAKzlB,KAAKuD,QAAQ2iB,kBAAkB/hB,EAAG4hB,GAEnC,YADA/lB,KAAKylB,mBAGT,MAAMU,EAAuB,IAAIxB,GAAqB,CAClDC,YAAazgB,EACbsR,SAAUsQ,IAMd/lB,KAAKolB,mBAAmBlhB,KAAKiiB,GACzBA,EAAqBjkB,iBACrBlC,KAAKylB,oBAGTzlB,KAAKomB,WAAWjiB,GACXnE,KAAKqmB,gBACNrmB,KAAKqmB,cAAgBre,SAAS0K,cAAc,OAC5C1S,KAAKqmB,cAAcpoB,UAAY,uBAC/B+B,KAAKsmB,eAAiBte,SAAS0K,cAAc,OAC7C1S,KAAKsmB,eAAeroB,UAAY,wBAChC+B,KAAKklB,OAAS,SACdllB,KAAKqmB,cAActV,YAAY/Q,KAAKsmB,gBACpCtmB,KAAKuE,QAAQ2C,UAAUjD,IAAI,eAC3BjE,KAAKuE,QAAQgiB,OAAOvmB,KAAKqmB,gBAE7BrmB,KAAKwmB,cAAcT,EAAUzc,EAAOC,GACpCvJ,KAAKklB,OAASa,EAAQ,EAE1BvB,YAAaA,KACTxkB,KAAKylB,kBAAkB,EAE3BhB,UAAWA,KACPzkB,KAAKylB,kBAAkB,EAE3Bf,OAASvgB,IACLA,EAAEhC,iBACF,MAAM8T,EAAQjW,KAAKklB,OACnBllB,KAAKylB,mBACDxP,IAGA9R,EAAEsiB,kBACFzmB,KAAKmlB,QAAQjhB,KAAK,CAAEuR,SAAUQ,EAAO2O,YAAazgB,IACtD,IAGRnE,KAAK8F,eAAe9F,KAAKmlB,QAASnlB,KAAKolB,mBAAoBplB,KAAKwlB,IACpE,CACAkB,cAAAA,CAAenB,GACXvlB,KAAKqlB,wBAA0B,IAAIC,IAAIC,EAC3C,CACAoB,eAAAA,CAAgBC,GACZ5mB,KAAKuD,QAAQsjB,aAAeD,CAChC,CACA/kB,OAAAA,GACI7B,KAAKylB,mBACL1lB,MAAM8B,SACV,CAIAukB,UAAAA,CAAW1iB,GACPA,EAAMuhB,GAAW6B,gBAAiB,CACtC,CAIAb,aAAAA,CAAcviB,GACV,MAAMjB,EAAQiB,EAAMuhB,GAAW6B,eAC/B,MAAwB,kBAAVrkB,GAAuBA,CACzC,CACA+jB,aAAAA,CAAcT,EAAUzc,EAAOC,GAC3B,IAAIjH,EAAIykB,EACR,IAAK/mB,KAAKsmB,eACN,OAEJ,MAAMU,EAAW1d,EAzHI,IA0Hf2d,EAAW1d,EAzHK,IA0HhB2d,EAAsB,SAAbnB,EACToB,EAAuB,UAAbpB,EACVqB,EAAqB,QAAbrB,EACRsB,EAAwB,WAAbtB,EACXuB,GAAcN,GAAYG,EAC1BI,GAAaP,GAAYE,EACzBM,GAAYP,GAAYG,EACxBK,GAAeR,GAAYI,EACjC,IAAIviB,EAAO,EACX,MAAM4iB,EAAuG,QAAxFX,EAA0C,QAApCzkB,EAAKtC,KAAKuD,QAAQsjB,oBAAiC,IAAPvkB,OAAgB,EAASA,EAAGwC,YAAyB,IAAPiiB,EAAgBA,EAAK/B,GACjH,eAArB0C,EAAYljB,KACZM,EAAOyF,EAAMmd,EAAYjlB,MAAO,EAAG,KAAO,MAGtC6kB,GAAcC,KACdziB,EAAOyF,EAAM,EAAGmd,EAAYjlB,MAAO6G,GAASA,IAE5Cke,GAAYC,KACZ3iB,EAAOyF,EAAM,EAAGmd,EAAYjlB,MAAO8G,GAAUA,IAGrD,MAAMkR,EAAM,CAAEpR,IAAK,MAAOD,KAAM,MAAOE,MAAO,OAAQC,OAAQ,QAoB1D+d,GACA7M,EAAIrR,KAAU,KAAO,EAAItE,GAAb,IACZ2V,EAAInR,MAAW,IAAMxE,EAAR,KAERyiB,EACL9M,EAAInR,MAAW,IAAMxE,EAAR,IAER0iB,EACL/M,EAAIlR,OAAY,IAAMzE,EAAR,IAET2iB,IACLhN,EAAIpR,IAAS,KAAO,EAAIvE,GAAb,IACX2V,EAAIlR,OAAY,IAAMzE,EAAR,KAElB9E,KAAKsmB,eAAeva,MAAM1C,IAAMoR,EAAIpR,IACpCrJ,KAAKsmB,eAAeva,MAAM3C,KAAOqR,EAAIrR,KACrCpJ,KAAKsmB,eAAeva,MAAMzC,MAAQmR,EAAInR,MACtCtJ,KAAKsmB,eAAeva,MAAMxC,OAASkR,EAAIlR,OACvCjC,EAAYtH,KAAKsmB,eAAgB,gCAAiCW,GAClE3f,EAAYtH,KAAKsmB,eAAgB,kCAAmCU,GACpE1f,EAAYtH,KAAKsmB,eAAgB,sBAAuBY,GACxD5f,EAAYtH,KAAKsmB,eAAgB,uBAAwBa,GACzD7f,EAAYtH,KAAKsmB,eAAgB,qBAAsBc,GACvD9f,EAAYtH,KAAKsmB,eAAgB,wBAAyBe,GAC1D/f,EAAYtH,KAAKsmB,eAAgB,wBAAsC,WAAbP,EAC9D,CACAC,iBAAAA,CAAkB2B,EAAaxY,EAAG2W,EAAGxc,EAAOC,GACxC,IAAIjH,EAAIykB,EACR,MAAMa,EAA2H,QAAlGb,EAA0C,QAApCzkB,EAAKtC,KAAKuD,QAAQsjB,oBAAiC,IAAPvkB,OAAgB,EAASA,EAAGulB,sBAAmC,IAAPd,EAAgBA,EAAKhC,GAE9J,MADoD,eAA/B6C,EAAsBpjB,KAiB5C,SAAuCmjB,EAAaxY,EAAG2W,EAAGxc,EAAOC,EAAQue,GAC5E,MAAMC,EAAM,IAAM5Y,EAAK7F,EACjB0e,EAAM,IAAMlC,EAAKvc,EACvB,GAAIoe,EAAYhH,IAAI,SAAWoH,EAAKD,EAChC,MAAO,OAEX,GAAIH,EAAYhH,IAAI,UAAYoH,EAAK,IAAMD,EACvC,MAAO,QAEX,GAAIH,EAAYhH,IAAI,QAAUqH,EAAKF,EAC/B,MAAO,MAEX,GAAIH,EAAYhH,IAAI,WAAaqH,EAAK,IAAMF,EACxC,MAAO,SAEX,IAAKH,EAAYhH,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlCmBsH,CAA8BN,EAAaxY,EAAG2W,EAAGxc,EAAOC,EAAQqe,EAAsBnlB,OAmClG,SAAmCklB,EAAaxY,EAAG2W,EAAGxc,EAAOC,EAAQue,GACxE,GAAIH,EAAYhH,IAAI,SAAWxR,EAAI2Y,EAC/B,MAAO,OAEX,GAAIH,EAAYhH,IAAI,UAAYxR,EAAI7F,EAAQwe,EACxC,MAAO,QAEX,GAAIH,EAAYhH,IAAI,QAAUmF,EAAIgC,EAC9B,MAAO,MAEX,GAAIH,EAAYhH,IAAI,WAAamF,EAAIvc,EAASue,EAC1C,MAAO,SAEX,IAAKH,EAAYhH,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlDeuH,CAA0BP,EAAaxY,EAAG2W,EAAGxc,EAAOC,EAAQqe,EAAsBnlB,MAC7F,CACAgjB,gBAAAA,GACQzlB,KAAKqmB,gBACLrmB,KAAKklB,YAASzkB,EACdT,KAAKuE,QAAQsO,YAAY7S,KAAKqmB,eAC9BrmB,KAAKqmB,mBAAgB5lB,EACrBT,KAAKsmB,oBAAiB7lB,EACtBT,KAAKuE,QAAQ2C,UAAUE,OAAO,eAEtC,EAEJ6d,GAAW6B,cAAgB,wCCxQpB,MAAMqB,WAAuBnmB,EAChCrC,WAAAA,GACII,OACJ,EAKG,MAAMqoB,WAAqB3iB,EAC9B,aAAI4iB,GACA,OAAOroB,KAAKsoB,UAChB,CACA,YAAIC,GACA,OAAOvoB,KAAKwoB,SAChB,CACA,aAAIvI,GACA,OAAOjgB,KAAKyoB,UAChB,CACA,SAAInf,GACA,OAAOtJ,KAAK0oB,MAChB,CACA,UAAInf,GACA,OAAOvJ,KAAK2oB,OAChB,CACAhpB,WAAAA,CAAYhB,EAAIM,GACZc,QACAC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKsoB,YAAa,EAClBtoB,KAAKwoB,WAAY,EACjBxoB,KAAKyoB,YAAa,EAClBzoB,KAAK0oB,OAAS,EACd1oB,KAAK2oB,QAAU,EACf3oB,KAAK4oB,YAAc,CAAC,EACpB5oB,KAAK6oB,uBAAyB,IAAI3iB,EAClClG,KAAK8oB,sBAAwB,IAAI9lB,EACjChD,KAAK+oB,sBAAwB/oB,KAAK8oB,sBAAsBplB,MACxD1D,KAAKgpB,kBAAoB,IAAIhmB,EAC7BhD,KAAKipB,iBAAmBjpB,KAAKgpB,kBAAkBtlB,MAE/C1D,KAAKkpB,aAAe,IAAIlmB,EACxBhD,KAAKmpB,YAAcnpB,KAAKkpB,aAAaxlB,MAErC1D,KAAKgY,uBAAyB,IAAIhV,EAClChD,KAAKiY,sBAAwBjY,KAAKgY,uBAAuBtU,MACzD1D,KAAKopB,wBAA0B,IAAIpmB,EACnChD,KAAKqpB,uBAAyBrpB,KAAKopB,wBAAwB1lB,MAC3D1D,KAAK6f,mBAAqB,IAAI7c,EAC9BhD,KAAK8f,kBAAoB9f,KAAK6f,mBAAmBnc,MACjD1D,KAAKspB,gBAAkB,IAAItmB,EAC3BhD,KAAKupB,eAAiBvpB,KAAKspB,gBAAgB5lB,MAC3C1D,KAAKwpB,uBAAyB,IAAIxmB,EAClChD,KAAKypB,sBAAwBzpB,KAAKwpB,uBAAuB9lB,MACzD1D,KAAK8F,eAAe9F,KAAKipB,kBAAkBvlB,IACvC1D,KAAKsoB,WAAa5kB,EAAM2kB,SAAS,IACjCroB,KAAK8f,mBAAmBpc,IACxB1D,KAAKwoB,UAAY9kB,EAAM6kB,QAAQ,IAC/BvoB,KAAKiY,uBAAuBvU,IAC5B1D,KAAKyoB,WAAa/kB,EAAMuc,SAAS,IACjCjgB,KAAK+oB,uBAAuBrlB,IAC5B1D,KAAK0oB,OAAShlB,EAAM4F,MACpBtJ,KAAK2oB,QAAUjlB,EAAM6F,MAAM,IAC3BvJ,KAAK6oB,uBAAwB7oB,KAAK8oB,sBAAuB9oB,KAAKgpB,kBAAmBhpB,KAAKgY,uBAAwBhY,KAAK6f,mBAAoB7f,KAAKkpB,aAAclpB,KAAKspB,gBAAiBtpB,KAAKkpB,aAAclpB,KAAKopB,wBAAyBppB,KAAKwpB,uBAC9O,CACAE,aAAAA,GACI,OAAO1pB,KAAK4oB,WAChB,CACAe,UAAAA,CAAW3J,GACPhgB,KAAK6oB,uBAAuBpmB,MAAQzC,KAAKwpB,uBAAuB9lB,OAAOkmB,IACnE5pB,KAAK4oB,YAAcgB,EACnB5J,EAAM6J,OAAO,CACTC,OAAQF,GACV,GAEV,CACA3d,UAAAA,CAAWgU,GACPjgB,KAAKopB,wBAAwBllB,KAAK,CAAE+b,aACxC,CACAc,SAAAA,GACI/gB,KAAKspB,gBAAgBplB,MACzB,CACA6lB,gBAAAA,CAAiBH,GACb5pB,KAAKwpB,uBAAuBtlB,KAAK0lB,EACrC,ECnFG,MAAMI,WAA8B5B,GAEvCzoB,WAAAA,CAAYhB,EAAIM,GACZc,MAAMpB,EAAIM,GACVe,KAAKiqB,gCAAkC,IAAIjnB,EAC3ChD,KAAKkqB,+BAAiClqB,KAAKiqB,gCAAgCvmB,MAE3E1D,KAAKmqB,wBAA0B,IAAInnB,EAAQ,CACvCY,QAAQ,IAEZ5D,KAAKoqB,uBAAyBpqB,KAAKmqB,wBAAwBzmB,MAE3D1D,KAAKqqB,iBAAmB,IAAIrnB,EAC5BhD,KAAKsqB,gBAAkBtqB,KAAKqqB,iBAAiB3mB,MAC7C1D,KAAK8F,eAAe9F,KAAKiqB,gCAAiCjqB,KAAKmqB,wBAAyBnqB,KAAKqqB,iBACjG,CACAE,cAAAA,CAAe9nB,GACXzC,KAAKiqB,gCAAgC/lB,KAAKzB,EAC9C,CACA+nB,OAAAA,CAAQ9mB,GACJ1D,KAAKqqB,iBAAiBnmB,KAAKR,EAC/B,ECrBG,MAAM+mB,WAA6BT,GACtC,QAAIvT,CAAKA,GACLzW,KAAK0qB,MAAQjU,CACjB,CACA9W,WAAAA,CAAYhB,EAAIM,GACZc,MAAMpB,EAAIM,GACVe,KAAK2qB,sBAAwB,IAAI3nB,EAAQ,CACrCY,QAAQ,IAEZ5D,KAAK4qB,qBAAuB5qB,KAAK2qB,sBAAsBjnB,MACvD1D,KAAK6qB,cAAgB,IAAI7nB,EAAQ,CAAC,GAClChD,KAAK8qB,aAAe9qB,KAAK6qB,cAAcnnB,MACvC1D,KAAK+qB,cAAgB,IAAI/nB,EAAQ,CAAC,GAClChD,KAAKgrB,aAAehrB,KAAK+qB,cAAcrnB,MACvC1D,KAAK8F,eAAe9F,KAAK2qB,sBAAuB3qB,KAAK6qB,cAAe7qB,KAAK+qB,cAC7E,CACAE,WAAAA,CAAYC,GACR,IAAI5oB,EACkB,QAArBA,EAAKtC,KAAK0qB,aAA0B,IAAPpoB,GAAyBA,EAAG2oB,YAAYC,EAC1E,CACA,cAAIA,GACA,IAAI5oB,EACJ,SAAgC,QAArBA,EAAKtC,KAAK0qB,aAA0B,IAAPpoB,OAAgB,EAASA,EAAG4oB,aACxE,ECtBG,MAAMC,WAAsB1lB,EAC/B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACA,SAAI5U,GACA,OAAOtJ,KAAK0oB,MAChB,CACA,UAAInf,GACA,OAAOvJ,KAAK2oB,OAChB,CACA,UAAImB,GACA,IAAIxnB,EACJ,OAA+B,QAAvBA,EAAKtC,KAAKorB,eAA4B,IAAP9oB,OAAgB,EAASA,EAAGwnB,MACvE,CACAnqB,WAAAA,CAAYhB,EAAIM,EAAWgjB,GACvBliB,QACAC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKiiB,IAAMA,EACXjiB,KAAK2oB,QAAU,EACf3oB,KAAK0oB,OAAS,EACd1oB,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASmN,UAAY,EAC1BrrB,KAAKke,SAASnS,MAAMuf,QAAU,OAC9BtrB,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,OAC5BtJ,KAAKke,SAASnS,MAAMwf,SAAW,SAC/B,MAAMC,EAAevjB,EAAWjI,KAAKke,UACrCle,KAAK8F,eAAe9F,KAAKiiB,IAAKuJ,EAAapjB,YAAW,KAClDpI,KAAKiiB,IAAI+G,kBAAkB9kB,KAAK,CAAEmkB,WAAW,GAAO,IACpDmD,EAAaljB,WAAU,KACvBtI,KAAKiiB,IAAI+G,kBAAkB9kB,KAAK,CAAEmkB,WAAW,GAAQ,IACrDmD,EACR,CACA/J,KAAAA,GACI,MAAM/d,EAAQ,IAAIykB,GAClBnoB,KAAKiiB,IAAIiH,aAAahlB,KAAKR,GACvBA,EAAMxB,kBAGVlC,KAAKke,SAASuD,OAClB,CACAhN,MAAAA,CAAOnL,EAAOC,GACVvJ,KAAK0oB,OAASpf,EACdtJ,KAAK2oB,QAAUpf,EACfvJ,KAAKiiB,IAAI6G,sBAAsB5kB,KAAK,CAAEoF,QAAOC,WACzCvJ,KAAKyrB,MACDzrB,KAAKorB,SACLprB,KAAKyrB,KAAK5B,OAAO7pB,KAAKorB,QAAQtB,OAG1C,CACA4B,IAAAA,CAAK9B,GACD5pB,KAAKorB,QAAUxB,EACf5pB,KAAKyrB,KAAOzrB,KAAK2rB,cACrB,CACA9B,MAAAA,CAAOnmB,GACH,IAAIpB,EAAIykB,EAER/mB,KAAKorB,QAAUrJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAKorB,SAAU,CAAEtB,OAAQ/H,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA2B,QAAvB1f,EAAKtC,KAAKorB,eAA4B,IAAP9oB,OAAgB,EAASA,EAAGwnB,QAASpmB,EAAMomB,UAKnL,IAAK,MAAM8B,KAAO7J,OAAO8J,KAAKnoB,EAAMomB,aACNrpB,IAAtBiD,EAAMomB,OAAO8B,WACN5rB,KAAKorB,QAAQtB,OAAO8B,GAId,QAApB7E,EAAK/mB,KAAKyrB,YAAyB,IAAP1E,GAAyBA,EAAG8C,OAAO,CAAEC,OAAQ9pB,KAAKorB,QAAQtB,QAC3F,CACAnP,MAAAA,GACI,IAAIrY,EAAIykB,EACR,MAAM+C,EAAuF,QAA7E/C,EAA6B,QAAvBzkB,EAAKtC,KAAKorB,eAA4B,IAAP9oB,OAAgB,EAASA,EAAGwnB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EAC3H,MAAO,CACHpoB,GAAIqB,KAAKrB,GACTM,UAAWe,KAAKf,UAChB6qB,OAAQ/H,OAAO8J,KAAK/B,GAAQvoB,OAAS,EAAIuoB,OAASrpB,EAE1D,CACAoB,OAAAA,GACI,IAAIS,EACJtC,KAAKiiB,IAAIpgB,UACY,QAApBS,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGT,UACzD9B,MAAM8B,SACV,ECpFG,MAAMiqB,WAAsBX,GAC/B,eAAIje,CAAYzK,GACZzC,KAAKmN,aAAe1K,CACxB,CACA,eAAIyK,GACA,OAAOlN,KAAKmN,YAChB,CACA,eAAI7B,GAIA,OAHmBtL,KAAK+rB,YACP/rB,KAAKkrB,aACalrB,KAAKgsB,iBAAmB,EAE/D,CACA,eAAIvgB,GAIA,OAHmBzL,KAAK+rB,YACP/rB,KAAKkrB,aACalrB,KAAKisB,iBAAmB,EAE/D,CACA,QAAInnB,GACA,OAAO9E,KAAKkL,KAChB,CACA,kBAAI2B,GACA,OAAO7M,KAAK8M,eAChB,CACA,kBAAID,CAAe/H,GACf9E,KAAK8M,gBAAkBhI,CAC3B,CACA,mBAAIonB,GACA,OAAOlsB,KAAKgsB,gBAChB,CACA,mBAAIE,CAAgBzpB,GAChBzC,KAAKgsB,iBAAoC,iBAAVvpB,EAAqBA,EAAQ,CAChE,CACA,mBAAI0pB,GACA,OAAOnsB,KAAKisB,gBAChB,CACA,mBAAIE,CAAgB1pB,GAChBzC,KAAKisB,iBACgB,iBAAVxpB,EAAqBA,EAAQgL,OAAOC,iBACnD,CACA,iBAAI0e,GACA,OAAOpsB,KAAKqsB,cAChB,CACA,iBAAID,CAAc3pB,GACdzC,KAAKqsB,eAAiB5pB,EACtBzC,KAAKssB,OAAOvgB,MAAMwgB,QAAU9pB,EAAQ,GAAK,MAC7C,CACA9C,WAAAA,CAAYhB,EAAIM,EAAWutB,EAAiBtf,EAAage,EAAYuB,GACjE1sB,MAAMpB,EAAIM,EAAW,IAAIwrB,GAAqB9rB,EAAIM,IAClDe,KAAKwsB,gBAAkBA,EACvBxsB,KAAK0sB,2BAA6B,IAAI1pB,EAAQ,CAAEY,QAAQ,IACxD5D,KAAK0W,0BAA4B1W,KAAK0sB,2BAA2BhpB,MACjE1D,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAK+rB,WAAa,GAClB/rB,KAAK8M,gBAAkB,EACvB9M,KAAKkL,MAAQ,EACblL,KAAKgsB,iBAAmB,IACxBhsB,KAAKisB,iBAAmBxe,OAAOC,kBAC/B1N,KAAK2sB,aAAc,EACnB3sB,KAAK4sB,aAAe,EACpB5sB,KAAKiiB,IAAIxL,KAAOzW,KAChBA,KAAKiiB,IAAI0H,WAAW3pB,MACpBA,KAAK2sB,YAAczB,EACnBlrB,KAAKqsB,eAAiBI,EACtBzsB,KAAK0sB,2BAA2BxoB,KAAKlE,KAAKkrB,cAC1ClrB,KAAKmN,aAAeD,EACpBlN,KAAKuE,QAAQ2C,UAAUjD,IAAI,QAC3BjE,KAAK8F,eAAe9F,KAAKiiB,IAAIoH,wBAAwB3lB,IACjD,MAAM,UAAEuc,GAAcvc,GAChB,SAAEmpB,GAAa7sB,KAAKorB,QAC1ByB,EAAS5gB,WAAWjM,KAAMigB,EAAU,IACpCjgB,KAAKiiB,IAAIqI,iBAAiB5mB,IAC1B1D,KAAKuW,aAAarS,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAC5CH,EAAsB3E,KAAKuE,QAAS,cAAeuoB,IACnD9sB,KAAKiiB,IAAI4I,cAAc3mB,KAAK4oB,EAAG,IAC/BnoB,EAAsB3E,KAAKuE,QAAS,cAAeuoB,IACnD9sB,KAAKiiB,IAAI8I,cAAc7mB,KAAK4oB,EAAG,KAEnC9sB,KAAK8F,eAAe9F,KAAK0sB,2BAA4B1sB,KAAK0W,2BAA2BqW,IACjF/sB,KAAKiiB,IAAI0I,sBAAsBzmB,KAAK,CAChCgnB,WAAY6B,GACd,IACF/sB,KAAKiiB,IAAIgH,kBAAkB9kB,IACtBnE,KAAKssB,SAGNnoB,EAAEkkB,UACFhhB,EAAWrH,KAAKssB,OAAQ,WAGxBvlB,EAAc/G,KAAKssB,OAAQ,WAC/B,KAEJtsB,KAAKgtB,YACT,CACA/gB,UAAAA,CAAWgU,GACPjgB,KAAKiiB,IAAIjK,uBAAuB9T,KAAK,CAAE+b,aAC3C,CACAc,SAAAA,CAAUwH,GACNvoB,KAAKiiB,IAAIpC,mBAAmB3b,KAAK,CAAEqkB,YACvC,CACA2C,UAAAA,GACI,OAAOlrB,KAAK2sB,WAChB,CACA1B,WAAAA,CAAYgC,GACJjtB,KAAK2sB,cAAgBM,IAGzBjtB,KAAK2sB,YAAcM,EACfA,GACIjtB,KAAKgX,gBACL5R,aAAapF,KAAKgX,gBAElBhX,KAAKktB,MACLltB,KAAKuE,QAAQwM,YAAY/Q,KAAKktB,OAIlCltB,KAAKgX,eAAiB3R,YAAW,KAC7B,IAAI/C,EACiB,QAApBA,EAAKtC,KAAKktB,YAAyB,IAAP5qB,GAAyBA,EAAG8E,QAAQ,GAClE,KAEPpH,KAAKuW,aAAarS,KAAK+oB,EAAW,CAAEnoB,KAAM9E,KAAKsJ,OAAU,CAAC,GAC1DtJ,KAAK0sB,2BAA2BxoB,KAAK+oB,GACzC,CACAxY,MAAAA,CAAO3P,EAAM+H,GACT7M,KAAKkL,MAAQpG,EACb9E,KAAK8M,gBAAkBD,EACvB,MAAOvD,EAAOC,GAAUvJ,KAAKkN,cAAgBf,EAAYkB,WACnD,CAACvI,EAAM+H,GACP,CAACA,EAAgB/H,GACnB9E,KAAKkrB,eACLlrB,KAAK4sB,aAAetjB,GAExBvJ,MAAM0U,OAAOnL,EAAOC,EACxB,CACAmiB,IAAAA,CAAK9B,GACD,IAAItnB,EAAIykB,EACRhnB,MAAM2rB,KAAK9B,GAC+B,iBAA/BA,EAAWsC,kBAClBlsB,KAAKksB,gBAAkBtC,EAAWsC,iBAEI,iBAA/BtC,EAAWuC,kBAClBnsB,KAAKmsB,gBAAkBvC,EAAWuC,iBAEtCnsB,KAAKmtB,SAAWntB,KAAKotB,mBACrBptB,KAAKqtB,WAAartB,KAAKstB,qBACvBttB,KAAKmtB,SAASzB,KAAK3J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4H,GAAa,CAAE3H,IAAKjiB,KAAKiiB,OAC5EjiB,KAAKqtB,WAAW3B,KAAK3J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4H,GAAa,CAAE3H,IAAKjiB,KAAKiiB,OACzD,QAApB3f,EAAKtC,KAAKktB,YAAyB,IAAP5qB,GAAyBA,EAAGikB,OAAOvmB,KAAKmtB,SAAS5oB,SACvD,QAAtBwiB,EAAK/mB,KAAKssB,cAA2B,IAAPvF,GAAyBA,EAAGR,OAAOvmB,KAAKqtB,WAAW9oB,SAC7C,kBAA1BqlB,EAAWsB,YAClBlrB,KAAKirB,YAAYrB,EAAWsB,WAEpC,CACAvQ,MAAAA,GACI,MAAMmP,EAAS9pB,KAAKorB,QACpB,OAAOrJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGjiB,MAAM4a,UAAW,CAAE6R,gBAAiBxsB,KAAKwsB,gBAAiB7vB,MAAOmtB,EAAOntB,OACnH,CACAqwB,UAAAA,GACIhtB,KAAKssB,OAAStkB,SAAS0K,cAAc,OACrC1S,KAAKssB,OAAOjB,SAAW,EACvBrrB,KAAKssB,OAAOruB,UAAY,cACxB+B,KAAKssB,OAAOvgB,MAAMxC,OAAU,GAAEvJ,KAAK+rB,eACnC/rB,KAAKssB,OAAOvgB,MAAMwhB,WAAc,GAAEvtB,KAAK+rB,eACvC/rB,KAAKssB,OAAOvgB,MAAMyhB,UAAa,GAAExtB,KAAK+rB,eACtC/rB,KAAKssB,OAAOvgB,MAAM0hB,UAAa,GAAEztB,KAAK+rB,eACtC/rB,KAAKuE,QAAQwM,YAAY/Q,KAAKssB,QAC9BtsB,KAAKktB,KAAOllB,SAAS0K,cAAc,OACnC1S,KAAKktB,KAAKjvB,UAAY,YACtB+B,KAAKuE,QAAQwM,YAAY/Q,KAAKktB,KAClC,CAEAvB,YAAAA,GACI,MAAO,CACH9B,OAASC,IACL,IAAIxnB,EAAIykB,EACiB,QAAxBzkB,EAAKtC,KAAKmtB,gBAA6B,IAAP7qB,GAAyBA,EAAGunB,OAAO,CAAEC,WAC3C,QAA1B/C,EAAK/mB,KAAKqtB,kBAA+B,IAAPtG,GAAyBA,EAAG8C,OAAO,CAAEC,UAAS,EAErFjoB,QAASA,KACL,IAAIS,EAAIykB,EACiB,QAAxBzkB,EAAKtC,KAAKmtB,gBAA6B,IAAP7qB,GAAyBA,EAAGT,UAClC,QAA1BklB,EAAK/mB,KAAKqtB,kBAA+B,IAAPtG,GAAyBA,EAAGllB,SAAS,EAGpF,EC5LG,MAAM6rB,WAA+B5B,GACxCnsB,WAAAA,CAAYktB,EAAUluB,EAAIM,EAAWutB,EAAiBtf,EAAage,EAAYyC,GAC3E5tB,MAAMpB,EAAIM,EAAWutB,EAAiBtf,EAAage,GAAY,GAC/DlrB,KAAK6sB,SAAWA,EAChB7sB,KAAK4tB,WAAa,IAAI5qB,EACtBhD,KAAK6hB,UAAY7hB,KAAK4tB,WAAWlqB,MAC5BiqB,GACD3tB,KAAK6tB,kBAEb,CACAA,gBAAAA,GACI,IAAK7tB,KAAKssB,OACN,OAEJ,MAAM3tB,EAAKqB,KAAKrB,GACVmvB,EAAa9tB,KAAK6sB,SAASluB,GACjCqB,KAAKssB,OAAOyB,WAAY,EACxB/tB,KAAKguB,QAAU,IAAK,cAA8BvK,GAC9C9iB,OAAAA,GAEI,OADAR,EAAuBC,cAAcQ,QAAQ,CAAC,IAAIX,EAAa6tB,EAAYnvB,IAAMsB,EAAac,WACvF,CACHc,QAASA,KACL1B,EAAuBC,cAAcI,UAAUP,EAAac,UAAU,EAGlF,GACDf,KAAKssB,QACRtsB,KAAKokB,OAAS,IAAIa,GAAWjlB,KAAKuE,QAAS,CACvCghB,oBAAqB,CAAC,MAAO,UAC7BsB,aAAc,CACVgB,eAAgB,CAAErjB,KAAM,aAAc/B,MAAO,KAEjDyjB,kBAAoBxiB,IAChB,MAAMhD,EAAOM,IACb,SAAIN,GACIA,EAAKR,SAAWF,KAAKrB,IACrB+B,EAAKd,SAAWI,KAAK6sB,SAASluB,OAIlCqB,KAAK6sB,SAAStpB,QAAQ0qB,gBACfjuB,KAAK6sB,SAAStpB,QAAQ0qB,eAAe,CACxCrJ,YAAalhB,EACb/C,QAASK,EACTgf,MAAOhgB,MAGH,IAGpBA,KAAK8F,eAAe9F,KAAK4tB,WAAY5tB,KAAKguB,QAAShuB,KAAKokB,OAAQpkB,KAAKokB,OAAOM,QAAQhhB,IAChF1D,KAAK0kB,OAAOhhB,EAAM,IAE1B,CACAghB,MAAAA,CAAOhhB,GACH,MAAMhD,EAAOM,IACb,IAAKN,GAAQA,EAAKd,SAAWI,KAAK6sB,SAASluB,GAIvC,YADAqB,KAAK4tB,WAAW1pB,KAAK6d,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGte,GAAQ,CAAEsc,MAAOhgB,KAAMiiB,IAAK,IAAIL,GAAY5hB,KAAK6sB,UAAWlsB,QAASK,KAG9H,MAAMktB,EAAeluB,KAAKorB,QACrB8C,aACCpuB,EAAUY,EAAKR,OACfiuB,EAAgBD,EAAapN,SAAShhB,GAC5C,IAAKquB,EAGD,YADAnuB,KAAK4tB,WAAW1pB,KAAK6d,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGte,GAAQ,CAAEsc,MAAOhgB,KAAMW,QAASK,EAAaihB,IAAK,IAAIL,GAAY5hB,KAAK6sB,aAGhI,MAAMuB,EAAYF,EAAa7M,OACzBgN,EAAYD,EAAUrqB,QAAQoqB,GACpC,IAAIG,EAAUJ,EAAa7M,OAAOtd,QAAQ/D,MACnB,SAAnB0D,EAAM+R,UAA0C,QAAnB/R,EAAM+R,WACnC6Y,EAAU5jB,KAAKD,IAAI,EAAG6jB,EAAU,IAEb,UAAnB5qB,EAAM+R,UAA2C,WAAnB/R,EAAM+R,WAChC4Y,EAAYC,GACZA,IAEJA,EAAU5jB,KAAKF,IAAI4jB,EAAU7sB,OAAS,EAAG+sB,IAE7CJ,EAAavM,UAAU0M,EAAWC,EACtC,ECrFG,MAAMC,WAAyB9oB,EAClC,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYktB,EAAUpM,GAClB1gB,QACAC,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAKoG,WAAa,IAAIF,EACtBlG,KAAKmI,YAAc,IAAInF,EACvBhD,KAAKoI,WAAapI,KAAKmI,YAAYzE,MACnC1D,KAAKqI,WAAa,IAAIrF,EACtBhD,KAAKsI,UAAYtI,KAAKqI,WAAW3E,MACjC1D,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,oBAC1B+B,KAAKke,SAASmN,UAAY,EAC1BrrB,KAAK8F,eAAe9F,KAAKmI,YAAanI,KAAKqI,YAC3CrI,KAAKwuB,WAAa,IAAIvJ,GAAWjlB,KAAKuE,QAAS,CAC3CghB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDW,kBAAmBA,CAACxiB,EAAO+R,KACvB,GAA0B,mBAAtBzV,KAAKygB,MAAM1F,QACV/a,KAAKygB,MAAM1F,QAAuB,WAAbtF,EACtB,OAAO,EAEX,MAAM/U,EAAOG,IACb,IAAKH,GACDgD,EAAM+qB,UACuB,aAA7BzuB,KAAKygB,MAAMxG,SAASzV,KACpB,OAAO,EAEX,GAAI9D,GAAQA,EAAKd,SAAWI,KAAK6sB,SAASluB,GAAI,CAC1C,GAAI+B,EAAKb,UAAYG,KAAKygB,MAAM9hB,GAAI,CAChC,GAAiB,WAAb8W,EAEA,OAAO,EAEX,GAAqB,OAAjB/U,EAAKZ,QAEL,OAAO,CAEf,CAGA,QAF4E,IAA7BE,KAAKygB,MAAMY,OAAO9f,QAC7Db,EAAKb,UAAYG,KAAKygB,MAAM9hB,GAEpC,CACA,OAAOqB,KAAKygB,MAAMyF,kBAAkBxiB,EAAO+R,EAAU,UAAU,IAGvEzV,KAAK8F,eAAe9F,KAAKwuB,WAC7B,CACAE,IAAAA,GACI1uB,KAAKuE,QAAQwH,MAAMwgB,QAAU,EACjC,CACAoC,IAAAA,GACI3uB,KAAKuE,QAAQwH,MAAMwgB,QAAU,MACjC,CACAqC,WAAAA,CAAY5O,EAAOzc,QAAO,IAAPA,IAAAA,EAAU,CAAEsrB,UAAU,IACrC,MAAMC,EAAWvrB,EAAQsrB,UACpB7uB,KAAKggB,OAAShgB,KAAKygB,MAAMsO,cAAc/uB,KAAKggB,OASjD,IAAIlU,EACJ,OATI9L,KAAKggB,OACLhgB,KAAKggB,MAAMzU,KAAKjM,QAAQiF,QAAQiV,gBAAkBxZ,KAAKke,UAIvDle,KAAKke,SAASrL,YAAY7S,KAAKggB,MAAMzU,KAAKjM,QAAQiF,SAEtDvE,KAAKggB,MAAQA,EAELA,EAAMiC,IAAI+M,UACd,IAAK,kBACDhvB,KAAKygB,MAAMwO,gBAAgBC,QAAQlP,GAC/BhgB,KAAKggB,OACD8O,GACA9uB,KAAKke,SAASnN,YAAY/Q,KAAKggB,MAAMzU,KAAKjM,QAAQiF,SAG1DuH,EAAY9L,KAAKke,SACjB,MACJ,IAAK,SACG8B,EAAMzU,KAAKjM,QAAQiF,QAAQiV,gBAAkBxZ,KAAKke,UAClDle,KAAKke,SAASrL,YAAYmN,EAAMzU,KAAKjM,QAAQiF,SAEjDuH,EAAY9L,KAAKygB,MAAMwO,gBAAgBE,OAAO,CAC1CnP,QACAoP,mBAAoBpvB,OAIhC,GAAI8uB,EAAU,CACV,MAAMtD,EAAevjB,EAAW6D,GAC1B1F,EAAa,IAAIX,EACvBW,EAAWN,eAAe0lB,EAAcA,EAAapjB,YAAW,IAAMpI,KAAKmI,YAAYjE,SAASsnB,EAAaljB,WAAU,IAAMtI,KAAKqI,WAAWnE,UAC7IlE,KAAKoG,WAAW3D,MAAQ2D,CAC5B,CACJ,CACAipB,SAAAA,CAAUrP,GACFhgB,KAAKggB,QAAUA,GAGnBhgB,KAAK4uB,YAAY5O,EACrB,CACAvL,MAAAA,CAAOiU,EAAQC,GACX,CAEJ2G,UAAAA,GACI,IAAIhtB,EACAtC,KAAKggB,OAC2B,oBAA5BhgB,KAAKggB,MAAMiC,IAAI+M,WAC0C,QAAxD1sB,EAAKtC,KAAKggB,MAAMzU,KAAKjM,QAAQiF,QAAQiV,qBAAkC,IAAPlX,GAAyBA,EAAGuQ,YAAY7S,KAAKggB,MAAMzU,KAAKjM,QAAQiF,UAGzIvE,KAAKggB,WAAQvf,CACjB,CACAoB,OAAAA,GACI7B,KAAKoG,WAAWvE,UAChB9B,MAAM8B,SACV,ECnHJ,MAAM0tB,WAAuB9L,GACzB9jB,WAAAA,CAAY4E,EAASsoB,EAAUpM,EAAOT,GAClCjgB,MAAMwE,GACNvE,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAKggB,MAAQA,EACbhgB,KAAKc,cAAgBX,EAAuBC,aAChD,CACAO,OAAAA,CAAQ+C,GAEJ,OADA1D,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK6sB,SAASluB,GAAIqB,KAAKygB,MAAM9hB,GAAIqB,KAAKggB,MAAMrhB,KAAMe,EAAcqB,WACvG,CACHc,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EAEG,MAAMyuB,WAAY/pB,EACrB,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYqgB,EAAO6M,EAAUpM,GACzB1gB,QACAC,KAAKggB,MAAQA,EACbhgB,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAKV,aAAUmB,EACfT,KAAKyvB,WAAa,IAAIzsB,EACtBhD,KAAK0vB,UAAY1vB,KAAKyvB,WAAW/rB,MACjC1D,KAAK2vB,WAAa,IAAI3sB,EACtBhD,KAAK0kB,OAAS1kB,KAAK2vB,WAAWjsB,MAC9B1D,KAAK4jB,aAAe,IAAI5gB,EACxBhD,KAAK6jB,YAAc7jB,KAAK4jB,aAAalgB,MACrC1D,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,MAC1B+B,KAAKke,SAASmN,SAAW,EACzBrrB,KAAKke,SAAS6P,WAAY,EAC1BzmB,EAAYtH,KAAKuE,QAAS,gBAAgB,GAC1C,MAAMqrB,EAAc,IAAIL,GAAevvB,KAAKke,SAAUle,KAAK6sB,SAAU7sB,KAAKygB,MAAOzgB,KAAKggB,OACtFhgB,KAAKwuB,WAAa,IAAIvJ,GAAWjlB,KAAKke,SAAU,CAC5CqH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACxiB,EAAO+R,KACvB,GAAIzV,KAAKygB,MAAM1F,OACX,OAAO,EAEX,MAAMra,EAAOG,IACb,OAAIH,GAAQV,KAAK6sB,SAASluB,KAAO+B,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKygB,MAAM9hB,KAIzBqB,KAAKggB,MAAMrhB,KAAO+B,EAAKZ,QAE3BE,KAAKygB,MAAMmG,MAAMV,kBAAkBxiB,EAAO+R,EAAU,MAAM,IAGzEzV,KAAK6iB,kBAAoB7iB,KAAKwuB,WAAW3L,kBACzC7iB,KAAK8F,eAAe9F,KAAKyvB,WAAYzvB,KAAK2vB,WAAY3vB,KAAK4jB,aAAcgM,EAAY/L,aAAangB,IAC9F1D,KAAK4jB,aAAa1f,KAAKR,EAAM,IAC7BksB,EAAajrB,EAAsB3E,KAAKke,SAAU,aAAcxa,IAC5DA,EAAMxB,kBAGVlC,KAAKyvB,WAAWvrB,KAAKR,EAAM,IAC3B1D,KAAKwuB,WAAW9J,QAAQhhB,IACxB1D,KAAK2vB,WAAWzrB,KAAKR,EAAM,IAC3B1D,KAAKwuB,WACb,CACAzN,SAAAA,CAAUwH,GACNjhB,EAAYtH,KAAKuE,QAAS,aAAcgkB,GACxCjhB,EAAYtH,KAAKuE,QAAS,gBAAiBgkB,EAC/C,CACAsH,UAAAA,CAAWpE,GACHzrB,KAAKV,SACLU,KAAKke,SAASrL,YAAY7S,KAAKV,QAAQiF,SAE3CvE,KAAKV,QAAUmsB,EACfzrB,KAAKke,SAASnN,YAAY/Q,KAAKV,QAAQiF,QAC3C,CACA1C,OAAAA,GACI9B,MAAM8B,SACV,ECnFG,MAAMiuB,WAAyBrM,GAClC9jB,WAAAA,CAAY4E,EAASsoB,EAAUpM,GAC3B1gB,MAAMwE,GACNvE,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAKc,cAAgBX,EAAuBC,cAC5CJ,KAAK8F,eAAenB,EAAsBJ,EAAS,aAAcJ,IACzDA,EAAEsqB,WAMkBtqB,EvBsG1B6E,IAA6B,EuBrG3B,IACD,GACP,CACA+a,WAAAA,CAAYpgB,GACR,MAAqC,aAAjC3D,KAAKygB,MAAMwB,IAAIhI,SAASzV,OAAwBb,EAAO8qB,QAI/D,CACA9tB,OAAAA,CAAQovB,GACJ,MAAM/L,EAAe+L,EAAU/L,aAC/BhkB,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK6sB,SAASluB,GAAIqB,KAAKygB,MAAM9hB,GAAI,OAAQe,EAAcqB,WACrG,MAAMgL,EAAQnD,OAAOonB,iBAAiBhwB,KAAK0Z,IACrCuW,EAAUlkB,EAAMmkB,iBAAiB,sDACjCC,EAAQpkB,EAAMmkB,iBAAiB,2CACrC,GAAIlM,EAAc,CACd,MAAMoM,EAAepoB,SAAS0K,cAAc,OAC5C0d,EAAarkB,MAAMskB,gBAAkBJ,EACrCG,EAAarkB,MAAMokB,MAAQA,EAC3BC,EAAarkB,MAAMukB,QAAU,UAC7BF,EAAarkB,MAAMxC,OAAS,OAC5B6mB,EAAarkB,MAAMwkB,SAAW,OAC9BH,EAAarkB,MAAMwhB,WAAa,OAChC6C,EAAarkB,MAAMykB,aAAe,OAClCJ,EAAarkB,MAAM0J,SAAW,WAC9B2a,EAAaK,YAAe,oBAAmBzwB,KAAKygB,MAAM3b,QC3C/D,SAAuBkf,EAAcoM,GAExC/oB,EAAW+oB,EAAc,cACzBpoB,SAASklB,KAAKnc,YAAYqf,GAC1BpM,EAAa0M,aAAaN,EAAc,EAAG,GAC3C/qB,YAAW,KACP0B,EAAcqpB,EAAc,cAC5BA,EAAahpB,QAAQ,GACtB,EACP,CDmCYupB,CAAc3M,EAAcoM,EAChC,CACA,MAAO,CACHvuB,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EE9CG,MAAM6vB,WAAsBnrB,EAC/B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYktB,EAAUpM,GAClB1gB,QACAC,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAKmlB,QAAU,IAAIniB,EACnBhD,KAAK0kB,OAAS1kB,KAAKmlB,QAAQzhB,MAC3B1D,KAAK4jB,aAAe,IAAI5gB,EACxBhD,KAAK6jB,YAAc7jB,KAAK4jB,aAAalgB,MACrC1D,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,iBAC1B+B,KAAKke,SAASmN,SAAW,EACzBrrB,KAAKke,SAAS6P,WAAY,EAC1B/tB,KAAK8F,eAAe9F,KAAKmlB,QAASnlB,KAAK4jB,aAAcjf,EAAsB3E,KAAKke,SAAU,SAAS,KAC/Fle,KAAK6sB,SAAS1M,iBAAiBngB,KAAKygB,MAAM,KAE9C,MAAMuN,EAAU,IAAI8B,GAAiB9vB,KAAKke,SAAU2O,EAAUpM,GAC9DzgB,KAAK6wB,WAAa,IAAI5L,GAAWjlB,KAAKke,SAAU,CAC5CqH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACxiB,EAAO+R,KACvB,IAAInT,EACJ,MAAM5B,EAAOG,IACb,OAAIH,GAAQV,KAAK6sB,SAASluB,KAAO+B,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKygB,MAAM9hB,MAKW,QAAlC2D,GxBhCRsH,EwBgCkB5J,KAAKygB,MAAMY,QxB/BnC9f,OAAS,EAAIqI,EAAIA,EAAIrI,OAAS,QAAKd,SwB+B4B,IAAP6B,OAAgB,EAASA,EAAG3D,MAAQ+B,EAAKZ,QAEzF2gB,EAAMmG,MAAMV,kBAAkBxiB,EAAO+R,EAAU,gBxBlC/D,IAAc7L,CwBkCgE,IAG7E5J,KAAK6iB,kBAAoB7iB,KAAK6wB,WAAWhO,kBACzC7iB,KAAK8F,eAAekoB,EAASA,EAAQnK,aAAangB,IAC9C1D,KAAK4jB,aAAa1f,KAAKR,EAAM,IAC7B1D,KAAK6wB,WAAWnM,QAAQhhB,IACxB1D,KAAKmlB,QAAQjhB,KAAKR,EAAM,IACxB1D,KAAK6wB,WACb,EC1CG,MAAMC,WAAsBrrB,EAC/B,UAAI4b,GACA,OAAOrhB,KAAK+wB,KAAK3xB,KAAKwQ,GAAMA,EAAEnN,MAAMud,MAAMrhB,IAC9C,CACA,QAAImG,GACA,OAAO9E,KAAK+wB,KAAKxvB,MACrB,CACA,UAAIyvB,GACA,OAAOhxB,KAAKixB,OAChB,CACA,UAAID,CAAOvuB,GACPzC,KAAKixB,QAAUxuB,EACfzC,KAAKuE,QAAQwH,MAAMwgB,QAAU9pB,EAAQ,OAAS,EAClD,CACAisB,IAAAA,GACS1uB,KAAKgxB,SACNhxB,KAAKuE,QAAQwH,MAAMwgB,QAAU,GAErC,CACAoC,IAAAA,GACI3uB,KAAKke,SAASnS,MAAMwgB,QAAU,MAClC,CACA2E,sBAAAA,CAAuB3sB,GACfvE,KAAKmxB,eAAiB5sB,IAGtBvE,KAAKmxB,eACLnxB,KAAKmxB,aAAa/pB,SAClBpH,KAAKmxB,kBAAe1wB,GAEpB8D,IACAvE,KAAKoxB,sBAAsBrgB,YAAYxM,GACvCvE,KAAKmxB,aAAe5sB,GAE5B,CACA8sB,qBAAAA,CAAsB9sB,GACdvE,KAAKsxB,cAAgB/sB,IAGrBvE,KAAKsxB,cACLtxB,KAAKsxB,YAAYlqB,SACjBpH,KAAKsxB,iBAAc7wB,GAEnB8D,IACAvE,KAAKuxB,qBAAqBxgB,YAAYxM,GACtCvE,KAAKsxB,YAAc/sB,GAE3B,CACAitB,uBAAAA,CAAwBjtB,GAChBvE,KAAKyxB,aAAeltB,IAGpBvE,KAAKyxB,aACLzxB,KAAKyxB,WAAWrqB,SAChBpH,KAAKyxB,gBAAahxB,GAElB8D,IACAvE,KAAK0xB,oBAAoB3gB,YAAYxM,GACrCvE,KAAKyxB,WAAaltB,GAE1B,CACA,WAAIA,GACA,OAAOvE,KAAKke,QAChB,CACAqK,QAAAA,CAASoJ,GACL,OAAQ3xB,KAAK4xB,eAAiB,GAC1B5xB,KAAK+wB,KAAK/wB,KAAK4xB,eAAenvB,QAAUkvB,CAChD,CACA5tB,OAAAA,CAAQpF,GACJ,OAAOqB,KAAK+wB,KAAK1mB,WAAWsnB,GAAQA,EAAIlvB,MAAMud,MAAMrhB,KAAOA,GAC/D,CACAgB,WAAAA,CAAYktB,EAAUpM,GAClB1gB,QACAC,KAAK6sB,SAAWA,EAChB7sB,KAAKygB,MAAQA,EACbzgB,KAAK+wB,KAAO,GACZ/wB,KAAK4xB,eAAiB,EACtB5xB,KAAKixB,SAAU,EACfjxB,KAAKmlB,QAAU,IAAIniB,EACnBhD,KAAK0kB,OAAS1kB,KAAKmlB,QAAQzhB,MAC3B1D,KAAK6xB,gBAAkB,IAAI7uB,EAC3BhD,KAAK8xB,eAAiB9xB,KAAK6xB,gBAAgBnuB,MAC3C1D,KAAK+xB,kBAAoB,IAAI/uB,EAC7BhD,KAAKgyB,iBAAmBhyB,KAAK+xB,kBAAkBruB,MAC/C1D,KAAKolB,mBAAqB,IAAIpiB,EAC9BhD,KAAK6iB,kBAAoB7iB,KAAKolB,mBAAmB1hB,MACjD1D,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,6BAC1BqJ,EAAYtH,KAAKke,SAAU,2BAAoE,cAAxCle,KAAK6sB,SAAStpB,QAAQ0uB,eAC7EjyB,KAAKoxB,sBAAwBppB,SAAS0K,cAAc,OACpD1S,KAAKoxB,sBAAsBnzB,UAAY,0BACvC+B,KAAKuxB,qBAAuBvpB,SAAS0K,cAAc,OACnD1S,KAAKuxB,qBAAqBtzB,UAAY,yBACtC+B,KAAK0xB,oBAAsB1pB,SAAS0K,cAAc,OAClD1S,KAAK0xB,oBAAoBzzB,UAAY,wBACrC+B,KAAKkyB,aAAelqB,SAAS0K,cAAc,OAC3C1S,KAAKkyB,aAAaj0B,UAAY,iBAC9B+B,KAAKmyB,cAAgB,IAAIvB,GAAc5wB,KAAK6sB,SAAU7sB,KAAKygB,OAC3DzgB,KAAKke,SAASnN,YAAY/Q,KAAK0xB,qBAC/B1xB,KAAKke,SAASnN,YAAY/Q,KAAKkyB,cAC/BlyB,KAAKke,SAASnN,YAAY/Q,KAAKuxB,sBAC/BvxB,KAAKke,SAASnN,YAAY/Q,KAAKmyB,cAAc5tB,SAC7CvE,KAAKke,SAASnN,YAAY/Q,KAAKoxB,uBAC/BpxB,KAAK8F,eAAe9F,KAAK6sB,SAAS1K,eAAehe,IACzCA,EAAE8d,IAAIxB,QAAUzgB,KAAKygB,OACrBnZ,EAAYtH,KAAKke,SAAU,gBAA+B,IAAdle,KAAK8E,KACrD,IACA9E,KAAK6sB,SAASxK,kBAAkBle,IAC5BA,EAAE8d,IAAIxB,QAAUzgB,KAAKygB,OACrBnZ,EAAYtH,KAAKke,SAAU,gBAA+B,IAAdle,KAAK8E,KACrD,IACA9E,KAAKolB,mBAAoBplB,KAAKmlB,QAASnlB,KAAK6xB,gBAAiB7xB,KAAK+xB,kBAAmB/xB,KAAKmyB,cAAenyB,KAAKmyB,cAActO,aAAangB,IACzI1D,KAAK+xB,kBAAkB7tB,KAAK,CACxB0gB,YAAalhB,EACb+c,MAAOzgB,KAAKygB,OACd,IACFzgB,KAAKmyB,cAAczN,QAAQhhB,IAC3B1D,KAAKmlB,QAAQjhB,KAAK,CACdR,MAAOA,EAAMkhB,YACb9gB,MAAO9D,KAAK+wB,KAAKxvB,QACnB,IACFvB,KAAKmyB,cAActP,mBAAmBnf,IACtC1D,KAAKolB,mBAAmBlhB,KAAK,IAAIkuB,GAA6B1uB,EAAO,CACjE2uB,KAAM,eACNrS,MAAOhgB,KAAKygB,MAAMwC,YAClBhB,IAAKjiB,KAAK6sB,SAAS5K,IACnBxB,MAAOzgB,KAAKygB,MACZ9f,QAASE,IACV,IACH8D,EAAsB3E,KAAKmyB,cAAc5tB,QAAS,aAAcb,IAEhE,IADiC1D,KAAK6sB,SAAStpB,QAAQ+uB,uBAEnD5uB,EAAM+qB,UAC2B,aAAjCzuB,KAAKygB,MAAMwB,IAAIhI,SAASzV,KAAqB,CAC7Cd,EAAMvB,iBACN,MAAM,IAAEkH,EAAG,KAAED,GAASpJ,KAAKuE,QAAQiF,yBAC3BH,IAAKkpB,EAASnpB,KAAMopB,GAAaxyB,KAAK6sB,SAAStoB,QAAQiF,wBAC/DxJ,KAAK6sB,SAASvJ,iBAAiBtjB,KAAKygB,MAAO,CACvCtR,EAAG/F,EAAOopB,EAAW,GACrB1M,EAAGzc,EAAMkpB,EAAU,IACpB,CAAEE,YAAY,GACrB,KACA9tB,EAAsB3E,KAAKkyB,aAAc,aAAcxuB,IACvD,GAAIA,EAAMxB,iBACN,OAEiC,IAAjBwB,EAAMgvB,QAEtB1yB,KAAK6sB,SAAS1M,iBAAiBngB,KAAKygB,MACxC,IAER,CACAM,SAAAA,CAAU4R,GACN,CAEJC,MAAAA,CAAOjB,EAAK7tB,GACR,QADa,IAALA,IAAAA,EAAQ9D,KAAK+wB,KAAKxvB,QACtBuC,EAAQ,GAAKA,EAAQ9D,KAAK+wB,KAAKxvB,OAC/B,MAAM,IAAIgB,MAAM,oBAEpBvC,KAAKkyB,aAAapf,aAAa6e,EAAIlvB,MAAM8B,QAASvE,KAAKkyB,aAAa/0B,SAAS2G,IAC7E9D,KAAK+wB,KAAO,IACL/wB,KAAK+wB,KAAKjpB,MAAM,EAAGhE,GACtB6tB,KACG3xB,KAAK+wB,KAAKjpB,MAAMhE,IAEnB9D,KAAK4xB,cAAgB,IACrB5xB,KAAK4xB,cAAgB9tB,EAE7B,CACAO,OAAO1F,GACH,MAAMmF,EAAQ9D,KAAK+wB,KAAK1mB,WAAWsnB,GAAQA,EAAIlvB,MAAMud,MAAMrhB,KAAOA,IAC5Dk0B,EAAc7yB,KAAK+wB,KAAK/sB,OAAOF,EAAO,GAAG,IACzC,MAAErB,EAAK,WAAE2D,GAAeysB,EAC9BzsB,EAAWvE,UACXY,EAAMZ,UACNY,EAAM8B,QAAQ6C,QAClB,CACA0rB,cAAAA,CAAe9S,GACXhgB,KAAK+wB,KAAKjvB,SAAS6vB,IACf,MAAMoB,EAAgB/S,EAAMrhB,KAAOgzB,EAAIlvB,MAAMud,MAAMrhB,GACnDgzB,EAAIlvB,MAAMse,UAAUgS,EAAc,GAE1C,CACA1D,SAAAA,CAAUrP,EAAOlc,GACb,IAAIxB,EACJ,QAFkB,IAALwB,IAAAA,EAAQ9D,KAAK+wB,KAAKxvB,QAE3BvB,KAAK+wB,KAAKiC,MAAMrB,GAAQA,EAAIlvB,MAAMud,MAAMrhB,KAAOqhB,EAAMrhB,KACrD,OAEJ,MAAMgzB,EAAM,IAAInC,GAAIxP,EAAOhgB,KAAK6sB,SAAU7sB,KAAKygB,OAC/C,KAA4B,QAArBne,EAAK0d,EAAMzU,YAAyB,IAAPjJ,OAAgB,EAASA,EAAGqvB,KAC5D,MAAM,IAAIpvB,MAAM,4BAEpBovB,EAAI9B,WAAW7P,EAAMzU,KAAKomB,KAC1B,MAAMvrB,EAAa,IAAIX,EAAoBksB,EAAI9N,aAAangB,IACxD1D,KAAK6xB,gBAAgB3tB,KAAK,CAAE0gB,YAAalhB,EAAOsc,SAAQ,IACxD2R,EAAIjC,WAAWhsB,IACf,MAAMuvB,GAA2BjzB,KAAK6sB,SAAStpB,QAAQ+uB,sBACjDY,EAA0D,aAAjClzB,KAAKygB,MAAMwB,IAAIhI,SAASzV,MACrC,IAAdxE,KAAK8E,KACT,GAAImuB,IACCC,GACDxvB,EAAM+qB,SAAU,CAChB/qB,EAAMvB,iBACN,MAAM6d,EAAQhgB,KAAK6sB,SAAS3J,cAAcyO,EAAI3R,MAAMrhB,KAC9C,IAAE0K,EAAG,KAAED,GAASuoB,EAAIptB,QAAQiF,yBAC1BH,IAAKkpB,EAASnpB,KAAMopB,GAAaxyB,KAAK6sB,SAAStoB,QAAQiF,wBAK/D,YAJAxJ,KAAK6sB,SAASvJ,iBAAiBtD,EAAO,CAClC7Q,EAAG/F,EAAOopB,EACV1M,EAAGzc,EAAMkpB,GACV,CAAEE,YAAY,GAErB,CACqC,IAAjB/uB,EAAMgvB,SACNhvB,EAAMxB,kBAGtBlC,KAAKygB,MAAMwC,cAAgBjD,GAC3BhgB,KAAKygB,MAAMmG,MAAMyI,UAAUrP,EAC/B,IACA2R,EAAIjN,QAAQhhB,IACZ1D,KAAKmlB,QAAQjhB,KAAK,CACdR,MAAOA,EAAMkhB,YACb9gB,MAAO9D,KAAK+wB,KAAK1mB,WAAW8E,GAAMA,EAAE1M,QAAUkvB,KAChD,IACFA,EAAI9O,mBAAmBnf,IACvB1D,KAAKolB,mBAAmBlhB,KAAK,IAAIkuB,GAA6B1uB,EAAO,CACjE2uB,KAAM,MACNrS,MAAOhgB,KAAKygB,MAAMwC,YAClBhB,IAAKjiB,KAAK6sB,SAAS5K,IACnBxB,MAAOzgB,KAAKygB,MACZ9f,QAASE,IACV,KAED4B,EAAQ,CAAEA,MAAOkvB,EAAKvrB,cAC5BpG,KAAK4yB,OAAOnwB,EAAOqB,EACvB,CACAwrB,UAAAA,CAAWtP,GACPhgB,KAAKqE,OAAO2b,EAAMrhB,GACtB,CACAkD,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAM,MAAEY,EAAK,WAAE2D,KAAgBpG,KAAK+wB,KACrC3qB,EAAWvE,UACXY,EAAMZ,UAEV7B,KAAK+wB,KAAO,EAChB,EC7PG,MAAMoC,GACT,cAAIC,GACA,OAAOpzB,KAAKqzB,WAChB,CACA1zB,WAAAA,CAAYilB,EAAaR,EAAQ3O,EAAU9U,EAAS8f,GAChDzgB,KAAK4kB,YAAcA,EACnB5kB,KAAKokB,OAASA,EACdpkB,KAAKyV,SAAWA,EAChBzV,KAAKW,QAAUA,EACfX,KAAKygB,MAAQA,EACbzgB,KAAKqzB,aAAc,CACvB,CACAC,MAAAA,GACItzB,KAAKqzB,aAAc,CACvB,EAEG,MAAME,GAAgB,MAKzB,MAAMC,EAAa,CACflU,yBAAqB7e,EACrBgzB,iBAAahzB,EACbwxB,mBAAexxB,EACf6xB,2BAAuB7xB,EACvBizB,yBAAqBjzB,EACrBkzB,eAAWlzB,EACXmzB,qBAAiBnzB,EACjBozB,WAAOpzB,EACPqzB,sBAAkBrzB,EAClBsa,YAAQta,EACRktB,gBAAYltB,GAEhB,OAAOshB,OAAO8J,KAAK2H,EACtB,EAnB4B,GCRtB,MAAMO,WAA6B/xB,EACtC,eAAI4iB,GACA,OAAO5kB,KAAKuD,QAAQqhB,WACxB,CACA,YAAInP,GACA,OAAOzV,KAAKuD,QAAQkS,QACxB,CACA,SAAIuK,GACA,OAAOhgB,KAAKuD,QAAQyc,KACxB,CACA,SAAIS,GACA,OAAOzgB,KAAKuD,QAAQkd,KACxB,CACA,OAAIwB,GACA,OAAOjiB,KAAKuD,QAAQ0e,GACxB,CACAtiB,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,CACnB,CACA5C,OAAAA,GACI,OAAOX,KAAKuD,QAAQ5C,SACxB,EAEG,MAAMqzB,WAA8BD,GACvC,QAAI1B,GACA,OAAOryB,KAAKi0B,KAChB,CACAt0B,WAAAA,CAAY4D,GACRxD,MAAMwD,GACNvD,KAAKi0B,MAAQ1wB,EAAQ8uB,IACzB,EAEG,MAAMD,GACT,QAAIC,GACA,OAAOryB,KAAKuD,QAAQ8uB,IACxB,CACA,eAAIzN,GACA,OAAO5kB,KAAK0D,MAAMkhB,WACtB,CACA,YAAInP,GACA,OAAOzV,KAAK0D,MAAM+R,QACtB,CACA,oBAAIvT,GACA,OAAOlC,KAAK0D,MAAMxB,gBACtB,CACA,SAAI8d,GACA,OAAOhgB,KAAKuD,QAAQyc,KACxB,CACA,OAAIiC,GACA,OAAOjiB,KAAKuD,QAAQ0e,GACxB,CACA,SAAIxB,GACA,OAAOzgB,KAAKuD,QAAQkd,KACxB,CACAte,cAAAA,GACInC,KAAK0D,MAAMvB,gBACf,CACAxB,OAAAA,GACI,OAAOX,KAAKuD,QAAQ5C,SACxB,CACAhB,WAAAA,CAAY+D,EAAOH,GACfvD,KAAK0D,MAAQA,EACb1D,KAAKuD,QAAUA,CACnB,EAEG,MAAM2wB,WAAgCzuB,EACzC,WAAIlB,GACA,MAAM,IAAIhC,MAAM,gBACpB,CACA,eAAI0gB,GACA,OAAOjjB,KAAKm0B,YAChB,CACA,UAAIpZ,GACA,OAAO/a,KAAKgb,OAChB,CACA,UAAID,CAAOtY,GACPzC,KAAKgb,QAAUvY,EACf6E,EAAYtH,KAAK8L,UAAW,mBAA8B,mBAAVrJ,GAA8BA,EAClF,CACA,YAAI8lB,GACA,OAAOvoB,KAAK2yB,cAChB,CACA,UAAItR,GACA,OAAOrhB,KAAKo0B,OAChB,CACA,QAAItvB,GACA,OAAO9E,KAAKo0B,QAAQ7yB,MACxB,CACA,WAAI8yB,GACA,OAA+B,IAAxBr0B,KAAKo0B,QAAQ7yB,MACxB,CACA,gBAAI+yB,GACA,SAAUt0B,KAAKu0B,YAAav0B,KAAK8L,UAAU3E,SAASnH,KAAKu0B,UAAUhwB,SACvE,CACA,UAAI+nB,GACA,OAAOtsB,KAAKw0B,aAChB,CACA,oBAAIC,GACA,QAAKzsB,SAASQ,eAGPf,EAAWO,SAASQ,cAAexI,KAAK00B,iBAAiBnwB,QACpE,CACA,YAAI0V,GACA,OAAOja,KAAK20B,SAChB,CACA,YAAI1a,CAASxX,GAIT,OAHAzC,KAAK20B,UAAYlyB,EACjB6E,EAAYtH,KAAK8L,UAAW,yBAAyB,GACrDxE,EAAYtH,KAAK8L,UAAW,uBAAuB,GAC3CrJ,EAAM+B,MACV,IAAK,OACDxE,KAAK00B,iBAAiBlG,WAAW9H,eAAe,CAC5C,MACA,SACA,OACA,QACA,WAEJ,MACJ,IAAK,WACD1mB,KAAK00B,iBAAiBlG,WAAW9H,eAAe,CAAC,WACjD1mB,KAAK00B,iBAAiBlG,WAAW9H,eAAejkB,EAC1C,CAAC,UACD,CAAC,MAAO,SAAU,OAAQ,QAAS,WACzC6E,EAAYtH,KAAK8L,UAAW,yBAAyB,GACrD,MACJ,IAAK,SACD9L,KAAK00B,iBAAiBlG,WAAW9H,eAAe,CAAC,WACjDpf,EAAYtH,KAAK8L,UAAW,uBAAuB,GAG3D9L,KAAK40B,WAAW3S,IAAI4S,qBAAqB3wB,KAAK,CAC1C+V,SAAUja,KAAKia,UAEvB,CACAta,WAAAA,CAAYmM,EAAW+gB,EAAUluB,EAAI4E,EAASqxB,GAC1C,IAAItyB,EACJvC,QACAC,KAAK8L,UAAYA,EACjB9L,KAAK6sB,SAAWA,EAChB7sB,KAAKrB,GAAKA,EACVqB,KAAKuD,QAAUA,EACfvD,KAAK40B,WAAaA,EAClB50B,KAAK2yB,gBAAiB,EACtB3yB,KAAKgb,SAAU,EACfhb,KAAK20B,UAAY,CAAEnwB,KAAM,QACzBxE,KAAK80B,iBAAmB,GACxB90B,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAK0oB,OAAS,EACd1oB,KAAK2oB,QAAU,EACf3oB,KAAKo0B,QAAU,GACfp0B,KAAK+0B,kBAAoB,IAAIlwB,IAC7B7E,KAAKg1B,QAAU,IAAIhyB,EACnBhD,KAAKi1B,OAASj1B,KAAKg1B,QAAQtxB,MAC3B1D,KAAK4tB,WAAa,IAAI5qB,EACtBhD,KAAK6hB,UAAY7hB,KAAK4tB,WAAWlqB,MACjC1D,KAAKk1B,YAAc,IAAIlyB,EACvBhD,KAAK4iB,WAAa5iB,KAAKk1B,YAAYxxB,MACnC1D,KAAKolB,mBAAqB,IAAIpiB,EAC9BhD,KAAK6iB,kBAAoB7iB,KAAKolB,mBAAmB1hB,MACjD1D,KAAK6xB,gBAAkB,IAAI7uB,EAC3BhD,KAAK8xB,eAAiB9xB,KAAK6xB,gBAAgBnuB,MAC3C1D,KAAK+xB,kBAAoB,IAAI/uB,EAC7BhD,KAAKgyB,iBAAmBhyB,KAAK+xB,kBAAkBruB,MAC/C1D,KAAKm1B,eAAiB,IAAInyB,EAC1BhD,KAAKmiB,cAAgBniB,KAAKm1B,eAAezxB,MACzC1D,KAAKo1B,uBAAyB,IAAIpyB,EAClChD,KAAKq1B,sBAAwBr1B,KAAKo1B,uBAAuB1xB,MACzD1D,KAAKs1B,4BAA8B,IAAItyB,EACvChD,KAAKu1B,2BAA6Bv1B,KAAKs1B,4BAA4B5xB,MACnE1D,KAAKw1B,kBAAoB,IAAIxyB,EAC7BhD,KAAKqiB,iBAAmBriB,KAAKw1B,kBAAkB9xB,MAC/C1D,KAAKy1B,wBAA0B,IAAIzyB,EACnChD,KAAKuiB,uBAAyBviB,KAAKy1B,wBAAwB/xB,MAC3D1D,KAAK01B,0BAA4B,IAAI1yB,EACrChD,KAAKgjB,yBAA2BhjB,KAAK01B,0BAA0BhyB,MAC/D1D,KAAK21B,0BAA4B,KACjCruB,EAAYtH,KAAK8L,UAAW,aAAa,GACzC9L,KAAK41B,KAAO,IAAIlT,GAAY1iB,KAAK6sB,UACjC7sB,KAAKw0B,cAAgB,IAAI1D,GAAc9wB,KAAK6sB,SAAU7sB,KAAK40B,YAC3D50B,KAAK00B,iBAAmB,IAAInG,GAAiBvuB,KAAK6sB,SAAU7sB,MAC5D8L,EAAUya,OAAOvmB,KAAKw0B,cAAcjwB,QAASvE,KAAK00B,iBAAiBnwB,SACnEvE,KAAKssB,OAAO0E,SAAWztB,EAAQsyB,WAC/B71B,KAAK+a,OAAmC,QAAzBzY,EAAKiB,EAAQwX,cAA2B,IAAPzY,GAAgBA,EAChEtC,KAAK8F,eAAe9F,KAAK6xB,gBAAiB7xB,KAAK+xB,kBAAmB/xB,KAAKolB,mBAAoBplB,KAAKw0B,cAAc1C,gBAAgBpuB,IAC1H1D,KAAK6xB,gBAAgB3tB,KAAKR,EAAM,IAChC1D,KAAKw0B,cAAcxC,kBAAkBtuB,IACrC1D,KAAK+xB,kBAAkB7tB,KAAKR,EAAM,IAClC1D,KAAKw0B,cAAc9P,QAAQhhB,IAC3B1D,KAAK81B,gBAAgB,SAAUpyB,EAAMA,MAAO,SAAUA,EAAMI,MAAM,IAClE9D,KAAK00B,iBAAiBtsB,YAAW,KACjCpI,KAAK6sB,SAAS1M,iBAAiBngB,KAAK40B,WAAW,IAC/C50B,KAAK00B,iBAAiBpsB,WAAU,SAEhCtI,KAAK00B,iBAAiBlG,WAAW9J,QAAQhhB,IACzC1D,KAAK81B,gBAAgB,UAAWpyB,EAAMkhB,YAAalhB,EAAM+R,SAAS,IAClEzV,KAAKw0B,cAAc3R,mBAAmBnf,IACtC1D,KAAKolB,mBAAmBlhB,KAAKR,EAAM,IACnC1D,KAAK00B,iBAAiBlG,WAAW3L,mBAAmBnf,IACpD1D,KAAKolB,mBAAmBlhB,KAAK,IAAIkuB,GAA6B1uB,EAAO,CACjE2uB,KAAM,UACNrS,MAAOhgB,KAAKijB,YACZhB,IAAKjiB,KAAK41B,KACVnV,MAAOzgB,KAAK40B,WACZj0B,QAASE,IACV,IACHb,KAAKg1B,QAASh1B,KAAKuW,aAAcvW,KAAK4tB,WAAY5tB,KAAKk1B,YAAal1B,KAAKm1B,eAAgBn1B,KAAKw1B,kBAAmBx1B,KAAKy1B,wBAAyBz1B,KAAK01B,0BAC5J,CACAK,YAAAA,GACI/1B,KAAK00B,iBAAiBnwB,QAAQkd,OAClC,CACA,mBAAIwN,CAAgBxsB,GAChBzC,KAAKqhB,OAAOvf,SAASke,IACjBhgB,KAAKivB,gBAAgBC,QAAQlP,EAAM,IAEvChgB,KAAK21B,0BAA4BlzB,EACjCzC,KAAKqhB,OAAOvf,SAASke,IACjBhgB,KAAKg2B,SAAShW,EAAM,GAE5B,CACA,mBAAIiP,GACA,IAAI3sB,EACJ,OAAkD,QAAzCA,EAAKtC,KAAK21B,iCAA8C,IAAPrzB,EAAgBA,EAAKtC,KAAK6sB,SAASoJ,sBACjG,CACAtM,UAAAA,GACQ3pB,KAAKuD,QAAQ8d,QACbrhB,KAAKuD,QAAQ8d,OAAOvf,SAASke,IACzBhgB,KAAKk2B,WAAWlW,EAAM,IAG1BhgB,KAAKuD,QAAQ0f,aACbjjB,KAAKqvB,UAAUrvB,KAAKuD,QAAQ0f,aAIhCjjB,KAAK+gB,UAAU/gB,KAAKuoB,UAAU,GAC9BvoB,KAAKm2B,kBACDn2B,KAAK6sB,SAAStpB,QAAQ6yB,mCACtBp2B,KAAKq2B,oBACDr2B,KAAK6sB,SAAStpB,QAAQ6yB,iCAAiCp2B,KAAK40B,YAChE50B,KAAK8F,eAAe9F,KAAKq2B,qBACzBr2B,KAAKq2B,oBAAoB3K,KAAK,CAC1BwC,aAAcluB,KAAK41B,KACnB3T,IAAKjiB,KAAK40B,WAAW3S,IACrBxB,MAAOzgB,KAAK40B,aAEhB50B,KAAKw0B,cAActD,uBAAuBlxB,KAAKq2B,oBAAoB9xB,UAEnEvE,KAAK6sB,SAAStpB,QAAQ+yB,kCACtBt2B,KAAKu2B,mBACDv2B,KAAK6sB,SAAStpB,QAAQ+yB,gCAAgCt2B,KAAK40B,YAC/D50B,KAAK8F,eAAe9F,KAAKu2B,oBACzBv2B,KAAKu2B,mBAAmB7K,KAAK,CACzBwC,aAAcluB,KAAK41B,KACnB3T,IAAKjiB,KAAK40B,WAAW3S,IACrBxB,MAAOzgB,KAAK40B,aAEhB50B,KAAKw0B,cAAcnD,sBAAsBrxB,KAAKu2B,mBAAmBhyB,UAEjEvE,KAAK6sB,SAAStpB,QAAQizB,oCACtBx2B,KAAKy2B,qBACDz2B,KAAK6sB,SAAStpB,QAAQizB,kCAAkCx2B,KAAK40B,YACjE50B,KAAK8F,eAAe9F,KAAKy2B,sBACzBz2B,KAAKy2B,qBAAqB/K,KAAK,CAC3BwC,aAAcluB,KAAK41B,KACnB3T,IAAKjiB,KAAK40B,WAAW3S,IACrBxB,MAAOzgB,KAAK40B,aAEhB50B,KAAKw0B,cAAchD,wBAAwBxxB,KAAKy2B,qBAAqBlyB,SAE7E,CACAyxB,QAAAA,CAAShW,GACLhgB,KAAK00B,iBAAiB9F,YAAY5O,EAAO,CAAE6O,UAAU,GACzD,CACA9qB,OAAAA,CAAQic,GACJ,OAAOhgB,KAAKw0B,cAAczwB,QAAQic,EAAMrhB,GAC5C,CACAgc,MAAAA,GACI,IAAIrY,EACJ,MAAM0I,EAAS,CACXkG,MAAOlR,KAAKw0B,cAAcnT,OAC1BqV,WAAyC,QAA5Bp0B,EAAKtC,KAAKm0B,oBAAiC,IAAP7xB,OAAgB,EAASA,EAAG3D,GAC7EA,GAAIqB,KAAKrB,IAQb,OANoB,IAAhBqB,KAAK+a,SACL/P,EAAO+P,OAAS/a,KAAK+a,QAErB/a,KAAKssB,OAAO0E,SACZhmB,EAAO6qB,YAAa,GAEjB7qB,CACX,CACAiW,UAAAA,CAAW1d,GACFA,IACDA,EAAU,CAAC,GAEVA,EAAQyc,QACTzc,EAAQyc,MAAQhgB,KAAKijB,aAEzB,MAAMnf,EAAQP,EAAQyc,MAAQhgB,KAAKqhB,OAAOtd,QAAQR,EAAQyc,QAAU,EACpE,IAAI2W,EACJ,GAAI7yB,EAAQ9D,KAAKqhB,OAAO9f,OAAS,EAC7Bo1B,EAAkB7yB,EAAQ,MAEzB,IAAKP,EAAQqzB,aAId,OAHAD,EAAkB,CAItB,CACA32B,KAAKqvB,UAAUrvB,KAAKqhB,OAAOsV,GAC/B,CACAzV,cAAAA,CAAe3d,GAOX,GANKA,IACDA,EAAU,CAAC,GAEVA,EAAQyc,QACTzc,EAAQyc,MAAQhgB,KAAKijB,cAEpB1f,EAAQyc,MACT,OAEJ,MAAMlc,EAAQ9D,KAAKqhB,OAAOtd,QAAQR,EAAQyc,OAC1C,IAAI2W,EACJ,GAAI7yB,EAAQ,EACR6yB,EAAkB7yB,EAAQ,MAEzB,IAAKP,EAAQqzB,aAId,OAHAD,EAAkB32B,KAAKqhB,OAAO9f,OAAS,CAI3C,CACAvB,KAAKqvB,UAAUrvB,KAAKqhB,OAAOsV,GAC/B,CACAE,aAAAA,CAAc7W,GACV,OAAOhgB,KAAKqhB,OAAOrF,SAASgE,EAChC,CACA0L,IAAAA,CAAKN,GACD,CAEJvB,MAAAA,CAAOuB,GACH,CAEJ3J,KAAAA,GACI,IAAInf,EACyB,QAA5BA,EAAKtC,KAAKm0B,oBAAiC,IAAP7xB,GAAyBA,EAAGmf,OACrE,CACA4N,SAAAA,CAAUrP,EAAOzc,QAAO,IAAPA,IAAAA,EAAU,CAAC,IAOK,iBAAlBA,EAAQO,OACfP,EAAQO,MAAQ9D,KAAKqhB,OAAO9f,UAC5BgC,EAAQO,MAAQ9D,KAAKqhB,OAAO9f,QAEhC,MAAMu1B,IAAkBvzB,EAAQuzB,cAEhC9W,EAAM+W,kBAAkB/2B,KAAK40B,WAAY,CACrCkC,cAAevzB,EAAQuzB,gBAE3B92B,KAAKk2B,WAAWlW,EAAOzc,EAAQO,MAAO,CAClCgzB,cAAeA,IAEf92B,KAAKm0B,eAAiBnU,GAIrB8W,GACD92B,KAAKg3B,iBAAiBhX,GAErBzc,EAAQ0zB,oBACTj3B,KAAK6sB,SAAS1M,iBAAiBngB,KAAK40B,YAEnCrxB,EAAQuzB,eACT92B,KAAKm2B,mBAVLn2B,KAAK00B,iBAAiB9F,YAAY5O,EAAO,CAAE6O,UAAU,GAY7D,CACArN,WAAAA,CAAY0V,EAAe3zB,QAAO,IAAPA,IAAAA,EAAU,CACjCuzB,eAAe,IAEf,MAAMn4B,EAA8B,iBAAlBu4B,EACZA,EACAA,EAAcv4B,GACdw4B,EAAgBn3B,KAAKo0B,QAAQpB,MAAMhT,GAAUA,EAAMrhB,KAAOA,IAChE,IAAKw4B,EACD,MAAM,IAAI50B,MAAM,qBAEpB,OAAOvC,KAAKo3B,aAAaD,EAAe5zB,EAC5C,CACA8zB,cAAAA,GACI,GAAIr3B,KAAKqhB,OAAO9f,OAAS,EAAG,CAExB,MAAM+1B,EAAc,IAAIt3B,KAAKqhB,QAC7B,IAAK,MAAMrB,KAASsX,EAChBt3B,KAAKu3B,QAAQvX,EAErB,MAEIhgB,KAAK6sB,SAAS7L,YAAYhhB,KAAK40B,WAEvC,CACAtF,UAAAA,CAAWtP,GACPhgB,KAAKu3B,QAAQvX,EACjB,CACAuX,OAAAA,CAAQvX,GACJhgB,KAAK6sB,SAASrL,YAAYxB,EAC9B,CACA+O,aAAAA,CAAc/O,GACV,OAAOhgB,KAAKm0B,eAAiBnU,CACjC,CACAwX,aAAAA,CAAcjzB,GACVvE,KAAKw0B,cAActD,uBAAuB3sB,EAC9C,CACAwc,SAAAA,CAAU0W,EAAehV,QAAK,IAALA,IAAAA,GAAQ,IACxBA,GAASziB,KAAKuoB,WAAakP,KAGhCz3B,KAAK2yB,eAAiB8E,EACtBnwB,EAAYtH,KAAK8L,UAAW,eAAgB2rB,GAC5CnwB,EAAYtH,KAAK8L,UAAW,kBAAmB2rB,GAC/Cz3B,KAAKw0B,cAAczT,UAAU/gB,KAAKuoB,WAC7BvoB,KAAKm0B,cAAgBn0B,KAAKqhB,OAAO9f,OAAS,GAC3CvB,KAAKg3B,iBAAiBh3B,KAAKqhB,OAAO,IAEtCrhB,KAAKm2B,kBACT,CACA1hB,MAAAA,CAAOnL,EAAOC,GACV,IAAIjH,EACJtC,KAAK0oB,OAASpf,EACdtJ,KAAK2oB,QAAUpf,EACfvJ,KAAK00B,iBAAiBjgB,OAAOzU,KAAK0oB,OAAQ1oB,KAAK2oB,UACd,QAA5BrmB,EAAKtC,KAAKm0B,oBAAiC,IAAP7xB,OAAgB,EAASA,EAAGmS,SACjEzU,KAAKm0B,aAAa1f,OAAOzU,KAAK0oB,OAAQ1oB,KAAK2oB,QAEnD,CACAyO,YAAAA,CAAapX,EAAOzc,GAChB,MAAMwvB,EAAgB/yB,KAAKm0B,eAAiBnU,EAE5C,GADAhgB,KAAK03B,cAAc1X,GACf+S,GAAiB/yB,KAAKqhB,OAAO9f,OAAS,EAAG,CACzC,MAAMo2B,EAAY33B,KAAK80B,iBAAiB,GACxC90B,KAAKqvB,UAAUsI,EAAW,CACtBb,cAAevzB,EAAQuzB,cACvBG,mBAAoB1zB,EAAQq0B,oBAEpC,CAOA,OANI53B,KAAKm0B,cAAuC,IAAvBn0B,KAAKqhB,OAAO9f,QACjCvB,KAAKg3B,sBAAiBv2B,GAErB8C,EAAQuzB,eACT92B,KAAKm2B,kBAEFnW,CACX,CACA0X,aAAAA,CAAc1X,GACV,MAAMlc,EAAQ9D,KAAKqhB,OAAOtd,QAAQic,GAMlC,GALIhgB,KAAKm0B,eAAiBnU,GACtBhgB,KAAK00B,iBAAiBpF,aAE1BtvB,KAAKw0B,cAAcnwB,OAAO2b,EAAMrhB,IAChCqB,KAAKo0B,QAAQpwB,OAAOF,EAAO,GACvB9D,KAAK80B,iBAAiB9Y,SAASgE,GAAQ,CACvC,MAAMlc,EAAQ9D,KAAK80B,iBAAiB/wB,QAAQic,GAC5ChgB,KAAK80B,iBAAiB9wB,OAAOF,EAAO,EACxC,CACA,MAAMsC,EAAapG,KAAK+0B,kBAAkBnU,IAAIZ,EAAMrhB,IAChDyH,IACAA,EAAWvE,UACX7B,KAAK+0B,kBAAkB1wB,OAAO2b,EAAMrhB,KAExCqB,KAAKw1B,kBAAkBtxB,KAAK,CAAE8b,SAClC,CACAkW,UAAAA,CAAWlW,EAAOlc,EAA4BP,QAAvB,IAALO,IAAAA,EAAQ9D,KAAKqhB,OAAO9f,aAAe,IAAPgC,IAAAA,EAAU,CAAEuzB,eAAe,IACrE,MACMe,EADgB73B,KAAKo0B,QAAQrwB,QAAQic,IACD,EAC1ChgB,KAAKw0B,cAAc9F,OACnB1uB,KAAK00B,iBAAiBhG,OACtB1uB,KAAKw0B,cAAcnF,UAAUrP,EAAOlc,GAC/BP,EAAQuzB,eACT92B,KAAK00B,iBAAiBrF,UAAUrP,GAEhC6X,IAIJ73B,KAAK83B,UAAU9X,GACfhgB,KAAKqhB,OAAOrd,OAAOF,EAAO,EAAGkc,GAC7BhgB,KAAK+0B,kBAAkBhwB,IAAIib,EAAMrhB,GAAI,IAAI8G,EAAoBua,EAAMiC,IAAI8V,kBAAkBr0B,GAAU1D,KAAKo1B,uBAAuBlxB,KAAKR,KAASsc,EAAMiC,IAAIwH,uBAAuB/lB,GAAU1D,KAAKs1B,4BAA4BpxB,KAAKR,OAC9N1D,KAAKm1B,eAAejxB,KAAK,CAAE8b,UAC/B,CACAgX,gBAAAA,CAAiBhX,GACThgB,KAAKm0B,eAAiBnU,IAG1BhgB,KAAKm0B,aAAenU,EAChBA,IACAhgB,KAAKw0B,cAAc1B,eAAe9S,GAClCA,EAAMvL,OAAOzU,KAAK0oB,OAAQ1oB,KAAK2oB,SAC/B3oB,KAAK83B,UAAU9X,GACfhgB,KAAKy1B,wBAAwBvxB,KAAK,CAC9B8b,WAGZ,CACA8X,SAAAA,CAAU9X,GACFhgB,KAAK80B,iBAAiB9Y,SAASgE,IAC/BhgB,KAAK80B,iBAAiB9wB,OAAOhE,KAAK80B,iBAAiB/wB,QAAQic,GAAQ,GAEvEhgB,KAAK80B,iBAAmB,CAAC9U,KAAUhgB,KAAK80B,iBAC5C,CACAqB,eAAAA,GACI,IAAI7zB,EAAIykB,EAGR,GAFAzf,EAAYtH,KAAK8L,UAAW,QAAS9L,KAAKq0B,SAC1Cr0B,KAAKqhB,OAAOvf,SAASke,GAAUA,EAAMgY,cACjCh4B,KAAKq0B,UAAYr0B,KAAKu0B,UAAW,CACjC,MAAMA,EAAYv0B,KAAK6sB,SAASoL,2BAChC1D,EAAU7I,KAAK,CACXwC,aAAcluB,KAAK41B,KACnBnV,MAAOzgB,KAAK40B,aAEhB50B,KAAKu0B,UAAYA,EACjB5vB,EAAsB3E,KAAKu0B,UAAUhwB,QAAS,SAAS,KAC9CvE,KAAKuoB,UACNvoB,KAAK6sB,SAAS1M,iBAAiBngB,KAAK40B,WACxC,IAEJ50B,KAAKw0B,cAAc7F,OACnB3uB,KAAK00B,iBAAiBnwB,QAAQwM,YAAY/Q,KAAKu0B,UAAUhwB,SACzDvE,KAAKu0B,UAAUwC,kBAAkB/2B,KAAK40B,YAAY,EACtD,EACK50B,KAAKq0B,SAAWr0B,KAAKu0B,YACtBv0B,KAAKu0B,UAAUhwB,QAAQ6C,SACkB,QAAxC2f,GAAMzkB,EAAKtC,KAAKu0B,WAAW1yB,eAA4B,IAAPklB,GAAyBA,EAAGhf,KAAKzF,GAClFtC,KAAKu0B,eAAY9zB,EACjBT,KAAKw0B,cAAc9F,OAE3B,CACAxI,iBAAAA,CAAkBxiB,EAAO+R,EAAU2O,GAC/B,MAAM8T,EAAa,IAAI/E,GAA+BzvB,EAAO0gB,EAAQ3O,EAAU5U,EAAcb,KAAK6sB,SAAS/L,SAAS9gB,KAAKrB,KAEzH,OADAqB,KAAK01B,0BAA0BxxB,KAAKg0B,GAC7BA,EAAW9E,UACtB,CACA0C,eAAAA,CAAgBtxB,EAAMd,EAAO+R,EAAU3R,GACnC,GAAoB,mBAAhB9D,KAAK+a,OACL,OAUJ,MAAMiF,EAAyB,iBAAVlc,EAAqB9D,KAAKqhB,OAAOvd,QAASrD,EACzD03B,EAAgB,IAAInE,GAAsB,CAC5CpP,YAAalhB,EACb+R,WACAuK,QACArf,QAASA,IAAME,IACfwxB,KAdJ,WACI,OAAQ7tB,GACJ,IAAK,SACD,MAAwB,iBAAVV,EAAqB,MAAQ,eAC/C,IAAK,UACD,MAAO,UAEnB,CAOUs0B,GACN3X,MAAOzgB,KAAK40B,WACZ3S,IAAKjiB,KAAK41B,OAGd,GADA51B,KAAKk1B,YAAYhxB,KAAKi0B,GAClBA,EAAcj2B,iBACd,OAEJ,MAAMxB,EAAOG,IACb,GAAIH,GAAQA,EAAKd,SAAWI,KAAK6sB,SAASluB,GAAI,CAC1C,GAAqB,OAAjB+B,EAAKZ,QAAkB,CAEvB,MAAM,QAAED,GAAYa,EAMpB,YALAV,KAAKg1B,QAAQ9wB,KAAK,CACdkgB,OAAQ3O,EACR5V,QAASA,EACTiE,SAGR,CAEA,IADoE,IAA9C9D,KAAKw0B,cAAczwB,QAAQrD,EAAKZ,UACL,IAA5BE,KAAKw0B,cAAc1vB,KACpC,OAEJ,MAAM,QAAEjF,EAAO,QAAEC,GAAYY,EAE7B,GADoBV,KAAKrB,KAAOkB,IACZ4V,EAAU,CAE1B,GADiBzV,KAAKw0B,cAAczwB,QAAQjE,KAC3BgE,EACb,MAER,CACA9D,KAAKg1B,QAAQ9wB,KAAK,CACdkgB,OAAQ3O,EACR5V,QAASa,EAAKb,QACdw4B,OAAQ33B,EAAKZ,QACbgE,SAER,MAEI9D,KAAK4tB,WAAW1pB,KAAK,IAAI6vB,GAAqB,CAC1CnP,YAAalhB,EACb+R,WACAuK,QACArf,QAASA,IAAME,IACf4f,MAAOzgB,KAAK40B,WACZ3S,IAAKjiB,KAAK41B,OAGtB,CACA/zB,OAAAA,GACI,IAAIS,EAAIykB,EAAIuR,EACZv4B,MAAM8B,UACoB,QAAzBS,EAAKtC,KAAKu0B,iBAA8B,IAAPjyB,GAAyBA,EAAGiC,QAAQ6C,SACW,QAAhFkxB,EAA+B,QAAzBvR,EAAK/mB,KAAKu0B,iBAA8B,IAAPxN,OAAgB,EAASA,EAAGllB,eAA4B,IAAPy2B,GAAyBA,EAAGvwB,KAAKgf,GAC1H/mB,KAAKu0B,eAAY9zB,EACjB,IAAK,MAAMuf,KAAShgB,KAAKqhB,OACrBrB,EAAMne,UAEV7B,KAAKw0B,cAAc3yB,UACnB7B,KAAK00B,iBAAiB7yB,SAC1B,ECznBG,MAAM02B,WAA6BnQ,GACtCzoB,WAAAA,CAAYhB,EAAIM,EAAW+gB,GACvBjgB,MAAMpB,EAAIM,GACVe,KAAKiqB,gCAAkC,IAAIjnB,EAC3ChD,KAAKkqB,+BAAiClqB,KAAKiqB,gCAAgCvmB,MAC3E1D,KAAKmqB,wBAA0B,IAAInnB,EACnChD,KAAKoqB,uBAAyBpqB,KAAKmqB,wBAAwBzmB,MAC3D1D,KAAKqqB,iBAAmB,IAAIrnB,EAC5BhD,KAAKsqB,gBAAkBtqB,KAAKqqB,iBAAiB3mB,MAC7C1D,KAAK8F,eAAe9F,KAAKiqB,gCAAiCjqB,KAAKmqB,wBAAyBnqB,KAAKqqB,kBACzFrK,GACAhgB,KAAK2pB,WAAW3J,EAExB,CACAuK,cAAAA,CAAe9nB,GACXzC,KAAKiqB,gCAAgC/lB,KAAKzB,EAC9C,CACA+nB,OAAAA,CAAQ9mB,GACJ1D,KAAKqqB,iBAAiBnmB,KAAKR,EAC/B,EClBG,MAAM80B,WAAsBrN,GAC/B,YAAIxf,GACA,OAAO3L,KAAKy4B,SAChB,CACA,QAAI7sB,GACA,OAAO5L,KAAK04B,KAChB,CACA,gBAAIxhB,GACA,MAAM5N,EAAsC,mBAAvBtJ,KAAK24B,cACpB34B,KAAK24B,gBACL34B,KAAK24B,cAKX,OAJIrvB,IAAUtJ,KAAK44B,yBACf54B,KAAK44B,uBAAyBtvB,EAC9BtJ,KAAK64B,qBAEFvvB,CACX,CACA,iBAAI8N,GACA,MAAM7N,EAAwC,mBAAxBvJ,KAAK84B,eACrB94B,KAAK84B,iBACL94B,KAAK84B,eAKX,OAJIvvB,IAAWvJ,KAAK+4B,0BAChB/4B,KAAK+4B,wBAA0BxvB,EAC/BvJ,KAAK64B,qBAEFtvB,CACX,CACA,iBAAI8N,GACA,MAAM9N,EAAwC,mBAAxBvJ,KAAKg5B,eACrBh5B,KAAKg5B,iBACLh5B,KAAKg5B,eAKX,OAJIzvB,IAAWvJ,KAAKi5B,0BAChBj5B,KAAKi5B,wBAA0B1vB,EAC/BvJ,KAAK64B,qBAEFtvB,CACX,CACA,gBAAI4N,GACA,MAAM7N,EAAsC,mBAAvBtJ,KAAKk5B,cACpBl5B,KAAKk5B,gBACLl5B,KAAKk5B,cAKX,OAJI5vB,IAAUtJ,KAAKm5B,yBACfn5B,KAAKm5B,uBAAyB7vB,EAC9BtJ,KAAK64B,qBAEFvvB,CACX,CACA,YAAIif,GACA,OAAOvoB,KAAKiiB,IAAIsG,QACpB,CACA5oB,WAAAA,CAAYhB,EAAIM,EAAWsE,EAAS0e,GAChCliB,MAAMpB,EAAIM,EAAWgjB,QAAiCA,EAAM,IAAIsW,GAAqB55B,EAAIM,IACzFe,KAAK44B,uBAAyB,EAC9B54B,KAAKm5B,uBAAyB1rB,OAAO2rB,iBACrCp5B,KAAK+4B,wBAA0B,EAC/B/4B,KAAKi5B,wBAA0BxrB,OAAO2rB,iBACtCp5B,KAAK24B,cAAgB,EACrB34B,KAAK84B,eAAiB,EACtB94B,KAAKk5B,cAAgBzrB,OAAO2rB,iBAC5Bp5B,KAAKg5B,eAAiBvrB,OAAO2rB,iBAC7Bp5B,KAAK04B,OAAQ,EACb14B,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACmD,iBAA5EH,aAAyC,EAASA,EAAQ2T,gBAClElX,KAAK24B,cAAgBp1B,EAAQ2T,cAEuD,iBAA5E3T,aAAyC,EAASA,EAAQ4T,gBAClEnX,KAAKk5B,cAAgB31B,EAAQ4T,cAEwD,iBAA7E5T,aAAyC,EAASA,EAAQ6T,iBAClEpX,KAAK84B,eAAiBv1B,EAAQ6T,eAEuD,iBAA7E7T,aAAyC,EAASA,EAAQ8T,iBAClErX,KAAKg5B,eAAiBz1B,EAAQ8T,eAElCrX,KAAKiiB,IAAI0H,WAAW3pB,MACpBA,KAAK8F,eAAe9F,KAAKiiB,IAAIoH,wBAAwB3lB,IACjD,MAAM,UAAEuc,GAAcvc,GAChB,SAAEmpB,GAAa7sB,KAAKorB,QAC1ByB,EAAS5gB,WAAWjM,KAAMigB,EAAU,IACpCjgB,KAAKiiB,IAAIsH,gBAAe,KACxB,MAAM,SAAEsD,GAAa7sB,KAAKorB,QAC1ByB,EAAS1M,iBAAiBngB,KAAK,IAC/BA,KAAKiiB,IAAIiI,gCAAgCxmB,IACP,iBAAvBA,EAAMwT,cACiB,mBAAvBxT,EAAMwT,eACblX,KAAK24B,cAAgBj1B,EAAMwT,cAEI,iBAAxBxT,EAAM0T,eACkB,mBAAxB1T,EAAM0T,gBACbpX,KAAK84B,eAAiBp1B,EAAM0T,eAEE,iBAAvB1T,EAAMyT,cACiB,mBAAvBzT,EAAMyT,eACbnX,KAAKk5B,cAAgBx1B,EAAMyT,cAEI,iBAAxBzT,EAAM2T,eACkB,mBAAxB3T,EAAM2T,gBACbrX,KAAKg5B,eAAiBt1B,EAAM2T,cAChC,IACArX,KAAKiiB,IAAIqI,iBAAiB5mB,IAC1B1D,KAAKuW,aAAarS,KAAK,CACnBqF,OAAQ7F,EAAM6F,OACdD,MAAO5F,EAAM4F,OACf,IACFtJ,KAAKuW,aACb,CACAtK,UAAAA,CAAWgU,GACPjgB,KAAKiiB,IAAIjK,uBAAuB9T,KAAK,CAAE+b,aAC3C,CACAc,SAAAA,CAAUwH,GACNvoB,KAAKiiB,IAAIpC,mBAAmB3b,KAAK,CAAEqkB,YACvC,CACAmD,IAAAA,CAAK9B,GACGA,EAAWvS,gBACXrX,KAAKg5B,eAAiBpP,EAAWvS,eAEjCuS,EAAWxS,gBACXpX,KAAK84B,eAAiBlP,EAAWxS,eAEjCwS,EAAWzS,eACXnX,KAAKk5B,cAAgBtP,EAAWzS,cAEhCyS,EAAW1S,eACXlX,KAAK24B,cAAgB/O,EAAW1S,cAEpClX,KAAKy4B,UAAY7O,EAAWje,SAC5B3L,KAAK04B,QAAU9O,EAAWhe,KAC1B7L,MAAM2rB,KAAK9B,GACyB,kBAAzBA,EAAW3J,WAClBjgB,KAAKiM,WAAW2d,EAAW3J,UAEnC,CACA4Y,iBAAAA,GACI74B,KAAKiiB,IAAIkI,wBAAwBjmB,KAAK,CAClCgT,aAAclX,KAAK44B,uBACnBzhB,aAAcnX,KAAKm5B,uBACnB/hB,cAAepX,KAAK+4B,wBACpB1hB,cAAerX,KAAKi5B,yBAE5B,CACAte,MAAAA,GACI,MAAM1E,EAAQlW,MAAM4a,SACd0e,EAAW52B,GAAUA,IAAUgL,OAAO2rB,sBAAmB34B,EAAYgC,EACrE62B,EAAW72B,GAAWA,GAAS,OAAIhC,EAAYgC,EACrD,OAAOsf,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG/L,GAAQ,CAAEmB,cAAekiB,EAAQt5B,KAAKoX,eAAgBC,cAAegiB,EAAQr5B,KAAKqX,eAAgBH,aAAcoiB,EAAQt5B,KAAKkX,cAAeC,aAAckiB,EAAQr5B,KAAKmX,cAAevL,KAAM5L,KAAK4L,KAAMD,SAAU3L,KAAK2L,UACjQ,EChJJ,MAAM4tB,GAA0B,4CACzB,MAAMC,WAAkCjB,GAC3C,YAAIte,GACA,IAAKja,KAAKy5B,OACN,MAAM,IAAIl3B,MAAMg3B,IAEpB,OAAOv5B,KAAKy5B,OAAO7S,MAAM3M,QAC7B,CACAta,WAAAA,CAAYhB,EAAIkuB,GACZ9sB,MAAMpB,EAAI,qBACVqB,KAAK6sB,SAAWA,EAChB7sB,KAAK05B,mBAAqB,IAAIxzB,EAC9BlG,KAAK60B,qBAAuB,IAAI7xB,EAChChD,KAAK25B,oBAAsB35B,KAAK60B,qBAAqBnxB,MACrD1D,KAAKy1B,wBAA0B,IAAIzyB,EACnChD,KAAKuiB,uBAAyBviB,KAAKy1B,wBAAwB/xB,MAC3D1D,KAAK8F,eAAe9F,KAAK60B,qBAAsB70B,KAAKy1B,wBAAyBz1B,KAAK05B,mBACtF,CACAE,KAAAA,GACI,GAAK55B,KAAKy5B,OAGV,OAAOz5B,KAAK6sB,SAAS7L,YAAYhhB,KAAKy5B,OAC1C,CACAI,SAAAA,GACI,MAA8B,WAAvB75B,KAAKia,SAASzV,KACfxE,KAAKia,SAAS4f,YACdjxB,MACV,CACAkxB,MAAAA,CAAOv2B,GACH,IAAIjB,EAAIykB,EAAIuR,EACZ,IAAKt4B,KAAKy5B,OACN,MAAM,IAAIl3B,MAAMg3B,IAEpB,MAAM9Y,EAAiC,QAAxBne,EAAKiB,EAAQkd,aAA0B,IAAPne,EAAgBA,EAAKtC,KAAK6sB,SAAS1J,SAAS,CACvFjJ,UAAW4K,GAAgD,QAA3BiC,EAAKxjB,EAAQkS,gBAA6B,IAAPsR,EAAgBA,EAAK,SACxF+P,eAAe,IAEnB92B,KAAK6sB,SAASkN,iBAAiB,CAC3Bx0B,KAAM,CAAE1F,QAASG,KAAKy5B,OAAO96B,IAC7BoM,GAAI,CACA0V,QACAhL,SAAUlS,EAAQkd,OACgB,QAA3B6X,EAAK/0B,EAAQkS,gBAA6B,IAAP6iB,EAAgBA,EACpD,WAGlB,CACA0B,QAAAA,GACI,IAAKh6B,KAAKy5B,OACN,MAAM,IAAIl3B,MAAMg3B,IAEO,SAAvBv5B,KAAKia,SAASzV,MAIlBxE,KAAK6sB,SAAS3M,cAAclgB,KAAKy5B,OACrC,CACAQ,WAAAA,GACI,IAAKj6B,KAAKy5B,OACN,MAAM,IAAIl3B,MAAMg3B,IAEpB,OAAOv5B,KAAK6sB,SAASzM,iBAAiBpgB,KAAKy5B,OAC/C,CACAS,aAAAA,GACI,IAAKl6B,KAAKy5B,OACN,MAAM,IAAIl3B,MAAMg3B,IAEhBv5B,KAAKi6B,eACLj6B,KAAK6sB,SAASxM,oBAEtB,CACAsJ,UAAAA,CAAWlJ,GACPzgB,KAAKy5B,OAAShZ,EAQdrc,gBAAe,KACXpE,KAAK05B,mBAAmBj3B,MACpBzC,KAAKy5B,OAAO7S,MAAMrE,wBAAwB7e,IACtC1D,KAAKy1B,wBAAwBvxB,KAAKR,EAAM,GAC1C,GAEd,ECvFG,MAAMy2B,WAA2B3B,GACpC,UAAInX,GACA,OAAOrhB,KAAKo6B,OAAO/Y,MACvB,CACA,eAAI4B,GACA,OAAOjjB,KAAKo6B,OAAOnX,WACvB,CACA,QAAIne,GACA,OAAO9E,KAAKo6B,OAAOt1B,IACvB,CACA,SAAI8hB,GACA,OAAO5mB,KAAKo6B,MAChB,CACA,UAAIrf,GACA,OAAO/a,KAAKo6B,OAAOrf,MACvB,CACA,UAAIA,CAAOtY,GACPzC,KAAKo6B,OAAOrf,OAAStY,CACzB,CACA,UAAI6pB,GACA,OAAOtsB,KAAKo6B,OAAO9N,MACvB,CACA3sB,WAAAA,CAAYktB,EAAUluB,EAAI4E,GACtBxD,MAAMpB,EAAI,oBAAqB,CAC3ByY,cAzBgC,IA0BhCF,aA3B+B,KA4BhC,IAAIsiB,GAA0B76B,EAAIkuB,IACrC7sB,KAAKiiB,IAAI0H,WAAW3pB,MACpBA,KAAKo6B,OAAS,IAAIlG,GAAwBl0B,KAAKuE,QAASsoB,EAAUluB,EAAI4E,EAASvD,KACnF,CACAyhB,KAAAA,GACSzhB,KAAKiiB,IAAIsG,UACVvoB,KAAKiiB,IAAIlB,YAEbhhB,MAAM0hB,OACV,CACAkI,UAAAA,GACI3pB,KAAKo6B,OAAOzQ,YAChB,CACA5I,SAAAA,CAAUwH,GACNxoB,MAAMghB,UAAUwH,GAChBvoB,KAAK4mB,MAAM7F,UAAUwH,EACzB,CACA9T,MAAAA,CAAOnL,EAAOC,GACVxJ,MAAM0U,OAAOnL,EAAOC,GACpBvJ,KAAK4mB,MAAMnS,OAAOnL,EAAOC,EAC7B,CACAoiB,YAAAA,GACI,OAAO3rB,KAAKo6B,MAChB,CACAzf,MAAAA,GACI,OAAO3a,KAAK4mB,MAAMjM,QACtB,ECtDG,MAAM0f,WAA6B9B,GACtC,YAAIte,GACA,OAAOja,KAAKygB,MAAMwB,IAAIhI,QAC1B,CACA,SAAItd,GACA,OAAOqD,KAAKggB,MAAMrjB,KACtB,CACA,iBAAI86B,GACA,OAAOz3B,KAAKygB,MAAM8H,QACtB,CACA,YAAIyG,GACA,OAAOhvB,KAAKggB,MAAMgP,QACtB,CACA,SAAIvO,CAAMhe,GACN,MAAM63B,EAAWt6B,KAAKy5B,OAClBz5B,KAAKy5B,SAAWh3B,IAChBzC,KAAKy5B,OAASh3B,EACdzC,KAAKu6B,kBAAkBr2B,KAAK,CAAC,GAC7BlE,KAAKw6B,yBAAyBF,GAC9Bt6B,KAAK60B,qBAAqB3wB,KAAK,CAC3B+V,SAAUja,KAAKygB,MAAMwB,IAAIhI,WAGrC,CACA,SAAIwG,GACA,OAAOzgB,KAAKy5B,MAChB,CACA,gBAAIgB,GACA,OAAOz6B,KAAK06B,aAChB,CACA/6B,WAAAA,CAAYqgB,EAAOS,EAAOoM,EAAU5tB,EAAWw7B,GAC3C16B,MAAMigB,EAAMrhB,GAAIM,GAChBe,KAAKggB,MAAQA,EACbhgB,KAAK6sB,SAAWA,EAChB7sB,KAAK26B,kBAAoB,IAAI33B,EAC7BhD,KAAK+3B,iBAAmB/3B,KAAK26B,kBAAkBj3B,MAC/C1D,KAAK46B,wBAA0B,IAAI53B,EACnChD,KAAKwiB,uBAAyBxiB,KAAK46B,wBAAwBl3B,MAC3D1D,KAAKu6B,kBAAoB,IAAIv3B,EAC7BhD,KAAK66B,iBAAmB76B,KAAKu6B,kBAAkB72B,MAC/C1D,KAAK86B,qBAAuB,IAAI93B,EAChChD,KAAK+6B,oBAAsB/6B,KAAK86B,qBAAqBp3B,MACrD1D,KAAK60B,qBAAuB,IAAI7xB,EAChChD,KAAK25B,oBAAsB35B,KAAK60B,qBAAqBnxB,MACrD1D,KAAKg7B,sBAAwB,IAAI90B,EACjClG,KAAK06B,cAAgBD,EACrBz6B,KAAK2pB,WAAW3J,GAChBhgB,KAAKy5B,OAAShZ,EACdzgB,KAAKw6B,2BACLx6B,KAAK8F,eAAe9F,KAAKg7B,sBAAuBh7B,KAAK86B,qBAAsB96B,KAAK26B,kBAAmB36B,KAAKu6B,kBAAmBv6B,KAAK46B,wBAAyB56B,KAAK60B,qBAClK,CACAgF,SAAAA,GACI,OAAO75B,KAAKygB,MAAMwB,IAAI4X,WAC1B,CACAC,MAAAA,CAAOv2B,GACH,IAAIjB,EACJtC,KAAK6sB,SAASkN,iBAAiB,CAC3Bx0B,KAAM,CAAE1F,QAASG,KAAKy5B,OAAO96B,GAAImB,QAASE,KAAKggB,MAAMrhB,IACrDoM,GAAI,CACA0V,MAAOld,EAAQkd,MACfhL,SAAsC,QAA3BnT,EAAKiB,EAAQkS,gBAA6B,IAAPnT,EAAgBA,EAAK,SACnEwB,MAAOP,EAAQO,QAG3B,CACAm3B,QAAAA,CAASt+B,GACLqD,KAAKggB,MAAMib,SAASt+B,EACxB,CACAu+B,WAAAA,CAAYlM,GACRhvB,KAAKggB,MAAMkb,YAAYlM,EAC3B,CACA4K,KAAAA,GACI55B,KAAKygB,MAAMmG,MAAM0I,WAAWtvB,KAAKggB,MACrC,CACAga,QAAAA,GACIh6B,KAAKygB,MAAMwB,IAAI+X,UACnB,CACAC,WAAAA,GACI,OAAOj6B,KAAKygB,MAAMwB,IAAIgY,aAC1B,CACAC,aAAAA,GACIl6B,KAAKygB,MAAMwB,IAAIiY,eACnB,CACAM,wBAAAA,CAAyBW,GACrB,IAAI74B,EACJ,IAAI84B,EAAoH,QAA/F94B,EAAK64B,aAAqD,EAASA,EAAc5S,gBAA6B,IAAPjmB,GAAgBA,EAChJtC,KAAKg7B,sBAAsBv4B,MAAQ,IAAIgD,EAAoBzF,KAAKygB,MAAMwB,IAAIhK,uBAAuBvU,MACxFA,EAAMuc,WAAajgB,KAAKigB,WAGpBvc,EAAMuc,YACVjgB,KAAKigB,WACNjgB,KAAKygB,MAAMmG,MAAMmI,cAAc/uB,KAAKggB,SAJpChgB,KAAKgY,uBAAuB9T,KAAKR,EAMrC,IACA1D,KAAKygB,MAAMwB,IAAI0X,qBAAqBj2B,IAChC1D,KAAKygB,QAAUzgB,KAAKggB,MAAMS,OAG9BzgB,KAAK60B,qBAAqB3wB,KAAKR,EAAM,IACrC1D,KAAKygB,MAAMwB,IAAInC,mBAAkB,KAC7B9f,KAAKygB,QAAUzgB,KAAKggB,MAAMS,OAG1B2a,IAAsBp7B,KAAKy3B,gBAC3B2D,EAAoBp7B,KAAKy3B,cACzBz3B,KAAK46B,wBAAwB12B,KAAK,CAC9BqkB,SAAUvoB,KAAKy3B,gBAEvB,IAER,EC/GG,MAAM4D,WAAsB51B,EAC/B,UAAIqkB,GACA,OAAO9pB,KAAKorB,OAChB,CACA,SAAIzuB,GACA,OAAOqD,KAAKs7B,MAChB,CACA,SAAI7a,GACA,OAAOzgB,KAAKy5B,MAChB,CACA,YAAIzK,GACA,IAAI1sB,EACJ,OAAiC,QAAzBA,EAAKtC,KAAKu7B,iBAA8B,IAAPj5B,EAAgBA,EAAKtC,KAAK6sB,SAASmC,QAChF,CACArvB,WAAAA,CAAYhB,EAAIM,EAAWw7B,EAAc5N,EAAUqB,EAAczN,EAAOlV,EAAMhI,GAC1ExD,QACAC,KAAKrB,GAAKA,EACVqB,KAAK6sB,SAAWA,EAChB7sB,KAAKkuB,aAAeA,EACpBluB,KAAKuL,KAAOA,EACZvL,KAAKu7B,UAAYh4B,EAAQyrB,SACzBhvB,KAAKy5B,OAAShZ,EACdzgB,KAAKiiB,IAAM,IAAIoY,GAAqBr6B,KAAMA,KAAKy5B,OAAQ5M,EAAU5tB,EAAWw7B,GAC5Ez6B,KAAK8F,eAAe9F,KAAKiiB,IAAIsH,gBAAe,KACxCsD,EAASiG,eAAe9yB,KAAK,IAC7BA,KAAKiiB,IAAIqI,iBAAiB5mB,IAG1B1D,KAAKygB,MAAMwB,IAAIuI,QAAQ9mB,EAAM,IAC7B1D,KAAKiiB,IAAI8Y,qBAAqBr3B,IAC9B1D,KAAKygB,MAAMmG,MAAMoP,SAASh2B,KAAK,IAEvC,CACA0rB,IAAAA,CAAK5B,GACD9pB,KAAKorB,QAAUtB,EAAOA,OACtB9pB,KAAKuL,KAAKmgB,KAAK3J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG8H,GAAS,CAAE7H,IAAKjiB,KAAKiiB,IAAKiM,aAAcluB,KAAKkuB,gBAC5FluB,KAAKi7B,SAASnR,EAAOntB,MACzB,CACA8kB,KAAAA,GACI,MAAM/d,EAAQ,IAAIykB,GAClBnoB,KAAKiiB,IAAIiH,aAAahlB,KAAKR,GACvBA,EAAMxB,kBAGLlC,KAAKiiB,IAAIsG,UACVvoB,KAAKiiB,IAAIlB,WAEjB,CACApG,MAAAA,GACI,MAAO,CACHhc,GAAIqB,KAAKrB,GACT68B,iBAAkBx7B,KAAKuL,KAAKiwB,iBAC5Bf,aAAcz6B,KAAKuL,KAAKkvB,aACxB3Q,OAAQ/H,OAAO8J,KAAK7rB,KAAKorB,SAAW,CAAC,GAAG7pB,OAAS,EAC3CvB,KAAKorB,aACL3qB,EACN9D,MAAOqD,KAAKrD,MACZqyB,SAAUhvB,KAAKu7B,UAEvB,CACAN,QAAAA,CAASt+B,GACkBA,IAAUqD,KAAKrD,QAElCqD,KAAKs7B,OAAS3+B,EACdqD,KAAKuL,KAAKse,OAAO,CACbC,OAAQ,CACJA,OAAQ9pB,KAAKorB,QACbzuB,MAAOqD,KAAKrD,SAGpBqD,KAAKiiB,IAAI0Y,kBAAkBz2B,KAAK,CAAEvH,UAE1C,CACAu+B,WAAAA,CAAYlM,GACUA,IAAahvB,KAAKgvB,WAEhChvB,KAAKu7B,UAAYvM,EACjBhvB,KAAKiiB,IAAI6Y,qBAAqB52B,KAAK,CAC/B8qB,SAAUA,IAGtB,CACAnF,MAAAA,CAAOnmB,GACH,IAAIpB,EAEJtC,KAAKorB,QAAUrJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA4B,QAAvB1f,EAAKtC,KAAKorB,eAA4B,IAAP9oB,EAAgBA,EAAK,CAAC,GAAKoB,EAAMomB,QAKjH,IAAK,MAAM8B,KAAO7J,OAAO8J,KAAKnoB,EAAMomB,aACNrpB,IAAtBiD,EAAMomB,OAAO8B,WACN5rB,KAAKorB,QAAQQ,GAI5B5rB,KAAKuL,KAAKse,OAAO,CACbC,OAAQ,CACJA,OAAQ9pB,KAAKorB,QACbzuB,MAAOqD,KAAKrD,QAGxB,CACAo6B,iBAAAA,CAAkBtW,EAAOld,GACrBvD,KAAKy5B,OAAShZ,EACdzgB,KAAKiiB,IAAIxB,MAAQzgB,KAAKy5B,OACtB,MAAMgC,EAAiBz7B,KAAKy5B,OAAO7S,MAAMmI,cAAc/uB,MACjDuoB,EAAWvoB,KAAKygB,MAAMwB,IAAIsG,UAAYkT,GACtCl4B,aAAyC,EAASA,EAAQuzB,gBACxD92B,KAAKiiB,IAAIsG,WAAaA,GACtBvoB,KAAKiiB,IAAIpC,mBAAmB3b,KAAK,CAC7BqkB,SAAUvoB,KAAKygB,MAAMwB,IAAIsG,UAAYkT,IAI7Cz7B,KAAKiiB,IAAIhC,YAAcwb,GACvBz7B,KAAKiiB,IAAIjK,uBAAuB9T,KAAK,CACjC+b,UAAWwb,GAGvB,CACAzD,SAAAA,GACI,MAAMyD,EAAiBz7B,KAAKy5B,OAAO7S,MAAMmI,cAAc/uB,MACjDuoB,EAAWvoB,KAAKygB,MAAMwB,IAAIsG,UAAYkT,EACxCz7B,KAAKiiB,IAAIsG,WAAaA,GACtBvoB,KAAKiiB,IAAIpC,mBAAmB3b,KAAK,CAC7BqkB,SAAUvoB,KAAKygB,MAAMwB,IAAIsG,UAAYkT,IAGzCz7B,KAAKiiB,IAAIhC,YAAcwb,GACvBz7B,KAAKiiB,IAAIjK,uBAAuB9T,KAAK,CACjC+b,UAAWwb,GAGvB,CACAhnB,MAAAA,CAAOnL,EAAOC,GAEVvJ,KAAKiiB,IAAI6G,sBAAsB5kB,KAAK,CAChCoF,QACAC,OAAQA,IAEZvJ,KAAKuL,KAAKkJ,OAAOnL,EAAOC,EAC5B,CACA1H,OAAAA,GACI7B,KAAKiiB,IAAIpgB,UACT7B,KAAKuL,KAAK1J,SACd,ECrJJ,MAAM65B,GAA4B5R,IAC9B,MAAM6R,EAAM3zB,SAAS4zB,gBAAgB,6BAA8B,OACnED,EAAIE,eAAe,KAAM,SAAU/R,EAAOvgB,QAC1CoyB,EAAIE,eAAe,KAAM,QAAS/R,EAAOxgB,OACzCqyB,EAAIE,eAAe,KAAM,UAAW/R,EAAOgS,SAC3CH,EAAIE,eAAe,KAAM,cAAe,SACxCF,EAAIE,eAAe,KAAM,YAAa,SACtCF,EAAIz0B,UAAUjD,IAAI,gBAClB,MAAM+Y,EAAOhV,SAAS4zB,gBAAgB,6BAA8B,QAGpE,OAFA5e,EAAK6e,eAAe,KAAM,IAAK/R,EAAO9M,MACtC2e,EAAI5qB,YAAYiM,GACT2e,CAAG,EAEDI,GAAoBA,IAAML,GAAyB,CAC5DpyB,MAAO,KACPC,OAAQ,KACRuyB,QAAS,YACT9e,KAAM,+HCdH,MAAMgf,WAAmBv2B,EAC5B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,GACII,QAEAC,KAAK8pB,OAAS,CAAC,EACf9pB,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,iBAE1B+B,KAAKi8B,SAAWj0B,SAAS0K,cAAc,OACvC1S,KAAKi8B,SAASh+B,UAAY,yBAC1B+B,KAAKk8B,OAASl0B,SAAS0K,cAAc,OACrC1S,KAAKk8B,OAAOj+B,UAAY,wBACxB+B,KAAKk8B,OAAOnrB,YAAYgrB,MAExB/7B,KAAKke,SAASnN,YAAY/Q,KAAKi8B,UAC/Bj8B,KAAKke,SAASnN,YAAY/Q,KAAKk8B,QAE/Bl8B,KAAK8F,eAAenB,EAAsB3E,KAAKk8B,OAAQ,aAAcpP,IACjEA,EAAG3qB,gBAAgB,KAEvBnC,KAAKm8B,QACT,CACAtS,MAAAA,CAAOnmB,GACH1D,KAAK8pB,OAAS/H,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAK8pB,QAASpmB,EAAMomB,QAClE9pB,KAAKm8B,QACT,CACA1a,KAAAA,GACI,CAEJiK,IAAAA,CAAK5B,GACD9pB,KAAK8pB,OAASA,EACd9pB,KAAKi8B,SAASxL,YAAc3G,EAAOntB,MACnCgI,EAAsB3E,KAAKk8B,OAAQ,SAAUpP,IACzCA,EAAG3qB,iBACHnC,KAAK8pB,OAAO7H,IAAI2X,OAAO,GAE/B,CACAwC,aAAAA,CAAc3C,GACVz5B,KAAKm8B,QACT,CACAE,oBAAAA,CAAqBC,GACjBt8B,KAAKm8B,QACT,CACA1nB,MAAAA,CAAOiU,EAAQC,GACX,CAEJwT,MAAAA,GACQn8B,KAAKi8B,SAASxL,cAAgBzwB,KAAK8pB,OAAOntB,QAC1CqD,KAAKi8B,SAASxL,YAAczwB,KAAK8pB,OAAOntB,MAEhD,ECvDG,MAAM4/B,GACT,WAAIj9B,GACA,OAAOU,KAAKi8B,QAChB,CACA,OAAItK,GACA,OAAO3xB,KAAKw8B,IAChB,CACA78B,WAAAA,CAAYktB,EAAUluB,EAAI68B,EAAkBf,GACxCz6B,KAAK6sB,SAAWA,EAChB7sB,KAAKrB,GAAKA,EACVqB,KAAKw7B,iBAAmBA,EACxBx7B,KAAKy6B,aAAeA,EACpBz6B,KAAKi8B,SAAWj8B,KAAKy8B,uBAAuBz8B,KAAKrB,GAAI68B,GACrDx7B,KAAKw8B,KAAOx8B,KAAK08B,mBAAmB18B,KAAKrB,GAAI87B,EACjD,CACA/O,IAAAA,CAAK5B,GACD9pB,KAAKV,QAAQosB,KAAK5B,GAClB9pB,KAAK2xB,IAAIjG,KAAK5B,EAClB,CACAiN,iBAAAA,CAAkB0C,EAAQ6C,GACtB,CAEJ7nB,MAAAA,CAAOnL,EAAOC,GACV,IAAIjH,EAAIykB,EAC8B,QAArCA,GAAMzkB,EAAKtC,KAAKV,SAASmV,cAA2B,IAAPsS,GAAyBA,EAAGhf,KAAKzF,EAAIgH,EAAOC,EAC9F,CACAsgB,MAAAA,CAAOnmB,GACH,IAAIpB,EAAIykB,EAAIuR,EAAIqE,EACsB,QAArC5V,GAAMzkB,EAAKtC,KAAKV,SAASuqB,cAA2B,IAAP9C,GAAyBA,EAAGhf,KAAKzF,EAAIoB,GACjD,QAAjCi5B,GAAMrE,EAAKt4B,KAAK2xB,KAAK9H,cAA2B,IAAP8S,GAAyBA,EAAG50B,KAAKuwB,EAAI50B,EACnF,CACA7B,OAAAA,GACI,IAAIS,EAAIykB,EAAIuR,EAAIqE,EACuB,QAAtC5V,GAAMzkB,EAAKtC,KAAKV,SAASuC,eAA4B,IAAPklB,GAAyBA,EAAGhf,KAAKzF,GAC7C,QAAlCq6B,GAAMrE,EAAKt4B,KAAK2xB,KAAK9vB,eAA4B,IAAP86B,GAAyBA,EAAG50B,KAAKuwB,EAChF,CACAmE,sBAAAA,CAAuB99B,EAAIi+B,GACvB,OAAO58B,KAAK6sB,SAAStpB,QAAQs5B,gBAAgB,CACzCl+B,KACAm+B,KAAMF,GAEd,CACAF,kBAAAA,CAAmB/9B,EAAIi+B,GACnB,MAAME,EAAOF,QAAqDA,EAAgB58B,KAAK6sB,SAAStpB,QAAQw5B,oBACxG,GAAID,EAAM,CACN,GAAI98B,KAAK6sB,SAAStpB,QAAQm5B,mBAAoB,CAC1C,MAAMz9B,EAAYe,KAAK6sB,SAAStpB,QAAQm5B,mBAAmB,CACvD/9B,KACAm+B,SAEJ,OAAI79B,GAIO,IAAI+8B,EAEnB,CACAr5B,QAAQC,KAAM,2BAA0Bg6B,qDAC5C,CACA,OAAO,IAAIZ,EACf,EC1DG,MAAMgB,GACTr9B,WAAAA,CAAYktB,GACR7sB,KAAK6sB,SAAWA,CACpB,CACApQ,QAAAA,CAASwgB,EAAWxc,GAChB,IAAIne,EAAIykB,EACR,MAAMjnB,EAAUm9B,EAAUt+B,GACpBmrB,EAASmT,EAAUnT,OACnBntB,EAAQsgC,EAAUtgC,MAClBugC,EAAWD,EAAU1xB,KACrBiwB,EAAmB0B,EACnBA,EAAS59B,QAAQX,GACqB,QAArC2D,EAAK26B,EAAUzB,wBAAqC,IAAPl5B,EAAgBA,EAAK,UACnEm4B,EAAeyC,EACS,QAAvBnW,EAAKmW,EAASvL,WAAwB,IAAP5K,OAAgB,EAASA,EAAGpoB,GAC5Ds+B,EAAUxC,aACVlvB,EAAO,IAAIgxB,GAAmBv8B,KAAK6sB,SAAU/sB,EAAS07B,EAAkBf,GACxEza,EAAQ,IAAIqb,GAAcv7B,EAAS07B,EAAkBf,EAAcz6B,KAAK6sB,SAAU,IAAInK,GAAY1iB,KAAK6sB,UAAWpM,EAAOlV,EAAM,CACjIyjB,SAAUiO,EAAUjO,WAMxB,OAJAhP,EAAM0L,KAAK,CACP/uB,MAAOA,QAAqCA,EAAQmD,EACpDgqB,OAAQA,QAAuCA,EAAS,CAAC,IAEtD9J,CACX,ECxBG,MAAMmd,WAAkB13B,EAC3B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,GACII,QACAC,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,YAC1B,MAAMtB,EAAQqL,SAAS0K,cAAc,OACrC/V,EAAMsB,UAAY,kBAClB,MAAMm/B,EAAap1B,SAAS0K,cAAc,QAC1C0qB,EAAWrxB,MAAMsxB,SAAW,IAC5B,MAAM/9B,EAAU0I,SAAS0K,cAAc,OACvCpT,EAAQrB,UAAY,oBACpB+B,KAAKke,SAASnN,YAAYpU,GAC1BqD,KAAKke,SAASnN,YAAYzR,GAC1B,MAAMg+B,EAAmBt1B,SAAS0K,cAAc,OAChD4qB,EAAiBr/B,UAAY,oBAC7B,MAAMs/B,EAAcv1B,SAAS0K,cAAc,OAC3C6qB,EAAYt/B,UAAY,eACxBs/B,EAAYxsB,YAAYgrB,MACxBuB,EAAiBvsB,YAAYwsB,GAC7B5gC,EAAMoU,YAAYqsB,GAClBzgC,EAAMoU,YAAYusB,GAClBt9B,KAAK8F,eAAenB,EAAsB44B,EAAa,SAAUzQ,IAC7D,IAAIxqB,EACJwqB,EAAG3qB,iBACCnC,KAAKy5B,SACgB,QAApBn3B,EAAKtC,KAAK41B,YAAyB,IAAPtzB,GAAyBA,EAAG0e,YAAYhhB,KAAKy5B,QAC9E,IAER,CACA5P,MAAAA,CAAOlmB,GACH,CAEJ8d,KAAAA,GACI,CAEJhN,MAAAA,CAAOiU,EAAQC,GACX,CAEJ+C,IAAAA,CAAKN,GACDprB,KAAK41B,KAAOxK,EAAQ8C,aACpBluB,KAAKm8B,QACT,CACApF,iBAAAA,CAAkBtW,EAAO+c,GACrBx9B,KAAKy5B,OAAShZ,EACdzgB,KAAKm8B,QACT,CACAt6B,OAAAA,GACI9B,MAAM8B,SACV,CACAs6B,MAAAA,GACI,MAAMsB,KAAgBz9B,KAAK41B,MAAQ51B,KAAK41B,KAAK9wB,MAAQ,GACrDwC,EAAYtH,KAAKuE,QAAS,cAAek5B,EAC7C,ECvDJ,MAAMC,GAAsB,MACxB,IAAIxoB,EAAW,KAQf,OAPA,SAAmB3Q,GACX2Q,IAAa3Q,GAAwB,OAAb2Q,GACxB5N,EAAY4N,EAAU,qBAAqB,GAE/C5N,EAAY/C,EAAS,qBAAqB,GAC1C2Q,EAAW3Q,CACf,CAEH,EAV2B,GAWrB,MAAMo5B,WAAgBl4B,EACzB,0BAAIm4B,CAAuBn7B,GACvBzC,KAAKuD,QAAQq6B,uBAAyBn7B,CAC1C,CACA,2BAAIo7B,CAAwBp7B,GACxBzC,KAAKuD,QAAQs6B,wBAA0Bp7B,CAC3C,CACA9C,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,EACfvD,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAK89B,gBAAkB,IAAI96B,EAC3BhD,KAAK+9B,eAAiB/9B,KAAK89B,gBAAgBp6B,MAC3C1D,KAAK8F,eAAe9F,KAAKuW,aAAcvW,KAAK89B,iBAC5C99B,KAAKke,SAASjgB,UAAY,sBAC1B+B,KAAKg+B,YAAY,OACjBh+B,KAAKg+B,YAAY,UACjBh+B,KAAKg+B,YAAY,QACjBh+B,KAAKg+B,YAAY,SACjBh+B,KAAKg+B,YAAY,WACjBh+B,KAAKg+B,YAAY,YACjBh+B,KAAKg+B,YAAY,cACjBh+B,KAAKg+B,YAAY,eACjBh+B,KAAKke,SAASnN,YAAY/Q,KAAKuD,QAAQjE,SACvCU,KAAKuD,QAAQuI,UAAUiF,YAAY/Q,KAAKke,UAExCle,KAAKi+B,UAAU,CACX10B,OAAQvJ,KAAKuD,QAAQgG,OACrBD,MAAOtJ,KAAKuD,QAAQ+F,MACpBD,IAAKrJ,KAAKuD,QAAQ8F,IAClBD,KAAMpJ,KAAKuD,QAAQ6F,MAE3B,CACA60B,SAAAA,CAAUC,QAAM,IAANA,IAAAA,EAAS,CAAC,GACa,iBAAlBA,EAAO30B,SACdvJ,KAAKke,SAASnS,MAAMxC,OAAU,GAAE20B,EAAO30B,YAEf,iBAAjB20B,EAAO50B,QACdtJ,KAAKke,SAASnS,MAAMzC,MAAS,GAAE40B,EAAO50B,WAEhB,iBAAf40B,EAAO70B,MACdrJ,KAAKke,SAASnS,MAAM1C,IAAO,GAAE60B,EAAO70B,SAEb,iBAAhB60B,EAAO90B,OACdpJ,KAAKke,SAASnS,MAAM3C,KAAQ,GAAE80B,EAAO90B,UAEzC,MAAM+0B,EAAgBn+B,KAAKuD,QAAQuI,UAAUtC,wBACvC40B,EAAcp+B,KAAKke,SAAS1U,wBAG5B60B,EAAU3zB,KAAKD,IAAI,EAAGzK,KAAKs+B,gBAAgBF,EAAY90B,QAEvDi1B,EAA0D,iBAAzCv+B,KAAKuD,QAAQs6B,wBAC9BnzB,KAAKD,IAAI,EAAGzK,KAAKw+B,iBAAiBJ,EAAY70B,SAC9C,EACAH,EAAOmB,EAAM6zB,EAAYh1B,KAAO+0B,EAAc/0B,MAAOi1B,EAAS3zB,KAAKD,IAAI,EAAG0zB,EAAc70B,MAAQ80B,EAAY90B,MAAQ+0B,IACpHh1B,EAAMkB,EAAM6zB,EAAY/0B,IAAM80B,EAAc90B,KAAMk1B,EAAS7zB,KAAKD,IAAI,EAAG0zB,EAAc50B,OAAS60B,EAAY70B,OAASg1B,IACzHv+B,KAAKke,SAASnS,MAAM3C,KAAQ,GAAEA,MAC9BpJ,KAAKke,SAASnS,MAAM1C,IAAO,GAAEA,MAC7BrJ,KAAKuW,aAAarS,MACtB,CACAyW,MAAAA,GACI,MAAM7O,EAAY9L,KAAKuD,QAAQuI,UAAUtC,wBACnCjF,EAAUvE,KAAKke,SAAS1U,wBAC9B,MAAO,CACHH,IAAK9E,EAAQ8E,IAAMyC,EAAUzC,IAC7BD,KAAM7E,EAAQ6E,KAAO0C,EAAU1C,KAC/BE,MAAO/E,EAAQ+E,MACfC,OAAQhF,EAAQgF,OAExB,CACAk1B,SAAAA,CAAUC,EAAYn7B,QAAO,IAAPA,IAAAA,EAAU,CAAEkvB,YAAY,IAC1C,MAAMkM,EAAO,IAAIz4B,EACX04B,EAAQA,KACV,IAAI5pB,EAAS,KACb,MAAM/B,EAAU,IACTpL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMqL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjC2yB,EAAKl8B,MAAQ,IAAIgD,EAAoB,CACjC5D,QAASA,KACL,IAAK,MAAMqR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAEL1H,EAA4BsE,OAAQ,aAAczE,IACjD,MAAMg6B,EAAgBn+B,KAAKuD,QAAQuI,UAAUtC,wBACvC2F,EAAIhL,EAAEiP,QAAU+qB,EAAc/0B,KAC9B0c,EAAI3hB,EAAEkP,QAAU8qB,EAAc90B,IACpC/B,EAAYtH,KAAKke,SAAU,gCAAgC,GAC3D,MAAMkgB,EAAcp+B,KAAKke,SAAS1U,wBACnB,OAAXwL,IACAA,EAAS,CACL7F,EAAGhL,EAAEiP,QAAUgrB,EAAYh1B,KAC3B0c,EAAG3hB,EAAEkP,QAAU+qB,EAAY/0B,MAGnC,MAAMg1B,EAAU3zB,KAAKD,IAAI,EAAGzK,KAAKs+B,gBAAgBF,EAAY90B,QACvDi1B,EAAU7zB,KAAKD,IAAI,EAAGzK,KAAKuD,QAAQs6B,wBACnC79B,KAAKw+B,iBAAiBJ,EAAY70B,QAClC,GACAH,EAAOmB,EAAM4E,EAAI6F,EAAO7F,GAAIkvB,EAAS3zB,KAAKD,IAAI,EAAG0zB,EAAc70B,MAAQ80B,EAAY90B,MAAQ+0B,IAC3Fh1B,EAAMkB,EAAMub,EAAI9Q,EAAO8Q,GAAIyY,EAAS7zB,KAAKD,IAAI,EAAG0zB,EAAc50B,OAAS60B,EAAY70B,OAASg1B,IAClGv+B,KAAKi+B,UAAU,CAAE50B,MAAKD,QAAO,IAC7B9E,EAA4BsE,OAAQ,WAAW,KAC/CtB,EAAYtH,KAAKke,SAAU,gCAAgC,GAC3DygB,EAAK98B,UACL7B,KAAK89B,gBAAgB55B,MAAM,IAC5B,EAEPlE,KAAK8F,eAAe64B,EAAMh6B,EAAsB+5B,EAAY,aAAch7B,IAClEA,EAAMxB,iBACNwB,EAAMvB,iBAKN8G,EAAsBvF,IAG1Bk7B,GAAO,IACPj6B,EAAsB3E,KAAKuD,QAAQjE,QAAS,aAAcoE,IACtDA,EAAMxB,kBAKN+G,EAAsBvF,IAGtBA,EAAM+qB,UACNmQ,GACJ,IACAj6B,EAAsB3E,KAAKuD,QAAQjE,QAAS,aAAa,KACzDo+B,GAAoB19B,KAAKke,SAAS,IACnC,IACHwf,GAAoB19B,KAAKke,UACrB3a,EAAQkvB,YACRmM,GAER,CACAZ,WAAAA,CAAY9jB,GACR,MAAM2kB,EAAsB72B,SAAS0K,cAAc,OACnDmsB,EAAoB5gC,UAAa,oBAAmBic,IACpDla,KAAKke,SAASnN,YAAY8tB,GAC1B,MAAMF,EAAO,IAAIz4B,EACjBlG,KAAK8F,eAAe64B,EAAMh6B,EAAsBk6B,EAAqB,aAAc16B,IAC/EA,EAAEhC,iBACF,IAAI28B,EAAgB,KACpB,MAAM7rB,EAAU,IACTpL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMqL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjC2yB,EAAKl8B,MAAQ,IAAIgD,EAAoBnB,EAA4BsE,OAAQ,aAAczE,IACnF,MAAMg6B,EAAgBn+B,KAAKuD,QAAQuI,UAAUtC,wBACvC40B,EAAcp+B,KAAKke,SAAS1U,wBAC5Bsc,EAAI3hB,EAAEkP,QAAU8qB,EAAc90B,IAC9B8F,EAAIhL,EAAEiP,QAAU+qB,EAAc/0B,KAUpC,IAAIC,EACAE,EACAH,EACAE,EAZkB,OAAlBw1B,IAEAA,EAAgB,CACZC,UAAWjZ,EACXkZ,eAAgBZ,EAAY70B,OAC5B01B,UAAW9vB,EACX+vB,cAAed,EAAY90B,QAOnC,MAAM61B,EAAUA,KACZ91B,EAAMkB,EAAMub,GAAIrY,OAAO2xB,UAAWN,EAAcC,UAC5CD,EAAcE,eACdb,EAAc50B,OACZvJ,KAAKw+B,iBAAiBL,EAAc50B,QACpCmB,KAAKD,IAAI,EAAGq0B,EAAcC,UACxBD,EAAcE,eACdrB,GAAQ0B,iBAChB91B,EACIu1B,EAAcC,UACVD,EAAcE,eACd31B,CAAG,EAETi2B,EAAaA,KACfj2B,EACIy1B,EAAcC,UACVD,EAAcE,eACtBz1B,EAASgB,EAAMub,EAAIzc,EAAKA,EAAM,GAEO,iBAD1BrJ,KAAKuD,QACPs6B,yBACFx0B,EACCrJ,KAAKuD,QAAQs6B,wBACfF,GAAQ0B,eAAgB5xB,OAAO2xB,UAAU,EAE7CG,EAAWA,KACbn2B,EAAOmB,EAAM4E,GAAI1B,OAAO2xB,UAAWN,EAAcG,UAC7CH,EAAcI,cACdf,EAAc70B,MACZtJ,KAAKs+B,gBAAgBH,EAAc70B,OACnCoB,KAAKD,IAAI,EAAGq0B,EAAcG,UACxBH,EAAcI,cACdvB,GAAQ6B,gBAChBl2B,EACIw1B,EAAcG,UACVH,EAAcI,cACd91B,CAAI,EAEVq2B,EAAYA,KACdr2B,EACI01B,EAAcG,UACVH,EAAcI,cACtB51B,EAAQiB,EAAM4E,EAAI/F,EAAMA,EAAO,GAEK,iBADzBpJ,KAAKuD,QACPq6B,wBACFx0B,EACCpJ,KAAKuD,QAAQq6B,uBACfD,GAAQ6B,cAAe/xB,OAAO2xB,UAAU,EAElD,OAAQllB,GACJ,IAAK,MACDilB,IACA,MACJ,IAAK,SACDG,IACA,MACJ,IAAK,OACDC,IACA,MACJ,IAAK,QACDE,IACA,MACJ,IAAK,UACDN,IACAI,IACA,MACJ,IAAK,WACDJ,IACAM,IACA,MACJ,IAAK,aACDH,IACAC,IACA,MACJ,IAAK,cACDD,IACAG,IAGRz/B,KAAKi+B,UAAU,CAAE10B,SAAQD,QAAOD,MAAKD,QAAO,IAC5C,CACAvH,QAASA,KACL,IAAK,MAAMqR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAEL1H,EAA4BsE,OAAQ,WAAW,KAC9C+1B,EAAK98B,UACL7B,KAAK89B,gBAAgB55B,MAAM,IAC5B,IAEX,CACAo6B,eAAAA,CAAgBh1B,GACZ,MAAmD,iBAAxCtJ,KAAKuD,QAAQq6B,uBACbt0B,EAAQtJ,KAAKuD,QAAQq6B,uBAEzB,CACX,CACAY,gBAAAA,CAAiBj1B,GACb,MAAoD,iBAAzCvJ,KAAKuD,QAAQs6B,wBACbt0B,EAASvJ,KAAKuD,QAAQs6B,wBAE1Bt0B,CACX,CACA1H,OAAAA,GACI7B,KAAKke,SAAS9W,SACdrH,MAAM8B,SACV,EAEJ87B,GAAQ0B,eAAiB,GACzB1B,GAAQ6B,cAAgB,GC9SjB,MAAME,WAAmCj6B,EAC5C9F,WAAAA,CAAY8gB,EAAOkf,GACf5/B,QACAC,KAAKygB,MAAQA,EACbzgB,KAAK2/B,QAAUA,EACf3/B,KAAK8F,eAAe65B,EACxB,CACAlqB,QAAAA,CAASyoB,GACLl+B,KAAK2/B,QAAQ1B,UAAUC,EAC3B,ECVG,MAAM0B,GAAuC,IACvCC,GAA0C,IAA1CA,GAAoD,ICO1D,MAAMC,WAA+Br6B,EACxC9F,WAAAA,CAAY4E,GACRxE,QACAC,KAAKuE,QAAUA,EACfvE,KAAKZ,IAAM,CAAC,EACZY,KAAKyD,WAAY,EACjBzD,KAAK8F,eAAe3E,EAAWoE,MAAK,KAChC,IAAK,MAAM9C,KAASsf,OAAO7C,OAAOlf,KAAKZ,KACnCqD,EAAM2D,WAAWvE,UACjBY,EAAMs9B,QAAQl+B,UAElB7B,KAAKyD,WAAY,CAAI,IAE7B,CACAyrB,OAAAA,CAAQlP,GACJ,GAAIhgB,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAK,CACxB,MAAM,WAAEyH,EAAU,QAAE25B,GAAY//B,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAInD,OAHAyH,EAAWvE,UACXk+B,EAAQl+B,iBACD7B,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,KACnB,CACX,CACA,OAAO,CACX,CACAwwB,MAAAA,CAAO5rB,GACH,MAAM,MAAEyc,EAAK,mBAAEoP,GAAuB7rB,EACtC,IAAKvD,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAK,CACzB,MAAM4F,EAhClB,WACI,MAAMA,EAAUyD,SAAS0K,cAAc,OAEvC,OADAnO,EAAQ8mB,UAAY,EACb9mB,CACX,CA4B4By7B,GAChBz7B,EAAQtG,UAAY,oBACpB+B,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAM,CACrBqhB,QACA5Z,WAAYjF,EAAWmE,KACvBy6B,QAAS5+B,EAAWmE,KACpBf,UAER,CACA,MAAM07B,EAAiBjgC,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAI4F,QAC1Cyb,EAAMzU,KAAKjM,QAAQiF,QAAQiV,gBAAkBymB,GAC7CA,EAAelvB,YAAYiP,EAAMzU,KAAKjM,QAAQiF,SAE9C07B,EAAezmB,gBAAkBxZ,KAAKuE,SACtCvE,KAAKuE,QAAQwM,YAAYkvB,GAE7B,MAAMvxB,EAASA,KAEX,MAAM+L,EAAMvR,EAAuBkmB,EAAmB7qB,SAChD27B,EAAOh3B,EAAuBlJ,KAAKuE,SACzC07B,EAAel0B,MAAM3C,KAAUqR,EAAIrR,KAAO82B,EAAK92B,KAAlB,KAC7B62B,EAAel0B,MAAM1C,IAASoR,EAAIpR,IAAM62B,EAAK72B,IAAjB,KAC5B42B,EAAel0B,MAAMzC,MAAS,GAAEmR,EAAInR,UACpC22B,EAAel0B,MAAMxC,OAAU,GAAEkR,EAAIlR,WACrCjC,EAAY24B,EAAgB,0BAA6D,aAAlCjgB,EAAMS,MAAMwB,IAAIhI,SAASzV,KAAoB,EAElG27B,EAAoBA,KAClBngB,EAAMiC,IAAIhC,WACVvR,IAEJuxB,EAAel0B,MAAMwgB,QAAUvM,EAAMiC,IAAIhC,UAAY,GAAK,MAAM,EAE9D7Z,EAAa,IAAIX,EAQvB,IAAIye,GAAoB+b,EAAgB,CACpCxb,UAAYtgB,IACRirB,EAAmBZ,WAAWhJ,IAAIf,UAAUtgB,EAAE,EAElDmgB,YAAcngB,IACVirB,EAAmBZ,WAAWhJ,IAAIlB,YAAYngB,EAAE,EAEpDqgB,YAAcrgB,IACVirB,EAAmBZ,WAAWhJ,IAAIhB,YAAYrgB,EAAE,EAEpDugB,OAASvgB,IACLirB,EAAmBZ,WAAWhJ,IAAId,OAAOvgB,EAAE,EAE/CogB,WAAapgB,IACTirB,EAAmBZ,WAAWhJ,IAAIjB,WAAWpgB,EAAE,IAEnD6b,EAAMiC,IAAIhK,uBAAuBvU,IAMjCy8B,GAAmB,IACnBngB,EAAMiC,IAAI8G,uBAAsB,KAC3B/I,EAAMiC,IAAIhC,WAGfvR,GAAQ,KAwBZ,OAtBA1O,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAIohC,QAAU5+B,EAAWoE,MAAK,KAC7C,IAAIjD,EACA0d,EAAMzU,KAAKjM,QAAQiF,QAAQiV,gBAAkBymB,GAC7CA,EAAeptB,YAAYmN,EAAMzU,KAAKjM,QAAQiF,SAEV,QAAvCjC,EAAK29B,EAAezmB,qBAAkC,IAAPlX,GAAyBA,EAAGuQ,YAAYotB,EAAe,IAE3G77B,gBAAe,KACPpE,KAAK0F,YAQTy6B,GAAmB,IAGvBngC,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAIyH,WAAWvE,UAElC7B,KAAKZ,IAAI4gB,EAAMiC,IAAItjB,IAAIyH,WAAaA,EAC7B65B,CACX,EC/HJ,IAAIG,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUn+B,GAAS,IAAMo+B,EAAKL,EAAU51B,KAAKnI,GAAS,CAAE,MAAO0B,GAAKw8B,EAAOx8B,EAAI,CAAE,CAC1F,SAAS28B,EAASr+B,GAAS,IAAMo+B,EAAKL,EAAiB,MAAE/9B,GAAS,CAAE,MAAO0B,GAAKw8B,EAAOx8B,EAAI,CAAE,CAC7F,SAAS08B,EAAK71B,GAJlB,IAAevI,EAIauI,EAAO+1B,KAAOL,EAAQ11B,EAAOvI,QAJ1CA,EAIyDuI,EAAOvI,MAJhDA,aAAiB89B,EAAI99B,EAAQ,IAAI89B,GAAE,SAAUG,GAAWA,EAAQj+B,EAAQ,KAIjBu+B,KAAKJ,EAAWE,EAAW,CAC7GD,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAK11B,OAClE,GACJ,EAIO,MAAMs2B,WAAqBz7B,EAC9B,UAAImD,GACA,IAAItG,EAAIykB,EACR,OAAoF,QAA5EA,EAA6B,QAAvBzkB,EAAKtC,KAAKmhC,eAA4B,IAAP7+B,OAAgB,EAASA,EAAGG,aAA0B,IAAPskB,EAAgBA,EAAK,IACrH,CACApnB,WAAAA,CAAYykB,EAAQnmB,EAAWsF,GAC3BxD,QACAC,KAAKokB,OAASA,EACdpkB,KAAK/B,UAAYA,EACjB+B,KAAKuD,QAAUA,EACfvD,KAAKohC,aAAe,IAAIp+B,EACxBhD,KAAKqhC,YAAcrhC,KAAKohC,aAAa19B,MACrC1D,KAAKshC,YAAc,IAAIt+B,EACvBhD,KAAKuhC,WAAavhC,KAAKshC,YAAY59B,MACnC1D,KAAKmhC,QAAU,KACfnhC,KAAK8F,eAAe9F,KAAKohC,aAAcphC,KAAKshC,YAAa,CACrDz/B,QAASA,KACL7B,KAAK45B,OAAO,GAGxB,CACA4H,UAAAA,GACI,IAAKxhC,KAAKmhC,QACN,OAAO,KAEX,MAAM/3B,EAAOpJ,KAAKmhC,QAAQ1+B,MAAMg/B,QAIhC,MAAO,CAAEp4B,IAHGrJ,KAAKmhC,QAAQ1+B,MAAMi/B,QAGjBt4B,OAAME,MAFNtJ,KAAKmhC,QAAQ1+B,MAAMk/B,WAENp4B,OADZvJ,KAAKmhC,QAAQ1+B,MAAMm/B,YAEtC,CACAhI,KAAAA,GACI,IAAIt3B,EAAIykB,EACJ/mB,KAAKmhC,UACLnhC,KAAKohC,aAAal9B,OACyB,QAA1C6iB,GAAMzkB,EAAKtC,KAAKuD,SAAS89B,mBAAgC,IAAPta,GAAyBA,EAAGhf,KAAKzF,EAAI,CACpF3D,GAAIqB,KAAKokB,OACTxb,OAAQ5I,KAAKmhC,QAAQ1+B,QAEzBzC,KAAKmhC,QAAQ/6B,WAAWvE,UACxB7B,KAAKmhC,QAAQ1+B,MAAMm3B,QACnB55B,KAAKmhC,QAAU,KACfnhC,KAAKshC,YAAYp9B,OAEzB,CACA29B,IAAAA,GACI,IAAIv/B,EAAIykB,EACR,OAAOqZ,GAAUpgC,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAKmhC,QACL,MAAM,IAAI5+B,MAAM,6CAEpB,MAAMu/B,EAAO,GAAE9hC,KAAKuD,QAAQu+B,MACtBC,EAAWhgB,OAAOigB,QAAQ,CAC5B34B,IAAKrJ,KAAKuD,QAAQ8F,IAClBD,KAAMpJ,KAAKuD,QAAQ6F,KACnBE,MAAOtJ,KAAKuD,QAAQ+F,MACpBC,OAAQvJ,KAAKuD,QAAQgG,SAEpBnK,KAAIJ,IAAA,IAAE4sB,EAAKnpB,GAAMzD,EAAA,MAAM,GAAE4sB,KAAOnpB,GAAO,IACvCw/B,KAAK,KAIJC,EAAiBt5B,OAAOi5B,KAAKC,EAAK9hC,KAAKokB,OAAQ2d,GACrD,IAAKG,EAID,OAAO,KAEX,MAAM97B,EAAa,IAAIX,EACvBzF,KAAKmhC,QAAU,CAAE1+B,MAAOy/B,EAAgB97B,cACxCA,EAAWN,eAAexB,EAA4BsE,OAAQ,gBAAgB,KAO1E5I,KAAK45B,OAAO,KAEhB,MAAM9tB,EAAY9L,KAAKmiC,8BAQvB,OAPIniC,KAAK/B,WACL6N,EAAU5E,UAAUjD,IAAIjE,KAAK/B,WAEQ,QAAxC8oB,GAAMzkB,EAAKtC,KAAKuD,SAAS6+B,iBAA8B,IAAPrb,GAAyBA,EAAGhf,KAAKzF,EAAI,CAClF3D,GAAIqB,KAAKokB,OACTxb,OAAQs5B,IAEL,IAAIzB,SAASC,IAChBwB,EAAez9B,iBAAiB,UAAWN,QAI3C+9B,EAAez9B,iBAAiB,QAAQ,KAIpC,MAAM49B,EAAmBH,EAAel6B,SACxCq6B,EAAiB1lC,MAAQqL,SAASrL,MAClC0lC,EAAiBnV,KAAKnc,YAAYjF,G5Cc/C,SAAmB9D,EAAUs6B,GAChC,MAAMC,EAAc/gC,MAAM+D,KAAK+8B,GAC/B,IAAK,MAAME,KAAcD,EAAa,CAClC,GAAIC,EAAWC,KAAM,CACjB,MAAMC,EAAO16B,EAAS0K,cAAc,QACpCgwB,EAAKD,KAAOD,EAAWC,KACvBC,EAAKl+B,KAAOg+B,EAAWh+B,KACvBk+B,EAAKC,IAAM,aACX36B,EAAS46B,KAAK7xB,YAAY2xB,EAC9B,CACA,IAAIG,EAAW,GACf,IACQL,EAAWM,WACXD,EAAWrhC,MAAM+D,KAAKi9B,EAAWM,UAAU1jC,KAAK2jC,GAASA,EAAKC,UAEtE,CACA,MAAOC,GACH,CAEJ,IAAK,MAAMF,KAAQF,EAAU,CACzB,MAAM92B,EAAQ/D,EAAS0K,cAAc,SACrC3G,EAAMgF,YAAY/I,EAASk7B,eAAeH,IAC1C/6B,EAAS46B,KAAK7xB,YAAYhF,EAC9B,CACJ,CACJ,C4CtCoBo3B,CAAUd,EAAkBz5B,OAAOZ,SAASu6B,aAK5Cj+B,EAA4B49B,EAAgB,gBAAgB,KAIxDliC,KAAK45B,OAAO,IAEhB8G,EAAQ50B,EAAU,GACpB,GAEV,GACJ,CACAq2B,2BAAAA,GACI,MAAMzoB,EAAK1R,SAAS0K,cAAc,OAQlC,OAPAgH,EAAGxS,UAAUjD,IAAI,oBACjByV,EAAG/a,GAAK,mBACR+a,EAAG3N,MAAM0J,SAAW,WACpBiE,EAAG3N,MAAMzC,MAAQ,OACjBoQ,EAAG3N,MAAMxC,OAAS,OAClBmQ,EAAG3N,MAAM1C,IAAM,MACfqQ,EAAG3N,MAAM3C,KAAO,MACTsQ,CACX,ECpHJ,MAAM0pB,GAA6B,CAC/Bvb,eAAgB,CAAErjB,KAAM,SAAU/B,MAAO,IACzCqC,KAAM,CAAEN,KAAM,SAAU/B,MAAO,KAEnC,SAAS4gC,GAA2B9/B,GAChC,MAAM0f,EAAc1f,EAAQgC,KAAK0d,YAClB,IAAI1f,EAAQgC,KAAK8b,QAAQjiB,KAAK4gB,IACzC,MAAMsjB,EAAe//B,EAAQgC,KAAKqhB,MAAMpF,YAAYxB,GAEpD,OADAzc,EAAQgC,KAAKqhB,MAAMqI,gBAAgBC,QAAQlP,GACpCsjB,CAAY,IAEhBxhC,SAASke,IACZzc,EAAQwH,GAAG6b,MAAMyI,UAAUrP,EAAO,CAC9B8W,cAAe7T,IAAgBjD,EAC/BiX,oBAAoB,GACtB,GAEV,CAgFO,MAAMsM,WAA0BzkB,GACnC,eAAI5R,GACA,OAAOlN,KAAKmf,SAASjS,WACzB,CACA,eAAIyV,GACA,OAAO3iB,KAAKqhB,OAAO9f,MACvB,CACA,UAAI8f,GACA,OAAOrhB,KAAKif,OAAOukB,SAAS/iB,GAAUA,EAAMY,QAChD,CACA,WAAI9d,GACA,OAAOvD,KAAKyjC,QAChB,CACA,eAAIxgB,GACA,MAAM7D,EAAcpf,KAAKof,YACzB,GAAKA,EAGL,OAAOA,EAAY6D,WACvB,CACA,YAAI+L,GACA,IAAI1sB,EACJ,OAA+C,QAAvCA,EAAKtC,KAAKuD,QAAQqwB,uBAAoC,IAAPtxB,EAAgBA,EAAK,iBAChF,CACA,OAAI2f,GACA,OAAOjiB,KAAK41B,IAChB,CACAj2B,WAAAA,CAAY4D,GACR,IAAIjB,EACJvC,MAAM,CACF2Q,oBAAoB,EACpBxD,YAAaf,EAAYkB,WACzB2D,OAAQzN,EAAQkwB,YACV,CAAEliB,gBAAiB,oBACnB9Q,EACN+Y,cAAejW,EAAQiW,cACvB8F,oBAAqB/b,EAAQ+b,oBAC7BvE,OAAQxX,EAAQwX,SAEpB/a,KAAK0jC,YAAc/4B,IACnB3K,KAAK2jC,cAAgB,IAAI3G,GAA4Bh9B,MACrDA,KAAKu0B,UAAY,KACjBv0B,KAAK4jC,iBAAmB,IAAI5gC,EAC5BhD,KAAK+iB,gBAAkB/iB,KAAK4jC,iBAAiBlgC,MAC7C1D,KAAK6jC,iBAAmB,IAAI7gC,EAC5BhD,KAAK8iB,gBAAkB9iB,KAAK6jC,iBAAiBngC,MAC7C1D,KAAK4tB,WAAa,IAAI5qB,EACtBhD,KAAK6hB,UAAY7hB,KAAK4tB,WAAWlqB,MACjC1D,KAAKk1B,YAAc,IAAIlyB,EACvBhD,KAAK4iB,WAAa5iB,KAAKk1B,YAAYxxB,MACnC1D,KAAKolB,mBAAqB,IAAIpiB,EAC9BhD,KAAK6iB,kBAAoB7iB,KAAKolB,mBAAmB1hB,MACjD1D,KAAK01B,0BAA4B,IAAI1yB,EACrChD,KAAKgjB,yBAA2BhjB,KAAK01B,0BAA0BhyB,MAC/D1D,KAAKw1B,kBAAoB,IAAIxyB,EAC7BhD,KAAKqiB,iBAAmBriB,KAAKw1B,kBAAkB9xB,MAC/C1D,KAAKm1B,eAAiB,IAAInyB,EAC1BhD,KAAKmiB,cAAgBniB,KAAKm1B,eAAezxB,MACzC1D,KAAK8jC,qBAAuB,IAAI9gC,EAChChD,KAAKshB,oBAAsBthB,KAAK8jC,qBAAqBpgC,MACrD1D,KAAKy1B,wBAA0B,IAAIzyB,EACnChD,KAAKuiB,uBAAyBviB,KAAKy1B,wBAAwB/xB,MAC3D1D,KAAK+jC,gBAAkB,IAAI/gC,EAC3BhD,KAAKgkC,gBAAkB,GACvBhkC,KAAKikC,cAAgB,GACrBjkC,KAAKkkC,cAAgB,EACrBlkC,KAAKmkC,kBAAoB,IAAInhC,EAC7BhD,KAAKsiB,iBAAmBtiB,KAAKmkC,kBAAkBzgC,MAC/C1D,KAAKokC,eAAiB,IAAIphC,EAC1BhD,KAAKoiB,cAAgBpiB,KAAKokC,eAAe1gC,MACzC1D,KAAK46B,wBAA0B,IAAI53B,EACnChD,KAAKwiB,uBAAyBxiB,KAAK46B,wBAAwBl3B,MAC3D1D,KAAKqkC,SAAU,EACf,MAAMC,EAASt8B,SAAS0K,cAAc,OACtC4xB,EAAOrmC,UAAY,8BACnB+B,KAAKmf,SAAS5a,QAAQwM,YAAYuzB,GAClCtkC,KAAKi2B,uBAAyB,IAAI6J,GAAuBwE,GACzDh9B,EAAYtH,KAAKmf,SAAS5a,QAAS,eAAe,GAClD+C,EAAYtH,KAAKuE,QAAS,aAAchB,EAAQswB,OAChD7zB,KAAK8F,eAAe9F,KAAKi2B,uBAAwBj2B,KAAK4jC,iBAAkB5jC,KAAK6jC,iBAAkB7jC,KAAKolB,mBAAoBplB,KAAKy1B,wBAAyBz1B,KAAKm1B,eAAgBn1B,KAAKw1B,kBAAmBx1B,KAAK8jC,qBAAsB9jC,KAAK4tB,WAAY5tB,KAAKk1B,YAAal1B,KAAK+jC,gBAAiB/jC,KAAKokC,eAAgBpkC,KAAKmkC,kBAAmBnkC,KAAK46B,wBAAyB56B,KAAK01B,0BAA2B11B,KAAK4f,UAAUlc,IACxY1D,KAAKqkC,SACNrkC,KAAKokC,eAAelgC,KAAKR,EAC7B,IACA1D,KAAK0f,aAAahc,IACb1D,KAAKqkC,SACNrkC,KAAKmkC,kBAAkBjgC,KAAKR,EAChC,IACA1D,KAAK8f,mBAAmBpc,IACnB1D,KAAKqkC,SACNrkC,KAAK46B,wBAAwB12B,KAAKR,EACtC,IACAxC,EAAME,IAAIpB,KAAK4f,SAAU5f,KAAK0f,YAA9Bxe,EAA2C,KAC3ClB,KAAKukC,iBAAiB,IACtBrjC,EAAME,IAAIpB,KAAKmiB,cAAeniB,KAAKqiB,iBAAkBriB,KAAKuiB,uBAA1DrhB,EAAkF,KAClFlB,KAAK+f,yBAAyB7b,MAAM,IACpC/C,EAAWoE,MAAK,KAEhB,IAAK,MAAMkb,IAAS,IAAIzgB,KAAKgkC,iBACzBvjB,EAAM5e,UAGV,IAAK,MAAM4e,IAAS,IAAIzgB,KAAKikC,eACzBxjB,EAAMra,WAAWvE,SACrB,KAEJ7B,KAAKyjC,SAAWlgC,EAChBvD,KAAKwkC,gBAAkB,IAAIvf,GAAWjlB,KAAKuE,QAAS,CAChD2hB,kBAAmBA,CAACxiB,EAAO+R,KACvB,MAAM/U,EAAOG,IACb,GAAIH,EACA,OAAIA,EAAKd,SAAWI,KAAKrB,KAGR,WAAb8W,GAGgC,IAAzBzV,KAAKmf,SAAS5d,QAI7B,GAAiB,WAAbkU,GAAkD,IAAzBzV,KAAKmf,SAAS5d,OAMvC,OAAO,EAEX,MAAM22B,EAAa,IAAI/E,GAA+BzvB,EAAO,OAAQ+R,EAAU5U,GAE/E,OADAb,KAAK01B,0BAA0BxxB,KAAKg0B,GAC7BA,EAAW9E,UAAU,EAEhC7N,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDsB,aAAuD,QAAxCvkB,EAAKtC,KAAKuD,QAAQuwB,wBAAqC,IAAPxxB,EAAgBA,EAAK8gC,KAExFpjC,KAAK8F,eAAe9F,KAAKwkC,gBAAiBxkC,KAAKwkC,gBAAgB3hB,mBAAmBnf,IAC1E1D,KAAKmf,SAAS5d,OAAS,GAAwB,WAAnBmC,EAAM+R,UAItCzV,KAAKolB,mBAAmBlhB,KAAK,IAAIkuB,GAA6B1uB,EAAO,CACjE2uB,KAAM,OACNrS,WAAOvf,EACPwhB,IAAKjiB,KAAK41B,KACVnV,WAAOhgB,EACPE,QAASE,IACV,IACHb,KAAKwkC,gBAAgB9f,QAAQhhB,IAC7B,IAAIpB,EACJ,MAAM61B,EAAgB,IAAInE,GAAsB,CAC5CpP,YAAalhB,EAAMkhB,YACnBnP,SAAU/R,EAAM+R,SAChBuK,WAAOvf,EACPwhB,IAAKjiB,KAAK41B,KACVnV,WAAOhgB,EACPE,QAASE,EACTwxB,KAAM,SAGV,GADAryB,KAAKk1B,YAAYhxB,KAAKi0B,GAClBA,EAAcj2B,iBACd,OAEJ,MAAMxB,EAAOG,IACTH,EACAV,KAAK+5B,iBAAiB,CAClBx0B,KAAM,CACF1F,QAASa,EAAKb,QACdC,QAAiC,QAAvBwC,EAAK5B,EAAKZ,eAA4B,IAAPwC,EAAgBA,OAAK7B,GAElEsK,GAAI,CACA0V,MAAOzgB,KAAKykC,cAAc/gC,EAAM+R,UAChCA,SAAU,YAKlBzV,KAAK4tB,WAAW1pB,KAAK,IAAI6vB,GAAqB,CAC1CnP,YAAalhB,EAAMkhB,YACnBnP,SAAU/R,EAAM+R,SAChBuK,WAAOvf,EACPwhB,IAAKjiB,KAAK41B,KACVnV,WAAOhgB,EACPE,QAASE,IAEjB,IACAb,KAAKwkC,iBACTxkC,KAAK41B,KAAO,IAAIlT,GAAY1iB,MAC5BA,KAAKukC,iBACT,CACA/gB,cAAAA,CAAekhB,EAAcnhC,GACzB,IAAIjB,EAAIykB,EAAIuR,EACZ,GAAIoM,aAAwBrJ,IACI,IAA5BqJ,EAAajkB,MAAM3b,KACnB,OAAO9E,KAAKwjB,eAAekhB,EAAajkB,OAE5C,MAAMkkB,EAlRd,SAA0BpgC,GACtB,SAASqgC,EAAYrgC,GACjB,MAAMsgC,EAAO,GACb,IAAK,IAAI76B,EAAI,EAAGA,EAAIzF,EAAQ2C,UAAU3F,OAAQyI,IAC1C66B,EAAKhhC,KAAKU,EAAQ2C,UAAUsG,KAAKxD,IAErC,OAAO66B,CACX,CACA,IAAIF,EACA/oB,EAASrX,EACb,KAAkB,OAAXqX,IACH+oB,EAAQC,EAAYhpB,GAAQoX,MAAM8R,GAAQA,EAAIC,WAAW,qBACpC,iBAAVJ,IAGX/oB,EAASA,EAAOpC,cAEpB,OAAOmrB,CACX,CAgQsBK,CAAiBhlC,KAAKmf,SAAS5a,SACvCA,EAAUvE,KAAKuE,QAarB,MAAMkW,GAXElX,aAAyC,EAASA,EAAQkS,UACnDlS,EAAQkS,SAEfivB,aAAwBvK,GACjBuK,EAAangC,QAAQiF,wBAE5Bk7B,EAAajkB,MACNikB,EAAajkB,MAAMlc,QAAQiF,wBAE/BjF,EAAQiF,wBAGb3J,EAAqJ,QAA1IknB,EAA8F,QAAxFzkB,EAAKiB,aAAyC,EAASA,EAAQ0hC,2BAAwC,IAAP3iC,OAAgB,EAASA,EAAG3D,UAAuB,IAAPooB,EAAgBA,EAAK/mB,KAAKklC,iBACtJ,SAAnCR,EAAaziB,IAAIhI,SAASzV,MAC1BkgC,EAAaziB,IAAIhW,YAAW,GAEhC,MAAMk1B,EAAU,IAAID,GAAc,GAAElhC,KAAKrB,MAAMkB,IAC/C8kC,QAAqCA,EAAQ,GAAI,CAC7C7C,IAAoF,QAA9ExJ,EAAK/0B,aAAyC,EAASA,EAAQowB,iBAA8B,IAAP2E,EAAgBA,EAAK,eACjHlvB,KAAMR,OAAO64B,QAAUhnB,EAAIrR,KAC3BC,IAAKT,OAAO84B,QAAUjnB,EAAIpR,IAC1BC,MAAOmR,EAAInR,MACXC,OAAQkR,EAAIlR,OACZ64B,UAAW7+B,aAAyC,EAASA,EAAQ6+B,UACrEf,YAAa99B,aAAyC,EAASA,EAAQ89B,cAErE8D,EAAyB,IAAI1/B,EAAoB07B,EAASA,EAAQI,YAAW,KAC/E4D,EAAuBtjC,SAAS,KAEpC,OAAOs/B,EACFU,OACAb,MAAMoE,IACP,IAAI9iC,EACJ,GAAI6+B,EAAQz7B,WACR,OAEJ,GAAwB,OAApB0/B,EAEA,YADAD,EAAuBtjC,UAG3B,MAAMyiC,EAASt8B,SAAS0K,cAAc,OACtC4xB,EAAOrmC,UAAY,8BACnB,MAAMg4B,EAAyB,IAAI6J,GAAuBwE,GACpDe,EAAiBX,aAAwBrJ,GACzCqJ,EAAajkB,MACbikB,EACAY,EAAoBZ,EAAaziB,IAAIhI,SAASzV,KAC9Cic,EAAiG,QAAxFne,EAAKiB,aAAyC,EAASA,EAAQ0hC,2BAAwC,IAAP3iC,EAAgBA,EAAKtC,KAAKulC,YAAY,CAAE5mC,GAAIkB,IAK3J,GAJA4gB,EAAMmG,MAAMqI,gBAAkBgH,GACxB1yB,aAAyC,EAASA,EAAQ0hC,sBAC5DjlC,KAAKokC,eAAelgC,KAAKuc,GAEzBikB,aAAwBrJ,GACxBr7B,KAAKwlC,YAAW,KACZ,MAAMxlB,EAAQqlB,EAAeze,MAAMpF,YAAYkjB,GAC/CjkB,EAAMmG,MAAMyI,UAAUrP,EAAM,SAQhC,OAJAhgB,KAAKwlC,YAAW,IAAMnC,GAA2B,CAC7C99B,KAAM8/B,EACNt6B,GAAI0V,MAEA6kB,GACJ,IAAK,OACDD,EAAepjB,IAAIhW,YAAW,GAC9B,MACJ,IAAK,WACL,IAAK,SACDjM,KAAKghB,YAAYqkB,GAsB7B,IAAII,EAlBJL,EAAgBl+B,UAAUjD,IAAI,eAC9BmhC,EAAgBr5B,MAAMwf,SAAW,SACjC6Z,EAAgBr0B,YAAYuzB,GAC5Bc,EAAgBr0B,YAAY0P,EAAMlc,SAClCkc,EAAMmG,MAAM3M,SAAW,CACnBzV,KAAM,SACNq1B,UAAWA,IAAMsH,EAAQv4B,QAE7B5I,KAAK0lC,yBAAyBjlB,GAC9B0kB,EAAuBr/B,eAAe2a,EAAMwB,IAAInC,mBAAmBpc,IAC/D,IAAIpB,EACAoB,EAAM6kB,WACoB,QAAzBjmB,EAAK6+B,EAAQv4B,cAA2B,IAAPtG,GAAyBA,EAAGmf,QAClE,IACAhB,EAAMwB,IAAIkH,aAAY,KACtB,IAAI7mB,EACsB,QAAzBA,EAAK6+B,EAAQv4B,cAA2B,IAAPtG,GAAyBA,EAAGmf,OAAO,KAGzE,MAAMhf,EAAQ,CACVmG,OAAQu4B,EACRwE,YAAallB,EACb4kB,eAAgBrlC,KAAK8gB,SAASukB,EAAe1mC,IACvC0mC,EAAe1mC,QACf8B,EACN2F,WAAY,CACRvE,QAASA,KACLsjC,EAAuBtjC,UAChB4jC,KAInBN,EAAuBr/B,eAMvBxB,EAA4B68B,EAAQv4B,OAAQ,UAAU,KAClD6X,EAAMhM,OAAO7L,OAAO+4B,WAAY/4B,OAAOg5B,YAAY,IACnD3L,EAAwB90B,EAAWoE,MAAK,KACxC,GAAIvF,KAAK8gB,SAASukB,EAAe1mC,IAC7BqB,KAAKwlC,YAAW,IAAMnC,GAA2B,CAC7C99B,KAAMkb,EACN1V,GAAIs6B,MAEHA,EAAepjB,IAAIhC,WACpBolB,EAAepjB,IAAIhW,YAAW,GAE9BjM,KAAK8gB,SAASL,EAAM9hB,KACpBqB,KAAK0gB,cAAcD,EAAO,CACtBmlB,sBAAsB,SAK9B,GAAI5lC,KAAK8gB,SAASL,EAAM9hB,IAAK,CACzB,MAAMknC,EAAe7lC,KAAK0gB,cAAcD,EAAO,CAC3C1J,aAAa,EACb8J,YAAY,IAEhBglB,EAAajf,MAAMqI,gBACfjvB,KAAKi2B,uBACT4P,EAAajf,MAAM3M,SAAW,CAAEzV,KAAM,QACtCihC,EAAgBI,CACpB,CACJ,KAEJ7lC,KAAKikC,cAAcpgC,KAAKpB,GACxBzC,KAAKukC,iBAAiB,IAErBuB,OAAO7C,IACRtgC,QAAQojC,MAAM9C,EAAI,GAE1B,CACA3f,gBAAAA,CAAiB9V,EAAM+V,EAAOhgB,GAC1B,IAAIjB,EAAIykB,EAAIuR,EAAIqE,EAAIqJ,EAAIC,EAAIC,EAC5B,IAAIzlB,EACJ,GAAIjT,aAAgB6tB,GAChB5a,EAAQzgB,KAAKulC,cACbvlC,KAAKokC,eAAelgC,KAAKuc,GACzBzgB,KAAKwlC,YAAW,IAAMxlC,KAAKwhB,YAAYhU,EAAM,CACzC24B,kBAAkB,EAClBpvB,aAAa,EACb6gB,oBAAoB,MAExB53B,KAAKwlC,YAAW,IAAM/kB,EAAMmG,MAAMyI,UAAU7hB,EAAM,CAAEypB,oBAAoB,UAEvE,CACDxW,EAAQjT,EACR,MAAM44B,EAA4F,QAAlE9jC,EAAKtC,KAAKikC,cAAcjR,MAAMpjB,GAAMA,EAAE+1B,cAAgBllB,WAA2B,IAAPne,OAAgB,EAASA,EAAG+iC,eAChIgB,EAAuBD,EACvBpmC,KAAK8gB,SAASslB,QACd3lC,EAC8F,kBAA/E8C,aAAyC,EAASA,EAAQ+iC,kBAC3E/iC,EAAQ+iC,kBAEJD,GACArmC,KAAKwlC,YAAW,IAAMnC,GAA2B,CAC7C99B,KAAMiI,EACNzC,GAAIs7B,MAERrmC,KAAK0gB,cAAclT,EAAM,CACrB+4B,kBAAkB,EAClBX,sBAAsB,IAE1B5lC,KAAK0gB,cAAc2lB,EAAsB,CACrCtvB,aAAa,IAEjB0J,EAAQ4lB,GAGRrmC,KAAK0gB,cAAclT,EAAM,CACrBuJ,aAAa,EACbwvB,kBAAkB,EAClBX,uBAAwBS,IAIxC,CACA5lB,EAAMmG,MAAM3M,SAAW,CAAEzV,KAAM,YAC/B,MAAMgiC,EAAiF,iBAA3DjjB,aAAqC,EAASA,EAAMpU,GAC1EzE,KAAKD,IAAI8Y,EAAMpU,EAAG,GAClB0wB,GACA4G,EAAgF,iBAA3DljB,aAAqC,EAASA,EAAMuC,GACzEpb,KAAKD,IAAI8Y,EAAMuC,EAAG,GAClB+Z,GACAF,EAAU,IAAIhC,GAAQ,CACxB7xB,UAAW9L,KAAKmf,SAAS5a,QACzBjF,QAASmhB,EAAMlc,QACfgF,OAA8E,QAArEwd,EAAKxD,aAAqC,EAASA,EAAMha,cAA2B,IAAPwd,EAAgBA,EAAK,IAC3Gzd,MAA4E,QAApEgvB,EAAK/U,aAAqC,EAASA,EAAMja,aAA0B,IAAPgvB,EAAgBA,EAAK,IACzGlvB,KAAMo9B,EACNn9B,IAAKo9B,EACL7I,uBAA6D,0BAArC59B,KAAKuD,QAAQmwB,yBAC/BjzB,EACsH,QAArHulC,EAAiD,QAA3CrJ,EAAK38B,KAAKuD,QAAQmwB,2BAAwC,IAAPiJ,OAAgB,EAASA,EAAG+J,kCAA+C,IAAPV,EAAgBA,EAAKpG,GACzJ/B,wBAA8D,0BAArC79B,KAAKuD,QAAQmwB,yBAChCjzB,EACuH,QAAtHylC,EAAiD,QAA3CD,EAAKjmC,KAAKuD,QAAQmwB,2BAAwC,IAAPuS,OAAgB,EAASA,EAAGU,mCAAgD,IAAPT,EAAgBA,EAAKtG,KAExJlmB,EAAK+G,EAAMlc,QAAQqiC,cAAc,mBACvC,IAAKltB,EACD,MAAM,IAAInX,MAAM,8BAEpBo9B,EAAQlB,UAAU/kB,EAAI,CAClB+Y,WAA8F,kBAA1ElvB,aAAyC,EAASA,EAAQkvB,aACxElvB,EAAQkvB,aAGlB,MAAMoU,EAAqB,IAAInH,GAA2Bjf,EAAOkf,GAC3Dv5B,EAAaC,EAAmBoa,EAAMlc,SAAU8Z,IAClD,MAAM,MAAE/U,EAAK,OAAEC,GAAW8U,EAAMM,YAChC8B,EAAMhM,OAAOnL,EAAOC,EAAO,IAE/Bs9B,EAAmB/gC,eAAe65B,EAAQntB,aAAY,KAIlDiO,EAAMhM,OAAOgM,EAAMnX,MAAOmX,EAAMlX,OAAO,IACvCo2B,EAAQ5B,gBAAe,KACvB/9B,KAAK+f,yBAAyB7b,MAAM,IACpCuc,EAAMjO,aAAa9O,IACnBi8B,EAAQ1B,UAAU,CACd10B,OAAQ7F,aAAqC,EAASA,EAAM6F,OAC5DD,MAAO5F,aAAqC,EAASA,EAAM4F,OAC7D,IACF,CACAzH,QAASA,KACLuE,EAAWvE,UACX4e,EAAMmG,MAAM3M,SAAW,CAAEzV,KAAM,QAC/B4C,EAAOpH,KAAKgkC,gBAAiB6C,GAC7B7mC,KAAKukC,iBAAiB,IAG9BvkC,KAAKgkC,gBAAgBngC,KAAKgjC,IACpBtjC,aAAyC,EAASA,EAAQujC,kBAC5D9mC,KAAK0lC,yBAAyBjlB,GAElCzgB,KAAKukC,iBACT,CACAE,aAAAA,CAAchvB,GACV,OAAQA,GACJ,IAAK,MACL,IAAK,SACGzV,KAAKmf,SAASjS,cAAgBf,EAAYkB,YAG1CrN,KAAKmf,SAASxC,kCAElB,MACJ,IAAK,OACL,IAAK,QACG3c,KAAKmf,SAASjS,cAAgBf,EAAY8I,UAG1CjV,KAAKmf,SAASxC,kCAM1B,OAAQlH,GACJ,IAAK,MACL,IAAK,OACL,IAAK,SACD,OAAOzV,KAAK+mC,sBAAsB,CAAC,IACvC,IAAK,SACL,IAAK,QACD,OAAO/mC,KAAK+mC,sBAAsB,CAAC/mC,KAAKmf,SAAS5d,SACrD,QACI,MAAM,IAAIgB,MAAO,wBAAuBkT,KAEpD,CACA8L,aAAAA,CAAche,GACV,IAAIjB,EAAIykB,EACR,MAAMigB,EAA8B,wBAAyBzjC,GACzDA,EAAQmwB,sBAAwB1zB,KAAKuD,QAAQmwB,oBAC3CuT,EAA6B,qBAAsB1jC,GACrDA,EAAQuwB,mBAAqB9zB,KAAKuD,QAAQuwB,iBAE9C,GADA9zB,KAAKyjC,SAAW1hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAKuD,SAAUA,GAC3DyjC,EACA,IAAK,MAAMvmB,KAASzgB,KAAKgkC,gBAAiB,CACtC,OAAQhkC,KAAKuD,QAAQmwB,qBACjB,IAAK,wBACDjT,EAAMkf,QAAQ9B,6BAA0Bp9B,EACxCggB,EAAMkf,QAAQ/B,4BAAyBn9B,EACvC,MACJ,UAAKA,EACDggB,EAAMkf,QAAQ9B,wBACV+B,GACJnf,EAAMkf,QAAQ/B,uBACVgC,GACJ,MACJ,QACInf,EAAMkf,QAAQ9B,wBACkC,QAA3Cv7B,EAAKtC,KAAKuD,QAAQmwB,2BAAwC,IAAPpxB,OAAgB,EAASA,EAAGqkC,4BACpFlmB,EAAMkf,QAAQ/B,uBACkC,QAA3C7W,EAAK/mB,KAAKuD,QAAQmwB,2BAAwC,IAAP3M,OAAgB,EAASA,EAAG2f,2BAE5FjmB,EAAMkf,QAAQ1B,UAAU,CAAC,EAC7B,CAEAgJ,GACAjnC,KAAKwkC,gBAAgB7d,gBAAgBpjB,EAAQuwB,kBAEjD9zB,KAAKyU,OAAOzU,KAAKmf,SAAS7V,MAAOtJ,KAAKmf,SAAS5V,QAAQ,EAC3D,CACAkL,MAAAA,CAAOnL,EAAOC,EAAQ4X,GAElB,GADAphB,MAAM0U,OAAOnL,EAAOC,EAAQ4X,GACxBnhB,KAAKgkC,gBACL,IAAK,MAAMkD,KAAYlnC,KAAKgkC,gBAExBkD,EAASvH,QAAQ1B,WAG7B,CACAxc,KAAAA,GACI,IAAInf,EACwB,QAA3BA,EAAKtC,KAAKof,mBAAgC,IAAP9c,GAAyBA,EAAGmf,OACpE,CACAyB,aAAAA,CAAcvkB,GACV,OAAOqB,KAAKqhB,OAAO2R,MAAMhT,GAAUA,EAAMrhB,KAAOA,GACpD,CACAm0B,cAAAA,CAAe9S,GACXA,EAAMS,MAAMmG,MAAMyI,UAAUrP,GAC5BhgB,KAAK0lC,yBAAyB1lB,EAAMS,MACxC,CACAQ,UAAAA,CAAW1d,GACP,IAAIjB,EACJ,QAFc,IAAPiB,IAAAA,EAAU,CAAC,IAEbA,EAAQkd,MAAO,CAChB,IAAKzgB,KAAKof,YACN,OAEJ7b,EAAQkd,MAAQzgB,KAAKof,WACzB,CACA,GAAI7b,EAAQ4jC,cAAgB5jC,EAAQkd,OAC5Bld,EAAQkd,MAAMwC,cACd1f,EAAQkd,MAAMY,OAAO9d,EAAQkd,MAAMY,OAAO9f,OAAS,GAEnD,YADAgC,EAAQkd,MAAMmG,MAAM3F,WAAW,CAAE2V,cAAc,IAIvD,MAAM3c,EAAWV,EAAgBhW,EAAQkd,MAAMlc,SACzCqG,EAA+C,QAAvCtI,EAAKtC,KAAKmf,SAASvU,KAAKqP,UAA8B,IAAP3X,OAAgB,EAASA,EAAGiJ,KACzFvL,KAAK0lC,yBAAyB96B,EAClC,CACAsW,cAAAA,CAAe3d,GACX,IAAIjB,EACJ,QAFkB,IAAPiB,IAAAA,EAAU,CAAC,IAEjBA,EAAQkd,MAAO,CAChB,IAAKzgB,KAAKof,YACN,OAEJ7b,EAAQkd,MAAQzgB,KAAKof,WACzB,CACA,GAAI7b,EAAQ4jC,cAAgB5jC,EAAQkd,OAC5Bld,EAAQkd,MAAMwC,cAAgB1f,EAAQkd,MAAMY,OAAO,GAEnD,YADA9d,EAAQkd,MAAMmG,MAAM1F,eAAe,CAAE0V,cAAc,IAI3D,MAAM3c,EAAWV,EAAgBhW,EAAQkd,MAAMlc,SACzCqG,EAAmD,QAA3CtI,EAAKtC,KAAKmf,SAASjK,SAAS+E,UAA8B,IAAP3X,OAAgB,EAASA,EAAGiJ,KACzFX,GACA5K,KAAK0lC,yBAAyB96B,EAEtC,CAMA+P,MAAAA,GACI,IAAIrY,EACJ,MAAM5B,EAAOV,KAAKmf,SAASlD,YACrBoF,EAASrhB,KAAKqhB,OAAO/T,QAAO,CAAC85B,EAAYpnB,KAC3ConB,EAAWpnB,EAAMrhB,IAAMqhB,EAAMrF,SACtBysB,IACR,CAAC,GACEC,EAASrnC,KAAKgkC,gBAAgB5kC,KAAKqhB,IAC9B,CACH/f,KAAM+f,EAAMA,MAAM9F,SAClBlF,SAAUgL,EAAMkf,QAAQhlB,aAG1B2sB,EAAetnC,KAAKikC,cAAc7kC,KAAKqhB,IAClC,CACH/f,KAAM+f,EAAMklB,YAAYhrB,SACxB4sB,mBAAoB9mB,EAAM4kB,eAC1B5vB,SAAUgL,EAAM7X,OAAO44B,iBAGzBx2B,EAAS,CACXw8B,KAAM9mC,EACN2gB,SACAjC,YAAyC,QAA3B9c,EAAKtC,KAAKof,mBAAgC,IAAP9c,OAAgB,EAASA,EAAG3D,IAQjF,OANI0oC,EAAO9lC,OAAS,IAChByJ,EAAOy8B,eAAiBJ,GAExBC,EAAa/lC,OAAS,IACtByJ,EAAOs8B,aAAeA,GAEnBt8B,CACX,CACAyR,QAAAA,CAAS/b,GACL,IAAI4B,EAAIykB,EAAIuR,EAEZ,GADAt4B,KAAKqD,QACe,iBAAT3C,GAA8B,OAATA,EAC5B,MAAM,IAAI6B,MAAM,+CAEpB,MAAM,KAAEilC,EAAI,OAAEnmB,EAAM,YAAEjC,GAAgB1e,EACtC,GAAuB,WAAnB8mC,EAAK1sB,KAAKtW,OAAsBhD,MAAMkmC,QAAQF,EAAK1sB,KAAKpa,MACxD,MAAM,IAAI6B,MAAM,+BAEpB,IAEI,MAAM+G,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OACdo+B,EAAkCjnC,IACpC,MAAM,GAAE/B,EAAE,OAAEoc,EAAM,WAAE8a,EAAU,MAAE3kB,EAAK,WAAEwlB,GAAeh2B,EACtD,GAAkB,iBAAP/B,EACP,MAAM,IAAI4D,MAAM,mCAEpB,MAAMke,EAAQzgB,KAAKulC,YAAY,CAC3B5mC,KACAoc,SAAUA,EACV8a,aAAcA,IAEZ+R,EAAgB,GACtB,IAAK,MAAMhmC,KAASsP,EAAO,CAMvB,MAAM8O,EAAQhgB,KAAK2jC,cAAclnB,SAAS4E,EAAOzf,GAAQ6e,GACzDmnB,EAAc/jC,KAAKmc,EACvB,CACAhgB,KAAKokC,eAAelgC,KAAKuc,GACzB,IAAK,IAAIzW,EAAI,EAAGA,EAAIkH,EAAM3P,OAAQyI,IAAK,CACnC,MAAMgW,EAAQ4nB,EAAc59B,GACtBue,EAAiC,iBAAfmO,GACpBA,IAAe1W,EAAMrhB,GACzB8hB,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,eAAgBvO,EAChB0O,oBAAoB,GAE5B,CAMA,OALKxW,EAAMwC,aAAexC,EAAMY,OAAO9f,OAAS,GAC5Ckf,EAAMmG,MAAMyI,UAAU5O,EAAMY,OAAOZ,EAAMY,OAAO9f,OAAS,GAAI,CACzD01B,oBAAoB,IAGrBxW,CAAK,EAEhBzgB,KAAKmf,SAAShD,YAAYqrB,EAAM,CAC5B/qB,SAAWtE,GACAwvB,EAA+BxvB,EAAKzX,QAGnDV,KAAKyU,OAAOnL,EAAOC,GAAQ,GAC3B,MAAMs+B,EAA0D,QAA9BvlC,EAAK5B,EAAK+mC,sBAAmC,IAAPnlC,EAAgBA,EAAK,GAC7F,IAAK,MAAMwlC,KAA2BD,EAA0B,CAC5D,MAAM,KAAEnnC,EAAI,SAAE+U,GAAaqyB,EACrBrnB,EAAQknB,EAA+BjnC,GAC7CV,KAAKsjB,iBAAiB7C,EAAO,CACzBtR,EAAGsG,EAASrM,KACZ0c,EAAGrQ,EAASpM,IACZE,OAAQkM,EAASlM,OACjBD,MAAOmM,EAASnM,OACjB,CAAEg9B,iBAAiB,EAAM7T,YAAY,GAC5C,CACA,MAAMsV,EAAsD,QAA5BhhB,EAAKrmB,EAAK4mC,oBAAiC,IAAPvgB,EAAgBA,EAAK,GACzF,IAAK,MAAMihB,KAAyBD,EAAwB,CACxD,MAAM,KAAErnC,EAAI,SAAE+U,EAAQ,mBAAE8xB,GAAuBS,EACzCvnB,EAAQknB,EAA+BjnC,GAC7CV,KAAKwjB,eAEiB,QAFD8U,EAAMiP,EACrBvnC,KAAK8gB,SAASymB,QACd9mC,SAA+B,IAAP63B,EAAgBA,EAAK7X,EAAO,CACtD6lB,iBAAiB,EACjB7wB,SAAUA,QAA2CA,OAAWhV,EAChEwkC,oBAAqBsC,EACf9mB,OACAhgB,GAEd,CACA,IAAK,MAAMwnC,KAAiBjoC,KAAKgkC,gBAC7BiE,EAActI,QAAQ1B,YAE1B,GAA2B,iBAAhB7e,EAA0B,CACjC,MAAMY,EAAQhgB,KAAK8gB,SAAS1B,GACxBY,GACAhgB,KAAK0lC,yBAAyB1lB,EAEtC,CACJ,CACA,MAAOijB,GAIH,IAAK,MAAMxiB,KAASzgB,KAAKif,OACrB,IAAK,MAAMe,KAASS,EAAMY,OACtBrhB,KAAKwhB,YAAYxB,EAAO,CACpBmmB,kBAAkB,EAClBpvB,aAAa,IAQzB,IAAK,MAAM0J,KAASzgB,KAAKif,OACrBwB,EAAM5e,UACN7B,KAAKgf,QAAQ3a,OAAOoc,EAAM9hB,IAC1BqB,KAAKmkC,kBAAkBjgC,KAAKuc,GAGhC,IAAK,MAAMwnB,IAAiB,IAAIjoC,KAAKgkC,iBACjCiE,EAAcpmC,UASlB,MANA7B,KAAKqD,QAMC4/B,CACV,CACAjjC,KAAKukC,kBACLvkC,KAAK8jC,qBAAqB5/B,MAC9B,CACAb,KAAAA,GACI,MAAM4b,EAASzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UAAU9f,KAAKwQ,GAAMA,EAAEnN,QACxDylC,IAAmBloC,KAAKof,YACLpf,KAAKijB,YAC9B,IAAK,MAAMxC,KAASxB,EAEhBjf,KAAKghB,YAAYP,EAAO,CAAEI,YAAY,IAEtCqnB,GACAloC,KAAK0lC,8BAAyBjlC,GAElCT,KAAKmf,SAAS9b,OAClB,CACA+f,cAAAA,GACI,IAAK,MAAM/E,KAASre,KAAKgf,QAAQgjB,UAAW,CACxC,MAAOpyB,EAAG6Q,GAASpC,EACnBoC,EAAMhe,MAAMmkB,MAAMyQ,gBACtB,CACJ,CACA3V,QAAAA,CAASne,GACL,IAAIjB,EAAIykB,EACR,GAAI/mB,KAAKqhB,OAAO2R,MAAMpjB,GAAMA,EAAEjR,KAAO4E,EAAQ5E,KACzC,MAAM,IAAI4D,MAAO,iBAAgBgB,EAAQ5E,qBAE7C,IAAI0mC,EACJ,GAAI9hC,EAAQkS,UAAYlS,EAAQ2jC,SAC5B,MAAM,IAAI3kC,MAAM,kFAEpB,GAAIgB,EAAQkS,SACR,GAA4BlS,EAAQkS,SlBz1BnC0yB,ekBy1B8C,CAC3C,MAAMA,EAA4D,iBAApC5kC,EAAQkS,SAAS0yB,eACzCnoC,KAAKkjB,cAAc3f,EAAQkS,SAAS0yB,gBACpC5kC,EAAQkS,SAAS0yB,eACvB,IAAKA,EACD,MAAM,IAAI5lC,MAAO,mBAAkBgB,EAAQkS,SAAS0yB,kCAExD9C,EAAiBrlC,KAAKooC,UAAUD,EACpC,KACK,KlB71BV,SAAiCznC,GACpC,QAAIA,EAAK2kC,cAIb,CkBw1BqBgD,CAAwB9kC,EAAQkS,UASpC,CACD,MAAMgL,EAAQzgB,KAAKykC,cAAc5f,GAAoBthB,EAAQkS,SAASyE,YAChE8F,EAAQhgB,KAAKsoC,YAAY/kC,EAASkd,GAQxC,OAPAA,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,WAE3BhlC,EAAQglC,UACTvoC,KAAK0lC,yBAAyBjlB,GAE3BT,CACX,CAfI,GAJAqlB,EAC+C,iBAApC9hC,EAAQkS,SAAS4vB,eAC2C,QAA5D/iC,EAAKtC,KAAKgf,QAAQ4B,IAAIrd,EAAQkS,SAAS4vB,uBAAoC,IAAP/iC,OAAgB,EAASA,EAAGG,MACjGc,EAAQkS,SAAS4vB,gBACtBA,EACD,MAAM,IAAI9iC,MAAO,mBAAkBgB,EAAQkS,SAAS4vB,iCAc5D,MAGAA,EAAiBrlC,KAAKof,YAE1B,IAAIY,EACJ,GAAIqlB,EAAgB,CAChB,MAAMjhB,EAASvF,IAAsC,QAA3BkI,EAAKxjB,EAAQkS,gBAA6B,IAAPsR,OAAgB,EAASA,EAAG7M,YAAc,UACvG,GAAI3W,EAAQ2jC,SAAU,CAClB,MAAMzmB,EAAQzgB,KAAKulC,cACnBvlC,KAAKokC,eAAelgC,KAAKuc,GACzB,MAAM+nB,EAAgC,iBAArBjlC,EAAQ2jC,UACA,OAArB3jC,EAAQ2jC,SACN3jC,EAAQ2jC,SACR,CAAC,EACPlnC,KAAKsjB,iBAAiB7C,EAAO+nB,EAAG,CAC5B/V,YAAY,EACZ6T,iBAAiB,EACjBQ,iBAAiB,IAErB9mB,EAAQhgB,KAAKsoC,YAAY/kC,EAASkd,GAClCA,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,UAEpC,MACK,GAAyC,aAArClD,EAAepjB,IAAIhI,SAASzV,MACtB,WAAX4f,EACApE,EAAQhgB,KAAKsoC,YAAY/kC,EAAS8hC,GAClCA,EAAeze,MAAMyI,UAAUrP,EAAO,CAClC8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,WAE3BhlC,EAAQglC,UACTvoC,KAAK0lC,yBAAyBL,OAGjC,CACD,MAAMprB,EAAWV,EAAgB8rB,EAAe9gC,SAC1CkkC,EAAmB1uB,EAAoB/Z,KAAKmf,SAASjS,YAAa+M,EAAUmK,GAC5E3D,EAAQzgB,KAAK+mC,sBAAsB0B,GACzCzoB,EAAQhgB,KAAKsoC,YAAY/kC,EAASkd,GAClCA,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,WAE3BhlC,EAAQglC,UACTvoC,KAAK0lC,yBAAyBjlB,EAEtC,CACJ,MACK,GAAIld,EAAQ2jC,SAAU,CACvB,MAAMzmB,EAAQzgB,KAAKulC,cACnBvlC,KAAKokC,eAAelgC,KAAKuc,GACzB,MAAMioB,EAA0C,iBAArBnlC,EAAQ2jC,UACV,OAArB3jC,EAAQ2jC,SACN3jC,EAAQ2jC,SACR,CAAC,EACPlnC,KAAKsjB,iBAAiB7C,EAAOioB,EAAa,CACtCjW,YAAY,EACZ6T,iBAAiB,EACjBQ,iBAAiB,IAErB9mB,EAAQhgB,KAAKsoC,YAAY/kC,EAASkd,GAClCA,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,UAEpC,KACK,CACD,MAAM9nB,EAAQzgB,KAAK+mC,wBACnB/mB,EAAQhgB,KAAKsoC,YAAY/kC,EAASkd,GAClCA,EAAMmG,MAAMyI,UAAUrP,EAAO,CACzB8W,cAAevzB,EAAQglC,SACvBtR,mBAAoB1zB,EAAQglC,WAE3BhlC,EAAQglC,UACTvoC,KAAK0lC,yBAAyBjlB,EAEtC,CACA,OAAOT,CACX,CACAwB,WAAAA,CAAYxB,EAAOzc,QAAO,IAAPA,IAAAA,EAAU,CACzB4iC,kBAAkB,EAClBpvB,aAAa,IAEb,MAAM0J,EAAQT,EAAMS,MACpB,IAAKA,EACD,MAAM,IAAIle,MAAO,uBAAsByd,EAAMrhB,6BAEjD8hB,EAAMmG,MAAMpF,YAAYxB,EAAO,CAC3B4X,mBAAoBr0B,EAAQq0B,qBAE3Br0B,EAAQwT,cACTiJ,EAAMS,MAAMmG,MAAMqI,gBAAgBC,QAAQlP,GAC1CA,EAAMne,WAES,IAAf4e,EAAM3b,MAAcvB,EAAQ4iC,kBAC5BnmC,KAAKghB,YAAYP,EAAO,CAAEI,WAAYtd,EAAQq0B,oBAEtD,CACAK,wBAAAA,GACI,OAAIj4B,KAAKuD,QAAQ00B,yBACNj4B,KAAKuD,QAAQ00B,2BAEjB,IAAIkF,EACf,CACAoH,eAAAA,GACI,IAAIjiC,EAAIykB,EACR,GAA4F,IAAxF/mB,KAAKif,OAAO/M,QAAQ/C,GAA8B,SAAxBA,EAAE8S,IAAIhI,SAASzV,MAAmB2K,EAAE8S,IAAIhC,YAAW1e,QAC7E,IAAKvB,KAAKu0B,UAAW,CACjBv0B,KAAKu0B,UAAYv0B,KAAKi4B,2BACtBj4B,KAAKu0B,UAAU7I,KAAK,CAChBwC,aAAc,IAAIxL,GAAY1iB,QAElC,MAAM2oC,EAAqB3gC,SAAS0K,cAAc,OAClDi2B,EAAmB1qC,UAAY,yBAC/B0qC,EAAmB53B,YAAY/Q,KAAKu0B,UAAUhwB,SAC9CvE,KAAKmf,SAAS5a,QAAQwM,YAAY43B,EACtC,OAEK3oC,KAAKu0B,YACVv0B,KAAKu0B,UAAUhwB,QAAQiV,cAAcpS,SACI,QAAxC2f,GAAMzkB,EAAKtC,KAAKu0B,WAAW1yB,eAA4B,IAAPklB,GAAyBA,EAAGhf,KAAKzF,GAClFtC,KAAKu0B,UAAY,KAEzB,CACApR,QAAAA,CAAS5f,GACL,IAAIjB,EACJ,MAAMme,EAAQzgB,KAAKulC,YAAYhiC,GAC/B,GAAIA,EAAS,CACT,IAAI8hC,EACJ,GAA4B9hC,ElB9+B3B4kC,ekB8+BqC,CAClC,MAAMA,EAAmD,iBAA3B5kC,EAAQ4kC,eAChCnoC,KAAKqhB,OAAO2R,MAAMhT,GAAUA,EAAMrhB,KAAO4E,EAAQ4kC,iBACjD5kC,EAAQ4kC,eACd,IAAKA,EACD,MAAM,IAAI5lC,MAAO,mBAAkBgB,EAAQ4kC,iCAG/C,GADA9C,EAAiBrlC,KAAKooC,UAAUD,IAC3B9C,EACD,MAAM,IAAI9iC,MAAO,uCAAsCgB,EAAQ4kC,gCAEvE,KACK,KlBr/BV,SAAiCznC,GACpC,QAAIA,EAAK2kC,cAIb,CkBg/BqBuD,CAAwBrlC,GAS5B,CACD,MAAMkd,EAAQzgB,KAAKykC,cAAc5f,GAAoBthB,EAAQ2W,YAI7D,OAHK3W,EAAQuzB,eACT92B,KAAK0lC,yBAAyBjlB,GAE3BA,CACX,CAVI,GAJA4kB,EACsC,iBAA3B9hC,EAAQ8hC,eAC2C,QAAnD/iC,EAAKtC,KAAKgf,QAAQ4B,IAAIrd,EAAQ8hC,uBAAoC,IAAP/iC,OAAgB,EAASA,EAAGG,MACxFc,EAAQ8hC,gBACbA,EACD,MAAM,IAAI9iC,MAAO,mBAAkBgB,EAAQ8hC,gCASnD,CACA,MAAMjhB,EAASvF,GAAStb,EAAQ2W,WAAa,UACvCD,EAAWV,EAAgB8rB,EAAe9gC,SAC1CkkC,EAAmB1uB,EAAoB/Z,KAAKmf,SAASjS,YAAa+M,EAAUmK,GAKlF,OAJApkB,KAAKwgB,WAAWC,EAAOgoB,GAClBllC,EAAQuzB,eACT92B,KAAK0lC,yBAAyBjlB,GAE3BA,CACX,CAII,OAFAzgB,KAAKwgB,WAAWC,GAChBzgB,KAAK0lC,yBAAyBjlB,GACvBA,CAEf,CACAO,WAAAA,CAAYP,EAAOld,GACfvD,KAAK0gB,cAAcD,EAAOld,EAC9B,CACAmd,aAAAA,CAAcD,EAAOld,GACjB,IAAIjB,EACJ,MAAM+e,EAAS,IAAIZ,EAAMY,QACzB,KAAM9d,aAAyC,EAASA,EAAQwT,aAC5D,IAAK,MAAMiJ,KAASqB,EAChBrhB,KAAKwhB,YAAYxB,EAAO,CACpBmmB,kBAAkB,EAClBpvB,YAA8F,QAAhFzU,EAAKiB,aAAyC,EAASA,EAAQwT,mBAAgC,IAAPzU,GAAgBA,IAIlI,MAAM2gB,EAAcjjB,KAAKijB,YACzB,GAAgC,aAA5BxC,EAAMwB,IAAIhI,SAASzV,KAAqB,CACxC,MAAMyjC,EAAgBjoC,KAAKgkC,gBAAgBhR,MAAMpjB,GAAMA,EAAE6Q,QAAUA,IACnE,GAAIwnB,EAAe,CAQf,IAPM1kC,aAAyC,EAASA,EAAQwT,eAC5DkxB,EAAcxnB,MAAM5e,UACpB7B,KAAKgf,QAAQ3a,OAAOoc,EAAM9hB,IAC1BqB,KAAKmkC,kBAAkBjgC,KAAKuc,IAEhCrZ,EAAOpH,KAAKgkC,gBAAiBiE,GAC7BA,EAAcpmC,YACR0B,aAAyC,EAASA,EAAQsd,aAAe7gB,KAAKqf,eAAiBoB,EAAO,CACxG,MAAMxB,EAASzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UACvClf,KAAK0lC,yBAAyBzmB,EAAO1d,OAAS,EAAI0d,EAAO,GAAGxc,WAAQhC,EACxE,CACA,OAAOwnC,EAAcxnB,KACzB,CACA,MAAM,IAAIle,MAAM,gCACpB,CACA,GAAgC,WAA5Bke,EAAMwB,IAAIhI,SAASzV,KAAmB,CACtC,MAAMqkC,EAAgB7oC,KAAKikC,cAAcjR,MAAMpjB,GAAMA,EAAE+1B,cAAgBllB,IACvE,GAAIooB,EAAe,CACf,KAAMtlC,aAAyC,EAASA,EAAQwT,aAAc,CAC1E,KAAMxT,aAAyC,EAASA,EAAQqiC,sBAAuB,CACnF,MAAMkD,EAAWD,EAAcxD,eACzBrlC,KAAK8gB,SAAS+nB,EAAcxD,qBAC5B5kC,EACFqoC,GACA9oC,KAAKghB,YAAY8nB,EAEzB,CACAD,EAAclD,YAAY9jC,UAC1B7B,KAAKgf,QAAQ3a,OAAOoc,EAAM9hB,IAC1BqB,KAAKmkC,kBAAkBjgC,KAAKuc,EAChC,CACA,MAAMolB,EAAegD,EAAcziC,WAAWvE,UAK9C,KAJM0B,aAAyC,EAASA,EAAQgjC,mBAAqBV,IACjF7lC,KAAKwgB,WAAWqlB,EAAc,CAAC,IAC/B7lC,KAAK0lC,yBAAyBG,MAE5BtiC,aAAyC,EAASA,EAAQsd,aAAe7gB,KAAKqf,eAAiBoB,EAAO,CACxG,MAAMxB,EAASzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UACvClf,KAAK0lC,yBAAyBzmB,EAAO1d,OAAS,EAAI0d,EAAO,GAAGxc,WAAQhC,EACxE,CAEA,OADAT,KAAKukC,kBACEsE,EAAclD,WACzB,CACA,MAAM,IAAIpjC,MAAM,8BACpB,CACA,MAAMwmC,EAAKhpC,MAAM2gB,cAAcD,EAAOld,GAMtC,OALMA,aAAyC,EAASA,EAAQsd,aACxD7gB,KAAKijB,cAAgBA,GACrBjjB,KAAKy1B,wBAAwBvxB,KAAKlE,KAAKijB,aAGxC8lB,CACX,CACAvD,UAAAA,CAAWhgC,GACP,MAAMwjC,EAAWhpC,KAAKqkC,QACtB,IAEI,OADArkC,KAAKqkC,SAAU,EACR7+B,GACX,CAAC,QAEGxF,KAAKqkC,QAAU2E,CACnB,CACJ,CACAjP,gBAAAA,CAAiBx2B,GACb,IAAIjB,EACJ,MAAM2mC,EAAmB1lC,EAAQwH,GAAG0V,MAC9ByoB,EAAgB3lC,EAAQgC,KAAK1F,QAC7BspC,EAAe5lC,EAAQgC,KAAKzF,QAC5BspC,EAAoB7lC,EAAQwH,GAAG0K,SAC/B4zB,EAAmB9lC,EAAQwH,GAAGjH,MAC9BwlC,EAAcJ,EAC6B,QAA1C5mC,EAAKtC,KAAKgf,QAAQ4B,IAAIsoB,UAAmC,IAAP5mC,OAAgB,EAASA,EAAGG,WAC/EhC,EACN,IAAK6oC,EACD,MAAM,IAAI/mC,MAAO,2BAA0B2mC,KAE/C,QAAqBzoC,IAAjB0oC,EAaJ,GAAKC,GAA2C,WAAtBA,EAwBrB,CAKD,MAAM9D,EAAoB/rB,EAAgB0vB,EAAiB1kC,SACrDglC,EAAiBxvB,EAAoB/Z,KAAKmf,SAASjS,YAAao4B,EAAmB8D,GACzF,GAAIE,EAAYxkC,KAAO,EAAG,CAKtB,MAAO0kC,EAAsBz+B,GAAMpB,EAAK4/B,GACxC,GAAsC,SAAlCD,EAAYrnB,IAAIhI,SAASzV,KAAiB,CAC1C,MAAMilC,EAAiBlwB,EAAgB+vB,EAAY/kC,UAC5CmlC,EAAsBnkC,GAAQoE,EAAK8/B,GAC1C,GAAI5/B,EAAe6/B,EAAsBF,GAKrC,YADAxpC,KAAKmf,SAAS3K,SAASk1B,EAAsBnkC,EAAMwF,EAG3D,CAEA,MAAM4+B,EAAc3pC,KAAKwlC,YAAW,IAAMxlC,KAAK0gB,cAAc4oB,EAAa,CACtEzoB,YAAY,EACZ9J,aAAa,MAGX6yB,EAA2BrwB,EAAgB0vB,EAAiB1kC,SAC5D0V,EAAWF,EAAoB/Z,KAAKmf,SAASjS,YAAa08B,EAA0BR,GAC1FppC,KAAKwlC,YAAW,IAAMxlC,KAAKwgB,WAAWmpB,EAAa1vB,KACnDja,KAAK0lC,yBAAyBiE,EAClC,KACK,CAKD,MAAMrG,EAAetjC,KAAKwlC,YAAW,IAAM8D,EAAY1iB,MAAMpF,YAAY2nB,EAAc,CACnFrS,eAAe,EACfc,oBAAoB,MAExB,IAAK0L,EACD,MAAM,IAAI/gC,MAAO,oBAAmB4mC,KAExC,MAAMU,EAAe9vB,EAAoB/Z,KAAKmf,SAASjS,YAAao4B,EAAmB8D,GACjF3oB,EAAQzgB,KAAK+mC,sBAAsB8C,GACzC7pC,KAAKwlC,YAAW,IAAM/kB,EAAMmG,MAAMyI,UAAUiU,EAAc,CACtDrM,oBAAoB,MAExBj3B,KAAK0lC,yBAAyBjlB,EAClC,CACJ,KA9E0D,CAItD,MAAM6iB,EAAetjC,KAAKwlC,YAAW,IAAM8D,EAAY1iB,MAAMpF,YAAY2nB,EAAc,CACnFrS,eAAe,EACfc,oBAAoB,MAExB,IAAK0L,EACD,MAAM,IAAI/gC,MAAO,oBAAmB4mC,KAET,IAA3BG,EAAY1iB,MAAM9hB,MAElB9E,KAAK0gB,cAAc4oB,EAAa,CAAEzoB,YAAY,IAElD7gB,KAAKwlC,YAAW,IAAMyD,EAAiBriB,MAAMyI,UAAUiU,EAAc,CACjEx/B,MAAOulC,EACPpS,oBAAoB,MAExBj3B,KAAK0lC,yBAAyBuD,GAC9BjpC,KAAK+jC,gBAAgB7/B,KAAK,CACtB8b,MAAOsjB,GAEf,MAhCItjC,KAAK8pC,UAAU,CACXvkC,KAAM,CAAEkb,MAAO6oB,GACfv+B,GAAI,CACA0V,MAAOwoB,EACPxzB,SAAU2zB,IAoF1B,CACAU,SAAAA,CAAUvmC,GACN,MAAMgC,EAAOhC,EAAQgC,KAAKkb,MACpB1V,EAAKxH,EAAQwH,GAAG0V,MAChB2D,EAAS7gB,EAAQwH,GAAG0K,SAC1B,GAAe,WAAX2O,EAAqB,CACrB,MAAMnB,EAAc1d,EAAK0d,YACnB5B,EAASrhB,KAAKwlC,YAAW,IAAM,IAAIjgC,EAAK8b,QAAQjiB,KAAKyY,GAAMtS,EAAKqhB,MAAMpF,YAAY3J,EAAElZ,GAAI,CAC1Fm4B,eAAe,QAEmD,KAAjEvxB,aAAmC,EAASA,EAAKqhB,MAAM9hB,OACxD9E,KAAK0gB,cAAcnb,EAAM,CAAEsb,YAAY,IAE3C7gB,KAAKwlC,YAAW,KACZ,IAAK,MAAMxlB,KAASqB,EAChBtW,EAAG6b,MAAMyI,UAAUrP,EAAO,CACtB8W,cAAe9W,IAAUiD,EACzBgU,oBAAoB,GAE5B,IAEJj3B,KAAK0lC,yBAAyB36B,GAC9BsW,EAAOvf,SAASke,IACZhgB,KAAK+jC,gBAAgB7/B,KAAK,CAAE8b,SAAQ,GAE5C,KACK,CACD,OAAQza,EAAK0c,IAAIhI,SAASzV,MACtB,IAAK,OACDxE,KAAKmf,SAAS7K,WAAWiF,EAAgBhU,EAAKhB,UAC9C,MACJ,IAAK,WAAY,CACb,MAAMwlC,EAAwB/pC,KAAKgkC,gBAAgBhR,MAAM7jB,GAAMA,EAAEsR,QAAUlb,IAC3E,IAAKwkC,EACD,MAAM,IAAIxnC,MAAM,iCAEpBwnC,EAAsBloC,UACtB,KACJ,CACA,IAAK,SAAU,CACX,MAAMmoC,EAAsBhqC,KAAKikC,cAAcjR,MAAM7jB,GAAMA,EAAEw2B,cAAgBpgC,IAC7E,IAAKykC,EACD,MAAM,IAAIznC,MAAM,+BAEpBynC,EAAoB5jC,WAAWvE,SACnC,EAEJ,MAAMyjC,EAAoB/rB,EAAgBxO,EAAGxG,SACvCslC,EAAe9vB,EAAoB/Z,KAAKmf,SAASjS,YAAao4B,EAAmBlhB,GACvFpkB,KAAKmf,SAAS9N,QAAQ9L,EAAM+G,EAAOC,WAAYs9B,GAC/CtkC,EAAK8b,OAAOvf,SAASke,IACjBhgB,KAAK+jC,gBAAgB7/B,KAAK,CAAE8b,SAAQ,GAE5C,CACJ,CACAG,gBAAAA,CAAiBM,GACb1gB,MAAMogB,iBAAiBM,GACvB,MAAMwC,EAAcjjB,KAAKijB,YACpBjjB,KAAKqkC,SACNphB,IAAgBjjB,KAAKy1B,wBAAwBhzB,OAC7CzC,KAAKy1B,wBAAwBvxB,KAAK+e,EAE1C,CACAyiB,wBAAAA,CAAyBjlB,GACrB1gB,MAAMogB,iBAAiBM,GACvB,MAAMwC,EAAcjjB,KAAKijB,YACrBxC,GACAzgB,KAAKsgB,sBACJtgB,KAAKogB,iBAAiBK,IACvBzgB,KAAKqgB,qBAEJrgB,KAAKqkC,SACNphB,IAAgBjjB,KAAKy1B,wBAAwBhzB,OAC7CzC,KAAKy1B,wBAAwBvxB,KAAK+e,EAE1C,CACAiiB,cAAAA,GACI,IAAIvmC,EAAKqB,KAAK0jC,YAAY94B,OAC1B,KAAO5K,KAAKgf,QAAQ2B,IAAIhiB,IACpBA,EAAKqB,KAAK0jC,YAAY94B,OAE1B,OAAOjM,CACX,CACA4mC,WAAAA,CAAYhiC,GACHA,IACDA,EAAU,CAAC,GAEf,IAAI5E,EAAK4E,aAAyC,EAASA,EAAQ5E,GAKnE,GAJIA,GAAMqB,KAAKgf,QAAQ2B,IAAIpd,EAAQ5E,MAC/BgE,QAAQC,KAAM,sBAAqBW,aAAyC,EAASA,EAAQ5E,4CAC7FA,OAAK8B,IAEJ9B,EAED,IADAA,EAAKqB,KAAK0jC,YAAY94B,OACf5K,KAAKgf,QAAQ2B,IAAIhiB,IACpBA,EAAKqB,KAAK0jC,YAAY94B,OAG9B,MAAMW,EAAO,IAAI4uB,GAAmBn6B,KAAMrB,EAAI4E,GAE9C,GADAgI,EAAKmgB,KAAK,CAAE5B,OAAQ,CAAC,EAAG+C,SAAU7sB,QAC7BA,KAAKgf,QAAQ2B,IAAIpV,EAAK5M,IAAK,CAC5B,MAAMyH,EAAa,IAAIX,EAAoB8F,EAAKqb,MAAMkL,gBAAgBpuB,IAClE1D,KAAK4jC,iBAAiB1/B,KAAKR,EAAM,IACjC6H,EAAKqb,MAAMoL,kBAAkBtuB,IAC7B1D,KAAK6jC,iBAAiB3/B,KAAKR,EAAM,IACjC6H,EAAKqb,MAAMqO,QAAQvxB,IACnB,MAAM,QAAE7D,EAAO,OAAEw4B,EAAM,OAAEjU,EAAM,MAAEtgB,GAAUJ,EAC3C1D,KAAK+5B,iBAAiB,CAClBx0B,KAAM,CAAE1F,QAASA,EAASC,QAASu4B,GACnCttB,GAAI,CACA0V,MAAOlV,EACPkK,SAAU2O,EACVtgB,UAEN,IACFyH,EAAKqb,MAAM/E,WAAWne,IACtB1D,KAAK4tB,WAAW1pB,KAAKR,EAAM,IAC3B6H,EAAKqb,MAAMhE,YAAYlf,IACvB1D,KAAKk1B,YAAYhxB,KAAKR,EAAM,IAC5B6H,EAAKqb,MAAM/D,mBAAmBnf,IAC1B1D,KAAKuD,QAAQoqB,WACbjqB,EAAMvB,iBAGVnC,KAAKolB,mBAAmBlhB,KAAKR,EAAM,IACnC6H,EAAKqb,MAAM5D,0BAA0Btf,IACrC1D,KAAK01B,0BAA0BxxB,KAAKR,EAAM,IAC1C6H,EAAKqb,MAAMzE,eAAeze,IACtB1D,KAAKqkC,SAGTrkC,KAAKm1B,eAAejxB,KAAKR,EAAMsc,MAAM,IACrCzU,EAAKqb,MAAMvE,kBAAkB3e,IACzB1D,KAAKqkC,SAGTrkC,KAAKw1B,kBAAkBtxB,KAAKR,EAAMsc,MAAM,IACxCzU,EAAKqb,MAAMrE,wBAAwB7e,IAC/B1D,KAAKqkC,SAGL3gC,EAAMsc,QAAUhgB,KAAKijB,aAGrBjjB,KAAKy1B,wBAAwBhzB,QAAUiB,EAAMsc,OAC7ChgB,KAAKy1B,wBAAwBvxB,KAAKR,EAAMsc,MAC5C,IACA9e,EAAME,IAAImK,EAAKqb,MAAMyO,sBAAuB9pB,EAAKqb,MAAM2O,2BAAvDr0B,EAAmF,KACnFlB,KAAK+f,yBAAyB7b,MAAM,KAExClE,KAAKgf,QAAQja,IAAIwG,EAAK5M,GAAI,CAAE8D,MAAO8I,EAAMnF,cAC7C,CAGA,OADAmF,EAAKoe,aACEpe,CACX,CACA+8B,WAAAA,CAAY/kC,EAASkd,GACjB,IAAIne,EAAIykB,EAAIuR,EACZ,MAAMkD,EAAmBj4B,EAAQtE,UAC3Bw7B,EAA+C,QAA/Bn4B,EAAKiB,EAAQk3B,oBAAiC,IAAPn4B,EAAgBA,EAAKtC,KAAKuD,QAAQw5B,oBACzFxxB,EAAO,IAAIgxB,GAAmBv8B,KAAMuD,EAAQ5E,GAAI68B,EAAkBf,GAClEza,EAAQ,IAAIqb,GAAc93B,EAAQ5E,GAAI68B,EAAkBf,EAAcz6B,KAAMA,KAAK41B,KAAMnV,EAAOlV,EAAM,CAAEyjB,SAAUzrB,EAAQyrB,WAK9H,OAJAhP,EAAM0L,KAAK,CACP/uB,MAAgC,QAAxBoqB,EAAKxjB,EAAQ5G,aAA0B,IAAPoqB,EAAgBA,EAAKxjB,EAAQ5E,GACrEmrB,OAAoF,QAA3EwO,EAAK/0B,aAAyC,EAASA,EAAQumB,cAA2B,IAAPwO,EAAgBA,EAAK,CAAC,IAE/GtY,CACX,CACA+mB,qBAAAA,CAAsB9sB,QAAQ,IAARA,IAAAA,EAAW,CAAC,IAC9B,MAAMwG,EAAQzgB,KAAKulC,cAEnB,OADAvlC,KAAKwgB,WAAWC,EAAOxG,GAChBwG,CACX,CACA2nB,SAAAA,CAAUpoB,GACN,IAAI1d,EACJ,OAA4G,QAApGA,EAAKd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UAAU8T,MAAMvS,GAAUA,EAAMhe,MAAMmkB,MAAMiQ,cAAc7W,YAA4B,IAAP1d,OAAgB,EAASA,EAAGG,KACpJ,ECp7CG,SAASo6B,GAAgBl+B,EAAIi+B,EAAeqN,EAAiBC,EAA0BC,EAA0BC,QAA3D,IAAVH,IAAAA,EAAa,CAAC,QAAsB,IAAnBC,IAAAA,EAAsB,CAAC,GACvF,MAAMG,EAAqC,iBAAlBzN,EACnBqN,EAAWrN,QACXn8B,EACA6pC,EAA8C,iBAAlB1N,EAC5BsN,EAAoBtN,QACpBn8B,EACN,GAAI4pC,GAAaC,EACb,MAAM,IAAI/nC,MAAO,kBAAiB5D,kBAAmBi+B,4DAEzD,GAAI0N,EAAoB,CACpB,IAAKH,EACD,MAAM,IAAI5nC,MAAO,kBAAiB5D,+BAAgCi+B,6EAEtE,OAAOuN,EAAyBtN,gBAAgBl+B,EAAIi+B,EAAe0N,EACvE,CACA,IAAKD,EAAW,CACZ,GAAID,EACA,OAAOA,IAEX,MAAM,IAAI7nC,MAAO,kBAAiB5D,qBAAsBi+B,cAC5D,CACA,OAAO,IAAIyN,EAAU1rC,EAAIi+B,EAC7B,CCjBO,MAAM2N,WAA0BzrB,GACnC,eAAI5R,GACA,OAAOlN,KAAKmf,SAASjS,WACzB,CACA,eAAIA,CAAYzK,GACZzC,KAAKmf,SAASjS,YAAczK,CAChC,CACA,WAAIc,GACA,OAAOvD,KAAKyjC,QAChB,CACA,gBAAIpnB,GACA,OAAOrc,KAAK2jC,aAChB,CACA,gBAAItnB,CAAa5Z,GACbzC,KAAK2jC,cAAgBlhC,CACzB,CACA9C,WAAAA,CAAY4D,GACRxD,MAAM,CACFyZ,cAAejW,EAAQiW,cACvB9I,mBAAoBnN,EAAQmN,mBAC5BxD,YAAa3J,EAAQ2J,YACrB8D,OAAQzN,EAAQyN,OAChBsO,oBAAqB/b,EAAQ+b,sBAEjCtf,KAAKwqC,qBAAuB,IAAIxnC,EAChChD,KAAKshB,oBAAsBthB,KAAKwqC,qBAAqB9mC,MACrD1D,KAAKmkC,kBAAoB,IAAInhC,EAC7BhD,KAAKsiB,iBAAmBtiB,KAAKmkC,kBAAkBzgC,MAC/C1D,KAAKokC,eAAiB,IAAIphC,EAC1BhD,KAAKoiB,cAAgBpiB,KAAKokC,eAAe1gC,MACzC1D,KAAK46B,wBAA0B,IAAI53B,EACnChD,KAAKwiB,uBAAyBxiB,KAAK46B,wBAAwBl3B,MAC3D1D,KAAKyjC,SAAWlgC,EAChBvD,KAAK8F,eAAe9F,KAAKokC,eAAgBpkC,KAAKmkC,kBAAmBnkC,KAAK46B,wBAAyB56B,KAAK4f,UAAUlc,IAC1G1D,KAAKokC,eAAelgC,KAAKR,EAAM,IAC/B1D,KAAK0f,aAAahc,IAClB1D,KAAKmkC,kBAAkBjgC,KAAKR,EAAM,IAClC1D,KAAK8f,mBAAmBpc,IACxB1D,KAAK46B,wBAAwB12B,KAAKR,EAAM,KAEvC1D,KAAKuD,QAAQ0mC,aACdjqC,KAAKuD,QAAQ0mC,WAAa,CAAC,GAE1BjqC,KAAKuD,QAAQ2mC,sBACdlqC,KAAKuD,QAAQ2mC,oBAAsB,CAAC,EAE5C,CACA3oB,aAAAA,CAAche,GACV,MAAMknC,EAAuD,iBAAxBlnC,EAAQ2J,aACzClN,KAAKmf,SAASjS,cAAgB3J,EAAQ2J,YAC1ClN,KAAKyjC,SAAW1hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAKuD,SAAUA,GAC3DknC,IACAzqC,KAAKmf,SAASjS,YAAc3J,EAAQ2J,aAExClN,KAAKyU,OAAOzU,KAAKmf,SAAS7V,MAAOtJ,KAAKmf,SAAS5V,QAAQ,EAC3D,CACAiY,WAAAA,CAAYxB,GACRhgB,KAAKghB,YAAYhB,EACrB,CAMArF,MAAAA,GACI,IAAIrY,EAEJ,MAAO,CACHklC,KAFSxnC,KAAKmf,SAASlD,YAGvBgH,YAAyC,QAA3B3gB,EAAKtC,KAAKof,mBAAgC,IAAP9c,OAAgB,EAASA,EAAG3D,GAErF,CACAsN,UAAAA,CAAW+T,EAAO3U,GACdrL,KAAKmf,SAASxN,eAAe4H,EAAgByG,EAAMzb,SAAU8G,EACjE,CACA0V,SAAAA,CAAUf,GACNhgB,KAAKgf,QAAQld,SAAQ,CAACW,EAAOhB,KACzBgB,EAAMA,MAAMse,UAAUf,IAAUvd,EAAMA,MAAM,GAEpD,CACAgf,KAAAA,GACI,IAAInf,EACwB,QAA3BA,EAAKtC,KAAKof,mBAAgC,IAAP9c,GAAyBA,EAAGmf,OACpE,CACAhF,QAAAA,CAASiuB,GACL1qC,KAAKqD,QACL,MAAM,KAAEmkC,EAAI,YAAEvkB,GAAgBynB,EAC9B,IACI,MAAMC,EAAQ,GAERrhC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OA6BpB,GA5BAvJ,KAAKmf,SAAShD,YAAYqrB,EAAM,CAC5B/qB,SAAWtE,IACP,IAAI7V,EAAIykB,EACR,MAAM,KAAErmB,GAASyX,EACX5M,EAAOsxB,GAAgBn8B,EAAK/B,GAAI+B,EAAKzB,UAA8C,QAAlCqD,EAAKtC,KAAKuD,QAAQ0mC,kBAA+B,IAAP3nC,EAAgBA,EAAK,CAAC,EAA+C,QAA3CykB,EAAK/mB,KAAKuD,QAAQ2mC,2BAAwC,IAAPnjB,EAAgBA,EAAK,CAAC,EAAG/mB,KAAKuD,QAAQqnC,0BAC9M,CACE/N,gBAAiB78B,KAAKuD,QAAQqnC,0BACzB/N,sBAEPp8B,GAcN,OAbAkqC,EAAM9mC,MAAK,IAAM0H,EAAKmgB,KAAK,CACvB5B,OAAQppB,EAAKopB,OACb5S,aAAcxW,EAAKwW,aACnBC,aAAczW,EAAKyW,aACnBC,cAAe1W,EAAK0W,cACpBC,cAAe3W,EAAK2W,cACpB1L,SAAUjL,EAAKiL,SACfC,OAAQlL,EAAKkL,KACbihB,SAAU7sB,KACVigB,UAAW9H,EAAK9M,YAEpBrL,KAAKokC,eAAelgC,KAAKqH,GACzBvL,KAAK6qC,cAAct/B,GACZA,CAAI,IAGnBvL,KAAKyU,OAAOnL,EAAOC,GAAQ,GAC3BohC,EAAM7oC,SAASgpC,GAAMA,MACM,iBAAhB7nB,EAA0B,CACjC,MAAMjD,EAAQhgB,KAAK8gB,SAASmC,GACxBjD,GACAhgB,KAAKmgB,iBAAiBH,EAE9B,CACJ,CACA,MAAOijB,GAKH,IAAK,MAAMxiB,KAASzgB,KAAKif,OACrBwB,EAAM5e,UACN7B,KAAKgf,QAAQ3a,OAAOoc,EAAM9hB,IAC1BqB,KAAKmkC,kBAAkBjgC,KAAKuc,GAShC,MANAzgB,KAAKqD,QAMC4/B,CACV,CACAjjC,KAAKwqC,qBAAqBtmC,MAC9B,CACAb,KAAAA,GACI,MAAM6kC,EAAiBloC,KAAKof,YACtBH,EAASzd,MAAM+D,KAAKvF,KAAKgf,QAAQE,UACvC,IAAK,MAAMuB,KAASxB,EAChBwB,EAAMra,WAAWvE,UACjB7B,KAAK0gB,cAAcD,EAAMhe,MAAO,CAAEoe,YAAY,IAE9CqnB,GACAloC,KAAKmgB,sBAAiB1f,GAE1BT,KAAKmf,SAAS9b,OAClB,CACAse,SAAAA,CAAU3B,EAAOzc,GACb,IAAIjB,EACJ,IAAImmC,EACJ,MAAMnF,EAAetjC,KAAKmf,SAAS/X,OAAO4Y,GACpCqlB,EAAgE,QAA9C/iC,EAAKtC,KAAKgf,QAAQ4B,IAAIrd,EAAQwnC,kBAA+B,IAAPzoC,OAAgB,EAASA,EAAGG,MAC1G,IAAK4iC,EACD,MAAM,IAAI9iC,MAAO,mBAAkBgB,EAAQwnC,4BAE/C,MAAM3mB,EAASvF,GAAStb,EAAQ2W,WAChC,GAAe,WAAXkK,EACA,MAAM,IAAI7hB,MAAO,GAAE6hB,gCAElB,CACD,MAAMnK,EAAWV,EAAgB8rB,EAAe9gC,SAChDkkC,EAAmB1uB,EAAoB/Z,KAAKmf,SAASjS,YAAa+M,EAAUmK,EAChF,CACApkB,KAAKwgB,WAAW8iB,EAAcmF,EAAkBllC,EAAQuB,KAC5D,CACA4c,QAAAA,CAASne,GACL,IAAIjB,EAAIykB,EAAIuR,EAAIqE,EAAIqJ,EAAIC,EACxB,IAAIwC,EAA+C,QAA3BnmC,EAAKiB,EAAQ0W,gBAA6B,IAAP3X,EAAgBA,EAAK,CAAC,GACjF,GAAgC,QAA3BykB,EAAKxjB,EAAQkS,gBAA6B,IAAPsR,OAAgB,EAASA,EAAGohB,eAAgB,CAChF,MAAM9C,EAA8E,QAA5D/M,EAAKt4B,KAAKgf,QAAQ4B,IAAIrd,EAAQkS,SAAS0yB,uBAAoC,IAAP7P,OAAgB,EAASA,EAAG71B,MACxH,IAAK4iC,EACD,MAAM,IAAI9iC,MAAO,mBAAkBgB,EAAQkS,SAAS0yB,iCAExD,MAAM/jB,EAASvF,GAAStb,EAAQkS,SAASyE,WACzC,GAAe,WAAXkK,EACA,MAAM,IAAI7hB,MAAO,GAAE6hB,gCAElB,CACD,MAAMnK,EAAWV,EAAgB8rB,EAAe9gC,SAChDkkC,EAAmB1uB,EAAoB/Z,KAAKmf,SAASjS,YAAa+M,EAAUmK,EAChF,CACJ,CACA,MAAM7Y,EAAOsxB,GAAgBt5B,EAAQ5E,GAAI4E,EAAQtE,UAA8C,QAAlC09B,EAAK38B,KAAKuD,QAAQ0mC,kBAA+B,IAAPtN,EAAgBA,EAAK,CAAC,EAA+C,QAA3CqJ,EAAKhmC,KAAKuD,QAAQ2mC,2BAAwC,IAAPlE,EAAgBA,EAAK,CAAC,EAAGhmC,KAAKuD,QAAQqnC,0BACpN,CACE/N,gBAAiB78B,KAAKuD,QAAQqnC,0BACzB/N,sBAEPp8B,GAeN,OAdA8K,EAAKmgB,KAAK,CACN5B,OAAkC,QAAzBmc,EAAK1iC,EAAQumB,cAA2B,IAAPmc,EAAgBA,EAAK,CAAC,EAChE/uB,aAAc3T,EAAQ2T,aACtBC,aAAc5T,EAAQ4T,aACtBC,cAAe7T,EAAQ6T,cACvBC,cAAe9T,EAAQ8T,cACvB1L,SAAUpI,EAAQoI,SAClBC,OAAQrI,EAAQqI,KAChBihB,SAAU7sB,KACVigB,WAAW,IAEfjgB,KAAK6qC,cAAct/B,GACnBvL,KAAKwgB,WAAWjV,EAAMk9B,EAAkBllC,EAAQuB,MAChD9E,KAAKmgB,iBAAiB5U,GACfA,CACX,CACAs/B,aAAAA,CAAc7qB,GACV,MAAM5Z,EAAa,IAAIX,EAAoBua,EAAMiC,IAAIgH,kBAAkBvlB,IAC9DA,EAAM2kB,WAGXroB,KAAKgf,QAAQld,SAASkpC,IAClB,MAAMvqB,EAAQuqB,EAAUvoC,MACpBge,IAAUT,EACVS,EAAMM,WAAU,GAGhBN,EAAMM,WAAU,EACpB,GACF,KAEN/gB,KAAKgf,QAAQja,IAAIib,EAAMrhB,GAAI,CACvB8D,MAAOud,EACP5Z,cAER,CACA0jC,SAAAA,CAAUzE,EAAgBxlC,EAASukB,GAC/B,MAAMklB,EAActpC,KAAK8gB,SAASjhB,GAClC,IAAKypC,EACD,MAAM,IAAI/mC,MAAM,qBAEpB,MAAM+iC,EAAoB/rB,EAAgB8rB,EAAe9gC,SACnDglC,EAAiBxvB,EAAoB/Z,KAAKmf,SAASjS,YAAao4B,EAAmBlhB,IAClFolB,EAAsBz+B,GAAMpB,EAAK4/B,GAClCE,EAAiBlwB,EAAgB+vB,EAAY/kC,UAC5CmlC,EAAsBnkC,GAAQoE,EAAK8/B,GAC1C,GAAI5/B,EAAe6/B,EAAsBF,GAKrC,YADAxpC,KAAKmf,SAAS3K,SAASk1B,EAAsBnkC,EAAMwF,GAIvD,MAAM4+B,EAAc3pC,KAAK0gB,cAAc4oB,EAAa,CAChDzoB,YAAY,EACZ9J,aAAa,IAGX6yB,EAA2BrwB,EAAgB8rB,EAAe9gC,SAC1D0V,EAAWF,EAAoB/Z,KAAKmf,SAASjS,YAAa08B,EAA0BxlB,GAC1FpkB,KAAKwgB,WAAWmpB,EAAa1vB,EACjC,CACA+G,WAAAA,CAAYP,GACR1gB,MAAMihB,YAAYP,EACtB,CACA5e,OAAAA,GACI9B,MAAM8B,UACN7B,KAAKwqC,qBAAqB3oC,SAC9B,EC5QG,MAAMopC,WAA2BhtB,GACpC,UAAIoD,GACA,OAAOrhB,KAAKoW,UAAU7D,UAC1B,CACA,WAAIhP,GACA,OAAOvD,KAAKyjC,QAChB,CACA,UAAIliC,GACA,OAAOvB,KAAKo0B,QAAQtvB,IACxB,CACA,eAAIoI,GACA,OAAOlN,KAAKoW,UAAUlJ,WAC1B,CACA,aAAIkJ,GACA,OAAOpW,KAAKkrC,UAChB,CACA,aAAI90B,CAAU3T,GACVzC,KAAKkrC,WAAazoC,EAClBzC,KAAKmrC,2BAA2B1oC,MAAQ,IAAIgD,EAAoBzF,KAAKkrC,WAAW78B,cAAa,KACzFrO,KAAKuf,mBAAmBrb,UAAKzD,EAAU,IACvCT,KAAKkrC,WAAW38B,cAAcpK,GAAMnE,KAAKsO,cAAcpK,KAAKC,KAAKnE,KAAKkrC,WAAWz8B,iBAAiBtK,GAAMnE,KAAKwO,iBAAiBtK,KAAKC,KAC3I,CACA,eAAImH,GACA,OAAOtL,KAAKoW,UAAU9K,WAC1B,CACA,eAAIG,GACA,OAAOzL,KAAKoW,UAAU3K,WAC1B,CACA,UAAIlC,GACA,OAAOvJ,KAAKoW,UAAUlJ,cAAgBf,EAAYkB,WAC5CrN,KAAKoW,UAAUvJ,eACf7M,KAAKoW,UAAUtR,IACzB,CACA,SAAIwE,GACA,OAAOtJ,KAAKoW,UAAUlJ,cAAgBf,EAAYkB,WAC5CrN,KAAKoW,UAAUtR,KACf9E,KAAKoW,UAAUvJ,cACzB,CACAlN,WAAAA,CAAY4D,GACRxD,MAAMwD,EAAQiW,cAAejW,EAAQ+b,qBACrCtf,KAAKmrC,2BAA6B,IAAIjlC,EACtClG,KAAKo0B,QAAU,IAAIvvB,IACnB7E,KAAKwqC,qBAAuB,IAAIxnC,EAChChD,KAAKshB,oBAAsBthB,KAAKwqC,qBAAqB9mC,MACrD1D,KAAKsO,cAAgB,IAAItL,EACzBhD,KAAKuO,aAAevO,KAAKsO,cAAc5K,MACvC1D,KAAKwO,iBAAmB,IAAIxL,EAC5BhD,KAAKyO,gBAAkBzO,KAAKwO,iBAAiB9K,MAC7C1D,KAAKuf,mBAAqB,IAAIvc,EAC9BhD,KAAKwf,kBAAoBxf,KAAKuf,mBAAmB7b,MACjD1D,KAAKyjC,SAAWlgC,EACXA,EAAQ0mC,aACT1mC,EAAQ0mC,WAAa,CAAC,GAErB1mC,EAAQ2mC,sBACT3mC,EAAQ2mC,oBAAsB,CAAC,GAEnClqC,KAAKoW,UAAY,IAAI1J,EAAU1M,KAAKuE,QAAShB,GAC7CvD,KAAK8F,eAAe9F,KAAKsO,cAAetO,KAAKwqC,qBAAsBxqC,KAAKwO,iBAAkBxO,KAAKuf,mBACnG,CACAgC,aAAAA,CAAche,GACV,MAAMknC,EAAuD,iBAAxBlnC,EAAQ2J,aACzClN,KAAKuD,QAAQ2J,cAAgB3J,EAAQ2J,YACzClN,KAAKyjC,SAAW1hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAKuD,SAAUA,GAC3DknC,IACAzqC,KAAKoW,UAAUlJ,YAAc3J,EAAQ2J,aAEzClN,KAAKoW,UAAU3B,OAAOzU,KAAKoW,UAAUtR,KAAM9E,KAAKoW,UAAUvJ,eAC9D,CACA4U,KAAAA,GACI,IAAInf,EACyB,QAA5BA,EAAKtC,KAAKm0B,oBAAiC,IAAP7xB,GAAyBA,EAAGmf,OACrE,CACAE,SAAAA,CAAUpc,EAAMwF,GACZ/K,KAAKoW,UAAU5B,SAASjP,EAAMwF,EAClC,CACAkB,UAAAA,CAAW+T,EAAO3U,GACd,MAAMvH,EAAQ9D,KAAKqhB,OAAOtd,QAAQic,GAClChgB,KAAKoW,UAAUzE,eAAe7N,EAAOuH,EACzC,CACA0V,SAAAA,CAAUf,EAAOorB,GACbprC,KAAKm0B,aAAenU,EACpBhgB,KAAKqhB,OACAnP,QAAQm5B,GAAMA,IAAMrrB,IACpBle,SAASupC,IACVA,EAAEppB,IAAIpC,mBAAmB3b,KAAK,CAAEqkB,UAAU,IACrC6iB,GACDC,EAAE5pB,OACN,IAEJzB,EAAMiC,IAAIpC,mBAAmB3b,KAAK,CAAEqkB,UAAU,IACzC6iB,GACDprB,EAAMyB,OAEd,CACAD,WAAAA,CAAYxB,EAAO5O,GACf,MAAM5D,EAAOxN,KAAKo0B,QAAQxT,IAAIZ,EAAMrhB,IACpC,IAAK6O,EACD,MAAM,IAAIjL,MAAO,2BAA0Byd,EAAMrhB,MAErD6O,EAAK3L,UACL7B,KAAKo0B,QAAQ/vB,OAAO2b,EAAMrhB,IAC1B,MAAMmF,EAAQ9D,KAAKqhB,OAAOhX,WAAWuF,GAAMA,IAAMoQ,IAC7BhgB,KAAKoW,UAAU9B,WAAWxQ,EAAOsN,GACzCvP,UACZ,MAAMwf,EAASrhB,KAAKqhB,OAChBA,EAAO9f,OAAS,GAChBvB,KAAK+gB,UAAUM,EAAOA,EAAO9f,OAAS,GAE9C,CACAuf,QAAAA,CAASniB,GACL,OAAOqB,KAAKqhB,OAAO2R,MAAMznB,GAASA,EAAK5M,KAAOA,GAClD,CACA+iB,QAAAA,CAASne,GACL,IAAIjB,EAAIykB,EAAIuR,EACZ,GAAIt4B,KAAKo0B,QAAQzT,IAAIpd,EAAQ5E,IACzB,MAAM,IAAI4D,MAAO,SAAQgB,EAAQ5E,qBAErC,MAAM4M,EAAOsxB,GAAgBt5B,EAAQ5E,GAAI4E,EAAQtE,UAA8C,QAAlCqD,EAAKtC,KAAKuD,QAAQ0mC,kBAA+B,IAAP3nC,EAAgBA,EAAK,CAAC,EAA+C,QAA3CykB,EAAK/mB,KAAKuD,QAAQ2mC,2BAAwC,IAAPnjB,EAAgBA,EAAK,CAAC,EAAG/mB,KAAKuD,QAAQ+nC,iBACpN,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBAAiBzO,sBAEjDp8B,GACN8K,EAAK2B,YAAclN,KAAKoW,UAAUlJ,YAClC3B,EAAKmgB,KAAK,CACN5B,OAAkC,QAAzBwO,EAAK/0B,EAAQumB,cAA2B,IAAPwO,EAAgBA,EAAK,CAAC,EAChEhtB,YAAa/H,EAAQ+H,YACrBG,YAAalI,EAAQkI,YACrBG,KAAMrI,EAAQqI,KACdD,SAAUpI,EAAQoI,SAClBkhB,SAAU7sB,OAEd,MAAM8E,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAOwH,EAAOC,WAChEzI,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQrD,EAIlE,OAHAT,KAAKoW,UAAU/E,QAAQ9F,EAAMzG,EAAMhB,GACnC9D,KAAKurC,UAAUhgC,GACfvL,KAAK+gB,UAAUxV,GACRA,CACX,CACAkJ,MAAAA,CAAOnL,EAAOC,GACV,MAAOzE,EAAM+H,GAAkB7M,KAAKoW,UAAUlJ,cAAgBf,EAAYkB,WACpE,CAAC/D,EAAOC,GACR,CAACA,EAAQD,GACftJ,KAAKoW,UAAU3B,OAAO3P,EAAM+H,EAChC,CACA0+B,SAAAA,CAAUhgC,GACN,MAAMnF,EAAamF,EAAK0W,IAAIgH,kBAAkBvlB,IACrCA,EAAM2kB,WAGXroB,KAAK+gB,UAAUxV,GAAM,EAAK,IAE9BvL,KAAKo0B,QAAQrvB,IAAIwG,EAAK5M,GAAIyH,EAC9B,CACAuU,MAAAA,GACI,IAAIrY,EAYJ,MAAO,CACH4O,MAZUlR,KAAKoW,UACd7D,WACAnT,KAAI,CAACmM,EAAMvB,KAEL,CACHlF,KAFS9E,KAAKoW,UAAUrE,YAAY/H,GAGpCtJ,KAAM6K,EAAKoP,SACX/O,OAAQL,EAAKK,KACbD,SAAUJ,EAAKI,aAKnB+qB,WAAyC,QAA5Bp0B,EAAKtC,KAAKm0B,oBAAiC,IAAP7xB,OAAgB,EAASA,EAAG3D,GAC7EmG,KAAM9E,KAAKoW,UAAUtR,KACrBoI,YAAalN,KAAKoW,UAAUlJ,YAEpC,CACAuP,QAAAA,CAAS+uB,GACLxrC,KAAKqD,QACL,MAAM,MAAE6N,EAAK,YAAEhE,EAAW,KAAEpI,EAAI,WAAE4xB,GAAe8U,EAC3Cb,EAAQ,GAERrhC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAyCpB,GAxCAvJ,KAAKoW,UAAY,IAAI1J,EAAU1M,KAAKuE,QAAS,CACzC2I,cACAwD,mBAAoB1Q,KAAKuD,QAAQmN,mBACjCO,WAAY,CACRnM,OACAoM,MAAOA,EAAM9R,KAAKmM,IACd,IAAIjJ,EAAIykB,EACR,MAAMrmB,EAAO6K,EAAK7K,KAClB,GAAIV,KAAKo0B,QAAQzT,IAAIjgB,EAAK/B,IACtB,MAAM,IAAI4D,MAAO,SAAQ7B,EAAK/B,qBAElC,MAAMqhB,EAAQ6c,GAAgBn8B,EAAK/B,GAAI+B,EAAKzB,UAA8C,QAAlCqD,EAAKtC,KAAKuD,QAAQ0mC,kBAA+B,IAAP3nC,EAAgBA,EAAK,CAAC,EAA+C,QAA3CykB,EAAK/mB,KAAKuD,QAAQ2mC,2BAAwC,IAAPnjB,EAAgBA,EAAK,CAAC,EAAG/mB,KAAKuD,QAAQ+nC,iBAC/M,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBACzBzO,sBAEPp8B,GAkBN,OAjBAkqC,EAAM9mC,MAAK,KACP,IAAIvB,EACJ0d,EAAM0L,KAAK,CACP5B,OAA+B,QAAtBxnB,EAAK5B,EAAKopB,cAA2B,IAAPxnB,EAAgBA,EAAK,CAAC,EAC7DgJ,YAAa5K,EAAK4K,YAClBG,YAAa/K,EAAK+K,YAClBG,KAAML,EAAKK,KACXD,SAAUJ,EAAKI,SACfkhB,SAAU7sB,MACZ,IAENggB,EAAM9S,YAAcA,EACpBlN,KAAKurC,UAAUvrB,GACf3a,YAAW,KAEPrF,KAAKsO,cAAcpK,KAAK8b,EAAM,GAC/B,GACI,CAAElb,KAAMyG,EAAKzG,KAAMyG,KAAMyU,EAAO,OAInDhgB,KAAKyU,OAAOnL,EAAOC,GACnBohC,EAAM7oC,SAASgpC,GAAMA,MACK,iBAAfpU,EAAyB,CAChC,MAAM1W,EAAQhgB,KAAK8gB,SAAS4V,GACxB1W,GACAhgB,KAAK+gB,UAAUf,EAEvB,CACAhgB,KAAKwqC,qBAAqBtmC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAM+C,KAAcpG,KAAKo0B,QAAQlV,SAClC9Y,EAAWvE,UAGf,IADA7B,KAAKo0B,QAAQ/wB,QACNrD,KAAKoW,UAAU7U,OAAS,GAAG,CACjBvB,KAAKoW,UAAU9B,WAAW,EAAGhI,EAAOC,YAAY,GACxD1K,SACT,CACJ,CACAA,OAAAA,GACI,IAAK,MAAMuE,KAAcpG,KAAKo0B,QAAQlV,SAClC9Y,EAAWvE,UAEf7B,KAAKo0B,QAAQ/wB,QACb,MAAM6N,EAAQlR,KAAKoW,UAAU7D,WAC7BvS,KAAKmrC,2BAA2BtpC,UAChC7B,KAAKoW,UAAUvU,UACf,IAAK,MAAM0J,KAAQ2F,EACf3F,EAAK1J,UAET9B,MAAM8B,SACV,EC/PG,MAAM4pC,WAAsBhmC,EAC/B,WAAIlB,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,GACII,QACAC,KAAK0rC,cdS+BhQ,GAAyB,CACjEpyB,MAAO,KACPC,OAAQ,KACRuyB,QAAS,YACT9e,KAAM,oEcZFhd,KAAK2rC,edciCjQ,GAAyB,CACnEpyB,MAAO,KACPC,OAAQ,KACRuyB,QAAS,YACT9e,KAAM,qEcjBFhd,KAAKoG,WAAa,IAAIF,EACtBlG,KAAK4rC,OAAS,CAAE3pB,IAAK,MACrBjiB,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKuE,QAAQtG,UAAY,iBACzB+B,KAAKi8B,SAAWj0B,SAAS0K,cAAc,QACvC1S,KAAK6rC,UAAY7jC,SAAS0K,cAAc,OACxC1S,KAAK6rC,UAAU5tC,UAAY,4BAC3B+B,KAAKuE,QAAQwM,YAAY/Q,KAAK6rC,WAC9B7rC,KAAKuE,QAAQwM,YAAY/Q,KAAKi8B,UAC9Bj8B,KAAK8F,eAAenB,EAAsB3E,KAAKke,SAAU,SAAS,KAC9D,IAAI5b,EACuB,QAA1BA,EAAKtC,KAAK4rC,OAAO3pB,WAAwB,IAAP3f,GAAyBA,EAAG2oB,aAAajrB,KAAK4rC,OAAO3pB,IAAIiJ,WAAW,IAE/G,CACAQ,IAAAA,CAAK5B,GACD9pB,KAAK4rC,OAAO3pB,IAAM6H,EAAO7H,IACzBjiB,KAAKi8B,SAASxL,YAAc3G,EAAOntB,MACnCqD,KAAK8rC,aACL9rC,KAAKoG,WAAW3D,MAAQqnB,EAAO7H,IAAI2I,sBAAqB,KACpD5qB,KAAK8rC,YAAY,GAEzB,CACAA,UAAAA,GACI,IAAIxpC,EACJ,MAAM4oB,KAA2C,QAA1B5oB,EAAKtC,KAAK4rC,OAAO3pB,WAAwB,IAAP3f,OAAgB,EAASA,EAAG4oB,YACrF5jB,EAAYtH,KAAK6rC,UAAW,aAAc3gB,GACtCA,GACIlrB,KAAK6rC,UAAU1kC,SAASnH,KAAK2rC,iBAC7B3rC,KAAK2rC,eAAevkC,SAEnBpH,KAAK6rC,UAAU1kC,SAASnH,KAAK0rC,gBAC9B1rC,KAAK6rC,UAAU96B,YAAY/Q,KAAK0rC,iBAIhC1rC,KAAK6rC,UAAU1kC,SAASnH,KAAK0rC,gBAC7B1rC,KAAK0rC,cAActkC,SAElBpH,KAAK6rC,UAAU1kC,SAASnH,KAAK2rC,iBAC9B3rC,KAAK6rC,UAAU96B,YAAY/Q,KAAK2rC,gBAG5C,CACA9hB,MAAAA,CAAOuB,GACH,CAEJvpB,OAAAA,GACI7B,KAAKoG,WAAWvE,UAChB9B,MAAM8B,SACV,ECnDJ,MAAM+c,GAAejU,IACd,MAAMohC,WAAsBre,GAC/B/tB,WAAAA,CAAY4D,GACRxD,MAAMwD,EAAQspB,SAAUtpB,EAAQ5E,GAAI4E,EAAQtE,UAAWsE,EAAQipB,gBAAiBjpB,EAAQ2J,YAAa3J,EAAQ2nB,WAAY3nB,EAAQoqB,YACjI3tB,KAAKuD,QAAUA,CACnB,CACA6pB,gBAAAA,GACI,OAAOptB,KAAKuD,QAAQ2pB,IACxB,CACAI,kBAAAA,GACI,OAAOttB,KAAKuD,QAAQ+oB,MACxB,EAEG,MAAM0f,WAA0B/tB,GACnC,MAAItf,GACA,OAAOqB,KAAK+e,GAChB,CACA,UAAIsC,GACA,OAAOrhB,KAAKisC,SAASz1B,UACzB,CACA,YAAIy1B,CAASxpC,GACTzC,KAAKksC,UAAYzpC,EACjBzC,KAAKmG,YAAY1D,MAAQ,IAAIgD,EAAoBzF,KAAKksC,UAAU15B,aAAY,KACxExS,KAAKuf,mBAAmBrb,UAAKzD,EAAU,IACvCT,KAAKksC,UAAU39B,cAAcpK,GAAMnE,KAAKsO,cAAcpK,KAAKC,KAAKnE,KAAKksC,UAAUz9B,iBAAiBtK,GAAMnE,KAAKwO,iBAAiBtK,KAAKC,KACzI,CACA,YAAI8nC,GACA,OAAOjsC,KAAKksC,SAChB,CACA,eAAI5gC,GACA,OAAOtL,KAAKisC,SAAS3gC,WACzB,CACA,eAAIG,GACA,OAAOzL,KAAKisC,SAASxgC,WACzB,CACA,UAAIlC,GACA,OAAOvJ,KAAKisC,SAAS/+B,cAAgBf,EAAYkB,WAC3CrN,KAAKisC,SAASp/B,eACd7M,KAAKisC,SAASnnC,IACxB,CACA,SAAIwE,GACA,OAAOtJ,KAAKisC,SAAS/+B,cAAgBf,EAAYkB,WAC3CrN,KAAKisC,SAASnnC,KACd9E,KAAKisC,SAASp/B,cACxB,CACA,WAAItJ,GACA,OAAOvD,KAAKyjC,QAChB,CACA9jC,WAAAA,CAAY4D,GACRxD,MAAMwD,EAAQiW,cAAejW,EAAQ+b,qBACrCtf,KAAK+e,IAAMH,GAAahU,OACxB5K,KAAKmG,YAAc,IAAID,EACvBlG,KAAKmsC,iBAAmB,IAAItnC,IAC5B7E,KAAKwqC,qBAAuB,IAAIxnC,EAChChD,KAAKshB,oBAAsBthB,KAAKwqC,qBAAqB9mC,MACrD1D,KAAKuf,mBAAqB,IAAIvc,EAC9BhD,KAAKwf,kBAAoBxf,KAAKuf,mBAAmB7b,MACjD1D,KAAK4tB,WAAa,IAAI5qB,EACtBhD,KAAK6hB,UAAY7hB,KAAK4tB,WAAWlqB,MACjC1D,KAAKsO,cAAgB,IAAItL,EACzBhD,KAAKuO,aAAevO,KAAKsO,cAAc5K,MACvC1D,KAAKwO,iBAAmB,IAAIxL,EAC5BhD,KAAKyO,gBAAkBzO,KAAKwO,iBAAiB9K,MAC7C1D,KAAK8F,eAAe9F,KAAKuf,mBAAoBvf,KAAKwqC,qBAAsBxqC,KAAK4tB,WAAY5tB,KAAKsO,cAAetO,KAAKwO,kBAClHxO,KAAKyjC,SAAWlgC,EACXA,EAAQ0mC,aACT1mC,EAAQ0mC,WAAa,CAAC,GAErB1mC,EAAQ2mC,sBACT3mC,EAAQ2mC,oBAAsB,CAAC,GAEnClqC,KAAKisC,SAAW,IAAI91B,EAASnW,KAAKuE,QAAS,CAEvC2I,YAAaf,EAAY8I,WAE7BjV,KAAK8F,eAAe9F,KAAKmG,YAC7B,CACA8F,UAAAA,CAAW+T,EAAO3U,GACd,MAAMvH,EAAQ9D,KAAKqhB,OAAOtd,QAAQic,GAClChgB,KAAKisC,SAASt6B,eAAe7N,EAAOuH,EACxC,CACAoW,KAAAA,GACI,CAEJF,aAAAA,CAAche,GACVvD,KAAKyjC,SAAW1hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAKuD,SAAUA,EACnE,CACAme,QAAAA,CAASne,GACL,IAAIjB,EAAIykB,EAAIuR,EAAIqE,EAChB,MAAMzP,EAAO2P,GAAgBt5B,EAAQ5E,GAAI4E,EAAQtE,UAA8C,QAAlCqD,EAAKtC,KAAKuD,QAAQ0mC,kBAA+B,IAAP3nC,EAAgBA,EAAK,CAAC,EAA+C,QAA3CykB,EAAK/mB,KAAKuD,QAAQ2mC,2BAAwC,IAAPnjB,EAAgBA,EAAK,CAAC,EAAG/mB,KAAKuD,QAAQ+nC,iBACpN,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBAAiBpe,KAAK2P,sBAEtDp8B,GACN,IAAI6rB,EAEAA,EADA/oB,EAAQipB,gBACCqQ,GAAgBt5B,EAAQ5E,GAAI4E,EAAQipB,gBAA0D,QAAxC8L,EAAKt4B,KAAKuD,QAAQ6oC,wBAAqC,IAAP9T,EAAgBA,EAAK,CAAC,EAAGt4B,KAAKuD,QAAQ8oC,0BAA2BrsC,KAAKuD,QAAQ+nC,iBACvL,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBAAiBhf,OAC1CuQ,sBAEPp8B,GAGG,IAAIgrC,GAEjB,MAAMlgC,EAAO,IAAIwgC,GAAc,CAC3BptC,GAAI4E,EAAQ5E,GACZM,UAAWsE,EAAQtE,UACnButB,gBAAiBjpB,EAAQipB,gBACzBF,SACAY,OACAhgB,YAAaf,EAAY8I,SACzBiW,aAAc3nB,EAAQ2nB,WACtByC,aAAc3tB,KAAKuD,QAAQoqB,WAC3Bd,SAAU7sB,OAEdA,KAAKk2B,WAAW3qB,GAChB,MAAMzG,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAOwH,EAAOC,WAChEzI,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQrD,EAYlE,OAXA8K,EAAKmgB,KAAK,CACN5B,OAAkC,QAAzB6S,EAAKp5B,EAAQumB,cAA2B,IAAP6S,EAAgBA,EAAK,CAAC,EAChEzQ,gBAAiB3oB,EAAQ2oB,gBACzBC,gBAAiB5oB,EAAQ4oB,gBACzBjB,WAAY3nB,EAAQ2nB,WACpBvuB,MAAO4G,EAAQ5G,MACfuxB,aAAc,IAAItM,GAAY5hB,MAC9B6sB,SAAU7sB,OAEdA,KAAKisC,SAASp1B,QAAQtL,EAAMzG,EAAMhB,GAClCyH,EAAK2B,YAAclN,KAAKisC,SAAS/+B,YAC1B3B,CACX,CACAiW,WAAAA,CAAYxB,GACR,MACMlc,EADQ9D,KAAKqhB,OACChX,WAAWuF,GAAMA,IAAMoQ,IAC3ChgB,KAAKisC,SAASn1B,WAAWhT,GACzB9D,KAAK03B,cAAc1X,EACvB,CACA2B,SAAAA,CAAUpc,EAAMwF,GACZ/K,KAAKisC,SAASz3B,SAASjP,EAAMwF,EACjC,CACA+V,QAAAA,CAASniB,GACL,OAAOqB,KAAKqhB,OAAO2R,MAAMznB,GAASA,EAAK5M,KAAOA,GAClD,CACA8V,MAAAA,CAAOnL,EAAOC,GACV,MAAOzE,EAAM+H,GAAkB7M,KAAKisC,SAAS/+B,cAAgBf,EAAYkB,WACnE,CAAC/D,EAAOC,GACR,CAACA,EAAQD,GACftJ,KAAKisC,SAASx3B,OAAO3P,EAAM+H,EAC/B,CACA8N,MAAAA,GACI,MAAM0e,EAAW52B,GAAUA,IAAUgL,OAAO2rB,kBACxC32B,IAAUgL,OAAOC,uBACfjN,EACAgC,EAcN,MAAO,CACHyO,MAbUlR,KAAKisC,SACdz1B,WACApX,KAAI,CAACmM,EAAMvB,KAEZ,MAAO,CACHlF,KAFS9E,KAAKisC,SAASl6B,YAAY/H,GAGnCtJ,KAAM6K,EAAKoP,SACXrP,aARS7I,EAQY8I,EAAK2gB,gBARNzpB,GAAS,OAAIhC,EAAYgC,GAS7CgJ,YAAa4tB,EAAQ9tB,EAAK4gB,iBAC1Bc,SAAU1hB,EAAK2f,cAVNzoB,KAWZ,IAIDqC,KAAM9E,KAAKisC,SAASnnC,KAE5B,CACA2X,QAAAA,CAAS6vB,GACLtsC,KAAKqD,QACL,MAAM,MAAE6N,EAAK,KAAEpM,GAASwnC,EAClB3B,EAAQ,GAERrhC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OACpBvJ,KAAKisC,SAAW,IAAI91B,EAASnW,KAAKuE,QAAS,CACvC2I,YAAaf,EAAY8I,SACzBhE,WAAY,CACRnM,OACAoM,MAAOA,EAAM9R,KAAKmM,IACd,IAAIjJ,EAAIykB,EAAIuR,EAAIqE,EAChB,MAAMj8B,EAAO6K,EAAK7K,KACZwsB,EAAO2P,GAAgBn8B,EAAK/B,GAAI+B,EAAKzB,UAA8C,QAAlCqD,EAAKtC,KAAKuD,QAAQ0mC,kBAA+B,IAAP3nC,EAAgBA,EAAK,CAAC,EAA+C,QAA3CykB,EAAK/mB,KAAKuD,QAAQ2mC,2BAAwC,IAAPnjB,EAAgBA,EAAK,CAAC,EAAG/mB,KAAKuD,QAAQ+nC,iBAC9M,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBAAiBpe,KAC1C2P,sBAEPp8B,GACN,IAAI6rB,EAEAA,EADA5rB,EAAK8rB,gBACIqQ,GAAgBn8B,EAAK/B,GAAI+B,EAAK8rB,gBAA0D,QAAxC8L,EAAKt4B,KAAKuD,QAAQ6oC,wBAAqC,IAAP9T,EAAgBA,EAAK,CAAC,EAAqD,QAAjDqE,EAAK38B,KAAKuD,QAAQ8oC,iCAA8C,IAAP1P,EAAgBA,EAAK,CAAC,EAAG38B,KAAKuD,QAAQ+nC,iBAC5N,CACEzO,gBAAiB78B,KAAKuD,QAAQ+nC,iBAAiBhf,OAC1CuQ,sBAEPp8B,GAGG,IAAIgrC,GAEjB,MAAMzrB,EAAQ,IAAI+rB,GAAc,CAC5BptC,GAAI+B,EAAK/B,GACTM,UAAWyB,EAAKzB,UAChButB,gBAAiB9rB,EAAK8rB,gBACtBF,SACAY,OACAhgB,YAAaf,EAAY8I,SACzBiW,aAAc3f,EAAK0hB,SACnBU,aAAc3tB,KAAKuD,QAAQoqB,WAC3Bd,SAAU7sB,OAoBd,OAlBAA,KAAKk2B,WAAWlW,GAChB2qB,EAAM9mC,MAAK,KACP,IAAIvB,EACJ0d,EAAM0L,KAAK,CACP5B,OAA+B,QAAtBxnB,EAAK5B,EAAKopB,cAA2B,IAAPxnB,EAAgBA,EAAK,CAAC,EAC7D4pB,gBAAiB3gB,EAAKD,YACtB6gB,gBAAiB5gB,EAAKE,YACtB9O,MAAO+D,EAAK/D,MACZuuB,aAAc3f,EAAK0hB,SACnBiB,aAAc,IAAItM,GAAY5hB,MAC9B6sB,SAAU7sB,OAEdggB,EAAM9S,YAAclN,KAAKisC,SAAS/+B,WAAW,IAEjD7H,YAAW,KAEPrF,KAAKsO,cAAcpK,KAAK8b,EAAM,GAC/B,GACI,CAAElb,KAAMyG,EAAKzG,KAAMyG,KAAMyU,EAAO,OAInDhgB,KAAKyU,OAAOnL,EAAOC,GACnBohC,EAAM7oC,SAASgpC,GAAMA,MACrB9qC,KAAKwqC,qBAAqBtmC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAOuM,EAAGnN,KAAUzC,KAAKmsC,iBAAiBnK,UAC3Cv/B,EAAMZ,UAEV7B,KAAKmsC,iBAAiB9oC,QACtBrD,KAAKisC,SAASpqC,SAClB,CACAq0B,UAAAA,CAAWlW,GACP,MAAM5Z,EAAa4Z,EAAM6B,WAAWne,IAChC1D,KAAK4tB,WAAW1pB,KAAKR,EAAM,IAE/B1D,KAAKmsC,iBAAiBpnC,IAAIib,EAAMrhB,GAAIyH,EACxC,CACAsxB,aAAAA,CAAc1X,GACV,MAAM5Z,EAAapG,KAAKmsC,iBAAiBvrB,IAAIZ,EAAMrhB,IAC/CyH,IACAA,EAAWvE,UACX7B,KAAKmsC,iBAAiB9nC,OAAO2b,EAAMrhB,IAE3C,CACAkD,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAO+N,EAAGnN,KAAUzC,KAAKmsC,iBAAiBnK,UAC3Cv/B,EAAMZ,UAEV7B,KAAKmsC,iBAAiB9oC,QACtBrD,KAAKisC,SAASpqC,SAClB,ECpRG,MAAM0qC,WAAuBphB,GAChC,YAAIxf,GACA,OAAO3L,KAAKy4B,SAChB,CACA,eAAIvrB,CAAYzK,GACZzC,KAAKmN,aAAe1K,CACxB,CACA,eAAIyK,GACA,OAAOlN,KAAKmN,YAChB,CACA,eAAI7B,GACA,MAAMxG,EAAoC,mBAAtB9E,KAAKwsC,aACnBxsC,KAAKwsC,eACLxsC,KAAKwsC,aAKX,OAJI1nC,IAAS9E,KAAKysC,wBACdzsC,KAAKysC,sBAAwB3nC,EAC7B9E,KAAK64B,qBAEF/zB,CACX,CACA,eAAI2G,GACA,MAAM3G,EAAoC,mBAAtB9E,KAAK0sC,aACnB1sC,KAAK0sC,eACL1sC,KAAK0sC,aAKX,OAJI5nC,IAAS9E,KAAK2sC,wBACd3sC,KAAK2sC,sBAAwB7nC,EAC7B9E,KAAK64B,qBAEF/zB,CACX,CACA,QAAI8G,GACA,OAAO5L,KAAK04B,KAChB,CACA/4B,WAAAA,CAAYhB,EAAIi+B,GACZ78B,MAAMpB,EAAIi+B,EAAe,IAAI5S,GAAsBrrB,EAAIi+B,IACvD58B,KAAKysC,sBAAwB,EAC7BzsC,KAAK2sC,sBAAwBl/B,OAAOC,kBACpC1N,KAAKwsC,aAAe,EACpBxsC,KAAK0sC,aAAej/B,OAAOC,kBAC3B1N,KAAK04B,OAAQ,EACb14B,KAAKuW,aAAe,IAAIvT,EACxBhD,KAAKwS,YAAcxS,KAAKuW,aAAa7S,MACrC1D,KAAKiiB,IAAI0H,WAAW3pB,MACpBA,KAAK8F,eAAe9F,KAAKuW,aAAcvW,KAAKiiB,IAAIoH,wBAAwB3lB,IACpE,MAAM,UAAEuc,GAAcvc,GAChB,SAAEmpB,GAAa7sB,KAAKorB,QAC1ByB,EAAS5gB,WAAWjM,KAAMigB,EAAU,IACpCjgB,KAAKiiB,IAAIsH,gBAAe,KACxB,MAAM,SAAEsD,GAAa7sB,KAAKorB,QAC1ByB,EAAS9L,UAAU/gB,KAAK,IACxBA,KAAKiiB,IAAIiI,gCAAgCxmB,IACR,iBAAtBA,EAAM4H,aACgB,mBAAtB5H,EAAM4H,cACbtL,KAAKwsC,aAAe9oC,EAAM4H,aAEG,iBAAtB5H,EAAM+H,aACgB,mBAAtB/H,EAAM+H,cACbzL,KAAK0sC,aAAehpC,EAAM+H,aAE9BzL,KAAK64B,mBAAmB,IACxB74B,KAAKiiB,IAAIqI,iBAAiB5mB,IAC1B1D,KAAKuW,aAAarS,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAEpD,CACAmH,UAAAA,CAAWgU,GACPjgB,KAAKiiB,IAAIjK,uBAAuB9T,KAAK,CAAE+b,aAC3C,CACAc,SAAAA,CAAUwH,GACNvoB,KAAKiiB,IAAIpC,mBAAmB3b,KAAK,CAAEqkB,YACvC,CACA9T,MAAAA,CAAO3P,EAAM+H,GACT,MAAOvD,EAAOC,GAAUvJ,KAAKkN,cAAgBf,EAAYkB,WACnD,CAACvI,EAAM+H,GACP,CAACA,EAAgB/H,GACvB/E,MAAM0U,OAAOnL,EAAOC,EACxB,CACAmiB,IAAAA,CAAK9B,GACD7pB,MAAM2rB,KAAK9B,GACX5pB,KAAKy4B,UAAY7O,EAAWje,SACxBie,EAAWte,cACXtL,KAAKwsC,aAAe5iB,EAAWte,aAE/Bse,EAAWne,cACXzL,KAAK0sC,aAAe9iB,EAAWne,aAE/Bme,EAAWhe,OACX5L,KAAK04B,MAAQ9O,EAAWhe,KAEhC,CACA+O,MAAAA,GAMI,OAAOoH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGjiB,MAAM4a,UAAW,CAAErP,aADzC7I,EAC8DzC,KAAKsL,YADxD7I,GAAS,OAAIhC,EAAYgC,GAC6CgJ,YALjFhJ,IAAUA,IAAUgL,OAAO2rB,kBACxC32B,IAAUgL,OAAOC,uBACfjN,EACAgC,EAEyG42B,CAAQr5B,KAAKyL,eAD3GhJ,KAErB,CACAo2B,iBAAAA,GACI74B,KAAKiiB,IAAIkI,wBAAwBjmB,KAAK,CAClCuH,YAAazL,KAAK2sC,sBAClBrhC,YAAatL,KAAKysC,uBAE1B,E,uJChGJ,MAAMG,EAAuBA,CAACpwC,EAAOqwC,KACjC,MAAOj9B,EAAGk9B,GAAiBC,EAAAA,WACrBC,EAASD,EAAAA,OAAavwC,EAAMywC,gBAalC,OAZAF,EAAAA,oBAA0BF,GAAK,MAC3BhjB,OAASojB,IACLD,EAAOE,QAAUnrB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGgrB,EAAOE,SAAUD,GAOlEH,EAAcK,KAAKC,MAAM,KAE7B,IACGL,EAAAA,cAAoBvwC,EAAMyC,UAAW+tC,EAAOE,QAAQ,EAE/DN,EAAqBS,YAAc,wBAMnC,MAAMC,EAA2B,MAC7B,IAAI7qC,EAAQ,EACZ,MAAO,CAAEmI,KAAMA,IAAO,8BAA6BnI,KAASoI,aAC/D,EAHgC,GAIpB0iC,EAAmBR,EAAAA,cAAoB,CAAC,GAC9C,MAAMS,EACT7tC,WAAAA,CAAYic,EAAQ6xB,EAAaxuC,EAAW2qB,EAAY8jB,GACpD1tC,KAAK4b,OAASA,EACd5b,KAAKytC,YAAcA,EACnBztC,KAAKf,UAAYA,EACjBe,KAAK4pB,WAAaA,EAClB5pB,KAAK0tC,QAAUA,EACf1tC,KAAK2tC,cAAgB,CAAC,EACtB3tC,KAAK4tC,UAAW,EAChB5tC,KAAK6tC,cACT,CACAhkB,MAAAA,CAAOrtB,GACH,GAAIwD,KAAK4tC,SACL,MAAM,IAAIrrC,MAAM,mDAEfvC,KAAK8tC,kBAKN9tC,KAAK8tC,kBAAkBjkB,OAAOrtB,GAH9BwD,KAAK2tC,cAAgB5rB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGhiB,KAAK2tC,eAAgBnxC,EAKlF,CACAqxC,YAAAA,GACI,GAAI7tC,KAAK4tC,SACL,MAAM,IAAIrrC,MAAM,mDAEpB,GA+DyB,mBALAtD,EA1DHe,KAAKf,cAgExBA,aAA6C,EAASA,EAAU8uC,UA1D/D,MAAM,IAAIxrC,MAAM,8GAoDrB,IAA0BtD,EAlDzB,MAAM+uC,EAAkBjB,EAAAA,cAAoBA,EAAAA,WAAiBH,GAAuB,CAChF3tC,UAAWe,KACNf,UACLguC,eAAgBjtC,KAAK4pB,WACrBijB,IAAMtoC,IACFvE,KAAK8tC,kBAAoBvpC,EACrBwd,OAAO8J,KAAK7rB,KAAK2tC,eAAepsC,OAAS,IACzCvB,KAAK8tC,kBAAkBjkB,OAAO7pB,KAAK2tC,eACnC3tC,KAAK2tC,cAAgB,CAAC,EAC1B,IAGFx1B,EAAOnY,KAAK0tC,QACZX,EAAAA,cAAoBQ,EAAiBU,SAAU,CAAExrC,MAAOzC,KAAK0tC,SAAWM,GACxEA,EACAE,EAASC,EAAAA,aAAsBh2B,EAAMnY,KAAK4b,OAAQ0xB,EAAyB1iC,QACjF5K,KAAK6sC,IAAM,CACPqB,SACA9nC,WAAYpG,KAAKytC,YAAYW,UAAUF,GAE/C,CACArsC,OAAAA,GACI,IAAIS,EACgB,QAAnBA,EAAKtC,KAAK6sC,WAAwB,IAAPvqC,GAAyBA,EAAG8D,WAAWvE,UACnE7B,KAAK4tC,UAAW,CACpB,EAOG,MAAMS,EAAsBA,KAC/B,MAAOC,EAASC,GAAcxB,EAAAA,SAAe,IAC7CA,EAAAA,cAAqB,iBAAgBuB,EAAQ/sC,UAc7C,MAAO,CAAC+sC,EAbUvB,EAAAA,aAAmBmB,IACjCK,GAAYC,GAAoB,IAAIA,EAAiBN,KACrD,IAAIN,GAAW,EACf,MAAO,CACH/rC,QAASA,KACL,GAAI+rC,EACA,MAAM,IAAIrrC,MAAM,gDAEpBqrC,GAAW,EACXW,GAAYC,GAAoBA,EAAgBt8B,QAAQ2F,GAAMA,IAAMq2B,KAAQ,EAEnF,GACF,IACwB,ECvHxB,MAAMO,EACT,WAAIlqC,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYhB,EAAIM,EAAWyvC,GACvB1uC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAK0uC,iBAAmBA,EACxB1uC,KAAKmI,YAAc,IAAIwmC,EAAAA,GACvB3uC,KAAKoI,WAAapI,KAAKmI,YAAYzE,MACnC1D,KAAKqI,WAAa,IAAIsmC,EAAAA,GACtB3uC,KAAKsI,UAAYtI,KAAKqI,WAAW3E,MACjC1D,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,sBAC1B+B,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,MAChC,CACAmY,KAAAA,GACI,CAEJiK,IAAAA,CAAK9B,GACD5pB,KAAKyrB,KAAO,IAAI+hB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAKf,UAAW,CAC3E6qB,OAAQF,EAAWE,OACnB7H,IAAK2H,EAAW3H,IAChBiM,aAActE,EAAWsE,cAEjC,CACArE,MAAAA,CAAOnmB,GACH,IAAIpB,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGunB,OAAOnmB,EAAMomB,OAC1E,CACArV,MAAAA,CAAOiU,EAAQC,GACX,CAEJ9mB,OAAAA,GACI,IAAIS,EACJtC,KAAKmI,YAAYtG,UACjB7B,KAAKqI,WAAWxG,UACK,QAApBS,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGT,SAC7D,ECxCG,MAAM+sC,EACT,WAAIrqC,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYhB,EAAIM,EAAWyvC,GACvB1uC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAK0uC,iBAAmBA,EACxB1uC,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,sBAC1B+B,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,MAChC,CACAmY,KAAAA,GACI,CAEJiK,IAAAA,CAAK9B,GACD5pB,KAAKyrB,KAAO,IAAI+hB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAKf,UAAW,CAC3E6qB,OAAQF,EAAWE,OACnB7H,IAAK2H,EAAW3H,IAChBiM,aAActE,EAAWsE,cAEjC,CACArE,MAAAA,CAAOnmB,GACH,IAAIpB,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGunB,OAAOnmB,EAAMomB,OAC1E,CACArV,MAAAA,CAAOiU,EAAQC,GACX,CAEJ9mB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGT,SAC7D,ECjCG,MAAMgtC,EACT,WAAItqC,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYhB,EAAIM,EAAWyvC,GACvB1uC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAK0uC,iBAAmBA,EACxB1uC,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,sBAC1B+B,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,MAChC,CACAoiB,IAAAA,CAAK9B,GACD5pB,KAAKyrB,KAAO,IAAI+hB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAKf,UAAW,CAC3EwhB,MAAOmJ,EAAWnJ,MAClByN,aAActE,EAAWsE,cAEjC,CACAzM,KAAAA,GACI,CAEJoI,MAAAA,CAAOC,GACH,IAAIxnB,EAAIykB,EAAIuR,EACRt4B,KAAK4pB,aACL5pB,KAAK4pB,WAAWE,OAASA,EAAOA,QAEf,QAApBxnB,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGunB,OAAO,CAAEC,OAAyF,QAAhFwO,EAAgC,QAA1BvR,EAAK/mB,KAAK4pB,kBAA+B,IAAP7C,OAAgB,EAASA,EAAG+C,cAA2B,IAAPwO,EAAgBA,EAAK,CAAC,GAC7L,CACA7jB,MAAAA,CAAOiU,EAAQC,GACX,CAEJoO,iBAAAA,CAAkB0C,EAAQ6C,GACtB,CAEJz6B,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGT,SAC7D,ECrCG,MAAMitC,EACT,WAAIvqC,GACA,OAAOvE,KAAKke,QAChB,CACA,QAAIuN,GACA,OAAOzrB,KAAK+uC,KAChB,CACApvC,WAAAA,CAAYV,EAAWyvC,EAAkBjV,GACrCz5B,KAAKf,UAAYA,EACjBe,KAAK0uC,iBAAmBA,EACxB1uC,KAAKy5B,OAASA,EACdz5B,KAAKgvC,kBAAoB,IAAIC,EAAAA,GAC7BjvC,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASjgB,UAAY,sBAC1B+B,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,MAChC,CACAoiB,IAAAA,CAAK9B,GACD5pB,KAAKgvC,kBAAkBvsC,MAAQ,IAAIysC,EAAAA,GAA4BlvC,KAAKy5B,OAAO7S,MAAMzE,eAAc,KAC3FniB,KAAKmvC,cAAc,IACnBnvC,KAAKy5B,OAAO7S,MAAMvE,kBAAiB,KACnCriB,KAAKmvC,cAAc,IACnBnvC,KAAKy5B,OAAO7S,MAAMrE,wBAAuB,KACzCviB,KAAKovC,mBAAmB,IACxBxlB,EAAW3H,IAAInC,mBAAkB,KACjC9f,KAAKqvC,mBAAmB,KAE5BrvC,KAAK+uC,MAAQ,IAAIvB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAKf,UAAW,CAC5EgjB,IAAK2H,EAAW3H,IAChBiM,aAActE,EAAWsE,aACzB7M,OAAQrhB,KAAKy5B,OAAO7S,MAAMvF,OAC1B4B,YAAajjB,KAAKy5B,OAAO7S,MAAM3D,YAC/BwU,cAAez3B,KAAKy5B,OAAOxX,IAAIsG,SAC/B9H,MAAOzgB,KAAKy5B,QAEpB,CACA53B,OAAAA,GACI,IAAIS,EACJtC,KAAKgvC,kBAAkBntC,UACD,QAArBS,EAAKtC,KAAK+uC,aAA0B,IAAPzsC,GAAyBA,EAAGT,SAC9D,CACAgoB,MAAAA,CAAOnmB,GACH,IAAIpB,EACkB,QAArBA,EAAKtC,KAAK+uC,aAA0B,IAAPzsC,GAAyBA,EAAGunB,OAAOnmB,EAAMomB,OAC3E,CACAqlB,YAAAA,GACInvC,KAAK6pB,OAAO,CAAEC,OAAQ,CAAEzI,OAAQrhB,KAAKy5B,OAAO7S,MAAMvF,SACtD,CACA+tB,iBAAAA,GACIpvC,KAAK6pB,OAAO,CACRC,OAAQ,CACJ7G,YAAajjB,KAAKy5B,OAAO7S,MAAM3D,cAG3C,CACAosB,iBAAAA,GACIrvC,KAAK6pB,OAAO,CACRC,OAAQ,CACJ2N,cAAez3B,KAAKy5B,OAAOxX,IAAIsG,WAG3C,ECxDJ,SAAS+mB,EAA0BrwC,EAAWswC,GAC1C,OAAOtwC,EACA21B,GACQ,IAAIka,EAA+B7vC,EAAWswC,EAAO3a,QAE9Dn0B,CACV,CACA,MAAM+uC,EAAoB,4BAUnB,MAAMC,EAAgB1C,EAAAA,YAAiB,CAACvwC,EAAOqwC,KAClD,MAAM6C,EAAS3C,EAAAA,OAAa,MACtB4C,EAAc5C,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM6C,EAAOxC,SAAS,IACrD,MAAM0C,EAAY7C,EAAAA,OAAa,CAAC,GAsLhC,OArLAA,EAAAA,WAAgB,KACZ,MAAM8C,EAAU,CAAC,EACjBtc,EAAAA,GAAczxB,SAASguC,IACnB,MAAMlkB,EAAMkkB,EACNC,EAAYvzC,EAAMovB,GACpBA,KAAOpvB,GAASuzC,IAAcH,EAAU1C,QAAQthB,KAChDikB,EAAQjkB,GAAOmkB,EACnB,IAEAJ,EAAYzC,SACZyC,EAAYzC,QAAQ3rB,cAAcsuB,GAKtCD,EAAU1C,QAAU1wC,CAAK,GAC1B+2B,EAAAA,GAAcn0B,KAAKwsB,GAAQpvB,EAAMovB,MACpCmhB,EAAAA,WAAgB,KACZ,IAAIzqC,EACJ,IAAKotC,EAAOxC,QACR,OAEJ,MAAM8C,EAAwD,QAA9B1tC,EAAK9F,EAAMyzC,qBAAkC,IAAP3tC,EAAgBA,EAAK,CAAC,EACxF9F,EAAMugC,sBACNiT,EAAuBR,GACnBhzC,EAAMugC,qBAEd,MAAMmT,EAAmB,CACrB5Z,gCAAiCgZ,EAA0B9yC,EAAM2zC,2BAA4B,CAAE/B,cAC/FhY,iCAAkCkZ,EAA0B9yC,EAAM4zC,4BAA6B,CAAEhC,cACjG5X,kCAAmC8Y,EAA0B9yC,EAAM6zC,6BAA8B,CAAEjC,cACnGvR,gBAAkBt5B,GACP,IAAIkrC,EAAsBlrC,EAAQ5E,GAAInC,EAAMytC,WAAW1mC,EAAQu5B,MAAO,CACzEsR,cAGR1R,mBAAmBn5B,GACR,IAAIqrC,EAAqBrrC,EAAQ5E,GAAIqxC,EAAuBzsC,EAAQu5B,MAAO,CAC9EsR,cAGRnW,yBAA0Bz7B,EAAM8zC,mBAC1B,IACS,IAAIzB,EAAmB,YAAaryC,EAAM8zC,mBAAoB,CACjElC,mBAGN3tC,EACN+Y,cAAek2B,EAAOxC,QACtBnQ,oBAAqBvgC,EAAMugC,oBACrByS,OACA/uC,GAEJ8vC,EAAW,IAAIhN,EAAAA,GAAkBxhB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EApE5E,SAA4BxlB,GAOxB,OANoB+2B,EAAAA,GAAcjmB,QAAO,CAACkjC,EAAK5kB,KACvCA,KAAOpvB,IACPg0C,EAAI5kB,GAAOpvB,EAAMovB,IAEd4kB,IACR,CAAC,EAER,CA4D+EC,CAAmBj0C,IAAS0zC,KAC7F,YAAExqB,EAAW,aAAEC,GAAiB+pB,EAAOxC,QAM7C,OALAqD,EAAS97B,OAAOiR,EAAaC,GACzBnpB,EAAMk0C,SACNl0C,EAAMk0C,QAAQ,CAAEzuB,IAAK,IAAIS,EAAAA,GAAY6tB,KAEzCZ,EAAYzC,QAAUqD,EACf,KACHA,EAAS1uC,SAAS,CACrB,GACF,IACHkrC,EAAAA,WAAgB,KACZ,IAAK4C,EAAYzC,QACb,MAAO,OAIX,MAAM9mC,EAAaupC,EAAYzC,QAAQrrB,WAAWne,IAC1ClH,EAAMqlB,WACNrlB,EAAMqlB,UAAUne,EACpB,IAEJ,MAAO,KACH0C,EAAWvE,SAAS,CACvB,GACF,CAACrF,EAAMqlB,YACVkrB,EAAAA,WAAgB,KACZ,IAAK4C,EAAYzC,QACb,MAAO,OAIX,MAAM9mC,EAAaupC,EAAYzC,QAAQlqB,0BAA0Btf,IAC7D,IAAIpB,GACgC,QAA/BA,EAAK9F,EAAMyxB,sBAAmC,IAAP3rB,OAAgB,EAASA,EAAGyF,KAAKvL,EAAOkH,KAChFA,EAAM4vB,QACV,IAEJ,MAAO,KACHltB,EAAWvE,SAAS,CACvB,GACF,CAACrF,EAAMyxB,iBACV8e,EAAAA,WAAgB,KACZ,IAAK4C,EAAYzC,QACb,MAAO,OAIX,MAAM9mC,EAAaupC,EAAYzC,QAAQtqB,YAAYlf,IAC3ClH,EAAMomB,YACNpmB,EAAMomB,WAAWlf,EACrB,IAEJ,MAAO,KACH0C,EAAWvE,SAAS,CACvB,GACF,CAACrF,EAAMomB,aACVmqB,EAAAA,WAAgB,KACP4C,EAAYzC,SAGjByC,EAAYzC,QAAQ3rB,cAAc,CAC9Bsb,gBAAkBt5B,GACP,IAAIkrC,EAAsBlrC,EAAQ5E,GAAInC,EAAMytC,WAAW1mC,EAAQu5B,MAAO,CACzEsR,eAGV,GACH,CAAC5xC,EAAMytC,aACV8C,EAAAA,WAAgB,KACZ,IAAIzqC,EACJ,IAAKqtC,EAAYzC,QACb,OAEJ,MAAM8C,EAAwD,QAA9B1tC,EAAK9F,EAAMyzC,qBAAkC,IAAP3tC,EAAgBA,EAAK,CAAC,EACxF9F,EAAMugC,sBACNiT,EAAuBR,GACnBhzC,EAAMugC,qBAEd4S,EAAYzC,QAAQ3rB,cAAc,CAC9Bwb,oBAAqBvgC,EAAMugC,oBACrByS,OACA/uC,EACNi8B,mBAAmBn5B,GACR,IAAIqrC,EAAqBrrC,EAAQ5E,GAAIqxC,EAAuBzsC,EAAQu5B,MAAO,CAC9EsR,eAGV,GACH,CAAC5xC,EAAMyzC,cAAezzC,EAAMugC,sBAC/BgQ,EAAAA,WAAgB,KACP4C,EAAYzC,SAGjByC,EAAYzC,QAAQ3rB,cAAc,CAC9B0W,yBAA0Bz7B,EAAM8zC,mBAC1B,IACS,IAAIzB,EAAmB,YAAaryC,EAAM8zC,mBAAoB,CACjElC,mBAGN3tC,GACR,GACH,CAACjE,EAAM8zC,qBACVvD,EAAAA,WAAgB,KACP4C,EAAYzC,SAGjByC,EAAYzC,QAAQ3rB,cAAc,CAC9B6U,iCAAkCkZ,EAA0B9yC,EAAM4zC,4BAA6B,CAAEhC,eACnG,GACH,CAAC5xC,EAAM4zC,8BACVrD,EAAAA,WAAgB,KACP4C,EAAYzC,SAGjByC,EAAYzC,QAAQ3rB,cAAc,CAC9B+U,gCAAiCgZ,EAA0B9yC,EAAM2zC,2BAA4B,CAAE/B,eACjG,GACH,CAAC5xC,EAAM2zC,6BACVpD,EAAAA,WAAgB,KACP4C,EAAYzC,SAGjByC,EAAYzC,QAAQ3rB,cAAc,CAC9BiV,kCAAmC8Y,EAA0B9yC,EAAM6zC,6BAA8B,CAAEjC,eACrG,GACH,CAAC5xC,EAAM6zC,+BACFtD,EAAAA,cAAoB,MAAO,CAAE9uC,UAAWzB,EAAMyB,UAAW8N,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAUujC,IAAK6C,GAAUpB,EAAQ,IAEtImB,EAAcpC,YAAc,oBCpNrB,MAAMsD,EAAcA,IAAO5D,EAAAA,cAAoB,MAAO,CAAExjC,OAAQ,KAAMD,MAAO,KAAMsnC,QAAS,YAAa,cAAe,QAASC,WAAW,EAAO5yC,UAAW,gBACjK8uC,EAAAA,cAAoB,OAAQ,CAAEhrC,EAAG,gICFrC,IAAI+uC,EAAkC,SAAUr9B,EAAGtP,GAC/C,IAAImG,EAAI,CAAC,EACT,IAAK,IAAIuN,KAAKpE,EAAOsO,OAAOhhB,UAAUgwC,eAAehpC,KAAK0L,EAAGoE,IAAM1T,EAAEJ,QAAQ8T,GAAK,IAC9EvN,EAAEuN,GAAKpE,EAAEoE,IACb,GAAS,MAALpE,GAAqD,mBAAjCsO,OAAOivB,sBACtB,KAAIhnC,EAAI,EAAb,IAAgB6N,EAAIkK,OAAOivB,sBAAsBv9B,GAAIzJ,EAAI6N,EAAEtW,OAAQyI,IAC3D7F,EAAEJ,QAAQ8T,EAAE7N,IAAM,GAAK+X,OAAOhhB,UAAUkwC,qBAAqBlpC,KAAK0L,EAAGoE,EAAE7N,MACvEM,EAAEuN,EAAE7N,IAAMyJ,EAAEoE,EAAE7N,IAF4B,CAItD,OAAOM,CACX,EAGO,MAAM4mC,EAAsB5uC,IAC/B,IAAI,IAAE2f,EAAKiM,aAAcijB,EAAernB,OAAQsB,EAAO,UAAEgmB,EAAS,oBAAEC,GAAwB/uC,EAAIgY,EAAOw2B,EAAOxuC,EAAI,CAAC,MAAO,eAAgB,SAAU,YAAa,wBACjK,MAAMgvC,EAAUvE,EAAAA,aAAmBrpC,IAC/BA,EAAMvB,iBACFkvC,EACAA,IAGApvB,EAAI2X,OACR,GACD,CAAC3X,EAAKovB,IACHE,EAAcxE,EAAAA,aAAmB5oC,IACnCA,EAAEhC,gBAAgB,GACnB,IACGqvC,EAAUzE,EAAAA,aAAmBrpC,IAC3BA,EAAMxB,mBAGV+f,EAAIlB,YACAzG,EAAKk3B,SACLl3B,EAAKk3B,QAAQ9tC,GACjB,GACD,CAACue,EAAK3H,EAAKk3B,UACd,OAAQzE,EAAAA,cAAoB,MAAOhrB,OAAOC,OAAO,CAAE,cAAe,2BAA6B1H,EAAM,CAAEk3B,QAASA,EAASvzC,UAAW,mBAChI8uC,EAAAA,cAAoB,OAAQ,CAAE9uC,UAAW,0BAA4BgkB,EAAItlB,QACxEy0C,GAAcrE,EAAAA,cAAoB,MAAO,CAAE9uC,UAAW,wBAAyBszC,YAAaA,EAAaC,QAASF,GAC/GvE,EAAAA,cAAoB4D,EAAa,OAAQ,ECrC9C,MAAMc,UAAuBlF,EAAAA,GAChC5sC,WAAAA,CAAYhB,EAAIM,EAAWyyC,EAAgBhD,GACvC3uC,MAAMpB,EAAIM,GACVe,KAAK0xC,eAAiBA,EACtB1xC,KAAK0uC,iBAAmBA,CAC5B,CACA/iB,YAAAA,GACI,IAAIrpB,EAAIykB,EACR,OAAO,IAAIymB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAK0xC,eAAgB,CAC3E5nB,OAAsF,QAA7E/C,EAA6B,QAAvBzkB,EAAKtC,KAAKorB,eAA4B,IAAP9oB,OAAgB,EAASA,EAAGwnB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EACpH9E,IAAKjiB,KAAKiiB,IACViM,aAAc,IAAI9M,EAAAA,GAAaphB,KAAKorB,QAAQyB,WAEpD,ECXG,MAAM8kB,EAAiB5E,EAAAA,YAAiB,CAACvwC,EAAOqwC,KACnD,MAAM6C,EAAS3C,EAAAA,OAAa,MACtB6E,EAAe7E,EAAAA,UACduB,EAASF,GAAaC,IAyC7B,OAxCAtB,EAAAA,oBAA0BF,GAAK,IAAM6C,EAAOxC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAIzqC,EACJ,MAAM8T,EAAY,IAAI60B,EAAAA,GAAmB,CACrCzxB,cAAek2B,EAAOxC,QACtB5tB,oBAAqB9iB,EAAM8iB,oBAC3BpS,YAA0C,QAA5B5K,EAAK9F,EAAM0Q,mBAAgC,IAAP5K,EAAgBA,EAAK6J,EAAAA,GAAYkB,WACnF68B,oBAAqB1tC,EAAMytC,WAC3BqB,iBAAkB,CACdzO,gBAAiBA,CAACl+B,EAAIkzC,EAAa5yC,IACxB,IAAIwyC,EAAe9yC,EAAIkzC,EAAa5yC,EAAW,CAClDmvC,eAIZ19B,mBAAwD,kBAA7BlU,EAAMkU,oBAC3BlU,EAAMkU,mBAEZM,OAAQxU,EAAMi3B,YACR,CAAEliB,gBAAiB,oBACnB9Q,KAEJ,YAAEilB,EAAW,aAAEC,GAAiB+pB,EAAOxC,QAM7C,OALA92B,EAAU3B,OAAOiR,EAAaC,GAC1BnpB,EAAMk0C,SACNl0C,EAAMk0C,QAAQ,CAAEzuB,IAAK,IAAIb,EAAAA,GAAahL,KAE1Cw7B,EAAa1E,QAAU92B,EAChB,KACHA,EAAUvU,SAAS,CACtB,GACF,IACHkrC,EAAAA,WAAgB,KACP6E,EAAa1E,SAGlB0E,EAAa1E,QAAQ3rB,cAAc,CAC/B2oB,oBAAqB1tC,EAAMytC,YAC7B,GACH,CAACztC,EAAMytC,aACF8C,EAAAA,cAAoB,MAAO,CAAE9uC,UAAWzB,EAAMyB,UAAW8N,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAUujC,IAAK6C,GAAUpB,EAAQ,IAEtIqD,EAAetE,YAAc,qBChDtB,MAAMyE,UAA2BtZ,EAAAA,GACpC74B,WAAAA,CAAYhB,EAAIM,EAAWyyC,EAAgBhD,GACvC3uC,MAAMpB,EAAIM,GACVe,KAAK0xC,eAAiBA,EACtB1xC,KAAK0uC,iBAAmBA,CAC5B,CACA/iB,YAAAA,GACI,IAAIrpB,EAAIykB,EACR,OAAO,IAAIymB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAK0xC,eAAgB,CAC3E5nB,OAAsF,QAA7E/C,EAA6B,QAAvBzkB,EAAKtC,KAAKorB,eAA4B,IAAP9oB,OAAgB,EAASA,EAAGwnB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EACpH9E,IAAKjiB,KAAKiiB,IAEViM,aAAc,IAAIhM,EAAAA,GAAYliB,KAAKorB,QAC9ByB,WAEb,ECbG,MAAMklB,EAAgBhF,EAAAA,YAAiB,CAACvwC,EAAOqwC,KAClD,MAAM6C,EAAS3C,EAAAA,OAAa,MACtBiF,EAAcjF,EAAAA,UACbuB,EAASF,GAAaC,IA8C7B,OA7CAtB,EAAAA,oBAA0BF,GAAK,IAAM6C,EAAOxC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAIzqC,EACJ,IAAKotC,EAAOxC,QACR,MAAO,OAIX,MAAM/tB,EAAW,IAAIorB,EAAAA,GAAkB,CACnC/wB,cAAek2B,EAAOxC,QACtB5tB,oBAAqB9iB,EAAM8iB,oBAC3B5O,mBAAwD,kBAA7BlU,EAAMkU,oBAC3BlU,EAAMkU,mBAEZxD,YAA0C,QAA5B5K,EAAK9F,EAAM0Q,mBAAgC,IAAP5K,EAAgBA,EAAK6J,EAAAA,GAAYkB,WACnF68B,oBAAqB1tC,EAAMytC,WAC3BW,0BAA2B,CACvB/N,gBAAiBA,CAACl+B,EAAIkzC,EAAa5yC,IACxB,IAAI6yC,EAAmBnzC,EAAIkzC,EAAa5yC,EAAW,CACtDmvC,eAIZp9B,OAAQxU,EAAMi3B,YACR,CAAEliB,gBAAiB,oBACnB9Q,KAEJ,YAAEilB,EAAW,aAAEC,GAAiB+pB,EAAOxC,QAM7C,OALA/tB,EAAS1K,OAAOiR,EAAaC,GACzBnpB,EAAMk0C,SACNl0C,EAAMk0C,QAAQ,CAAEzuB,IAAK,IAAIC,EAAAA,GAAY/C,KAEzC6yB,EAAY9E,QAAU/tB,EACf,KACHA,EAAStd,SAAS,CACrB,GACF,IACHkrC,EAAAA,WAAgB,KACPiF,EAAY9E,SAGjB8E,EAAY9E,QAAQ3rB,cAAc,CAC9B2oB,oBAAqB1tC,EAAMytC,YAC7B,GACH,CAACztC,EAAMytC,aACF8C,EAAAA,cAAoB,MAAO,CAAE9uC,UAAWzB,EAAMyB,UAAW8N,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAUujC,IAAK6C,GAAUpB,EAAQ,IAEtIyD,EAAc1E,YAAc,oBCtDrB,MAAM4E,EACT,WAAI1tC,GACA,OAAOvE,KAAKke,QAChB,CACAve,WAAAA,CAAYhB,EAAIM,EAAWyvC,GACvB1uC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAK0uC,iBAAmBA,EACxB1uC,KAAKke,SAAWlW,SAAS0K,cAAc,OACvC1S,KAAKke,SAASnS,MAAMxC,OAAS,OAC7BvJ,KAAKke,SAASnS,MAAMzC,MAAQ,MAChC,CACAoiB,IAAAA,CAAK9B,GACD5pB,KAAKyrB,KAAO,IAAI+hB,EAAUxtC,KAAKuE,QAASvE,KAAK0uC,iBAAkB1uC,KAAKf,UAAW,CAC3E6qB,OAAQF,EAAWE,OACnB7H,IAAK2H,EAAW3H,IAChBtlB,MAAOitB,EAAWjtB,MAClBuxB,aAActE,EAAWsE,cAEjC,CACAvT,MAAAA,GACI,MAAO,CACHhc,GAAIqB,KAAKrB,GAEjB,CACAkrB,MAAAA,CAAOC,GACH,IAAIxnB,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGunB,OAAOC,EAAOA,OAC3E,CACAjoB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKyrB,YAAyB,IAAPnpB,GAAyBA,EAAGT,SAC7D,EC7BG,MAAMqwC,EAAgBnF,EAAAA,YAAiB,CAACvwC,EAAOqwC,KAClD,MAAM6C,EAAS3C,EAAAA,OAAa,MACtBoF,EAAcpF,EAAAA,UACbuB,EAASF,GAAaC,IA2E7B,OA1EAtB,EAAAA,oBAA0BF,GAAK,IAAM6C,EAAOxC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,MAAMlQ,EAAkBA,CAACl+B,EAAIyzC,EAAcnzC,IAAc,IAAIgzC,EAAiBtzC,EAAIM,EAAW,CACzFmvC,cAEEnC,EAAW,IAAID,EAAAA,EAAkB,CACnCxyB,cAAek2B,EAAOxC,QACtB5tB,oBAAqB9iB,EAAM8iB,oBAC3B4qB,oBAAqB1tC,EAAMytC,WAC3BA,WAAY,CAAC,EACbmC,iBAAkB,CAAC,EACnBze,WAAYnxB,EAAMmxB,WAClB0e,0BAA2B7vC,EAAM4vC,iBACjCd,iBAAkB,CACdhf,OAAQ,CACJuQ,mBAEJ3P,KAAM,CACF2P,oBAGR5O,eAAgBzxB,EAAMyxB,iBAEpBhM,EAAM,IAAIL,EAAAA,GAAYqqB,IACtB,YAAEvmB,EAAW,aAAEC,GAAiB+pB,EAAOxC,QAM7C,OALAjB,EAASx3B,OAAOiR,EAAaC,GACzBnpB,EAAMk0C,SACNl0C,EAAMk0C,QAAQ,CAAEzuB,QAEpBkwB,EAAYjF,QAAUjB,EACf,KACHA,EAASpqC,SAAS,CACrB,GACF,IACHkrC,EAAAA,WAAgB,KACPoF,EAAYjF,SAGjBiF,EAAYjF,QAAQ3rB,cAAc,CAC9B2oB,oBAAqB1tC,EAAMytC,YAC7B,GACH,CAACztC,EAAMytC,aACV8C,EAAAA,WAAgB,KACPoF,EAAYjF,SAGjBiF,EAAYjF,QAAQ3rB,cAAc,CAC9B8qB,0BAA2B7vC,EAAM4vC,kBACnC,GACH,CAAC5vC,EAAM4vC,mBACVW,EAAAA,WAAgB,KACZ,IAAKoF,EAAYjF,QACb,MAAO,OAIX,MAAMjB,EAAWkG,EAAYjF,QACvB9mC,EAAa6lC,EAASpqB,WAAWne,IAC/BlH,EAAMqlB,WACNrlB,EAAMqlB,UAAUE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGte,GAAQ,CAAEue,IAAK,IAAIL,EAAAA,GAAYqqB,KACnF,IAEJ,MAAO,KACH7lC,EAAWvE,SAAS,CACvB,GACF,CAACrF,EAAMqlB,YACVkrB,EAAAA,WAAgB,KACPoF,EAAYjF,SAGjBiF,EAAYjF,QAAQ3rB,cAAc,CAC9B0M,eAAgBzxB,EAAMyxB,gBACxB,GACH,CAACzxB,EAAMyxB,iBACF8e,EAAAA,cAAoB,MAAO,CAAE9uC,UAAWzB,EAAMyB,UAAW8N,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAUujC,IAAK6C,GAAUpB,EAAQ,IAEtI4D,EAAc7E,YAAc,mB,oFCnF5B,SAAgB,WAAa,kBAAkB,kBAAoB,yBAAyB,eAAiB,sBAAsB,kBAAoB,0B,cCGvJ,SAASgF,EAAmBrzC,GAAiC,IAAhC,KAAEwF,EAAI,UAAEvG,EAAS,SAAEd,GAAU6B,EACtD,OACI5B,EAAAA,EAAAA,KAAA,OACIa,WAAWC,EAAAA,EAAAA,GACPC,EAAAA,EAAgBm0C,OAAOC,WACvBp0C,EAAAA,EAAgBm0C,OAAOE,eAAehuC,GACtCwM,EAAOuhC,WACPt0C,GACFd,SAEDA,GAGb,CACA,SAASs1C,EAAiBpzC,GAAmB,IAAlB,KAAEqzC,EAAI,MAAE/1C,GAAO0C,EACtC,OACIjC,EAAAA,EAAAA,KAAA,OAAKa,UAAW+S,EAAO2hC,kBAAkBx1C,UACrCC,EAAAA,EAAAA,KAAA,QAAMa,UAAW+S,EAAO4hC,eAAez1C,SAAEu1C,KAIrD,CACA,SAASG,EAAiBC,GAAgB,IAAf,SAAE31C,GAAU21C,EACnC,OAAO31C,GACHC,EAAAA,EAAAA,KAAA,OAAKa,UAAW+S,EAAO+hC,kBAAkB51C,SAAEA,IAC3C,IACR,CACe,SAAS61C,EAAiBx2C,GACrC,MAAM,KAAEgI,EAAI,KAAEkuC,EAAI,MAAE/1C,EAAK,SAAEQ,EAAQ,UAAEc,GAAczB,EACnD,OACIS,EAAAA,EAAAA,MAACo1C,EAAmB,CAAC7tC,KAAMA,EAAMvG,UAAWA,EAAUd,SAAA,EAClDC,EAAAA,EAAAA,KAACq1C,EAAiB,CAAC91C,MAAOA,EAAO+1C,KAAMA,KACvCt1C,EAAAA,EAAAA,KAACy1C,EAAiB,CAAA11C,SAAEA,MAGhC,CCtCe,SAAS81C,EAAmBz2C,GACzC,OACEY,EAAAA,EAAAA,KAAA,OAAKwzC,QAAQ,eAAgBp0C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE81C,SAAS,UACTnxC,EAAE,qgBAIV,CCLA,MACMoxC,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAACg2C,EAAQ,IACfz2C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,wBACHrB,YAAY,2DAA0DH,SAAC,UAK9D,SAASk2C,EAAmB72C,GACzC,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,yBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAASm2C,EAAkB92C,GACxC,OACEY,EAAAA,EAAAA,KAAA,OAAKwzC,QAAQ,eAAgBp0C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE81C,SAAS,UACTnxC,EAAE,wcAIV,CCLA,MACMoxC,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAACm2C,EAAO,IACd52C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,uBACHrB,YAAY,yDAAwDH,SAAC,SAK5D,SAASq2C,EAAkBh3C,GACxC,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,uBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAASs2C,EAAmBj3C,GACzC,OACEY,EAAAA,EAAAA,KAAA,OAAKwzC,QAAQ,eAAgBp0C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE81C,SAAS,UACTnxC,EAAE,wLAIV,CCLA,MACMoxC,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAACs2C,EAAQ,IACf/2C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,wBACHrB,YAAY,2DAA0DH,SAAC,UAK9D,SAASw2C,EAAmBn3C,GACzC,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,oBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAASy2C,EAAsBp3C,GAC5C,OACEY,EAAAA,EAAAA,KAAA,OAAKwzC,QAAQ,eAAgBp0C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE81C,SAAS,UACTnxC,EAAE,2PAIV,CCLA,MACMoxC,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAACy2C,EAAW,IAClBl3C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,2BACHrB,YAAY,iEAAgEH,SAAC,aCVpE,SAAS22C,EAAqBt3C,GAC3C,OACEY,EAAAA,EAAAA,KAAA,OAAKwzC,QAAQ,eAAgBp0C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE81C,SAAS,UACTnxC,EAAE,8XAIV,CCLA,MACMoxC,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAAC22C,EAAU,IACjBp3C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,0BACHrB,YAAY,+DAA8DH,SAAC,YCNjF,MACMg2C,EAAe,CACnBT,MAAMt1C,EAAAA,EAAAA,KAACy2C,EAAW,IAClBl3C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,2BACHrB,YAAY,iEAAgEH,SAAC,aCJnF,MAgBA,MAhBwB,CACtB62C,KAAMX,EACNY,IAAKT,EACLU,KAAMP,EACNQ,QJKa,SAA+B33C,GAC5C,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,uBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,EIbEi3C,OFIa,SAA8B53C,GAC3C,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,sBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,MER0B,CACxBk3C,UAAY73C,IAAUY,EAAAA,EAAAA,KAACi2C,EAAkB,CAAC12C,MAAM,eAAgBH,IAChE83C,UAAY93C,IAAUY,EAAAA,EAAAA,KAACu2C,EAAkB,CAACh3C,MAAM,eAAgBH,IAChE+3C,QAAU/3C,IAAUY,EAAAA,EAAAA,KAACo2C,EAAiB,CAAC72C,MAAM,aAAcH,IAC3Dg4C,QDHa,SAA+Bh4C,GAC5C,OACEY,EAAAA,EAAAA,KAAC41C,EAAgB,IACXG,KACA32C,EACJyB,WAAWC,EAAAA,EAAAA,GAlBO,uBAkBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,IEde,SAASs3C,EAAWC,GACjC,MAAMl4C,GAAQm4C,EAAAA,EAAAA,GAAuBD,GAC/BE,GAZ4BpwC,EAYyBhI,EAAMgI,KAX/CqwC,EAAgBrwC,KAIlC7B,QAAQC,KACL,sDAAqD4B,+BAEjDqwC,EAAgBX,OARzB,IAAoC1vC,EAalC,OAAOpH,EAAAA,EAAAA,KAACw3C,EAAuB,IAAKp4C,GACtC,C,4ECXA,YAEOs4C,EAAAA,EAGHC,kBAAiB,KACjBC,WACJ,I,uFCbO,MAAMC,GAAU,E,cCKvB,MAAMC,EAAa,CAEf,CAAEzyC,MAAO,QAAS0yC,MAAO,SACzB,CAAE1yC,MAAO,MAAO0yC,MAAO,QAIrBC,EAAwB,IAAIzG,EAAAA,GAAwB,CAAE/qC,QAAQ,IAE7D,SAASyxC,IACZ,MAAO5yC,EAAO6yC,GAAYvI,EAAAA,SACtBwI,aAAaC,QAAQ,sBAAwBN,EAAW,GAAGzyC,OAG/DsqC,EAAAA,WAAgB,KACZ,MAAM3mC,EAAagvC,EAAsB1xC,OAAOjB,GAAU,CACtD6yC,EAAS7yC,MAOb,OAJA2yC,EAAsBlxC,KAClBqxC,aAAaC,QAAQ,sBAAwBN,EAAW,GAAGzyC,OAGxD,KACH2D,EAAWvE,SAAS,CACvB,GACF,IAEH,MAAM4zC,EAAS1I,EAAAA,aAAmBtqC,IAC9B8yC,aAAaG,QAAQ,oBAAqBjzC,GAC1C6yC,EAAS7yC,GACT2yC,EAAsBlxC,KAAKzB,EAAM,GAClC,IAEH,MAAO,CAACwyC,EAAUC,EAAW,GAAGzyC,MAAQA,EAAOgzC,EACnD,CAEA,MAAME,EAAqBA,KACvB,MAAOC,EAAiBC,GAAsBR,IAM9C,OAAIJ,EACO,MAIP73C,EAAAA,EAAAA,KAAA,UAAQ04C,SATMpyC,GAAgD,CAC9DmyC,EAAmBnyC,EAAM0gB,OAAO3hB,QAQJA,MAAOmzC,EAAgBz4C,SAC9C+3C,EAAW91C,KAAK22C,IAET34C,EAAAA,EAAAA,KAAA,UAAQqF,MAAOszC,EAAUtzC,MAAMtF,SAAE44C,EAAUZ,WAG9C,EAIJa,EAAoBA,KACtB54C,EAAAA,EAAAA,KAAC64C,EAAAA,EAAW,CAAA94C,SAAEA,KAAMC,EAAAA,EAAAA,KAACu4C,EAAkB,MAG5CO,EAAsB15C,IAIxB,MAAOo5C,GAAmBP,IAE1B,OAAIO,IAAoBp5C,EAAMu5C,UACnBv5C,EAAMW,SAGV,IAAI,EAGF43C,EAAqBv4C,IAIvBY,EAAAA,EAAAA,KAAC64C,EAAAA,EAAW,CAAA94C,SAAEA,KAAMC,EAAAA,EAAAA,KAAC84C,EAAkB,IAAK15C,K,4ECjFvD,MAGa25C,EAAe35C,IACxB,MAAOu5C,IAAaV,EAAAA,EAAAA,MAEde,EAAc,uFAAgC55C,EAAMmC,MAAMo3C,IAC1D/4B,EAAQ,cAAaxgB,EAAMmC,MAAMo3C,eACvC,OACI94C,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACIi5C,IAAKr5B,EACLjR,MAAO,CAAEzC,MAAO,OAAQC,OAAS,GAAE/M,EAAM+M,QAAU,YAEvDtM,EAAAA,EAAAA,MAAA,OAAK8O,MAAO,CAAEwgB,QAAS,OAAQ+pB,eAAgB,YAAan5C,SAAA,EACxDC,EAAAA,EAAAA,KAACm5C,EAAW,CAACzU,IAAKsU,KAClBh5C,EAAAA,EAAAA,KAAA,KACIgnB,OAAO,SACPqe,KAAMzlB,EACN/e,UAAU,4BAA2Bd,SACxC,qBAIH,EAID63C,EAAcx4C,IAChBY,EAAAA,EAAAA,KAAC64C,EAAAA,EAAW,CAAA94C,SAAEA,KAAMC,EAAAA,EAAAA,KAAC+4C,EAAW,IAAK35C,MAG1C+5C,EAAe/5C,IAEbS,EAAAA,EAAAA,MAAA,QACIgB,UAAU,qBACV8N,MAAO,CAAEwgB,QAAS,OAAQiqB,WAAY,UAAWr5C,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,QAAMa,UAAU,6BAA4Bd,SAAG,cAC/CC,EAAAA,EAAAA,KAAA,KACIqlC,KAAMjmC,EAAMslC,IACZ1d,OAAQ,SACRue,IAAI,WACJ1kC,UAAU,6BAA4Bd,UAEtCC,EAAAA,EAAAA,KAAA,QACI2O,MAAO,CACH0qC,WAAY,OACZC,aAAc,OAChBv5C,SACL,oB","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/flags.ts","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn((_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent, } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\n// TODO find a better way to initialize and avoid needing null checks\nconst NOT_INITIALIZED_MESSAGE = 'DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n        /**\n         * TODO: Annoying initialization order caveat\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            if (!event.isVisible && this.isVisible) {\n                this._onDidVisibilityChange.fire(event);\n            }\n            else if (event.isVisible &&\n                !this.isVisible &&\n                this.group.model.isPanelActive(this.panel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId(); //item.id;\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else {\n                    if (this.getPanel(group.id)) {\n                        const removedGroup = this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                        });\n                        removedGroup.model.renderContainer =\n                            this.overlayRenderContainer;\n                        removedGroup.model.location = { type: 'grid' };\n                        returnedGroup = removedGroup;\n                    }\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error(err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: !!popoutReferenceGroup,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, coordinates, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup(options);\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","export const IS_PROD = false;\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    // { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Vue', label: 'Vue' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[0].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${props.id}/${framework}`;\n    const path = `/templates/${props.id}/${framework}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidLayoutChange","onDidLayoutChange","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","coord","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","o","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","IS_PROD","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","onChange","framework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","src","justifyContent","CodeSandbox","alignItems","fontWeight","paddingRight"],"sourceRoot":""}