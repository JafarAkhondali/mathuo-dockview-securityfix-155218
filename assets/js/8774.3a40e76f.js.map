{"version":3,"file":"assets/js/8774.3a40e76f.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/tabview/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        return typeof activePanelMinimumWidth === 'number'\n            ? activePanelMinimumWidth\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH;\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        return typeof activePanelMinimumHeight === 'number'\n            ? activePanelMinimumHeight\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT;\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        return typeof activePanelMaximumWidth === 'number'\n            ? activePanelMaximumWidth\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        return typeof activePanelMaximumHeight === 'number'\n            ? activePanelMaximumHeight\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (event) => {\n            var _a;\n            event.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this._group = _params.group;\n        this.render();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst Default = (props: IDockviewPanelProps) => {\n    return (\n        <div style={{ height: '100%' }}>\n            <div>{props.api.title}</div>\n        </div>\n    );\n};\n\nconst components = {\n    default: Default,\n};\n\nconst Component = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        const disposables = [\n            api.onWillShowOverlay((e) => {\n                if (e.kind === 'header_space' || e.kind === 'tab') {\n                    return;\n                }\n                e.preventDefault();\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => {\n                disposable.dispose();\n            });\n        };\n    }, [api]);\n\n    const onReady = (event: DockviewReadyEvent) => {\n        setApi(event.api);\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n        });\n    };\n\n    return (\n        <DockviewReact\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n            onReady={onReady}\n            components={components}\n            disableFloatingGroups={true}\n        />\n    );\n};\n\nexport default Component;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","_jsx","setApi"],"sourceRoot":""}