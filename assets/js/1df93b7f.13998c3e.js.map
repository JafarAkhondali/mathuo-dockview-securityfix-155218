{"version":3,"file":"assets/js/1df93b7f.13998c3e.js","mappings":"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","sources":["webpack://dockview-docs/./static/img/dockview_grid_3.svg","webpack://dockview-docs/./static/img/dockview_grid_4.svg","webpack://dockview-docs/./static/img/dockview_splash_2.svg","webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/src/dnd/dataTransfer.ts","webpack://dockview-docs/../dockview-core/src/events.ts","webpack://dockview-docs/../dockview-core/src/lifecycle.ts","webpack://dockview-docs/../dockview-core/src/dom.ts","webpack://dockview-docs/../dockview-core/src/array.ts","webpack://dockview-docs/../dockview-core/src/math.ts","webpack://dockview-docs/../dockview-core/src/splitview/viewItem.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitview.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneview.ts","webpack://dockview-docs/../dockview-core/src/gridview/leafNode.ts","webpack://dockview-docs/../dockview-core/src/gridview/branchNode.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridview.ts","webpack://dockview-docs/../dockview-core/src/api/component.api.ts","webpack://dockview-docs/../dockview-core/src/dnd/dnd.ts","webpack://dockview-docs/../dockview-core/src/dnd/droptarget.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/panel/content.ts","webpack://dockview-docs/../dockview-core/src/dockview/types.ts","webpack://dockview-docs/../dockview-core/src/dnd/abstractDragHandler.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/tab/tab.ts","webpack://dockview-docs/../dockview-core/src/dnd/groupDragHandler.ts","webpack://dockview-docs/../dockview-core/src/dnd/ghost.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/titlebar/voidContainer.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/titlebar/tabsContainer.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewGroupPanelModel.ts","webpack://dockview-docs/../dockview-core/src/resizable.ts","webpack://dockview-docs/../dockview-core/src/gridview/baseComponentGridview.ts","webpack://dockview-docs/../dockview-core/src/api/panelApi.ts","webpack://dockview-docs/../dockview-core/src/api/splitviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/api/paneviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/gridview/basePanelView.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneviewPanel.ts","webpack://dockview-docs/../dockview-core/src/paneview/draggablePaneviewPanel.ts","webpack://dockview-docs/../dockview-core/src/api/gridviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridviewPanel.ts","webpack://dockview-docs/../dockview-core/src/api/dockviewGroupPanelApi.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewGroupPanel.ts","webpack://dockview-docs/../dockview-core/src/api/dockviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewPanel.ts","webpack://dockview-docs/../dockview-core/src/svg.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/tab/defaultTab.ts","webpack://dockview-docs/../dockview-core/src/panel/componentFactory.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewPanelModel.ts","webpack://dockview-docs/../dockview-core/src/dockview/deserializer.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/watermark/watermark.ts","webpack://dockview-docs/../dockview-core/src/dnd/overlay.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewFloatingGroupPanel.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewComponent.ts","webpack://dockview-docs/../dockview-core/src/dockview/options.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridviewComponent.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitviewComponent.ts","webpack://dockview-docs/../dockview-core/src/paneview/defaultPaneviewHeader.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneviewComponent.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitviewPanel.ts","webpack://dockview-docs/../dockview/src/react.ts","webpack://dockview-docs/../dockview/src/dockview/reactContentPart.ts","webpack://dockview-docs/../dockview/src/dockview/reactHeaderPart.ts","webpack://dockview-docs/../dockview/src/dockview/reactWatermarkPart.ts","webpack://dockview-docs/../dockview/src/dockview/headerActionsRenderer.ts","webpack://dockview-docs/../dockview/src/dockview/dockview.tsx","webpack://dockview-docs/../dockview/src/svg.tsx","webpack://dockview-docs/../dockview/src/dockview/defaultTab.tsx","webpack://dockview-docs/../dockview/src/splitview/view.ts","webpack://dockview-docs/../dockview/src/splitview/splitview.tsx","webpack://dockview-docs/../dockview/src/gridview/view.ts","webpack://dockview-docs/../dockview/src/gridview/gridview.tsx","webpack://dockview-docs/../dockview/src/paneview/view.tsx","webpack://dockview-docs/../dockview/src/paneview/paneview.tsx","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./src/pages/index.module.css","webpack://dockview-docs/./src/components/HomepageFeatures/styles.module.css","webpack://dockview-docs/./src/components/HomepageFeatures/index.tsx","webpack://dockview-docs/./src/components/ui/browserHeader.tsx","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/native.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/rng.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/v4.js","webpack://dockview-docs/./sandboxes/demo-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/dockview-app/src/app.tsx","webpack://dockview-docs/./src/components/HomepageFeatures/introduction.tsx","webpack://dockview-docs/./src/pages/index.tsx"],"sourcesContent":["var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _path18, _path19, _path20, _path21, _path22, _path23, _rect17, _rect18, _path24, _path25, _path26, _path27, _rect19, _rect20, _path28, _path29;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewGrid3 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 311.504,\n    height: 200,\n    rx: 5,\n    fill: \"#fff\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A8A8A8\",\n    d: \"M0 11h156v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M156 11h156v91H156zM234 102h78v98h-78zM156 102h78v98h-78zM0 24h156v176H0z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M157 102h155v1H157zM157 11h-1v189h1zM234 103h-1v97h1v-97Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h156v14H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M0 11h30v14H0zM31 11h30v14H31z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M62 11h30v14H62z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M30 11h1v14h-1zM61 11h1v14h-1zM92 11h1v14h-1z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M157 11h155v14H157z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M157 11h30v14h-30z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M188 11h30v14h-30z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M187 11h1v14h-1zM218 11h1v14h-1z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M234 103h78v14h-78z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M234 103h24v14h-24z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M258 103h24v14h-24z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M258 103h.503v14H258zM282 103h.503v14H282z\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 66,\n    y: 16,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 76,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 260,\n    y: 108,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 268,\n    y: 108,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 206,\n    y: 16,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 160,\n    y: 16,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 166,\n    y: 16,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 237,\n    y: 108,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 33,\n    y: 16,\n    width: 15,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 16,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 16,\n    width: 18,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1E1E1\",\n    fillOpacity: 0.25,\n    d: \"M297 11h15v189h-15z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M90.5 18.5h48v13h-48z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M140.344 22.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M139.5 23.5h4v2h-4z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M97.33 23.09h.421l.989 2.416h.034l.989-2.415h.42V26h-.33v-2.21h-.028L98.916 26h-.318l-.91-2.21h-.028V26h-.33v-2.91Zm4.889 2.018v-1.29h.335V26h-.335v-.37h-.023a.713.713 0 0 1-.238.283.692.692 0 0 1-.41.115.727.727 0 0 1-.363-.09.623.623 0 0 1-.25-.272 1.03 1.03 0 0 1-.091-.462v-1.386h.335v1.364c0 .159.045.286.134.38.09.095.204.142.343.142a.571.571 0 0 0 .563-.596Zm1.284-2.017V26h-.335v-2.91h.335Zm1.563.727v.284h-1.13v-.284h1.13Zm-.801-.523h.335v2.08c0 .095.014.166.042.213a.212.212 0 0 0 .107.094.438.438 0 0 0 .141.023.598.598 0 0 0 .091-.006l.057-.012.068.302a.7.7 0 0 1-.528-.021.556.556 0 0 1-.225-.187.532.532 0 0 1-.088-.315v-2.17ZM105.57 26v-2.182h.336V26h-.336Zm.171-2.546a.238.238 0 0 1-.169-.066.216.216 0 0 1-.07-.16c0-.063.024-.117.07-.161a.238.238 0 0 1 .169-.067c.065 0 .121.022.168.067a.214.214 0 0 1 .071.16.214.214 0 0 1-.071.16.236.236 0 0 1-.168.067Zm.779 3.364v-3h.324v.347h.039c.025-.038.059-.086.103-.145a.596.596 0 0 1 .19-.16.683.683 0 0 1 .338-.07c.184 0 .346.046.486.138a.92.92 0 0 1 .328.39c.079.169.118.368.118.597 0 .23-.039.431-.118.6a.935.935 0 0 1-.327.393.852.852 0 0 1-.481.137.7.7 0 0 1-.337-.07.636.636 0 0 1-.195-.16c-.045-.06-.08-.11-.105-.15h-.028v1.153h-.335Zm.329-1.909c0 .165.024.31.073.436a.661.661 0 0 0 .211.294.55.55 0 0 0 .341.105.55.55 0 0 0 .351-.11.672.672 0 0 0 .213-.302c.048-.127.073-.268.073-.423 0-.153-.024-.292-.071-.415a.644.644 0 0 0-.212-.294.56.56 0 0 0-.354-.11.556.556 0 0 0-.343.105.627.627 0 0 0-.211.287 1.187 1.187 0 0 0-.071.427Zm2.443-1.818V26h-.335v-2.91h.335Zm1.529 2.954c-.21 0-.391-.046-.544-.139a.942.942 0 0 1-.351-.392 1.343 1.343 0 0 1-.122-.588c0-.223.041-.42.122-.59a.967.967 0 0 1 .344-.401.924.924 0 0 1 .517-.145c.114 0 .226.019.337.057.111.037.211.099.302.184a.884.884 0 0 1 .218.335c.054.14.081.311.081.515v.142h-1.682v-.29h1.341a.718.718 0 0 0-.074-.33.556.556 0 0 0-.523-.312.6.6 0 0 0-.346.1.65.65 0 0 0-.223.255.74.74 0 0 0-.079.338v.193c0 .165.029.305.086.42.057.113.137.2.24.26a.701.701 0 0 0 .356.087.728.728 0 0 0 .239-.037.511.511 0 0 0 .186-.113.526.526 0 0 0 .121-.19l.324.09a.734.734 0 0 1-.172.29.84.84 0 0 1-.299.193 1.104 1.104 0 0 1-.399.069Zm2.539.773v-3h.323v.347h.04a3.76 3.76 0 0 1 .102-.145.6.6 0 0 1 .191-.16.683.683 0 0 1 .338-.07c.184 0 .346.046.486.138a.92.92 0 0 1 .328.39c.078.169.118.368.118.597 0 .23-.04.431-.118.6a.935.935 0 0 1-.327.393.854.854 0 0 1-.481.137.697.697 0 0 1-.337-.07.636.636 0 0 1-.195-.16c-.045-.06-.08-.11-.105-.15h-.028v1.153h-.335Zm.329-1.909c0 .165.024.31.073.436a.653.653 0 0 0 .211.294.55.55 0 0 0 .341.105.55.55 0 0 0 .351-.11.672.672 0 0 0 .213-.302c.048-.127.072-.268.072-.423 0-.153-.023-.292-.071-.415a.642.642 0 0 0-.211-.294.56.56 0 0 0-.354-.11.561.561 0 0 0-.344.105.625.625 0 0 0-.21.287 1.187 1.187 0 0 0-.071.427Zm2.75 1.142a.883.883 0 0 1-.376-.078.643.643 0 0 1-.269-.229.647.647 0 0 1-.099-.363c0-.125.024-.227.074-.304a.522.522 0 0 1 .197-.185c.082-.044.173-.078.273-.1.1-.022.201-.04.302-.053.133-.017.24-.03.323-.039a.5.5 0 0 0 .182-.047c.038-.021.058-.06.058-.113v-.012a.444.444 0 0 0-.115-.326c-.076-.078-.191-.117-.345-.117a.605.605 0 0 0-.377.105.622.622 0 0 0-.192.225l-.318-.114a.764.764 0 0 1 .228-.31.843.843 0 0 1 .312-.156c.114-.03.225-.045.335-.045.07 0 .151.008.242.025.092.016.18.05.265.101a.59.59 0 0 1 .215.232.86.86 0 0 1 .085.415V26h-.335v-.296h-.017a.653.653 0 0 1-.325.29.82.82 0 0 1-.323.057Zm.051-.301a.66.66 0 0 0 .335-.078.537.537 0 0 0 .279-.462v-.307c-.014.018-.046.033-.094.047a1.55 1.55 0 0 1-.165.036 6.889 6.889 0 0 1-.321.042c-.087.012-.168.03-.244.056a.424.424 0 0 0-.182.112.288.288 0 0 0-.068.202.3.3 0 0 0 .129.264.581.581 0 0 0 .331.088Zm1.896-1.063V26h-.335v-2.182h.324v.341h.028c.051-.11.129-.2.233-.267a.726.726 0 0 1 .404-.102c.147 0 .277.03.387.09.111.06.197.151.259.273.061.122.092.275.092.46V26h-.335v-1.364c0-.171-.045-.305-.134-.4a.473.473 0 0 0-.366-.145.585.585 0 0 0-.287.07.497.497 0 0 0-.197.203.663.663 0 0 0-.073.323Zm2.92 1.358c-.211 0-.392-.046-.544-.139a.929.929 0 0 1-.351-.392 1.33 1.33 0 0 1-.122-.588c0-.223.04-.42.122-.59a.964.964 0 0 1 .343-.401.926.926 0 0 1 .517-.145c.114 0 .226.019.337.057a.835.835 0 0 1 .52.52c.054.139.081.31.081.514v.142h-1.682v-.29h1.341a.718.718 0 0 0-.074-.33.554.554 0 0 0-.523-.312.6.6 0 0 0-.346.1.65.65 0 0 0-.223.255.752.752 0 0 0-.078.338v.193c0 .165.028.305.085.42.058.113.138.2.24.26a.702.702 0 0 0 .357.087.722.722 0 0 0 .238-.037.511.511 0 0 0 .186-.113.513.513 0 0 0 .121-.19l.324.09a.711.711 0 0 1-.172.29.835.835 0 0 1-.298.193 1.112 1.112 0 0 1-.399.069Zm1.748-2.954V26h-.335v-2.91h.335Zm2.16 1.216-.302.085a.53.53 0 0 0-.083-.146.413.413 0 0 0-.148-.12.54.54 0 0 0-.24-.047.572.572 0 0 0-.334.093c-.088.06-.132.138-.132.231 0 .084.03.15.091.198.06.048.155.088.284.12l.324.08c.195.048.34.12.436.218a.507.507 0 0 1 .143.373.554.554 0 0 1-.108.335.713.713 0 0 1-.298.233 1.089 1.089 0 0 1-.446.085.978.978 0 0 1-.552-.144.639.639 0 0 1-.277-.424l.318-.08c.03.118.087.206.172.265a.575.575 0 0 0 .333.088.625.625 0 0 0 .373-.1c.092-.067.139-.147.139-.24a.254.254 0 0 0-.08-.191.505.505 0 0 0-.244-.117l-.364-.085c-.2-.047-.346-.12-.44-.22a.532.532 0 0 1-.139-.377.54.54 0 0 1 .103-.326.716.716 0 0 1 .286-.223c.121-.054.258-.081.412-.081.216 0 .385.047.508.142.124.095.213.22.265.375Zm1.788.239c0-.358.047-.688.14-.988.093-.3.227-.578.4-.83h.296a1.75 1.75 0 0 0-.192.346 4.068 4.068 0 0 0-.26.956 3.627 3.627 0 0 0 .028 1.201c.044.232.103.448.176.647.074.199.157.36.248.486h-.296a3.068 3.068 0 0 1-.4-.83 3.337 3.337 0 0 1-.14-.988Zm2.307 1.494c-.187 0-.354-.032-.501-.097a.857.857 0 0 1-.348-.268.719.719 0 0 1-.139-.402h.358c.007.093.04.174.096.243.057.067.132.119.223.156a.815.815 0 0 0 .306.055.796.796 0 0 0 .332-.065.536.536 0 0 0 .227-.182.455.455 0 0 0 .083-.27.507.507 0 0 0-.313-.476.903.903 0 0 0-.375-.07h-.233v-.312h.233c.116 0 .217-.02.304-.062a.474.474 0 0 0 .282-.443.488.488 0 0 0-.066-.258.446.446 0 0 0-.184-.17.602.602 0 0 0-.279-.061c-.1 0-.195.018-.284.055a.53.53 0 0 0-.216.158.412.412 0 0 0-.091.247h-.341a.696.696 0 0 1 .138-.4.868.868 0 0 1 .338-.27c.14-.065.294-.097.462-.097.18 0 .334.037.463.11a.748.748 0 0 1 .4.669.653.653 0 0 1-.477.66v.021c.184.03.327.109.431.235.103.125.154.28.154.464 0 .158-.043.3-.129.426a.88.88 0 0 1-.349.296 1.139 1.139 0 0 1-.505.108Zm2.286-1.494c0 .357-.047.687-.141.988-.092.3-.225.577-.399.83h-.295a1.8 1.8 0 0 0 .19-.347c.06-.136.112-.286.156-.449a4.123 4.123 0 0 0 .142-1.023c0-.225-.021-.454-.065-.686a3.876 3.876 0 0 0-.176-.646 2.031 2.031 0 0 0-.247-.486h.295c.174.253.307.53.399.831.094.3.141.63.141.988Z\",\n    fill: \"#fff\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M279.5 46.5h29v13h-29z\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 283,\n    y: 51,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 294,\n    y: 51,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M305.344 61.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M304.5 62.5h4v2h-4z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1E1E1\",\n    fillOpacity: 0.25,\n    d: \"M157 153h76v47h-76z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M180.5 163.5h29v13h-29z\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 184,\n    y: 168,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 195,\n    y: 168,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M194.344 176.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M193.5 177.5h4v2h-4z\"\n  })));\n};\nexport default SvgDockviewGrid3;","var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _path19, _rect10, _rect11, _rect12, _rect13, _rect14, _path20, _circle, _circle2, _circle3, _path21, _circle4, _circle5, _circle6, _path22, _rect15, _rect16, _path23, _circle7, _circle8, _circle9, _path24, _rect17, _path25, _g, _path26, _path27, _path28, _path29, _path30, _path31, _rect18, _rect19, _rect20, _rect21, _path32, _path33, _path34;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewGrid4 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 311.504,\n    height: 200,\n    rx: 5,\n    fill: \"#fff\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A8A8A8\",\n    d: \"M0 11h156v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M188 11h124v91H188zM188 102h124v98H188zM0 24h187v176H0z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M188 102h124v1H188zM188 11h-1v189h1z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h187v14H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M0 11h35.962v14H0zM37.16 11h35.962v14H37.16z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M74.32 11h35.962v14H74.32z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M35.962 11h1.199v14h-1.199zM73.122 11h1.199v14h-1.199zM110.282 11h1.199v14h-1.199z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M188 11h124v14H188z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M188 11h30v14h-30z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M219 11h30v14h-30z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M218 11h1v14h-1zM249 11h1v14h-1z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M188 103h124v14H188z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M188 103h24v14h-24z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M212 103h24v14h-24z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M212 103h.503v14H212zM236 103h.503v14H236z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76 18a2 2 0 0 1 2-2h3a2 2 0 1 1 0 4h-3a2 2 0 0 1-2-2Z\",\n    fill: \"#fff\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 85,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 222,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 214,\n    y: 108,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 222,\n    y: 108,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 237,\n    y: 16,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 16,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 197,\n    y: 16,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 108,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39 18a2 2 0 0 1 2-2h11a2 2 0 1 1 0 4H41a2 2 0 0 1-2-2Z\",\n    fill: \"#777\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 16,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 16,\n    width: 18,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M173 11h14v14h-14z\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 176,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 176 18)\",\n    fill: \"#fff\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 184,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 184 18)\",\n    fill: \"#fff\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 180,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 180 18)\",\n    fill: \"#fff\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M298 11h14v14h-14z\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 301,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 301 18)\",\n    fill: \"#fff\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 309,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 309 18)\",\n    fill: \"#fff\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 305,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 305 18)\",\n    fill: \"#fff\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M111 11h14v14h-14z\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 117.333,\n    y: 14,\n    width: 1.333,\n    height: 8,\n    rx: 0.667,\n    fill: \"#fff\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 114,\n    y: 18.666,\n    width: 1.333,\n    height: 8,\n    rx: 0.667,\n    transform: \"rotate(-90 114 18.666)\",\n    fill: \"#fff\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M298 103h14v14h-14z\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 301,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 301 110)\",\n    fill: \"#fff\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 309,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 309 110)\",\n    fill: \"#fff\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 305,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 305 110)\",\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M285 103h14v14h-14z\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 288.5,\n    y: 106.5,\n    width: 7,\n    height: 7,\n    rx: 1.5,\n    stroke: \"#fff\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M288 109h8v2h-8z\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.35\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M40 45h128.769v91H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M40 136h128.769v1H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M40 45h128.769v14H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M40 45h31.154v14H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M72.192 45h31.154v14H72.192z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M71.154 45h1.038v14h-1.038zM40 45h1v92h-1zM168 45h1v92h-1zM103.346 45h1.038v14h-1.038z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 75.308,\n    y: 50,\n    width: 12.461,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 90.885,\n    y: 50,\n    width: 4.154,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.115,\n    y: 50,\n    width: 5.192,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 49.346,\n    y: 50,\n    width: 16.615,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M40 45h128.769v1H40z\"\n  }))), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M29 54h128.769v91H29z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M29 145h128.769v1H29z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M29 54h128.769v14H29z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M29 54h31.154v14H29z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M61.192 54h31.154v14H61.192z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M60.154 54h1.038v14h-1.038zM29 54h1v92h-1zM157 54h1v92h-1zM92.346 54h1.038v14h-1.038z\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 64.308,\n    y: 59,\n    width: 12.461,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 79.885,\n    y: 59,\n    width: 4.154,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 32.115,\n    y: 59,\n    width: 5.192,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 38.346,\n    y: 59,\n    width: 16.615,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M29 54h128.769v1H29z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M128.344 61.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M127.5 62.5h4v2h-4z\"\n  })));\n};\nexport default SvgDockviewGrid4;","var _path, _path2, _rect, _rect2, _rect3, _path3, _path4, _path5, _path6, _path7, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _path8, _path9, _path10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewSplash2 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D9D9D9\",\n    d: \"M0 11h312v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M0 11h166v189H0zM167 11h145v189H167z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M166 11h1v189h-1zM167 56h145v1H167zM167 112h145v1H167z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h166v10H0zM0 22h166v10H0zM0 94h166v10H0zM0 190h166v10H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M0 21h166v1H0z\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 14,\n    width: 21,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34,\n    y: 14,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 25,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 25,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 97,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29,\n    y: 97,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 193,\n    width: 14,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5 29-3-3.392.538-.608L5 27.799l2.463-2.785.537.608L5 29ZM5 101l-3-3.392.538-.608L5 99.799l2.463-2.785.537.608L5 101ZM6 16l-3.392 3L2 18.462 4.799 16l-2.785-2.463.608-.537L6 16ZM6 195l-3.392 3-.608-.537L4.799 195l-2.785-2.462.608-.538L6 195Z\",\n    fill: \"#fff\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M212.674 111c.236 0 .394-.221.297-.416l-2.174-4.409c-.115-.233-.479-.233-.594 0l-2.174 4.409c-.097.195.061.416.297.416h.889a.327.327 0 0 0 .297-.175l.691-1.401c.115-.233.479-.233.594 0l.691 1.401a.327.327 0 0 0 .297.175h.889ZM208.326 114c-.236 0-.394.221-.297.416l2.174 4.409c.115.233.479.233.594 0l2.174-4.409c.097-.195-.061-.416-.297-.416h-.889a.327.327 0 0 0-.297.175l-.691 1.401c-.115.233-.479.233-.594 0l-.691-1.401a.327.327 0 0 0-.297-.175h-.889Z\",\n    fill: \"#fff\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    d: \"M210.5 116v-7\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 175,\n    y: 18,\n    width: 20,\n    height: 19,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 198,\n    y: 18,\n    width: 5,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 206,\n    y: 18,\n    width: 26,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 203,\n    y: 71,\n    width: 44,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 228,\n    y: 78,\n    width: 44,\n    height: 14,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 250,\n    y: 71,\n    width: 22,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 239,\n    y: 95,\n    width: 33,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 272,\n    y: 117,\n    width: 33,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 259,\n    y: 117,\n    width: 7,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 213,\n    y: 95,\n    width: 23,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 203,\n    y: 95,\n    width: 8,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 198,\n    y: 25,\n    width: 15,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 215,\n    y: 25,\n    width: 18,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })));\n};\nexport default SvgDockviewSplash2;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\n\nexport class PanelTransfer extends TransferObject {\n    constructor(\n        public readonly viewId: string,\n        public readonly groupId: string,\n        public readonly panelId: string | null\n    ) {\n        super();\n    }\n}\n\nexport class PaneTransfer extends TransferObject {\n    constructor(\n        public readonly viewId: string,\n        public readonly paneId: string\n    ) {\n        super();\n    }\n}\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n    private static readonly INSTANCE = new LocalSelectionTransfer();\n\n    private data?: T[];\n    private proto?: T;\n\n    private constructor() {\n        // protect against external instantiation\n    }\n\n    static getInstance<T>(): LocalSelectionTransfer<T> {\n        return LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n    }\n\n    hasData(proto: T): boolean {\n        return proto && proto === this.proto;\n    }\n\n    clearData(proto: T): void {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n\n    getData(proto: T): T[] | undefined {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n\n        return undefined;\n    }\n\n    setData(data: T[], proto: T): void {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\n\nexport function getPanelData(): PanelTransfer | undefined {\n    const panelTransfer = LocalSelectionTransfer.getInstance<PanelTransfer>();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n\n    if (!isPanelEvent) {\n        return undefined;\n    }\n\n    return panelTransfer.getData(PanelTransfer.prototype)![0];\n}\n\nexport function getPaneData(): PaneTransfer | undefined {\n    const paneTransfer = LocalSelectionTransfer.getInstance<PaneTransfer>();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n\n    if (!isPanelEvent) {\n        return undefined;\n    }\n\n    return paneTransfer.getData(PaneTransfer.prototype)![0];\n}\n","import { IDisposable } from './lifecycle';\n\nexport interface Event<T> {\n    (listener: (e: T) => any): IDisposable;\n}\n\nexport interface EmitterOptions {\n    readonly replay?: boolean;\n}\n\nexport namespace Event {\n    export const any = <T>(...children: Event<T>[]): Event<T> => {\n        return (listener: (e: T) => void) => {\n            const disposables = children.map((child) => child(listener));\n\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n}\n\nclass LeakageMonitor {\n    readonly events = new Map<Event<any>, Stacktrace>();\n\n    get size(): number {\n        return this.events.size;\n    }\n\n    add<T>(event: Event<T>, stacktrace: Stacktrace): void {\n        this.events.set(event, stacktrace);\n    }\n\n    delete<T>(event: Event<T>): void {\n        this.events.delete(event);\n    }\n\n    clear(): void {\n        this.events.clear();\n    }\n}\n\nclass Stacktrace {\n    static create(): Stacktrace {\n        return new Stacktrace(new Error().stack ?? '');\n    }\n\n    private constructor(readonly value: string) {}\n\n    print(): void {\n        console.warn(this.value);\n    }\n}\n\nclass Listener<T> {\n    constructor(\n        readonly callback: (t: T) => void,\n        readonly stacktrace: Stacktrace | undefined\n    ) {}\n}\n\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter<T> implements IDisposable {\n    private _event?: Event<T>;\n\n    private _last?: T;\n    private _listeners: Listener<any>[] = [];\n    private _disposed = false;\n\n    static ENABLE_TRACKING = false;\n    static readonly MEMORY_LEAK_WATCHER = new LeakageMonitor();\n\n    static setLeakageMonitorEnabled(isEnabled: boolean): void {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n\n    constructor(private readonly options?: EmitterOptions) {}\n\n    get event(): Event<T> {\n        if (!this._event) {\n            this._event = (callback: (e: T) => void): IDisposable => {\n                if (this.options?.replay && this._last !== undefined) {\n                    callback(this._last);\n                }\n\n                const listener = new Listener(\n                    callback,\n                    Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined\n                );\n                this._listeners.push(listener);\n\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        } else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(\n                    this._event,\n                    Stacktrace.create()\n                );\n            }\n        }\n        return this._event;\n    }\n\n    public fire(e: T): void {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n\n    public dispose(): void {\n        if (!this._disposed) {\n            this._disposed = true;\n\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn(listener.stacktrace?.print());\n                        }\n                    });\n                }\n\n                this._listeners = [];\n            }\n\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\n\nexport function addDisposableWindowListener<K extends keyof WindowEventMap>(\n    element: Window,\n    type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n): IDisposable {\n    element.addEventListener(type, listener, options);\n\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n\nexport function addDisposableListener<K extends keyof HTMLElementEventMap>(\n    element: HTMLElement,\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n): IDisposable {\n    element.addEventListener(type, listener, options);\n\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n\nexport class TickDelayedEvent implements IDisposable {\n    private timer: any;\n\n    private readonly _onFired = new Emitter<void>();\n    readonly onEvent = this._onFired.event;\n\n    fire(): void {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n\n    dispose(): void {\n        this._onFired.dispose();\n    }\n}\n","export interface IDisposable {\n    dispose: () => void;\n}\n\nexport interface IValueDisposable<T> {\n    readonly value: T;\n    readonly disposable: IDisposable;\n}\n\nexport namespace Disposable {\n    export const NONE: IDisposable = {\n        dispose: () => {\n            // noop\n        },\n    };\n}\n\nexport class CompositeDisposable {\n    private readonly _disposables: IDisposable[];\n    private _isDisposed = false;\n\n    protected get isDisposed(): boolean {\n        return this._isDisposed;\n    }\n\n    public static from(...args: IDisposable[]): CompositeDisposable {\n        return new CompositeDisposable(...args);\n    }\n\n    constructor(...args: IDisposable[]) {\n        this._disposables = args;\n    }\n\n    public addDisposables(...args: IDisposable[]): void {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n\n    public dispose(): void {\n        this._disposables.forEach((arg) => arg.dispose());\n\n        this._isDisposed = true;\n    }\n}\n\nexport class MutableDisposable implements IDisposable {\n    private _disposable = Disposable.NONE;\n\n    set value(disposable: IDisposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n\n    public dispose(): void {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import {\n    Event as DockviewEvent,\n    Emitter,\n    addDisposableListener,\n    addDisposableWindowListener,\n} from './events';\nimport { IDisposable, CompositeDisposable } from './lifecycle';\n\nexport function watchElementResize(\n    element: HTMLElement,\n    cb: (entry: ResizeObserverEntry) => void\n): IDisposable {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n\n    observer.observe(element);\n\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\n\nexport const removeClasses = (\n    element: HTMLElement,\n    ...classes: string[]\n): void => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\n\nexport const addClasses = (\n    element: HTMLElement,\n    ...classes: string[]\n): void => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\n\nexport const toggleClass = (\n    element: HTMLElement,\n    className: string,\n    isToggled: boolean\n): void => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\n\nexport function isAncestor(\n    testChild: Node | null,\n    testAncestor: Node | null\n): boolean {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n\n    return false;\n}\n\nexport function getElementsByTagName(tag: string): HTMLElement[] {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\n\nexport interface IFocusTracker extends IDisposable {\n    readonly onDidFocus: DockviewEvent<void>;\n    readonly onDidBlur: DockviewEvent<void>;\n    refreshState?(): void;\n}\n\nexport function trackFocus(element: HTMLElement | Window): IFocusTracker {\n    return new FocusTracker(element);\n}\n\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable implements IFocusTracker {\n    private readonly _onDidFocus = new Emitter<void>();\n    public readonly onDidFocus: DockviewEvent<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new Emitter<void>();\n    public readonly onDidBlur: DockviewEvent<void> = this._onDidBlur.event;\n\n    private _refreshStateHandler: () => void;\n\n    constructor(element: HTMLElement | Window) {\n        super();\n\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n\n        let hasFocus = isAncestor(document.activeElement, <HTMLElement>element);\n        let loosingFocus = false;\n\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(\n                document.activeElement,\n                <HTMLElement>element\n            );\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                } else {\n                    onFocus();\n                }\n            }\n        };\n\n        if (element instanceof HTMLElement) {\n            this.addDisposables(\n                addDisposableListener(element, 'focus', onFocus, true)\n            );\n            this.addDisposables(\n                addDisposableListener(element, 'blur', onBlur, true)\n            );\n        } else {\n            this.addDisposables(\n                addDisposableWindowListener(element, 'focus', onFocus, true)\n            );\n            this.addDisposables(\n                addDisposableWindowListener(element, 'blur', onBlur, true)\n            );\n        }\n    }\n\n    refreshState(): void {\n        this._refreshStateHandler();\n    }\n}\n\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event: Event): void {\n    (event as any)[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n\n// check if this event has been marked\nexport function quasiDefaultPrevented(event: Event): boolean {\n    return (event as any)[QUASI_PREVENT_DEFAULT_KEY];\n}\n","export function tail<T>(arr: T[]): [T[], T] {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function last<T>(arr: T[]): T | undefined {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n\nexport function sequenceEquals<T>(arr1: T[], arr2: T[]): boolean {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n    const index = arr.indexOf(value);\n\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n    const index = arr.indexOf(value);\n\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\n\nexport function firstIndex<T>(\n    array: T[] | ReadonlyArray<T>,\n    fn: (item: T) => boolean\n): number {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n\n        if (fn(element)) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nexport function remove<T>(array: T[], value: T): boolean {\n    const index = array.findIndex((t) => t === value);\n\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value: number, min: number, max: number): number => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\n\nexport const sequentialNumberGenerator = (): { next: () => string } => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n\nexport const range = (from: number, to?: number): number[] => {\n    const result: number[] = [];\n\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    } else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n\n    return result;\n};\n","import { IDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nimport { IView, LayoutPriority } from './splitview';\n\nexport class ViewItem {\n    private _size: number;\n    private _cachedVisibleSize: number | undefined = undefined;\n\n    set size(size: number) {\n        this._size = size;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get cachedVisibleSize(): number | undefined {\n        return this._cachedVisibleSize;\n    }\n\n    get visible(): boolean {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n\n    get minimumSize(): number {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize(): number {\n        return this.view.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize(): number {\n        return this.view.maximumSize;\n    }\n\n    get priority(): LayoutPriority | undefined {\n        return this.view.priority;\n    }\n    get snap(): boolean {\n        return !!this.view.snap;\n    }\n\n    set enabled(enabled: boolean) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n\n    constructor(\n        public container: HTMLElement,\n        public view: IView,\n        size: number | { cachedVisibleSize: number },\n        private disposable: IDisposable\n    ) {\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        } else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n\n    setVisible(visible: boolean, size?: number): void {\n        if (visible === this.visible) {\n            return;\n        }\n\n        if (visible) {\n            this.size = clamp(\n                this._cachedVisibleSize ?? 0,\n                this.viewMinimumSize,\n                this.viewMaximumSize\n            );\n            this._cachedVisibleSize = undefined;\n        } else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n\n        this.container.classList.toggle('visible', visible);\n\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n\n    dispose(): IView {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    removeClasses,\n    addClasses,\n    toggleClass,\n    getElementsByTagName,\n} from '../dom';\nimport { Event, Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nimport { IDisposable } from '../lifecycle';\n\nexport enum Orientation {\n    HORIZONTAL = 'HORIZONTAL',\n    VERTICAL = 'VERTICAL',\n}\n\nexport enum SashState {\n    MAXIMUM,\n    MINIMUM,\n    DISABLED,\n    ENABLED,\n}\n\nexport interface ISplitviewStyles {\n    separatorBorder: string;\n}\n\nexport interface SplitViewOptions {\n    readonly orientation: Orientation;\n    readonly descriptor?: ISplitViewDescriptor;\n    readonly proportionalLayout?: boolean;\n    readonly styles?: ISplitviewStyles;\n}\nexport enum LayoutPriority {\n    Low = 'low',\n    High = 'high',\n    Normal = 'normal',\n}\n\nexport interface IBaseView extends IDisposable {\n    minimumSize: number;\n    maximumSize: number;\n    snap?: boolean;\n    priority?: LayoutPriority;\n}\n\nexport interface IView extends IBaseView {\n    readonly element: HTMLElement | DocumentFragment;\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }>;\n    layout(size: number, orthogonalSize: number): void;\n    setVisible(visible: boolean): void;\n}\n\ninterface ISashItem {\n    container: HTMLElement;\n    disposable: () => void;\n}\n\ninterface ISashDragSnapState {\n    readonly index: number;\n    readonly limitDelta: number;\n    readonly size: number;\n}\n\ntype ViewItemSize = number | { cachedVisibleSize: number };\n\nexport type DistributeSizing = { type: 'distribute' };\nexport type SplitSizing = { type: 'split'; index: number };\nexport type InvisibleSizing = { type: 'invisible'; cachedVisibleSize: number };\nexport type Sizing = DistributeSizing | SplitSizing | InvisibleSizing;\n\nexport namespace Sizing {\n    export const Distribute: DistributeSizing = { type: 'distribute' };\n    export function Split(index: number): SplitSizing {\n        return { type: 'split', index };\n    }\n    export function Invisible(cachedVisibleSize: number): InvisibleSizing {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n}\n\nexport interface ISplitViewDescriptor {\n    size: number;\n    views: {\n        visible?: boolean;\n        size: number;\n        view: IView;\n    }[];\n}\n\nexport class Splitview {\n    private element: HTMLElement;\n    private viewContainer: HTMLElement;\n    private sashContainer: HTMLElement;\n    private viewItems: ViewItem[] = [];\n    private sashes: ISashItem[] = [];\n    private _orientation: Orientation;\n    private _size = 0;\n    private _orthogonalSize = 0;\n    private contentSize = 0;\n    private _proportions: number[] | undefined = undefined;\n    private proportionalLayout: boolean;\n    private _startSnappingEnabled = true;\n    private _endSnappingEnabled = true;\n\n    private readonly _onDidSashEnd = new Emitter<void>();\n    readonly onDidSashEnd = this._onDidSashEnd.event;\n    private readonly _onDidAddView = new Emitter<IView>();\n    readonly onDidAddView = this._onDidAddView.event;\n    private readonly _onDidRemoveView = new Emitter<IView>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    get size(): number {\n        return this._size;\n    }\n\n    set size(value: number) {\n        this._size = value;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    set orthogonalSize(value: number) {\n        this._orthogonalSize = value;\n    }\n\n    public get length(): number {\n        return this.viewItems.length;\n    }\n\n    public get proportions(): number[] | undefined {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(\n            this.orientation == Orientation.HORIZONTAL\n                ? 'horizontal'\n                : 'vertical'\n        );\n    }\n\n    get minimumSize(): number {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n\n    get maximumSize(): number {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n\n    get startSnappingEnabled(): boolean {\n        return this._startSnappingEnabled;\n    }\n\n    set startSnappingEnabled(startSnappingEnabled: boolean) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n\n    get endSnappingEnabled(): boolean {\n        return this._endSnappingEnabled;\n    }\n\n    set endSnappingEnabled(endSnappingEnabled: boolean) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n\n    constructor(\n        private readonly container: HTMLElement,\n        options: SplitViewOptions\n    ) {\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n\n        this.container.appendChild(this.element);\n\n        this.style(options.styles);\n\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing =\n                    viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                        ? viewDescriptor.size\n                        : ({\n                              type: 'invisible',\n                              cachedVisibleSize: viewDescriptor.size,\n                          } as InvisibleSizing);\n\n                const view = viewDescriptor.view;\n                this.addView(\n                    view,\n                    sizing,\n                    index,\n                    true\n                    // true skip layout\n                );\n            });\n\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n\n    style(styles?: ISplitviewStyles): void {\n        if (styles?.separatorBorder === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        } else {\n            addClasses(this.element, 'separator-border');\n            if (styles?.separatorBorder) {\n                this.element.style.setProperty(\n                    '--dv-separator-border',\n                    styles.separatorBorder\n                );\n            }\n        }\n    }\n\n    isViewVisible(index: number): boolean {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n\n    setViewVisible(index: number, visible: boolean): void {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        toggleClass(this.container, 'visible', visible);\n\n        const viewItem = this.viewItems[index];\n\n        toggleClass(this.container, 'visible', visible);\n\n        viewItem.setVisible(visible, viewItem.size);\n\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n\n    getViewSize(index: number): number {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n\n        return this.viewItems[index].size;\n    }\n\n    resizeView(index: number, size: number): void {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.Low\n            ),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(\n            size,\n            item.minimumSize,\n            Math.min(item.maximumSize, this._size)\n        );\n\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n\n    public getViews<T extends IView>(): T[] {\n        return this.viewItems.map((x) => x.view as T);\n    }\n\n    private onDidChange(item: ViewItem, size: number | undefined): void {\n        const index = this.viewItems.indexOf(item);\n\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n\n        item.size = size;\n\n        this.relayout([index]);\n    }\n\n    public addView(\n        view: IView,\n        size: number | Sizing = { type: 'distribute' },\n        index: number = this.viewItems.length,\n        skipLayout?: boolean\n    ): void {\n        const container = document.createElement('div');\n        container.className = 'view';\n\n        container.appendChild(view.element);\n\n        let viewSize: ViewItemSize;\n\n        if (typeof size === 'number') {\n            viewSize = size;\n        } else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        } else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        } else {\n            viewSize = view.minimumSize;\n        }\n\n        const disposable = view.onDidChange((newSize) =>\n            this.onDidChange(viewItem, newSize.size)\n        );\n\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        } else {\n            this.viewContainer.insertBefore(\n                container,\n                this.viewContainer.children.item(index)\n            );\n        }\n\n        this.viewItems.splice(index, 0, viewItem);\n\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n\n            const onPointerStart = (event: PointerEvent) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n\n                const start =\n                    this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n\n                const sashIndex = firstIndex(\n                    this.sashes,\n                    (s) => s.container === sash\n                );\n\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n\n                //\n                let snapBefore: ISashDragSnapState | undefined;\n                let snapAfter: ISashDragSnapState | undefined;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce(\n                    (r, i) => r + (this.viewItems[i].minimumSize - sizes[i]),\n                    0\n                );\n                const maxDeltaUp = upIndexes.reduce(\n                    (r, i) =>\n                        r + (this.viewItems[i].viewMaximumSize - sizes[i]),\n                    0\n                );\n                const maxDeltaDown =\n                    downIndexes.length === 0\n                        ? Number.POSITIVE_INFINITY\n                        : downIndexes.reduce(\n                              (r, i) =>\n                                  r +\n                                  (sizes[i] - this.viewItems[i].minimumSize),\n                              0\n                          );\n                const minDeltaDown =\n                    downIndexes.length === 0\n                        ? Number.NEGATIVE_INFINITY\n                        : downIndexes.reduce(\n                              (r, i) =>\n                                  r +\n                                  (sizes[i] -\n                                      this.viewItems[i].viewMaximumSize),\n                              0\n                          );\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(\n                        snappedViewItem.viewMinimumSize / 2\n                    );\n\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(\n                        snappedViewItem.viewMinimumSize / 2\n                    );\n\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n\n                const onPointerMove = (event: PointerEvent) => {\n                    const current =\n                        this._orientation === Orientation.HORIZONTAL\n                            ? event.clientX\n                            : event.clientY;\n                    const delta = current - start;\n\n                    this.resize(\n                        sashIndex,\n                        delta,\n                        sizes,\n                        undefined,\n                        undefined,\n                        minDelta,\n                        maxDelta,\n                        snapBefore,\n                        snapAfter\n                    );\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n\n                    this.saveProportions();\n\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n\n                    this._onDidSashEnd.fire(undefined);\n                };\n\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n\n            sash.addEventListener('pointerdown', onPointerStart);\n\n            const sashItem: ISashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n\n        if (\n            !skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute'\n        ) {\n            this.distributeViewSizes();\n        }\n\n        this._onDidAddView.fire(view);\n    }\n\n    distributeViewSizes(): void {\n        const flexibleViewItems: ViewItem[] = [];\n        let flexibleSize = 0;\n\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.Low\n        );\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n\n    public removeView(\n        index: number,\n        sizing?: Sizing,\n        skipLayout = false\n    ): IView {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n\n        if (!skipLayout) {\n            this.relayout();\n        }\n\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n\n        this._onDidRemoveView.fire(viewItem.view);\n\n        return viewItem.view;\n    }\n\n    getViewCachedVisibleSize(index: number): number | undefined {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n\n    public moveView(from: number, to: number): void {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing =\n            typeof cachedVisibleSize === 'undefined'\n                ? this.getViewSize(from)\n                : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.Low\n            );\n            const highPriorityIndexes = indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.High\n            );\n\n            this.resize(\n                this.viewItems.length - 1,\n                size - previousSize,\n                undefined,\n                lowPriorityIndexes,\n                highPriorityIndexes\n            );\n        } else {\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n\n                item.size = clamp(\n                    Math.round(this.proportions[i] * size),\n                    item.minimumSize,\n                    item.maximumSize\n                );\n            }\n        }\n\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n\n    private relayout(\n        lowPriorityIndexes?: number[],\n        highPriorityIndexes?: number[]\n    ): void {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\n        this.resize(\n            this.viewItems.length - 1,\n            this._size - contentSize,\n            undefined,\n            lowPriorityIndexes,\n            highPriorityIndexes\n        );\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n\n    private distributeEmptySpace(lowPriorityIndex?: number): void {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.Low\n        );\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(\n                item.size + emptyDelta,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - item.size;\n\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n\n    private saveProportions(): void {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.viewItems.map(\n                (i) => i.size / this.contentSize\n            );\n        }\n    }\n\n    private layoutViews(): void {\n        this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x: number[] = [];\n\n        this.updateSashEnablement();\n\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n\n    private findFirstSnapIndex(indexes: number[]): number | undefined {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n\n            if (!viewItem.visible) {\n                continue;\n            }\n\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n\n            if (\n                viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0\n            ) {\n                return undefined;\n            }\n\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n\n        return undefined;\n    }\n\n    private updateSashEnablement(): void {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(\n            (i) => (previous = i.size - i.minimumSize > 0 || previous)\n        );\n\n        previous = false;\n        const expandsDown = this.viewItems.map(\n            (i) => (previous = i.maximumSize - i.size > 0 || previous)\n        );\n\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n\n                const snappedBefore =\n                    typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter =\n                    typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n\n                if (\n                    snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)\n                ) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                } else if (\n                    snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)\n                ) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                } else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            } else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            } else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            } else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n\n    private updateSash(sash: ISashItem, state: SashState): void {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n\n    private resize = (\n        index: number,\n        delta: number,\n        sizes: number[] = this.viewItems.map((x) => x.size),\n        lowPriorityIndexes?: number[],\n        highPriorityIndexes?: number[],\n        overloadMinDelta: number = Number.NEGATIVE_INFINITY,\n        overloadMaxDelta: number = Number.POSITIVE_INFINITY,\n        snapBefore?: ISashDragSnapState,\n        snapAfter?: ISashDragSnapState\n    ): number => {\n        if (index < 0 || index > this.viewItems.length) {\n            return 0;\n        }\n\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        //\n        if (highPriorityIndexes) {\n            for (const i of highPriorityIndexes) {\n                pushToStart(upIndexes, i);\n                pushToStart(downIndexes, i);\n            }\n        }\n\n        if (lowPriorityIndexes) {\n            for (const i of lowPriorityIndexes) {\n                pushToEnd(upIndexes, i);\n                pushToEnd(downIndexes, i);\n            }\n        }\n        //\n        const upItems = upIndexes.map((i) => this.viewItems[i]);\n        const upSizes = upIndexes.map((i) => sizes[i]);\n        //\n        const downItems = downIndexes.map((i) => this.viewItems[i]);\n        const downSizes = downIndexes.map((i) => sizes[i]);\n        //\n        const minDeltaUp = upIndexes.reduce(\n            (_, i) => _ + this.viewItems[i].minimumSize - sizes[i],\n            0\n        );\n        const maxDeltaUp = upIndexes.reduce(\n            (_, i) => _ + this.viewItems[i].maximumSize - sizes[i],\n            0\n        );\n        //\n        const maxDeltaDown =\n            downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce(\n                      (_, i) => _ + sizes[i] - this.viewItems[i].minimumSize,\n\n                      0\n                  );\n        const minDeltaDown =\n            downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce(\n                      (_, i) => _ + sizes[i] - this.viewItems[i].maximumSize,\n                      0\n                  );\n        //\n        const minDelta = Math.max(minDeltaUp, minDeltaDown);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n        //\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n\n        if (snapped) {\n            return this.resize(\n                index,\n                delta,\n                sizes,\n                lowPriorityIndexes,\n                highPriorityIndexes,\n                overloadMinDelta,\n                overloadMaxDelta\n            );\n        }\n        //\n        const tentativeDelta = clamp(delta, minDelta, maxDelta);\n        let actualDelta = 0;\n        //\n        let deltaUp = tentativeDelta;\n\n        for (let i = 0; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(\n                upSizes[i] + deltaUp,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - upSizes[i];\n\n            actualDelta += viewDelta;\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        //\n        let deltaDown = actualDelta;\n        for (let i = 0; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(\n                downSizes[i] - deltaDown,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - downSizes[i];\n\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        //\n        return delta;\n    };\n\n    private createViewContainer(): HTMLElement {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n\n    private createSashContainer(): HTMLElement {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n\n    private createContainer(): HTMLElement {\n        const element = document.createElement('div');\n        const orientationClassname =\n            this._orientation === Orientation.HORIZONTAL\n                ? 'horizontal'\n                : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n\n    public dispose(): void {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n\n        this.element.remove();\n    }\n}\n","import {\n    Splitview,\n    Orientation,\n    ISplitViewDescriptor,\n    Sizing,\n} from '../splitview/splitview';\nimport { CompositeDisposable, IDisposable } from '../lifecycle';\nimport { Emitter, Event } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nimport { PaneviewPanel } from './paneviewPanel';\n\ninterface PaneItem {\n    pane: PaneviewPanel;\n    disposable: IDisposable;\n}\n\nexport class Paneview extends CompositeDisposable implements IDisposable {\n    private element: HTMLElement;\n    private splitview: Splitview;\n    private paneItems: PaneItem[] = [];\n    private _orientation: Orientation;\n    private animationTimer: any | undefined;\n    private skipAnimation = false;\n\n    private readonly _onDidChange = new Emitter<void>();\n    readonly onDidChange: Event<void> = this._onDidChange.event;\n\n    get onDidAddView(): Event<PaneviewPanel> {\n        return <Event<PaneviewPanel>>this.splitview.onDidAddView;\n    }\n    get onDidRemoveView(): Event<PaneviewPanel> {\n        return <Event<PaneviewPanel>>this.splitview.onDidRemoveView;\n    }\n\n    get minimumSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get orientation(): Orientation {\n        return this.splitview.orientation;\n    }\n\n    get size(): number {\n        return this.splitview.size;\n    }\n\n    get orthogonalSize(): number {\n        return this.splitview.orthogonalSize;\n    }\n\n    constructor(\n        container: HTMLElement,\n        options: { orientation: Orientation; descriptor?: ISplitViewDescriptor }\n    ) {\n        super();\n\n        this._orientation = options.orientation ?? Orientation.VERTICAL;\n\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n\n        container.appendChild(this.element);\n\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(\n                pane.onDidChangeExpansionState(() => {\n                    this.setupAnimation();\n                    this._onDidChange.fire(undefined);\n                })\n            );\n\n            const paneItem: PaneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n\n        this.addDisposables(\n            this._onDidChange,\n            this.splitview.onDidSashEnd(() => {\n                this._onDidChange.fire(undefined);\n            }),\n            this.splitview.onDidAddView(() => {\n                this._onDidChange.fire();\n            }),\n            this.splitview.onDidRemoveView(() => {\n                this._onDidChange.fire();\n            })\n        );\n    }\n\n    public addPane(\n        pane: PaneviewPanel,\n        size?: number | Sizing,\n        index = this.splitview.length,\n        skipLayout = false\n    ): void {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n\n        const paneItem: PaneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n\n        this.paneItems.splice(index, 0, paneItem);\n\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n\n    getViewSize(index: number): number {\n        return this.splitview.getViewSize(index);\n    }\n\n    public getPanes(): PaneviewPanel[] {\n        return this.splitview.getViews();\n    }\n\n    public removePane(\n        index: number,\n        options: { skipDispose: boolean } = { skipDispose: false }\n    ): PaneItem {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n\n        return paneItem;\n    }\n\n    public moveView(from: number, to: number): void {\n        if (from === to) {\n            return;\n        }\n\n        const view = this.removePane(from, { skipDispose: true });\n\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        } finally {\n            this.skipAnimation = false;\n        }\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        this.splitview.layout(size, orthogonalSize);\n    }\n\n    private setupAnimation(): void {\n        if (this.skipAnimation) {\n            return;\n        }\n\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n\n        addClasses(this.element, 'animated');\n\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport { IView, LayoutPriority, Orientation } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { IGridView } from './gridview';\nimport { IDisposable } from '../lifecycle';\n\nexport class LeafNode implements IView {\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n    private _size: number;\n    private _orthogonalSize: number;\n    private _disposable: IDisposable;\n\n    private get minimumWidth(): number {\n        return this.view.minimumWidth;\n    }\n\n    private get maximumWidth(): number {\n        return this.view.maximumWidth;\n    }\n\n    private get minimumHeight(): number {\n        return this.view.minimumHeight;\n    }\n\n    private get maximumHeight(): number {\n        return this.view.maximumHeight;\n    }\n\n    get priority(): LayoutPriority | undefined {\n        return this.view.priority;\n    }\n\n    get snap(): boolean | undefined {\n        return this.view.snap;\n    }\n\n    get minimumSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n\n    get maximumSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n\n    get minimumOrthogonalSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n\n    get maximumOrthogonalSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get element(): HTMLElement {\n        return this.view.element;\n    }\n\n    get width(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n\n    get height(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n\n    constructor(\n        public readonly view: IGridView,\n        readonly orientation: Orientation,\n        orthogonalSize: number,\n        size = 0\n    ) {\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size:\n                        this.orientation === Orientation.VERTICAL\n                            ? event.width\n                            : event.height,\n                    orthogonalSize:\n                        this.orientation === Orientation.VERTICAL\n                            ? event.height\n                            : event.width,\n                });\n            } else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n\n    public setVisible(visible: boolean): void {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n\n        this.view.layout(this.width, this.height);\n    }\n\n    public dispose(): void {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    IView,\n    Splitview,\n    Orientation,\n    Sizing,\n    LayoutPriority,\n    ISplitviewStyles,\n} from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { INodeDescriptor } from './gridview';\nimport { LeafNode } from './leafNode';\nimport { Node } from './types';\nimport { CompositeDisposable, IDisposable, Disposable } from '../lifecycle';\n\nexport class BranchNode extends CompositeDisposable implements IView {\n    readonly element: HTMLElement;\n    private splitview: Splitview;\n    private _orthogonalSize: number;\n    private _size: number;\n    private _childrenDisposable: IDisposable = Disposable.NONE;\n\n    public readonly children: Node[] = [];\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    get width(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n\n    get height(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n\n    get minimumSize(): number {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n\n    get maximumSize(): number {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n\n    get minimumOrthogonalSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumOrthogonalSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get minimumWidth(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n\n    get minimumHeight(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n\n    get maximumWidth(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n\n    get maximumHeight(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n\n    get priority(): LayoutPriority {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n\n        const priorities = this.children.map((c) =>\n            typeof c.priority === 'undefined'\n                ? LayoutPriority.Normal\n                : c.priority\n        );\n\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        } else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n\n        return LayoutPriority.Normal;\n    }\n\n    constructor(\n        readonly orientation: Orientation,\n        readonly proportionalLayout: boolean,\n        readonly styles: ISplitviewStyles | undefined,\n        size: number,\n        orthogonalSize: number,\n        childDescriptors?: INodeDescriptor[]\n    ) {\n        super();\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        } else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible:\n                            childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                                ? childDescriptor.visible\n                                : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n\n        this.addDisposables(\n            this._onDidChange,\n            this.splitview.onDidSashEnd(() => {\n                this._onDidChange.fire({});\n            })\n        );\n\n        this.setupChildrenEvents();\n    }\n\n    setVisible(visible: boolean): void {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n\n    isChildVisible(index: number): boolean {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.isViewVisible(index);\n    }\n\n    setChildVisible(index: number, visible: boolean): void {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n\n        this.splitview.setViewVisible(index, visible);\n    }\n\n    moveChild(from: number, to: number): void {\n        if (from === to) {\n            return;\n        }\n\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n\n        if (from < to) {\n            to--;\n        }\n\n        this.splitview.moveView(from, to);\n\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n\n    getChildSize(index: number): number {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.getViewSize(index);\n    }\n\n    resizeChild(index: number, size: number): void {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.resizeView(index, size);\n    }\n\n    public layout(size: number, orthogonalSize: number) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n\n        this.splitview.layout(orthogonalSize, size);\n    }\n\n    public addChild(\n        node: Node,\n        size: number | Sizing,\n        index: number,\n        skipLayout?: boolean\n    ): void {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n\n    getChildCachedVisibleSize(index: number): number | undefined {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n\n    public removeChild(index: number, sizing?: Sizing): Node {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n\n    private _addChild(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n\n    private _removeChild(index: number): Node {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n\n        return child;\n    }\n\n    private setupChildrenEvents(): void {\n        this._childrenDisposable.dispose();\n\n        this._childrenDisposable = Event.any(\n            ...this.children.map((c) => c.onDidChange)\n        )((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n\n    public dispose(): void {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    ISplitviewStyles,\n    LayoutPriority,\n    Orientation,\n    Sizing,\n} from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Node } from './types';\nimport { Emitter, Event } from '../events';\nimport { IDisposable, MutableDisposable } from '../lifecycle';\nimport { Position } from '../dnd/droptarget';\n\nfunction findLeaf(candiateNode: Node, last: boolean): LeafNode {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(\n            candiateNode.children[last ? candiateNode.children.length - 1 : 0],\n            last\n        );\n    }\n    throw new Error('invalid node');\n}\n\nfunction flipNode<T extends Node>(\n    node: T,\n    size: number,\n    orthogonalSize: number\n): T {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(\n            orthogonal(node.orientation),\n            node.proportionalLayout,\n            node.styles,\n            size,\n            orthogonalSize\n        );\n\n        let totalSize = 0;\n\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize =\n                child instanceof BranchNode ? child.orthogonalSize : child.size;\n\n            let newSize =\n                node.size === 0\n                    ? 0\n                    : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n\n            result.addChild(\n                flipNode(child, orthogonalSize, newSize),\n                newSize,\n                0,\n                true\n            );\n        }\n\n        return result as T;\n    } else {\n        return new LeafNode(\n            node.view,\n            orthogonal(node.orientation),\n            orthogonalSize\n        ) as T;\n    }\n}\n\nexport function indexInParent(element: HTMLElement): number {\n    const parentElement = element.parentElement;\n\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n\n    let el = parentElement.firstElementChild;\n    let index = 0;\n\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n\n    return index;\n}\n\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element: HTMLElement): number[] {\n    const parentElement = element.parentElement;\n\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement!.parentElement!.parentElement!;\n    return [...getGridLocation(ancestor), index];\n}\n\nexport function getRelativeLocation(\n    rootOrientation: Orientation,\n    location: number[],\n    direction: Position\n): number[] {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n\n        return [...rest, index];\n    } else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\n\nexport function getDirectionOrientation(direction: Position): Orientation {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\n\nexport function getLocationOrientation(\n    rootOrientation: Orientation,\n    location: number[]\n): Orientation {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\n\nexport interface IViewSize {\n    width?: number;\n    height?: number;\n}\n\nexport interface IGridView {\n    readonly onDidChange: Event<IViewSize | undefined>;\n    readonly element: HTMLElement;\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    priority?: LayoutPriority;\n    layout(width: number, height: number): void;\n    toJSON(): object;\n    fromJSON?(json: object): void;\n    snap?: boolean;\n    setVisible?(visible: boolean): void;\n}\n\nexport const orthogonal = (orientation: Orientation) =>\n    orientation === Orientation.HORIZONTAL\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n\nexport interface GridLeafNode<T extends IGridView> {\n    readonly view: T;\n    readonly cachedVisibleSize: number | undefined;\n    readonly box: { width: number; height: number };\n}\n\nexport interface GridBranchNode<T extends IGridView> {\n    readonly children: GridNode<T>[];\n    readonly box: { width: number; height: number };\n}\n\nexport type GridNode<T extends IGridView> = GridLeafNode<T> | GridBranchNode<T>;\n\nexport function isGridBranchNode<T extends IGridView>(\n    node: GridNode<T>\n): node is GridBranchNode<T> {\n    return !!(node as any).children;\n}\n\nexport interface SerializedGridObject<T> {\n    type: 'leaf' | 'branch';\n    data: T | SerializedGridObject<T>[];\n    size?: number;\n    visible?: boolean;\n}\n\nconst serializeBranchNode = <T extends IGridView>(\n    node: GridNode<T>,\n    orientation: Orientation\n): SerializedGridObject<any> => {\n    const size =\n        orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n\n    return {\n        type: 'branch',\n        data: node.children.map((c) =>\n            serializeBranchNode(c, orthogonal(orientation))\n        ),\n        size,\n    };\n};\n\nexport interface ISerializedLeafNode<T = any> {\n    type: 'leaf';\n    data: T;\n    size: number;\n    visible?: boolean;\n}\n\nexport interface ISerializedBranchNode {\n    type: 'branch';\n    data: ISerializedNode[];\n    size: number;\n}\n\nexport type ISerializedNode = ISerializedLeafNode | ISerializedBranchNode;\n\nexport interface INodeDescriptor {\n    node: Node;\n    visible?: boolean;\n}\n\nexport interface IViewDeserializer {\n    fromJSON: (data: ISerializedLeafNode) => IGridView;\n}\n\nexport interface SerializedGridview<T> {\n    root: SerializedGridObject<T>;\n    width: number;\n    height: number;\n    orientation: Orientation;\n}\n\nexport class Gridview implements IDisposable {\n    private _root: BranchNode | undefined;\n    public readonly element: HTMLElement;\n    private disposable: MutableDisposable = new MutableDisposable();\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    public get length(): number {\n        return this._root ? this._root.children.length : 0;\n    }\n\n    public get orientation(): Orientation {\n        return this.root.orientation;\n    }\n\n    public set orientation(orientation: Orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n\n    get width(): number {\n        return this.root.width;\n    }\n    get height(): number {\n        return this.root.height;\n    }\n\n    get minimumWidth(): number {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight(): number {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth(): number {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight(): number {\n        return this.root.maximumHeight;\n    }\n\n    public serialize(): SerializedGridview<any> {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n\n    public dispose(): void {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n\n        this.element.remove();\n    }\n\n    public clear(): void {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(\n            orientation,\n            this.proportionalLayout,\n            this.styles,\n            this.root.size,\n            this.root.orthogonalSize\n        );\n    }\n\n    public deserialize(json: any, deserializer: IViewDeserializer): void {\n        const orientation = json.orientation;\n        const height =\n            orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(\n            json.root as ISerializedBranchNode,\n            orientation,\n            deserializer,\n            height\n        );\n    }\n\n    private _deserialize(\n        root: ISerializedBranchNode,\n        orientation: Orientation,\n        deserializer: IViewDeserializer,\n        orthogonalSize: number\n    ): void {\n        this.root = this._deserializeNode(\n            root,\n            orientation,\n            deserializer,\n            orthogonalSize\n        ) as BranchNode;\n    }\n\n    private _deserializeNode(\n        node: ISerializedNode,\n        orientation: Orientation,\n        deserializer: IViewDeserializer,\n        orthogonalSize: number\n    ): Node {\n        let result: Node;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(\n                        serializedChild,\n                        orthogonal(orientation),\n                        deserializer,\n                        node.size\n                    ),\n                    visible: (serializedChild as { visible: boolean }).visible,\n                } as INodeDescriptor;\n            });\n\n            result = new BranchNode(\n                orientation,\n                this.proportionalLayout,\n                this.styles,\n                node.size, // <- orthogonal size - flips at each depth\n                orthogonalSize, // <- size - flips at each depth\n\n                children\n            );\n        } else {\n            result = new LeafNode(\n                deserializer.fromJSON(node),\n                orientation,\n                orthogonalSize,\n                node.size\n            );\n        }\n\n        return result;\n    }\n\n    private get root(): BranchNode {\n        return this._root!;\n    }\n\n    private set root(root: BranchNode) {\n        const oldRoot = this._root;\n\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    public insertOrthogonalSplitviewAtRoot(): void {\n        if (!this._root) {\n            return;\n        }\n\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n\n        this._root = new BranchNode(\n            orthogonal(oldRoot.orientation),\n            this.proportionalLayout,\n            this.styles,\n            this.root.orthogonalSize,\n            this.root.size\n        );\n\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        } else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n\n            this._root.addChild(\n                /**\n                 * the child node will have the same orientation as the new root since\n                 * we are removing the inbetween node.\n                 * the entire 'tree' must be flipped recursively to ensure that the orientation\n                 * flips at each level\n                 */\n                flipNode(\n                    childReference,\n                    childReference.orthogonalSize,\n                    childReference.size\n                ),\n                Sizing.Distribute,\n                0\n            );\n        } else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n\n        this.element.appendChild(this._root.element);\n\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n\n    public next(location: number[]): LeafNode {\n        return this.progmaticSelect(location);\n    }\n\n    public previous(location: number[]): LeafNode {\n        return this.progmaticSelect(location, true);\n    }\n\n    getView(): GridBranchNode<IGridView>;\n    getView(location?: number[]): GridNode<IGridView>;\n    getView(location?: number[]): GridNode<IGridView> {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n\n    private _getViews(\n        node: Node,\n        orientation: Orientation,\n        cachedVisibleSize?: number\n    ): GridNode<IGridView> {\n        const box = { height: node.height, width: node.width };\n\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n\n        const children: GridNode<IGridView>[] = [];\n\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n\n            children.push(\n                this._getViews(\n                    child,\n                    orthogonal(orientation),\n                    nodeCachedVisibleSize\n                )\n            );\n        }\n\n        return { box, children };\n    }\n\n    private progmaticSelect(location: number[], reverse = false): LeafNode {\n        const [path, node] = this.getNode(location);\n\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n\n        return findLeaf(this.root, reverse);\n    }\n\n    constructor(\n        readonly proportionalLayout: boolean,\n        readonly styles: ISplitviewStyles | undefined,\n        orientation: Orientation\n    ) {\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(\n            orientation,\n            proportionalLayout,\n            styles,\n            0,\n            0\n        );\n    }\n\n    isViewVisible(location: number[]): boolean {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n\n        return parent.isChildVisible(index);\n    }\n\n    setViewVisible(location: number[], visible: boolean): void {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n\n        parent.setChildVisible(index, visible);\n    }\n\n    public moveView(parentLocation: number[], from: number, to: number): void {\n        const [, parent] = this.getNode(parentLocation);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        parent.moveChild(from, to);\n    }\n\n    public addView(\n        view: IGridView,\n        size: number | Sizing,\n        location: number[]\n    ): void {\n        const [rest, index] = tail(location);\n\n        const [pathToParent, parent] = this.getNode(rest);\n\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(\n                view,\n                orthogonal(parent.orientation),\n                parent.orthogonalSize\n            );\n            parent.addChild(node, size, index);\n        } else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n\n            let newSiblingSize: number | Sizing = 0;\n\n            const newSiblingCachedVisibleSize =\n                grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n\n            const newParent = new BranchNode(\n                parent.orientation,\n                this.proportionalLayout,\n                this.styles,\n                parent.size,\n                parent.orthogonalSize\n            );\n            grandParent.addChild(newParent, parent.size, parentIndex);\n\n            const newSibling = new LeafNode(\n                parent.view,\n                grandParent.orientation,\n                parent.size\n            );\n            newParent.addChild(newSibling, newSiblingSize, 0);\n\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n\n            const node = new LeafNode(\n                view,\n                grandParent.orientation,\n                parent.size\n            );\n            newParent.addChild(node, size, index);\n        }\n    }\n\n    public remove(view: IGridView, sizing?: Sizing): IGridView {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n\n    removeView(location: number[], sizing?: Sizing): IGridView {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        const nodeToRemove = parent.children[index];\n\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n\n        if (pathToParent.length === 0) {\n            // if the parent is root\n\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n\n            // and set that sibling node to be root\n            this.root = sibling;\n\n            return nodeToRemove.view;\n        }\n\n        // otherwise the parent is apart of a large sub-tree\n\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n\n        const isSiblingVisible = parent.isChildVisible(0);\n\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) =>\n            grandParent.getChildSize(i)\n        );\n\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(\n                parentIndex,\n                1,\n                ...sibling.children.map((c) => c.size)\n            );\n\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        } else {\n            // otherwise create a new leaf node and add that to the grandparent\n\n            const newSibling = new LeafNode(\n                sibling.view,\n                orthogonal(sibling.orientation),\n                sibling.size\n            );\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n\n        return nodeToRemove.view;\n    }\n\n    public layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.root.orientation === Orientation.HORIZONTAL\n                ? [height, width]\n                : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n\n    private getNode(\n        location: number[],\n        node: Node = this.root,\n        path: BranchNode[] = []\n    ): [BranchNode[], Node] {\n        if (location.length === 0) {\n            return [path, node];\n        }\n\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        const [index, ...rest] = location;\n\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n\n        const child = node.children[index];\n        path.push(node);\n\n        return this.getNode(rest, child, path);\n    }\n}\n","import {\n    DockviewDropEvent,\n    IDockviewComponent,\n    SerializedDockview,\n} from '../dockview/dockviewComponent';\nimport {\n    AddGroupOptions,\n    AddPanelOptions,\n    MovementOptions,\n} from '../dockview/options';\nimport { Direction } from '../gridview/baseComponentGridview';\nimport {\n    AddComponentOptions,\n    IGridviewComponent,\n    SerializedGridviewComponent,\n} from '../gridview/gridviewComponent';\nimport { IGridviewPanel } from '../gridview/gridviewPanel';\n\nimport {\n    AddPaneviewComponentOptions,\n    SerializedPaneview,\n    IPaneviewComponent,\n} from '../paneview/paneviewComponent';\nimport { IPaneviewPanel } from '../paneview/paneviewPanel';\nimport {\n    AddSplitviewComponentOptions,\n    ISplitviewComponent,\n    SerializedSplitview,\n    SplitviewComponentUpdateOptions,\n} from '../splitview/splitviewComponent';\nimport { IView, Orientation, Sizing } from '../splitview/splitview';\nimport { ISplitviewPanel } from '../splitview/splitviewPanel';\nimport {\n    DockviewGroupPanel,\n    IDockviewGroupPanel,\n} from '../dockview/dockviewGroupPanel';\nimport { Emitter, Event } from '../events';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport { PaneviewDropEvent } from '../paneview/draggablePaneviewPanel';\n\nexport interface CommonApi<T = any> {\n    readonly height: number;\n    readonly width: number;\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    focus(): void;\n    layout(width: number, height: number): void;\n    fromJSON(data: T): void;\n    toJSON(): T;\n    clear(): void;\n}\n\nexport class SplitviewApi implements CommonApi<SerializedSplitview> {\n    get minimumSize(): number {\n        return this.component.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.component.maximumSize;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get length(): number {\n        return this.component.length;\n    }\n\n    get orientation(): Orientation {\n        return this.component.orientation;\n    }\n\n    get panels(): ISplitviewPanel[] {\n        return this.component.panels;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidAddView(): Event<IView> {\n        return this.component.onDidAddView;\n    }\n\n    get onDidRemoveView(): Event<IView> {\n        return this.component.onDidRemoveView;\n    }\n\n    constructor(private readonly component: ISplitviewComponent) {}\n\n    updateOptions(options: SplitviewComponentUpdateOptions): void {\n        this.component.updateOptions(options);\n    }\n\n    removePanel(panel: ISplitviewPanel, sizing?: Sizing): void {\n        this.component.removePanel(panel, sizing);\n    }\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    getPanel(id: string): ISplitviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    layout(width: number, height: number): void {\n        return this.component.layout(width, height);\n    }\n\n    addPanel(options: AddSplitviewComponentOptions): ISplitviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.component.movePanel(from, to);\n    }\n\n    fromJSON(data: SerializedSplitview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedSplitview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class PaneviewApi implements CommonApi<SerializedPaneview> {\n    get minimumSize(): number {\n        return this.component.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.component.maximumSize;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get panels(): IPaneviewPanel[] {\n        return this.component.panels;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidAddView(): Event<IPaneviewPanel> {\n        return this.component.onDidAddView;\n    }\n\n    get onDidRemoveView(): Event<IPaneviewPanel> {\n        return this.component.onDidRemoveView;\n    }\n\n    get onDidDrop(): Event<PaneviewDropEvent> {\n        const emitter = new Emitter<PaneviewDropEvent>();\n\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire({ ...e, api: this });\n        });\n\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n\n        return emitter.event;\n    }\n\n    constructor(private readonly component: IPaneviewComponent) {}\n\n    removePanel(panel: IPaneviewPanel): void {\n        this.component.removePanel(panel);\n    }\n\n    getPanel(id: string): IPaneviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.component.movePanel(from, to);\n    }\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    layout(width: number, height: number): void {\n        this.component.layout(width, height);\n    }\n\n    addPanel(options: AddPaneviewComponentOptions): IPaneviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    fromJSON(data: SerializedPaneview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedPaneview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class GridviewApi implements CommonApi<SerializedGridviewComponent> {\n    get minimumHeight(): number {\n        return this.component.minimumHeight;\n    }\n\n    get maximumHeight(): number {\n        return this.component.maximumHeight;\n    }\n\n    get minimumWidth(): number {\n        return this.component.minimumWidth;\n    }\n\n    get maximumWidth(): number {\n        return this.component.maximumWidth;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidAddPanel(): Event<IGridviewPanel> {\n        return this.component.onDidAddGroup;\n    }\n\n    get onDidRemovePanel(): Event<IGridviewPanel> {\n        return this.component.onDidRemoveGroup;\n    }\n\n    get onDidActivePanelChange(): Event<IGridviewPanel | undefined> {\n        return this.component.onDidActiveGroupChange;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get panels(): IGridviewPanel[] {\n        return this.component.groups;\n    }\n\n    get orientation(): Orientation {\n        return this.component.orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this.component.updateOptions({ orientation: value });\n    }\n\n    constructor(private readonly component: IGridviewComponent) {}\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    layout(width: number, height: number, force = false): void {\n        this.component.layout(width, height, force);\n    }\n\n    addPanel(options: AddComponentOptions): IGridviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    removePanel(panel: IGridviewPanel, sizing?: Sizing): void {\n        this.component.removePanel(panel, sizing);\n    }\n\n    movePanel(\n        panel: IGridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void {\n        this.component.movePanel(panel, options);\n    }\n\n    getPanel(id: string): IGridviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    fromJSON(data: SerializedGridviewComponent): void {\n        return this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedGridviewComponent {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class DockviewApi implements CommonApi<SerializedDockview> {\n    get id(): string {\n        return this.component.id;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get minimumHeight(): number {\n        return this.component.minimumHeight;\n    }\n\n    get maximumHeight(): number {\n        return this.component.maximumHeight;\n    }\n\n    get minimumWidth(): number {\n        return this.component.minimumWidth;\n    }\n\n    get maximumWidth(): number {\n        return this.component.maximumWidth;\n    }\n\n    get size(): number {\n        return this.component.size;\n    }\n\n    get totalPanels(): number {\n        return this.component.totalPanels;\n    }\n\n    get onDidActiveGroupChange(): Event<DockviewGroupPanel | undefined> {\n        return this.component.onDidActiveGroupChange;\n    }\n\n    get onDidAddGroup(): Event<DockviewGroupPanel> {\n        return this.component.onDidAddGroup;\n    }\n\n    get onDidRemoveGroup(): Event<DockviewGroupPanel> {\n        return this.component.onDidRemoveGroup;\n    }\n\n    get onDidActivePanelChange(): Event<IDockviewPanel | undefined> {\n        return this.component.onDidActivePanelChange;\n    }\n\n    get onDidAddPanel(): Event<IDockviewPanel> {\n        return this.component.onDidAddPanel;\n    }\n\n    get onDidRemovePanel(): Event<IDockviewPanel> {\n        return this.component.onDidRemovePanel;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidDrop(): Event<DockviewDropEvent> {\n        return this.component.onDidDrop;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this.component.panels;\n    }\n\n    get groups(): DockviewGroupPanel[] {\n        return this.component.groups;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this.component.activePanel;\n    }\n\n    get activeGroup(): DockviewGroupPanel | undefined {\n        return this.component.activeGroup;\n    }\n\n    constructor(private readonly component: IDockviewComponent) {}\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    getPanel(id: string): IDockviewPanel | undefined {\n        return this.component.getGroupPanel(id);\n    }\n\n    layout(width: number, height: number, force = false): void {\n        this.component.layout(width, height, force);\n    }\n\n    addPanel(options: AddPanelOptions): IDockviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    removePanel(panel: IDockviewPanel): void {\n        this.component.removePanel(panel);\n    }\n\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel {\n        return this.component.addGroup(options);\n    }\n\n    moveToNext(options?: MovementOptions): void {\n        this.component.moveToNext(options);\n    }\n\n    moveToPrevious(options?: MovementOptions): void {\n        this.component.moveToPrevious(options);\n    }\n\n    closeAllGroups(): void {\n        return this.component.closeAllGroups();\n    }\n\n    removeGroup(group: IDockviewGroupPanel): void {\n        this.component.removeGroup(<DockviewGroupPanel>group);\n    }\n\n    getGroup(id: string): DockviewGroupPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    addFloatingGroup(\n        item: IDockviewPanel | DockviewGroupPanel,\n        coord?: { x: number; y: number }\n    ): void {\n        return this.component.addFloatingGroup(item, coord);\n    }\n\n    fromJSON(data: SerializedDockview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedDockview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n\nexport interface IDragAndDropObserverCallbacks {\n    onDragEnter: (e: DragEvent) => void;\n    onDragLeave: (e: DragEvent) => void;\n    onDrop: (e: DragEvent) => void;\n    onDragEnd: (e: DragEvent) => void;\n    onDragOver?: (e: DragEvent) => void;\n}\n\nexport class DragAndDropObserver extends CompositeDisposable {\n    private target: EventTarget | null = null;\n\n    constructor(\n        private element: HTMLElement,\n        private callbacks: IDragAndDropObserverCallbacks\n    ) {\n        super();\n\n        this.registerListeners();\n    }\n\n    private registerListeners(): void {\n        this.addDisposables(\n            addDisposableListener(\n                this.element,\n                'dragenter',\n                (e: DragEvent) => {\n                    this.target = e.target;\n                    this.callbacks.onDragEnter(e);\n                },\n                true\n            )\n        );\n\n        this.addDisposables(\n            addDisposableListener(\n                this.element,\n                'dragover',\n                (e: DragEvent) => {\n                    e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n                    if (this.callbacks.onDragOver) {\n                        this.callbacks.onDragOver(e);\n                    }\n                },\n                true\n            )\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'dragleave', (e: DragEvent) => {\n                if (this.target === e.target) {\n                    this.target = null;\n\n                    this.callbacks.onDragLeave(e);\n                }\n            })\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'dragend', (e: DragEvent) => {\n                this.target = null;\n                this.callbacks.onDragEnd(e);\n            })\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'drop', (e: DragEvent) => {\n                this.callbacks.onDrop(e);\n            })\n        );\n    }\n}\n\nexport interface IDraggedCompositeData {\n    eventData: DragEvent;\n    dragAndDropData: any;\n}\n\nexport interface ICompositeDragAndDropObserverCallbacks {\n    onDragEnter?: (e: IDraggedCompositeData) => void;\n    onDragLeave?: (e: IDraggedCompositeData) => void;\n    onDrop?: (e: IDraggedCompositeData) => void;\n    onDragOver?: (e: IDraggedCompositeData) => void;\n    onDragStart?: (e: IDraggedCompositeData) => void;\n    onDragEnd?: (e: IDraggedCompositeData) => void;\n}\n","import { toggleClass } from '../dom';\nimport { Emitter, Event } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nimport { Direction } from '../gridview/baseComponentGridview';\n\nfunction numberOrFallback(maybeNumber: any, fallback: number): number {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\n\nexport function directionToPosition(direction: Direction): Position {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\n\nexport function positionToDirection(position: Position): Direction {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\n\nexport interface DroptargetEvent {\n    readonly position: Position;\n    readonly nativeEvent: DragEvent;\n}\n\nexport type Position = 'top' | 'bottom' | 'left' | 'right' | 'center';\n\nexport type CanDisplayOverlay =\n    | boolean\n    | ((dragEvent: DragEvent, state: Position) => boolean);\n\nexport class Droptarget extends CompositeDisposable {\n    private targetElement: HTMLElement | undefined;\n    private overlayElement: HTMLElement | undefined;\n    private _state: Position | undefined;\n    private _acceptedTargetZonesSet: Set<Position>;\n\n    private readonly _onDrop = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDrop.event;\n\n    private static USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\n\n    get state(): Position | undefined {\n        return this._state;\n    }\n\n    constructor(\n        private readonly element: HTMLElement,\n        private readonly options: {\n            canDisplayOverlay: CanDisplayOverlay;\n            acceptedTargetZones: Position[];\n            overlayModel?: {\n                size?: { value: number; type: 'pixels' | 'percentage' };\n                activationSize?: {\n                    value: number;\n                    type: 'pixels' | 'percentage';\n                };\n            };\n        }\n    ) {\n        super();\n\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(\n            this.options.acceptedTargetZones\n        );\n\n        this.addDisposables(\n            this._onDrop,\n            new DragAndDropObserver(this.element, {\n                onDragEnter: () => undefined,\n                onDragOver: (e) => {\n                    if (this._acceptedTargetZonesSet.size === 0) {\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    const width = this.element.clientWidth;\n                    const height = this.element.clientHeight;\n\n                    if (width === 0 || height === 0) {\n                        return; // avoid div!0\n                    }\n\n                    const rect = (\n                        e.currentTarget as HTMLElement\n                    ).getBoundingClientRect();\n                    const x = e.clientX - rect.left;\n                    const y = e.clientY - rect.top;\n\n                    const quadrant = this.calculateQuadrant(\n                        this._acceptedTargetZonesSet,\n                        x,\n                        y,\n                        width,\n                        height\n                    );\n\n                    /**\n                     * If the event has already been used by another DropTarget instance\n                     * then don't show a second drop target, only one target should be\n                     * active at any one time\n                     */\n                    if (this.isAlreadyUsed(e) || quadrant === null) {\n                        // no drop target should be displayed\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    if (typeof this.options.canDisplayOverlay === 'boolean') {\n                        if (!this.options.canDisplayOverlay) {\n                            this.removeDropTarget();\n                            return;\n                        }\n                    } else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    this.markAsUsed(e);\n\n                    if (!this.targetElement) {\n                        this.targetElement = document.createElement('div');\n                        this.targetElement.className = 'drop-target-dropzone';\n                        this.overlayElement = document.createElement('div');\n                        this.overlayElement.className = 'drop-target-selection';\n                        this._state = 'center';\n                        this.targetElement.appendChild(this.overlayElement);\n\n                        this.element.classList.add('drop-target');\n                        this.element.append(this.targetElement);\n                    }\n\n                    this.toggleClasses(quadrant, width, height);\n\n                    this.setState(quadrant);\n                },\n                onDragLeave: () => {\n                    this.removeDropTarget();\n                },\n                onDragEnd: () => {\n                    this.removeDropTarget();\n                },\n                onDrop: (e) => {\n                    e.preventDefault();\n\n                    const state = this._state;\n\n                    this.removeDropTarget();\n\n                    if (state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({ position: state, nativeEvent: e });\n                    }\n                },\n            })\n        );\n    }\n\n    setTargetZones(acceptedTargetZones: Position[]): void {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n\n    dispose(): void {\n        this.removeDropTarget();\n        super.dispose();\n    }\n\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    private markAsUsed(event: DragEvent): void {\n        (event as any)[Droptarget.USED_EVENT_ID] = true;\n    }\n\n    /**\n     * Check is the event has already been used by another instance od DropTarget\n     */\n    private isAlreadyUsed(event: DragEvent): boolean {\n        const value = (event as any)[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n\n    private toggleClasses(\n        quadrant: Position,\n        width: number,\n        height: number\n    ): void {\n        if (!this.overlayElement) {\n            return;\n        }\n\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n\n        let size = 0.5;\n\n        if (this.options.overlayModel?.size?.type === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n\n        if (this.options.overlayModel?.size?.type === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                    width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                    height;\n            }\n        }\n\n        const translate = (1 - size) / 2;\n        const scale = size;\n\n        let transform: string;\n\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        } else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        } else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        } else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        } else {\n            transform = '';\n        }\n\n        this.overlayElement.style.transform = transform;\n\n        toggleClass(this.overlayElement, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlayElement, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlayElement, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlayElement, 'small-bottom', isSmallY && isBottom);\n    }\n\n    private setState(quadrant: Position): void {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n\n    private calculateQuadrant(\n        overlayType: Set<Position>,\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    ): Position | null {\n        const isPercentage =\n            this.options.overlayModel?.activationSize === undefined ||\n            this.options.overlayModel?.activationSize?.type === 'percentage';\n\n        const value = numberOrFallback(\n            this.options?.overlayModel?.activationSize?.value,\n            20\n        );\n\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(\n                overlayType,\n                x,\n                y,\n                width,\n                height,\n                value\n            );\n        }\n\n        return calculateQuadrantAsPixels(\n            overlayType,\n            x,\n            y,\n            width,\n            height,\n            value\n        );\n    }\n\n    private removeDropTarget(): void {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\n\nexport function calculateQuadrantAsPercentage(\n    overlayType: Set<Position>,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    threshold: number\n): Position | null {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n\n    if (!overlayType.has('center')) {\n        return null;\n    }\n\n    return 'center';\n}\n\nexport function calculateQuadrantAsPixels(\n    overlayType: Set<Position>,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    threshold: number\n): Position | null {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n\n    if (!overlayType.has('center')) {\n        return null;\n    }\n\n    return 'center';\n}\n","import {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../../../lifecycle';\nimport { Emitter, Event } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { IDockviewPanel } from '../../dockviewPanel';\n\nexport interface IContentContainer extends IDisposable {\n    onDidFocus: Event<void>;\n    onDidBlur: Event<void>;\n    element: HTMLElement;\n    layout(width: number, height: number): void;\n    openPanel: (panel: IDockviewPanel) => void;\n    closePanel: () => void;\n    show(): void;\n    hide(): void;\n}\n\nexport class ContentContainer\n    extends CompositeDisposable\n    implements IContentContainer\n{\n    private _element: HTMLElement;\n    private panel: IDockviewPanel | undefined;\n    private disposable = new MutableDisposable();\n\n    private readonly _onDidFocus = new Emitter<void>();\n    readonly onDidFocus: Event<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new Emitter<void>();\n    readonly onDidBlur: Event<void> = this._onDidBlur.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n\n    show(): void {\n        this.element.style.display = '';\n    }\n\n    hide(): void {\n        this.element.style.display = 'none';\n    }\n\n    public openPanel(panel: IDockviewPanel): void {\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if (this.panel.view?.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n\n        const disposable = new CompositeDisposable();\n\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n\n            const focusTracker = trackFocus(this._element);\n\n            disposable.addDisposables(\n                focusTracker,\n                focusTracker.onDidFocus(() => this._onDidFocus.fire()),\n                focusTracker.onDidBlur(() => this._onDidBlur.fire())\n            );\n\n            if (_onDidFocus) {\n                disposable.addDisposables(\n                    _onDidFocus(() => this._onDidFocus.fire())\n                );\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(\n                    _onDidBlur(() => this._onDidBlur.fire())\n                );\n            }\n\n            this._element.appendChild(this.panel.view.content.element);\n        }\n\n        this.disposable.value = disposable;\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    public closePanel(): void {\n        if (this.panel?.view?.content?.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n\n    public dispose(): void {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { IDockviewComponent } from './dockviewComponent';\nimport { DockviewPanelApi } from '../api/dockviewPanelApi';\nimport { PanelInitParameters, IPanel } from '../panel/types';\nimport { DockviewApi } from '../api/component.api';\nimport { Event } from '../events';\nimport { Optional } from '../types';\nimport { DockviewGroupPanel, IDockviewGroupPanel } from './dockviewGroupPanel';\n\nexport enum DockviewDropTargets {\n    Tab,\n    Panel,\n    TabContainer,\n    Edge,\n}\n\nexport interface HeaderPartInitParameters {\n    title: string;\n}\n\nexport interface GroupPanelPartInitParameters\n    extends PanelInitParameters,\n        HeaderPartInitParameters {\n    api: DockviewPanelApi;\n    containerApi: DockviewApi;\n}\n\nexport interface GroupPanelContentPartInitParameters\n    extends GroupPanelPartInitParameters {\n    tab: ITabRenderer;\n}\n\nexport interface WatermarkRendererInitParameters {\n    containerApi: DockviewApi;\n    group?: IDockviewGroupPanel;\n}\n\nexport interface IWatermarkRenderer\n    extends Optional<\n        Omit<IPanel, 'id' | 'init'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    init: (params: WatermarkRendererInitParameters) => void;\n    updateParentGroup(group: DockviewGroupPanel, visible: boolean): void;\n}\n\nexport interface ITabRenderer\n    extends Optional<\n        Omit<IPanel, 'id'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    init(parameters: GroupPanelPartInitParameters): void;\n    onGroupChange?(group: DockviewGroupPanel): void;\n    onPanelVisibleChange?(isPanelVisible: boolean): void;\n}\n\nexport interface IContentRenderer\n    extends Optional<\n        Omit<IPanel, 'id'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    readonly onDidFocus?: Event<void>;\n    readonly onDidBlur?: Event<void>;\n    init(parameters: GroupPanelContentPartInitParameters): void;\n    onGroupChange?(group: DockviewGroupPanel): void;\n    onPanelVisibleChange?(isPanelVisible: boolean): void;\n}\n\n// watermark component\n\nexport interface WatermarkPartInitParameters {\n    accessor: IDockviewComponent;\n}\n\n// constructors\n\nexport interface WatermarkConstructor {\n    new (): IWatermarkRenderer;\n}\n\nexport interface IGroupPanelInitParameters\n    extends PanelInitParameters,\n        HeaderPartInitParameters {\n    //\n}\n\nexport interface GroupviewPanelState {\n    id: string;\n    contentComponent?: string;\n    tabComponent?: string;\n    title?: string;\n    params?: { [key: string]: any };\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\n\nexport abstract class DragHandler extends CompositeDisposable {\n    private readonly dataDisposable = new MutableDisposable();\n    private readonly pointerEventsDisposable = new MutableDisposable();\n\n    private readonly _onDragStart = new Emitter<void>();\n    readonly onDragStart = this._onDragStart.event;\n\n    constructor(protected readonly el: HTMLElement) {\n        super();\n\n        this.addDisposables(\n            this._onDragStart,\n            this.dataDisposable,\n            this.pointerEventsDisposable\n        );\n\n        this.configure();\n    }\n\n    abstract getData(dataTransfer?: DataTransfer | null): IDisposable;\n\n    protected isCancelled(_event: DragEvent): boolean {\n        return false;\n    }\n\n    private configure(): void {\n        this.addDisposables(\n            this._onDragStart,\n            addDisposableListener(this.el, 'dragstart', (event) => {\n                if (this.isCancelled(event)) {\n                    event.preventDefault();\n                    return;\n                }\n\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n\n                this.pointerEventsDisposable.value = {\n                    dispose: () => {\n                        for (const iframe of iframes) {\n                            iframe.style.pointerEvents = 'auto';\n                        }\n                    },\n                };\n\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n\n                this.el.classList.add('dv-dragged');\n                setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n\n                this.dataDisposable.value = this.getData(event.dataTransfer);\n\n                if (event.dataTransfer) {\n                    event.dataTransfer.effectAllowed = 'move';\n\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData(\n                        'text/plain',\n                        '__dockview_internal_drag_event__'\n                    );\n                }\n            }),\n            addDisposableListener(this.el, 'dragend', () => {\n                this.pointerEventsDisposable.dispose();\n                this.dataDisposable.dispose();\n            })\n        );\n    }\n}\n","import { addDisposableListener, Emitter, Event } from '../../../events';\nimport { CompositeDisposable, IDisposable } from '../../../lifecycle';\nimport {\n    getPanelData,\n    LocalSelectionTransfer,\n    PanelTransfer,\n} from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { DockviewDropTargets, ITabRenderer } from '../../types';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { DroptargetEvent, Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\n\nexport interface ITab extends IDisposable {\n    readonly panelId: string;\n    readonly element: HTMLElement;\n    setContent: (element: ITabRenderer) => void;\n    onChanged: Event<MouseEvent>;\n    onDrop: Event<DroptargetEvent>;\n    setActive(isActive: boolean): void;\n}\n\nexport class Tab extends CompositeDisposable implements ITab {\n    private readonly _element: HTMLElement;\n    private readonly droptarget: Droptarget;\n    private content?: ITabRenderer;\n\n    private readonly _onChanged = new Emitter<MouseEvent>();\n    readonly onChanged: Event<MouseEvent> = this._onChanged.event;\n\n    private readonly _onDropped = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDropped.event;\n\n    public get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly panelId: string,\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n\n        toggleClass(this.element, 'inactive-tab', true);\n\n        this.addDisposables(\n            this._onChanged,\n            this._onDropped,\n            new (class Handler extends DragHandler {\n                private readonly panelTransfer =\n                    LocalSelectionTransfer.getInstance<PanelTransfer>();\n\n                getData(): IDisposable {\n                    this.panelTransfer.setData(\n                        [new PanelTransfer(accessor.id, group.id, panelId)],\n                        PanelTransfer.prototype\n                    );\n\n                    return {\n                        dispose: () => {\n                            this.panelTransfer.clearData(\n                                PanelTransfer.prototype\n                            );\n                        },\n                    };\n                }\n            })(this._element)\n        );\n\n        this.addDisposables(\n            addDisposableListener(this._element, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    return;\n                }\n\n                this._onChanged.fire(event);\n            })\n        );\n\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n\n                const data = getPanelData();\n\n                if (data && this.accessor.id === data.viewId) {\n                    if (\n                        data.panelId === null &&\n                        data.groupId === this.group.id\n                    ) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n\n                    return this.panelId !== data.panelId;\n                }\n\n                return this.group.model.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Tab\n                );\n            },\n        });\n\n        this.addDisposables(\n            this.droptarget.onDrop((event) => {\n                this._onDropped.fire(event);\n            }),\n            this.droptarget\n        );\n    }\n\n    public setActive(isActive: boolean): void {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n\n    public setContent(part: ITabRenderer): void {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n\n    public dispose(): void {\n        super.dispose();\n    }\n}\n","import { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\n\nexport class GroupDragHandler extends DragHandler {\n    private readonly panelTransfer =\n        LocalSelectionTransfer.getInstance<PanelTransfer>();\n\n    constructor(\n        element: HTMLElement,\n        private readonly accessorId: string,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super(element);\n\n        this.addDisposables(\n            addDisposableListener(\n                element,\n                'mousedown',\n                (e) => {\n                    if (e.shiftKey) {\n                        /**\n                         * You cannot call e.preventDefault() because that will prevent drag events from firing\n                         * but we also need to stop any group overlay drag events from occuring\n                         * Use a custom event marker that can be checked by the overlay drag events\n                         */\n                        quasiPreventDefault(e);\n                    }\n                },\n                true\n            )\n        );\n    }\n\n    override isCancelled(_event: DragEvent): boolean {\n        if (this.group.api.isFloating && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n\n    getData(dataTransfer: DataTransfer | null): IDisposable {\n        this.panelTransfer.setData(\n            [new PanelTransfer(this.accessorId, this.group.id, null)],\n            PanelTransfer.prototype\n        );\n\n        const style = window.getComputedStyle(this.el);\n\n        const bgColor = style.getPropertyValue(\n            '--dv-activegroup-visiblepanel-tab-background-color'\n        );\n        const color = style.getPropertyValue(\n            '--dv-activegroup-visiblepanel-tab-color'\n        );\n\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n\n            addGhostImage(dataTransfer, ghostElement);\n        }\n\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\n\nexport function addGhostImage(\n    dataTransfer: DataTransfer,\n    ghostElement: HTMLElement\n): void {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, DroptargetEvent } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { addDisposableListener, Emitter, Event } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { DockviewDropTargets } from '../../types';\n\nexport class VoidContainer extends CompositeDisposable {\n    private readonly _element: HTMLElement;\n    private readonly voidDropTarget: Droptarget;\n\n    private readonly _onDrop = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDrop.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n\n        this.addDisposables(\n            this._onDrop,\n            addDisposableListener(this._element, 'click', () => {\n                this.accessor.doSetGroupActive(this.group);\n            })\n        );\n\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n\n                if (data && this.accessor.id === data.viewId) {\n                    if (\n                        data.panelId === null &&\n                        data.groupId === this.group.id\n                    ) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return last(this.group.panels)?.id !== data.panelId;\n                }\n\n                return group.model.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Panel\n                );\n            },\n        });\n\n        this.addDisposables(\n            handler,\n            this.voidDropTarget.onDrop((event) => {\n                this._onDrop.fire(event);\n            }),\n            this.voidDropTarget\n        );\n    }\n}\n","import {\n    IDisposable,\n    CompositeDisposable,\n    IValueDisposable,\n} from '../../../lifecycle';\nimport { addDisposableListener, Emitter, Event } from '../../../events';\nimport { ITab, Tab } from '../tab/tab';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewPanel, IDockviewPanel } from '../../dockviewPanel';\n\nexport interface TabDropIndexEvent {\n    readonly event: DragEvent;\n    readonly index: number;\n}\n\nexport interface ITabsContainer extends IDisposable {\n    readonly element: HTMLElement;\n    readonly panels: string[];\n    readonly size: number;\n    delete: (id: string) => void;\n    indexOf: (id: string) => number;\n    onDrop: Event<TabDropIndexEvent>;\n    setActive: (isGroupActive: boolean) => void;\n    setActivePanel: (panel: IDockviewPanel) => void;\n    isActive: (tab: ITab) => boolean;\n    closePanel: (panel: IDockviewPanel) => void;\n    openPanel: (panel: IDockviewPanel, index?: number) => void;\n    setRightActionsElement(element: HTMLElement | undefined): void;\n    setLeftActionsElement(element: HTMLElement | undefined): void;\n    hidden: boolean;\n    show(): void;\n    hide(): void;\n}\n\nexport class TabsContainer\n    extends CompositeDisposable\n    implements ITabsContainer\n{\n    private readonly _element: HTMLElement;\n    private readonly tabContainer: HTMLElement;\n    private readonly rightActionsContainer: HTMLElement;\n    private readonly leftActionsContainer: HTMLElement;\n    private readonly voidContainer: VoidContainer;\n\n    private tabs: IValueDisposable<ITab>[] = [];\n    private selectedIndex = -1;\n    private rightActions: HTMLElement | undefined;\n    private leftActions: HTMLElement | undefined;\n\n    private _hidden = false;\n\n    private readonly _onDrop = new Emitter<TabDropIndexEvent>();\n    readonly onDrop: Event<TabDropIndexEvent> = this._onDrop.event;\n\n    get panels(): string[] {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n\n    get size(): number {\n        return this.tabs.length;\n    }\n\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    set hidden(value: boolean) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n\n    show(): void {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n\n    hide(): void {\n        this._element.style.display = 'none';\n    }\n\n    setRightActionsElement(element: HTMLElement | undefined): void {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n\n    setLeftActionsElement(element: HTMLElement | undefined): void {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    public isActive(tab: ITab): boolean {\n        return (\n            this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab\n        );\n    }\n\n    public indexOf(id: string): number {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n\n    constructor(\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this.addDisposables(this._onDrop);\n\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n\n        toggleClass(\n            this._element,\n            'dv-full-width-single-tab',\n            this.accessor.options.singleTabMode === 'fullwidth'\n        );\n\n        this.addDisposables(\n            this.accessor.onDidAddPanel((e) => {\n                if (e.api.group === this.group) {\n                    toggleClass(\n                        this._element,\n                        'dv-single-tab',\n                        this.size === 1\n                    );\n                }\n            }),\n            this.accessor.onDidRemovePanel((e) => {\n                if (e.api.group === this.group) {\n                    toggleClass(\n                        this._element,\n                        'dv-single-tab',\n                        this.size === 1\n                    );\n                }\n            })\n        );\n\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n\n        this.addDisposables(\n            this.voidContainer,\n            this.voidContainer.onDrop((event) => {\n                this._onDrop.fire({\n                    event: event.nativeEvent,\n                    index: this.tabs.length,\n                });\n            }),\n            addDisposableListener(\n                this.voidContainer.element,\n                'mousedown',\n                (event) => {\n                    const isFloatingGroupsEnabled =\n                        !this.accessor.options.disableFloatingGroups;\n\n                    if (\n                        isFloatingGroupsEnabled &&\n                        event.shiftKey &&\n                        !this.group.api.isFloating\n                    ) {\n                        event.preventDefault();\n\n                        const { top, left } =\n                            this.element.getBoundingClientRect();\n                        const { top: rootTop, left: rootLeft } =\n                            this.accessor.element.getBoundingClientRect();\n\n                        this.accessor.addFloatingGroup(\n                            this.group,\n                            {\n                                x: left - rootLeft + 20,\n                                y: top - rootTop + 20,\n                            },\n                            { inDragMode: true }\n                        );\n                    }\n                }\n            ),\n            addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    return;\n                }\n\n                const isLeftClick = event.button === 0;\n\n                if (isLeftClick) {\n                    this.accessor.doSetGroupActive(this.group);\n                }\n            })\n        );\n    }\n\n    public setActive(_isGroupActive: boolean) {\n        // noop\n    }\n\n    private addTab(\n        tab: IValueDisposable<ITab>,\n        index: number = this.tabs.length\n    ): void {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n\n        this.tabContainer.insertBefore(\n            tab.value.element,\n            this.tabContainer.children[index]\n        );\n\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n\n    public delete(id: string): void {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n\n        const { value, disposable } = tabToRemove;\n\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n\n    public setActivePanel(panel: IDockviewPanel): void {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n\n    public openPanel(\n        panel: IDockviewPanel,\n        index: number = this.tabs.length\n    ): void {\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!panel.view?.tab) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n\n        const disposable = CompositeDisposable.from(\n            tabToAdd.onChanged((event) => {\n                const isFloatingGroupsEnabled =\n                    !this.accessor.options.disableFloatingGroups;\n\n                const isFloatingWithOnePanel =\n                    this.group.api.isFloating && this.size === 1;\n\n                if (\n                    isFloatingGroupsEnabled &&\n                    !isFloatingWithOnePanel &&\n                    event.shiftKey\n                ) {\n                    event.preventDefault();\n\n                    const panel = this.accessor.getGroupPanel(tabToAdd.panelId);\n\n                    const { top, left } =\n                        tabToAdd.element.getBoundingClientRect();\n                    const { top: rootTop, left: rootLeft } =\n                        this.accessor.element.getBoundingClientRect();\n\n                    this.accessor.addFloatingGroup(\n                        panel as DockviewPanel,\n                        {\n                            x: left - rootLeft,\n                            y: top - rootTop,\n                        },\n                        { inDragMode: true }\n                    );\n                    return;\n                }\n\n                const alreadyFocused =\n                    panel.id === this.group.model.activePanel?.id &&\n                    this.group.model.isContentFocused;\n\n                const isLeftClick = event.button === 0;\n\n                if (!isLeftClick || event.defaultPrevented) {\n                    return;\n                }\n\n                this.group.model.openPanel(panel, {\n                    skipFocus: alreadyFocused,\n                });\n            }),\n            tabToAdd.onDrop((event) => {\n                this._onDrop.fire({\n                    event: event.nativeEvent,\n                    index: this.tabs.findIndex((x) => x.value === tabToAdd),\n                });\n            })\n        );\n\n        const value: IValueDisposable<ITab> = { value: tabToAdd, disposable };\n\n        this.addTab(value, index);\n    }\n\n    public closePanel(panel: IDockviewPanel): void {\n        this.delete(panel.id);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData, PanelTransfer } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { DockviewComponent } from './dockviewComponent';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter, Event } from '../events';\nimport { IViewSize } from '../gridview/gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { IPanel, PanelInitParameters, PanelUpdateEvent } from '../panel/types';\nimport {\n    ContentContainer,\n    IContentContainer,\n} from './components/panel/content';\nimport {\n    ITabsContainer,\n    TabsContainer,\n} from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets, IWatermarkRenderer } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { IDockviewPanel } from './dockviewPanel';\nimport { IHeaderActionsRenderer } from './options';\n\nexport interface DndService {\n    canDisplayOverlay(\n        group: IDockviewGroupPanelModel,\n        event: DragEvent,\n        target: DockviewDropTargets\n    ): boolean;\n    onDrop(\n        group: IDockviewGroupPanelModel,\n        event: DragEvent,\n        position: Position,\n        index?: number\n    ): void;\n}\n\nexport interface IGroupItem {\n    id: string;\n    header: { element: HTMLElement };\n    body: { element: HTMLElement };\n}\n\ninterface GroupMoveEvent {\n    groupId: string;\n    itemId?: string;\n    target: Position;\n    index?: number;\n}\n\ninterface CoreGroupOptions {\n    locked?: boolean;\n    hideHeader?: boolean;\n}\n\nexport interface GroupOptions extends CoreGroupOptions {\n    readonly panels?: IDockviewPanel[];\n    readonly activePanel?: IDockviewPanel;\n    readonly id?: string;\n}\n\nexport interface GroupPanelViewState extends CoreGroupOptions {\n    views: string[];\n    activeView?: string;\n    id: string;\n}\n\nexport interface GroupviewChangeEvent {\n    readonly panel: IDockviewPanel;\n}\n\nexport interface GroupviewDropEvent {\n    readonly nativeEvent: DragEvent;\n    readonly position: Position;\n    readonly index?: number;\n    getData(): PanelTransfer | undefined;\n}\n\nexport interface IHeader {\n    hidden: boolean;\n}\n\nexport interface IDockviewGroupPanelModel extends IPanel {\n    readonly isActive: boolean;\n    readonly size: number;\n    readonly panels: IDockviewPanel[];\n    readonly activePanel: IDockviewPanel | undefined;\n    readonly header: IHeader;\n    readonly isContentFocused: boolean;\n    readonly onDidDrop: Event<GroupviewDropEvent>;\n    readonly onDidAddPanel: Event<GroupviewChangeEvent>;\n    readonly onDidRemovePanel: Event<GroupviewChangeEvent>;\n    readonly onDidActivePanelChange: Event<GroupviewChangeEvent>;\n    readonly onMove: Event<GroupMoveEvent>;\n    locked: boolean;\n    setActive(isActive: boolean): void;\n    initialize(): void;\n    // state\n    isPanelActive: (panel: IDockviewPanel) => boolean;\n    indexOf(panel: IDockviewPanel): number;\n    // panel lifecycle\n    openPanel(\n        panel: IDockviewPanel,\n        options?: {\n            index?: number;\n            skipFocus?: boolean;\n            skipSetPanelActive?: boolean;\n            skipSetGroupActive?: boolean;\n        }\n    ): void;\n    closePanel(panel: IDockviewPanel): void;\n    closeAllPanels(): void;\n    containsPanel(panel: IDockviewPanel): boolean;\n    removePanel: (panelOrId: IDockviewPanel | string) => IDockviewPanel;\n    moveToNext(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void;\n    moveToPrevious(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void;\n    canDisplayOverlay(\n        event: DragEvent,\n        position: Position,\n        target: DockviewDropTargets\n    ): boolean;\n}\n\nexport class DockviewGroupPanelModel\n    extends CompositeDisposable\n    implements IDockviewGroupPanelModel\n{\n    private readonly tabsContainer: ITabsContainer;\n    private readonly contentContainer: IContentContainer;\n    private readonly dropTarget: Droptarget;\n    private _activePanel: IDockviewPanel | undefined;\n    private watermark?: IWatermarkRenderer;\n    private _isGroupActive = false;\n    private _locked = false;\n    private _isFloating = false;\n    private _rightHeaderActions: IHeaderActionsRenderer | undefined;\n    private _leftHeaderActions: IHeaderActionsRenderer | undefined;\n\n    private mostRecentlyUsed: IDockviewPanel[] = [];\n\n    private readonly _onDidChange = new Emitter<IViewSize | undefined>();\n    readonly onDidChange: Event<IViewSize | undefined> =\n        this._onDidChange.event;\n\n    private _width = 0;\n    private _height = 0;\n\n    private _panels: IDockviewPanel[] = [];\n\n    private readonly _onMove = new Emitter<GroupMoveEvent>();\n    readonly onMove: Event<GroupMoveEvent> = this._onMove.event;\n\n    private readonly _onDidDrop = new Emitter<GroupviewDropEvent>();\n    readonly onDidDrop: Event<GroupviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onDidAddPanel = new Emitter<GroupviewChangeEvent>();\n    readonly onDidAddPanel: Event<GroupviewChangeEvent> =\n        this._onDidAddPanel.event;\n\n    private readonly _onDidRemovePanel = new Emitter<GroupviewChangeEvent>();\n    readonly onDidRemovePanel: Event<GroupviewChangeEvent> =\n        this._onDidRemovePanel.event;\n\n    private readonly _onDidActivePanelChange =\n        new Emitter<GroupviewChangeEvent>();\n    readonly onDidActivePanelChange: Event<GroupviewChangeEvent> =\n        this._onDidActivePanelChange.event;\n\n    get element(): HTMLElement {\n        throw new Error('not supported');\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this._activePanel;\n    }\n\n    get locked(): boolean {\n        return this._locked;\n    }\n\n    set locked(value: boolean) {\n        this._locked = value;\n\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n\n    get isActive(): boolean {\n        return this._isGroupActive;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this._panels;\n    }\n\n    get size(): number {\n        return this._panels.length;\n    }\n\n    get isEmpty(): boolean {\n        return this._panels.length === 0;\n    }\n\n    get hasWatermark(): boolean {\n        return !!(\n            this.watermark && this.container.contains(this.watermark.element)\n        );\n    }\n\n    get header(): IHeader {\n        return this.tabsContainer;\n    }\n\n    get isContentFocused(): boolean {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(\n            document.activeElement,\n            this.contentContainer.element\n        );\n    }\n\n    get isFloating(): boolean {\n        return this._isFloating;\n    }\n\n    set isFloating(value: boolean) {\n        this._isFloating = value;\n\n        this.dropTarget.setTargetZones(\n            value ? ['center'] : ['top', 'bottom', 'left', 'right', 'center']\n        );\n\n        toggleClass(this.container, 'dv-groupview-floating', value);\n\n        this.groupPanel.api._onDidFloatingStateChange.fire({\n            isFloating: this.isFloating,\n        });\n    }\n\n    constructor(\n        private readonly container: HTMLElement,\n        private accessor: DockviewComponent,\n        public id: string,\n        private readonly options: GroupOptions,\n        private readonly groupPanel: DockviewGroupPanel\n    ) {\n        super();\n\n        toggleClass(this.container, 'groupview', true);\n\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n\n        this.contentContainer = new ContentContainer();\n\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n\n                const data = getPanelData();\n\n                if (!data && event.shiftKey && !this.isFloating) {\n                    return false;\n                }\n\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n\n                    const groupHasOnePanelAndIsActiveDragElement =\n                        this._panels.length === 1 && data.groupId === this.id;\n\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n\n                return this.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Panel\n                );\n            },\n        });\n\n        container.append(\n            this.tabsContainer.element,\n            this.contentContainer.element\n        );\n\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n\n        this.addDisposables(\n            this.tabsContainer.onDrop((event) => {\n                this.handleDropEvent(event.event, 'center', event.index);\n            }),\n            this.contentContainer.onDidFocus(() => {\n                this.accessor.doSetGroupActive(this.groupPanel, true);\n            }),\n            this.contentContainer.onDidBlur(() => {\n                // noop\n            }),\n            this.dropTarget.onDrop((event) => {\n                this.handleDropEvent(event.nativeEvent, event.position);\n            }),\n            this._onMove,\n            this._onDidChange,\n            this._onDidDrop,\n            this._onDidAddPanel,\n            this._onDidRemovePanel,\n            this._onDidActivePanelChange\n        );\n    }\n\n    initialize(): void {\n        if (this.options?.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n\n        if (this.options?.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(\n                    this.groupPanel\n                );\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(\n                this._rightHeaderActions.element\n            );\n        }\n\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(\n                    this.groupPanel\n                );\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(\n                this._leftHeaderActions.element\n            );\n        }\n    }\n\n    public indexOf(panel: IDockviewPanel): number {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n\n    public toJSON(): GroupPanelViewState {\n        const result: GroupPanelViewState = {\n            views: this.tabsContainer.panels,\n            activeView: this._activePanel?.id,\n            id: this.id,\n        };\n\n        if (this.locked) {\n            result.locked = true;\n        }\n\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n\n        return result;\n    }\n\n    public moveToNext(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n\n        let normalizedIndex: number;\n\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        } else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        } else {\n            return;\n        }\n\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n\n    public moveToPrevious(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n\n        if (!options.panel) {\n            return;\n        }\n\n        const index = this.panels.indexOf(options.panel);\n\n        let normalizedIndex: number;\n\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        } else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        } else {\n            return;\n        }\n\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n\n    public containsPanel(panel: IDockviewPanel): boolean {\n        return this.panels.includes(panel);\n    }\n\n    init(_params: PanelInitParameters): void {\n        //noop\n    }\n\n    update(_params: PanelUpdateEvent): void {\n        //noop\n    }\n\n    focus(): void {\n        this._activePanel?.focus?.();\n    }\n\n    public openPanel(\n        panel: IDockviewPanel,\n        options: {\n            index?: number;\n            skipFocus?: boolean;\n            skipSetPanelActive?: boolean;\n            skipSetGroupActive?: boolean;\n        } = {}\n    ): void {\n        if (\n            typeof options.index !== 'number' ||\n            options.index > this.panels.length\n        ) {\n            options.index = this.panels.length;\n        }\n\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(\n                this.groupPanel,\n                !!options.skipFocus\n            );\n        }\n\n        this.updateContainer();\n    }\n\n    public removePanel(groupItemOrId: IDockviewPanel | string): IDockviewPanel {\n        const id =\n            typeof groupItemOrId === 'string'\n                ? groupItemOrId\n                : groupItemOrId.id;\n\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n\n        return this._removePanel(panelToRemove);\n    }\n\n    public closeAllPanels(): void {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        } else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n\n    public closePanel(panel: IDockviewPanel): void {\n        this.doClose(panel);\n    }\n\n    private doClose(panel: IDockviewPanel): void {\n        this.accessor.removePanel(panel);\n    }\n\n    public isPanelActive(panel: IDockviewPanel): boolean {\n        return this._activePanel === panel;\n    }\n\n    updateActions(element: HTMLElement | undefined): void {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n\n    public setActive(\n        isGroupActive: boolean,\n        skipFocus = false,\n        force = false\n    ): void {\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                this._activePanel?.focus?.();\n            }\n            return;\n        }\n\n        this._isGroupActive = isGroupActive;\n\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n\n        this.tabsContainer.setActive(this.isActive);\n\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n\n        this.updateContainer();\n\n        if (isGroupActive) {\n            if (!skipFocus) {\n                this._activePanel?.focus?.();\n            }\n        }\n    }\n\n    public layout(width: number, height: number): void {\n        this._width = width;\n        this._height = height;\n\n        this.contentContainer.layout(this._width, this._height);\n\n        if (this._activePanel?.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n\n    private _removePanel(panel: IDockviewPanel): IDockviewPanel {\n        const isActivePanel = this._activePanel === panel;\n\n        this.doRemovePanel(panel);\n\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n\n        this.updateContainer();\n        return panel;\n    }\n\n    private doRemovePanel(panel: IDockviewPanel): void {\n        const index = this.panels.indexOf(panel);\n\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(\n                this.mostRecentlyUsed.indexOf(panel),\n                1\n            );\n        }\n\n        this._onDidRemovePanel.fire({ panel });\n    }\n\n    private doAddPanel(\n        panel: IDockviewPanel,\n        index: number = this.panels.length,\n        skipSetActive = false\n    ): void {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n\n        this.tabsContainer.openPanel(panel, index);\n\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n\n        this.tabsContainer.show();\n        this.contentContainer.show();\n\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n\n        this._onDidAddPanel.fire({ panel });\n    }\n\n    private doSetActivePanel(panel: IDockviewPanel | undefined): void {\n        this._activePanel = panel;\n\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n\n            panel.layout(this._width, this._height);\n\n            this.updateMru(panel);\n\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n\n    private updateMru(panel: IDockviewPanel): void {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(\n                this.mostRecentlyUsed.indexOf(panel),\n                1\n            );\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n\n    private updateContainer(): void {\n        toggleClass(this.container, 'empty', this.isEmpty);\n\n        this.panels.forEach((panel) =>\n            panel.updateParentGroup(this.groupPanel, this.isActive)\n        );\n\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose?.();\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n\n    canDisplayOverlay(\n        event: DragEvent,\n        position: Position,\n        target: DockviewDropTargets\n    ): boolean {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id)!,\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n\n    private handleDropEvent(\n        event: DragEvent,\n        position: Position,\n        index?: number\n    ): void {\n        const data = getPanelData();\n\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n\n            const fromSameGroup =\n                this.tabsContainer.indexOf(data.panelId) !== -1;\n\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        } else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this.watermark?.element.remove();\n        this.watermark?.dispose?.();\n\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\n\nexport abstract class Resizable extends CompositeDisposable {\n    private readonly _element: HTMLElement;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(parentElement?: HTMLElement) {\n        super();\n\n        if (parentElement) {\n            this._element = parentElement;\n        } else {\n            this._element = document.createElement('div');\n            this._element.style.height = '100%';\n            this._element.style.width = '100%';\n            this._element.className = 'dv-resizable-container';\n        }\n\n        this.addDisposables(\n            watchElementResize(this._element, (entry) => {\n                if (this.isDisposed) {\n                    /**\n                     * resize is delayed through requestAnimationFrame so there is a small chance\n                     * the component has already been disposed of\n                     */\n                    return;\n                }\n                const { width, height } = entry.contentRect;\n                this.layout(width, height);\n            })\n        );\n    }\n\n    abstract layout(width: number, height: number): void;\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview, IGridView } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { IValueDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { ISplitviewStyles, Orientation, Sizing } from '../splitview/splitview';\nimport { IPanel } from '../panel/types';\nimport { MovementOptions2 } from '../dockview/options';\nimport { Resizable } from '../resizable';\n\nconst nextLayoutId = sequentialNumberGenerator();\n\nexport type Direction = 'left' | 'right' | 'above' | 'below' | 'within';\n\nexport function toTarget(direction: Direction): Position {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\n\nexport interface BaseGridOptions {\n    readonly proportionalLayout: boolean;\n    readonly orientation: Orientation;\n    readonly styles?: ISplitviewStyles;\n    readonly parentElement?: HTMLElement;\n}\n\nexport interface IGridPanelView extends IGridView, IPanel {\n    setActive(isActive: boolean): void;\n    readonly isActive: boolean;\n}\n\nexport interface IBaseGrid<T extends IGridPanelView> {\n    readonly element: HTMLElement;\n    readonly id: string;\n    readonly width: number;\n    readonly height: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly activeGroup: T | undefined;\n    readonly size: number;\n    readonly groups: T[];\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidRemoveGroup: Event<T>;\n    readonly onDidAddGroup: Event<T>;\n    readonly onDidActiveGroupChange: Event<T | undefined>;\n    getPanel(id: string): T | undefined;\n    toJSON(): object;\n    fromJSON(data: any): void;\n    clear(): void;\n    layout(width: number, height: number, force?: boolean): void;\n    setVisible(panel: T, visible: boolean): void;\n    isVisible(panel: T): boolean;\n}\n\nexport abstract class BaseGrid<T extends IGridPanelView>\n    extends Resizable\n    implements IBaseGrid<T>\n{\n    private readonly _id = nextLayoutId.next();\n    protected readonly _groups = new Map<string, IValueDisposable<T>>();\n    protected readonly gridview: Gridview;\n    //\n    protected _activeGroup: T | undefined;\n\n    private _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange = this._onDidLayoutChange.event;\n\n    private readonly _onDidRemoveGroup = new Emitter<T>();\n    readonly onDidRemoveGroup: Event<T> = this._onDidRemoveGroup.event;\n\n    protected readonly _onDidAddGroup = new Emitter<T>();\n    readonly onDidAddGroup: Event<T> = this._onDidAddGroup.event;\n\n    private readonly _onDidActiveGroupChange = new Emitter<T | undefined>();\n    readonly onDidActiveGroupChange: Event<T | undefined> =\n        this._onDidActiveGroupChange.event;\n\n    protected readonly _bufferOnDidLayoutChange = new TickDelayedEvent();\n\n    get id(): string {\n        return this._id;\n    }\n\n    get size(): number {\n        return this._groups.size;\n    }\n\n    get groups(): T[] {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n\n    get width(): number {\n        return this.gridview.width;\n    }\n\n    get height(): number {\n        return this.gridview.height;\n    }\n\n    get minimumHeight(): number {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight(): number {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth(): number {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth(): number {\n        return this.gridview.maximumWidth;\n    }\n\n    get activeGroup(): T | undefined {\n        return this._activeGroup;\n    }\n\n    constructor(options: BaseGridOptions) {\n        super(options.parentElement);\n\n        this.gridview = new Gridview(\n            !!options.proportionalLayout,\n            options.styles,\n            options.orientation\n        );\n\n        this.element.appendChild(this.gridview.element);\n\n        this.layout(0, 0, true); // set some elements height/widths\n\n        this.addDisposables(\n            this.gridview.onDidChange(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            Event.any(\n                this.onDidAddGroup,\n                this.onDidRemoveGroup,\n                this.onDidActiveGroupChange\n            )(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            this._bufferOnDidLayoutChange.onEvent(() => {\n                this._onDidLayoutChange.fire();\n            }),\n            this._bufferOnDidLayoutChange\n        );\n    }\n\n    public abstract toJSON(): object;\n\n    public abstract fromJSON(data: any): void;\n\n    public abstract clear(): void;\n\n    public setVisible(panel: T, visible: boolean): void {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n\n    public isVisible(panel: T): boolean {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n\n    protected doAddGroup(\n        group: T,\n        location: number[] = [0],\n        size?: number\n    ): void {\n        this.gridview.addView(group, size ?? Sizing.Distribute, location);\n\n        this._onDidAddGroup.fire(group);\n\n        this.doSetGroupActive(group);\n    }\n\n    protected doRemoveGroup(\n        group: T,\n        options?: { skipActive?: boolean; skipDispose?: boolean }\n    ): T {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n\n        const item = this._groups.get(group.id);\n\n        const view = this.gridview.remove(group, Sizing.Distribute);\n\n        if (item && !options?.skipDispose) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n\n        this._onDidRemoveGroup.fire(group);\n\n        if (!options?.skipActive && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n\n            this.doSetGroupActive(\n                groups.length > 0 ? groups[0].value : undefined\n            );\n        }\n\n        return view as T;\n    }\n\n    public getPanel(id: string): T | undefined {\n        return this._groups.get(id)?.value;\n    }\n\n    public doSetGroupActive(group: T | undefined, skipFocus?: boolean): void {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus?.();\n            }\n        }\n\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus?.();\n            }\n        }\n\n        this._activeGroup = group;\n\n        this._onDidActiveGroupChange.fire(group);\n    }\n\n    public removeGroup(group: T): void {\n        this.doRemoveGroup(group);\n    }\n\n    public moveToNext(options?: MovementOptions2): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.next(location)?.view;\n        this.doSetGroupActive(next as T);\n    }\n\n    public moveToPrevious(options?: MovementOptions2): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.previous(location)?.view;\n        this.doSetGroupActive(next as T);\n    }\n\n    public layout(width: number, height: number, forceResize?: boolean): void {\n        const different =\n            forceResize || width !== this.width || height !== this.height;\n\n        if (!different) {\n            return;\n        }\n\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n\n        this.gridview.layout(width, height);\n    }\n\n    public dispose(): void {\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n\n        for (const group of this.groups) {\n            group.dispose();\n        }\n\n        this.gridview.dispose();\n\n        super.dispose();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { IPanel, Parameters } from '../panel/types';\n\nexport interface FocusEvent {\n    readonly isFocused: boolean;\n}\nexport interface PanelDimensionChangeEvent {\n    readonly width: number;\n    readonly height: number;\n}\n\nexport interface VisibilityEvent {\n    readonly isVisible: boolean;\n}\n\nexport interface ActiveEvent {\n    readonly isActive: boolean;\n}\n\nexport interface PanelApi {\n    // events\n    readonly onDidDimensionsChange: Event<PanelDimensionChangeEvent>;\n    readonly onDidFocusChange: Event<FocusEvent>;\n    readonly onDidVisibilityChange: Event<VisibilityEvent>;\n    readonly onDidActiveChange: Event<ActiveEvent>;\n    setVisible(isVisible: boolean): void;\n    setActive(): void;\n    updateParameters(parameters: Parameters): void;\n    /**\n     * The id of the panel that would have been assigned when the panel was created\n     */\n    readonly id: string;\n    /**\n     * Whether the panel holds the current focus\n     */\n    readonly isFocused: boolean;\n    /**\n     * Whether the panel is the actively selected panel\n     */\n    readonly isActive: boolean;\n    /**\n     * Whether the panel is visible\n     */\n    readonly isVisible: boolean;\n    /**\n     * The panel width in pixels\n     */\n    readonly width: number;\n    /**\n     * The panel height in pixels\n     */\n    readonly height: number;\n}\n\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable implements PanelApi {\n    private _isFocused = false;\n    private _isActive = false;\n    private _isVisible = true;\n    private _width = 0;\n    private _height = 0;\n\n    private readonly panelUpdatesDisposable = new MutableDisposable();\n\n    readonly _onDidDimensionChange = new Emitter<PanelDimensionChangeEvent>({\n        replay: true,\n    });\n    readonly onDidDimensionsChange = this._onDidDimensionChange.event;\n    //\n    readonly _onDidChangeFocus = new Emitter<FocusEvent>({\n        replay: true,\n    });\n    readonly onDidFocusChange: Event<FocusEvent> = this._onDidChangeFocus.event;\n    //\n    readonly _onFocusEvent = new Emitter<void>();\n    readonly onFocusEvent: Event<void> = this._onFocusEvent.event;\n    //\n    readonly _onDidVisibilityChange = new Emitter<VisibilityEvent>({\n        replay: true,\n    });\n    readonly onDidVisibilityChange: Event<VisibilityEvent> =\n        this._onDidVisibilityChange.event;\n    //\n\n    readonly _onVisibilityChange = new Emitter<VisibilityEvent>();\n    readonly onVisibilityChange: Event<VisibilityEvent> =\n        this._onVisibilityChange.event;\n    //\n    readonly _onDidActiveChange = new Emitter<ActiveEvent>({\n        replay: true,\n    });\n    readonly onDidActiveChange: Event<ActiveEvent> =\n        this._onDidActiveChange.event;\n    //\n    readonly _onActiveChange = new Emitter<void>();\n    readonly onActiveChange: Event<void> = this._onActiveChange.event;\n    //\n    readonly _onUpdateParameters = new Emitter<Parameters>();\n    readonly onUpdateParameters: Event<Parameters> =\n        this._onUpdateParameters.event;\n    //\n\n    get isFocused() {\n        return this._isFocused;\n    }\n\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    constructor(readonly id: string) {\n        super();\n\n        this.addDisposables(\n            this.onDidFocusChange((event) => {\n                this._isFocused = event.isFocused;\n            }),\n            this.onDidActiveChange((event) => {\n                this._isActive = event.isActive;\n            }),\n            this.onDidVisibilityChange((event) => {\n                this._isVisible = event.isVisible;\n            }),\n            this.onDidDimensionsChange((event) => {\n                this._width = event.width;\n                this._height = event.height;\n            }),\n            this.panelUpdatesDisposable,\n            this._onDidDimensionChange,\n            this._onDidChangeFocus,\n            this._onDidVisibilityChange,\n            this._onDidActiveChange,\n            this._onFocusEvent,\n            this._onActiveChange,\n            this._onVisibilityChange,\n            this._onUpdateParameters\n        );\n    }\n\n    public initialize(panel: IPanel): void {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event(\n            (parameters) => {\n                panel.update({\n                    params: parameters,\n                });\n            }\n        );\n    }\n\n    setVisible(isVisible: boolean) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(): void {\n        this._onActiveChange.fire();\n    }\n\n    updateParameters(parameters: Parameters): void {\n        this._onUpdateParameters.fire(parameters);\n    }\n\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { FunctionOrValue } from '../types';\nimport { PanelApiImpl, PanelApi } from './panelApi';\n\ninterface PanelConstraintChangeEvent2 {\n    readonly minimumSize?: FunctionOrValue<number>;\n    readonly maximumSize?: FunctionOrValue<number>;\n}\n\nexport interface PanelConstraintChangeEvent {\n    readonly minimumSize?: number;\n    readonly maximumSize?: number;\n}\n\nexport interface PanelSizeEvent {\n    readonly size: number;\n}\n\nexport interface SplitviewPanelApi extends PanelApi {\n    readonly onDidConstraintsChange: Event<PanelConstraintChangeEvent>;\n    setConstraints(value: PanelConstraintChangeEvent2): void;\n    setSize(event: PanelSizeEvent): void;\n}\n\nexport class SplitviewPanelApiImpl\n    extends PanelApiImpl\n    implements SplitviewPanelApi, IDisposable\n{\n    readonly _onDidConstraintsChangeInternal =\n        new Emitter<PanelConstraintChangeEvent2>();\n    readonly onDidConstraintsChangeInternal: Event<PanelConstraintChangeEvent2> =\n        this._onDidConstraintsChangeInternal.event;\n    //\n\n    readonly _onDidConstraintsChange = new Emitter<PanelConstraintChangeEvent>({\n        replay: true,\n    });\n    readonly onDidConstraintsChange: Event<PanelConstraintChangeEvent> =\n        this._onDidConstraintsChange.event;\n    //\n\n    readonly _onDidSizeChange = new Emitter<PanelSizeEvent>();\n    readonly onDidSizeChange: Event<PanelSizeEvent> =\n        this._onDidSizeChange.event;\n    //\n\n    constructor(id: string) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidConstraintsChangeInternal,\n            this._onDidConstraintsChange,\n            this._onDidSizeChange\n        );\n    }\n\n    setConstraints(value: PanelConstraintChangeEvent2) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n\n    setSize(event: PanelSizeEvent) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { PaneviewPanel } from '../paneview/paneviewPanel';\nimport { SplitviewPanelApi, SplitviewPanelApiImpl } from './splitviewPanelApi';\n\nexport interface ExpansionEvent {\n    readonly isExpanded: boolean;\n}\n\nexport interface PaneviewPanelApi extends SplitviewPanelApi {\n    readonly isExpanded: boolean;\n    readonly onDidExpansionChange: Event<ExpansionEvent>;\n    readonly onMouseEnter: Event<MouseEvent>;\n    readonly onMouseLeave: Event<MouseEvent>;\n    setExpanded(isExpanded: boolean): void;\n}\n\nexport class PaneviewPanelApiImpl\n    extends SplitviewPanelApiImpl\n    implements PaneviewPanelApi\n{\n    readonly _onDidExpansionChange = new Emitter<ExpansionEvent>({\n        replay: true,\n    });\n    readonly onDidExpansionChange: Event<ExpansionEvent> =\n        this._onDidExpansionChange.event;\n\n    readonly _onMouseEnter = new Emitter<MouseEvent>({});\n    readonly onMouseEnter: Event<MouseEvent> = this._onMouseEnter.event;\n    readonly _onMouseLeave = new Emitter<MouseEvent>({});\n    readonly onMouseLeave: Event<MouseEvent> = this._onMouseLeave.event;\n\n    private _pane: PaneviewPanel | undefined;\n\n    set pane(pane: PaneviewPanel) {\n        this._pane = pane;\n    }\n\n    constructor(id: string) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidExpansionChange,\n            this._onMouseEnter,\n            this._onMouseLeave\n        );\n    }\n\n    setExpanded(isExpanded: boolean): void {\n        this._pane?.setExpanded(isExpanded);\n    }\n\n    get isExpanded(): boolean {\n        return !!this._pane?.isExpanded();\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport {\n    IFrameworkPart,\n    PanelUpdateEvent,\n    PanelInitParameters,\n    IPanel,\n} from '../panel/types';\nimport { PanelApi, PanelApiImpl } from '../api/panelApi';\n\nexport interface BasePanelViewState {\n    readonly id: string;\n    readonly component: string;\n    readonly params?: Record<string, any>;\n}\n\nexport interface BasePanelViewExported<T extends PanelApi> {\n    readonly id: string;\n    readonly api: T;\n    readonly width: number;\n    readonly height: number;\n    readonly params: Record<string, any> | undefined;\n    focus(): void;\n    toJSON(): object;\n    update(event: PanelUpdateEvent): void;\n}\n\nexport abstract class BasePanelView<T extends PanelApiImpl>\n    extends CompositeDisposable\n    implements IPanel, BasePanelViewExported<T>\n{\n    private _height = 0;\n    private _width = 0;\n    private _element: HTMLElement;\n    protected part?: IFrameworkPart;\n    protected _params?: PanelInitParameters;\n\n    // provide an IFrameworkPart that will determine the rendered UI of this view piece.\n    protected abstract getComponent(): IFrameworkPart;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    get params(): Record<string, any> | undefined {\n        return this._params?.params;\n    }\n\n    constructor(\n        public readonly id: string,\n        protected readonly component: string,\n        public readonly api: T\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n\n        const focusTracker = trackFocus(this._element);\n\n        this.addDisposables(\n            this.api,\n            focusTracker.onDidFocus(() => {\n                this.api._onDidChangeFocus.fire({ isFocused: true });\n            }),\n            focusTracker.onDidBlur(() => {\n                this.api._onDidChangeFocus.fire({ isFocused: false });\n            }),\n            focusTracker\n        );\n    }\n\n    focus(): void {\n        this.api._onFocusEvent.fire();\n    }\n\n    layout(width: number, height: number): void {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n\n    init(parameters: PanelInitParameters): void {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n\n    update(event: PanelUpdateEvent): void {\n        // merge the new parameters with the existing parameters\n        this._params = {\n            ...this._params,\n            params: {\n                ...this._params?.params,\n                ...event.params,\n            },\n        };\n\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n\n        // update the view with the updated props\n        this.part?.update({ params: this._params.params });\n    }\n\n    toJSON(): BasePanelViewState {\n        const params = this._params?.params ?? {};\n\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n\n    dispose(): void {\n        this.api.dispose();\n        this.part?.dispose();\n\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter, Event } from '../events';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n    BasePanelViewState,\n} from '../gridview/basePanelView';\nimport { IDisposable } from '../lifecycle';\nimport {\n    IFrameworkPart,\n    PanelInitParameters,\n    PanelUpdateEvent,\n    Parameters,\n} from '../panel/types';\nimport { IView, Orientation } from '../splitview/splitview';\n\nexport interface PanePanelViewState extends BasePanelViewState {\n    headerComponent?: string;\n    title: string;\n}\n\nexport interface PanePanelInitParameter extends PanelInitParameters {\n    minimumBodySize?: number;\n    maximumBodySize?: number;\n    isExpanded?: boolean;\n    title: string;\n    containerApi: PaneviewApi;\n}\n\nexport interface PanePanelComponentInitParameter\n    extends PanePanelInitParameter {\n    api: PaneviewPanelApiImpl;\n}\n\nexport interface IPaneBodyPart extends IDisposable {\n    readonly element: HTMLElement;\n    update(params: PanelUpdateEvent): void;\n    init(parameters: PanePanelComponentInitParameter): void;\n}\n\nexport interface IPaneHeaderPart extends IDisposable {\n    readonly element: HTMLElement;\n    update(params: PanelUpdateEvent): void;\n    init(parameters: PanePanelComponentInitParameter): void;\n}\n\nexport interface IPaneview extends IView {\n    onDidChangeExpansionState: Event<boolean>;\n}\n\nexport interface IPaneviewPanel\n    extends BasePanelViewExported<PaneviewPanelApiImpl> {\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly minimumBodySize: number;\n    readonly maximumBodySize: number;\n    isExpanded(): boolean;\n    setExpanded(isExpanded: boolean): void;\n    headerVisible: boolean;\n}\n\nexport abstract class PaneviewPanel\n    extends BasePanelView<PaneviewPanelApiImpl>\n    implements IPaneview, IPaneviewPanel\n{\n    private _onDidChangeExpansionState: Emitter<boolean> = new Emitter<boolean>(\n        { replay: true }\n    );\n    onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    private headerSize = 22;\n    private _orthogonalSize = 0;\n    private _size = 0;\n    private _minimumBodySize = 100;\n    private _maximumBodySize: number = Number.POSITIVE_INFINITY;\n    private _isExpanded = false;\n    protected header?: HTMLElement;\n    protected body?: HTMLElement;\n    private bodyPart?: IPaneHeaderPart;\n    private headerPart?: IPaneBodyPart;\n    private expandedSize = 0;\n    private animationTimer: any | undefined;\n    private _orientation: Orientation;\n\n    private _headerVisible: boolean;\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation;\n    }\n\n    get minimumSize(): number {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n\n        return headerSize + minimumBodySize;\n    }\n\n    get maximumSize(): number {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n\n        return headerSize + maximumBodySize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    set orthogonalSize(size: number) {\n        this._orthogonalSize = size;\n    }\n\n    get minimumBodySize(): number {\n        return this._minimumBodySize;\n    }\n\n    set minimumBodySize(value: number) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n\n    get maximumBodySize(): number {\n        return this._maximumBodySize;\n    }\n\n    set maximumBodySize(value: number) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n\n    get headerVisible(): boolean {\n        return this._headerVisible;\n    }\n\n    set headerVisible(value: boolean) {\n        this._headerVisible = value;\n        this.header!.style.display = value ? '' : 'none';\n    }\n\n    constructor(\n        id: string,\n        component: string,\n        private readonly headerComponent: string | undefined,\n        orientation: Orientation,\n        isExpanded: boolean,\n        isHeaderVisible: boolean\n    ) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n\n        this._orientation = orientation;\n\n        this.element.classList.add('pane');\n\n        this.addDisposables(\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({ size: event.size });\n            }),\n            addDisposableListener(\n                this.element,\n                'mouseenter',\n                (ev: MouseEvent) => {\n                    this.api._onMouseEnter.fire(ev);\n                }\n            ),\n            addDisposableListener(\n                this.element,\n                'mouseleave',\n                (ev: MouseEvent) => {\n                    this.api._onMouseLeave.fire(ev);\n                }\n            )\n        );\n\n        this.addDisposables(\n            this._onDidChangeExpansionState,\n            this.onDidChangeExpansionState((isPanelExpanded) => {\n                this.api._onDidExpansionChange.fire({\n                    isExpanded: isPanelExpanded,\n                });\n            }),\n            this.api.onDidFocusChange((e) => {\n                if (!this.header) {\n                    return;\n                }\n                if (e.isFocused) {\n                    addClasses(this.header, 'focused');\n                } else {\n                    removeClasses(this.header, 'focused');\n                }\n            })\n        );\n\n        this.renderOnce();\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    isExpanded(): boolean {\n        return this._isExpanded;\n    }\n\n    setExpanded(expanded: boolean): void {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n\n        this._isExpanded = expanded;\n\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        } else {\n            this.animationTimer = setTimeout(() => {\n                this.body?.remove();\n            }, 200);\n        }\n\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n\n    layout(size: number, orthogonalSize: number): void {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] =\n            this.orientation === Orientation.HORIZONTAL\n                ? [size, orthogonalSize]\n                : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n\n    init(parameters: PanePanelInitParameter): void {\n        super.init(parameters);\n\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n\n        this.bodyPart.init({ ...parameters, api: this.api });\n        this.headerPart.init({ ...parameters, api: this.api });\n\n        this.body?.append(this.bodyPart.element);\n        this.header?.append(this.headerPart.element);\n\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n\n    toJSON(): PanePanelViewState {\n        const params = this._params as PanePanelInitParameter;\n        return {\n            ...super.toJSON(),\n            headerComponent: this.headerComponent,\n            title: params.title,\n        };\n    }\n\n    private renderOnce(): void {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n\n        this.element.appendChild(this.header);\n\n        this.body = document.createElement('div');\n\n        this.body.className = 'pane-body';\n\n        this.element.appendChild(this.body);\n    }\n\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent(): IFrameworkPart {\n        return {\n            update: (params: Parameters) => {\n                this.bodyPart?.update({ params });\n                this.headerPart?.update({ params });\n            },\n            dispose: () => {\n                this.bodyPart?.dispose();\n                this.headerPart?.dispose();\n            },\n        };\n    }\n\n    protected abstract getBodyComponent(): IPaneBodyPart;\n    protected abstract getHeaderComponent(): IPaneHeaderPart;\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport {\n    getPaneData,\n    LocalSelectionTransfer,\n    PaneTransfer,\n} from '../dnd/dataTransfer';\nimport { Droptarget, DroptargetEvent } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { Orientation } from '../splitview/splitview';\nimport { IPaneviewComponent } from './paneviewComponent';\nimport {\n    IPaneviewPanel,\n    PanePanelInitParameter,\n    PaneviewPanel,\n} from './paneviewPanel';\n\nexport interface PaneviewDropEvent extends DroptargetEvent {\n    panel: IPaneviewPanel;\n    getData: () => PaneTransfer | undefined;\n    api: PaneviewApi;\n}\n\nexport abstract class DraggablePaneviewPanel extends PaneviewPanel {\n    private handler: DragHandler | undefined;\n    private target: Droptarget | undefined;\n\n    private readonly _onDidDrop = new Emitter<PaneviewDropEvent>();\n    readonly onDidDrop = this._onDidDrop.event;\n\n    constructor(\n        private readonly accessor: IPaneviewComponent,\n        id: string,\n        component: string,\n        headerComponent: string | undefined,\n        orientation: Orientation,\n        isExpanded: boolean,\n        disableDnd: boolean\n    ) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n\n    private initDragFeatures(): void {\n        if (!this.header) {\n            return;\n        }\n\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData(): IDisposable {\n                LocalSelectionTransfer.getInstance().setData(\n                    [new PaneTransfer(accessorId, id)],\n                    PaneTransfer.prototype\n                );\n\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(\n                            PaneTransfer.prototype\n                        );\n                    },\n                };\n            }\n        })(this.header);\n\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n\n                if (data) {\n                    if (\n                        data.paneId !== this.id &&\n                        data.viewId === this.accessor.id\n                    ) {\n                        return true;\n                    }\n                }\n\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n\n                return false;\n            },\n        });\n\n        this.addDisposables(\n            this._onDidDrop,\n            this.handler,\n            this.target,\n            this.target.onDrop((event) => {\n                this.onDrop(event);\n            })\n        );\n    }\n\n    private onDrop(event: DroptargetEvent): void {\n        const data = getPaneData();\n\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire({\n                ...event,\n                panel: this,\n                api: new PaneviewApi(this.accessor),\n                getData: getPaneData,\n            });\n            return;\n        }\n\n        const containerApi = (this._params! as PanePanelInitParameter)\n            .containerApi;\n        const panelId = data.paneId;\n\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire({\n                ...event,\n                panel: this,\n                getData: getPaneData,\n                api: new PaneviewApi(this.accessor),\n            });\n            return;\n        }\n\n        const allPanels = containerApi.panels;\n\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { IPanel } from '../panel/types';\nimport { FunctionOrValue } from '../types';\nimport { PanelApiImpl, PanelApi } from './panelApi';\n\nexport interface GridConstraintChangeEvent {\n    readonly minimumWidth?: number;\n    readonly minimumHeight?: number;\n    readonly maximumWidth?: number;\n    readonly maximumHeight?: number;\n}\n\ninterface GridConstraintChangeEvent2 {\n    readonly minimumWidth?: FunctionOrValue<number>;\n    readonly minimumHeight?: FunctionOrValue<number>;\n    readonly maximumWidth?: FunctionOrValue<number>;\n    readonly maximumHeight?: FunctionOrValue<number>;\n}\n\nexport interface SizeEvent {\n    readonly width?: number;\n    readonly height?: number;\n}\n\nexport interface GridviewPanelApi extends PanelApi {\n    readonly onDidConstraintsChange: Event<GridConstraintChangeEvent>;\n    setConstraints(value: GridConstraintChangeEvent2): void;\n    setSize(event: SizeEvent): void;\n}\n\nexport class GridviewPanelApiImpl\n    extends PanelApiImpl\n    implements GridviewPanelApi\n{\n    private readonly _onDidConstraintsChangeInternal =\n        new Emitter<GridConstraintChangeEvent2>();\n    readonly onDidConstraintsChangeInternal: Event<GridConstraintChangeEvent2> =\n        this._onDidConstraintsChangeInternal.event;\n\n    readonly _onDidConstraintsChange = new Emitter<GridConstraintChangeEvent>({\n        replay: true,\n    });\n    readonly onDidConstraintsChange: Event<GridConstraintChangeEvent> =\n        this._onDidConstraintsChange.event;\n\n    private readonly _onDidSizeChange = new Emitter<SizeEvent>();\n    readonly onDidSizeChange: Event<SizeEvent> = this._onDidSizeChange.event;\n\n    constructor(id: string, panel?: IPanel) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidConstraintsChangeInternal,\n            this._onDidConstraintsChange,\n            this._onDidSizeChange\n        );\n\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n\n    public setConstraints(value: GridConstraintChangeEvent): void {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n\n    public setSize(event: SizeEvent): void {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { PanelInitParameters } from '../panel/types';\nimport {\n    GridviewComponent,\n    IGridPanelComponentView,\n} from './gridviewComponent';\nimport { FunctionOrValue } from '../types';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n    BasePanelViewState,\n} from './basePanelView';\nimport {\n    GridviewPanelApi,\n    GridviewPanelApiImpl,\n} from '../api/gridviewPanelApi';\nimport { LayoutPriority } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { IViewSize } from './gridview';\n\nexport interface GridviewInitParameters extends PanelInitParameters {\n    minimumWidth?: number;\n    maximumWidth?: number;\n    minimumHeight?: number;\n    maximumHeight?: number;\n    priority?: LayoutPriority;\n    snap?: boolean;\n    accessor: GridviewComponent;\n    isVisible?: boolean;\n}\n\nexport interface IGridviewPanel<T extends GridviewPanelApi = GridviewPanelApi>\n    extends BasePanelViewExported<T> {\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    readonly priority: LayoutPriority | undefined;\n    readonly snap: boolean;\n}\n\nexport abstract class GridviewPanel<\n        T extends GridviewPanelApiImpl = GridviewPanelApiImpl\n    >\n    extends BasePanelView<T>\n    implements IGridPanelComponentView, IGridviewPanel\n{\n    private _evaluatedMinimumWidth = 0;\n    private _evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n    private _evaluatedMinimumHeight = 0;\n    private _evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n\n    private _minimumWidth: FunctionOrValue<number> = 0;\n    private _minimumHeight: FunctionOrValue<number> = 0;\n    private _maximumWidth: FunctionOrValue<number> = Number.MAX_SAFE_INTEGER;\n    private _maximumHeight: FunctionOrValue<number> = Number.MAX_SAFE_INTEGER;\n    private _priority?: LayoutPriority;\n    private _snap = false;\n\n    private readonly _onDidChange = new Emitter<IViewSize | undefined>();\n    readonly onDidChange: Event<IViewSize | undefined> =\n        this._onDidChange.event;\n\n    get priority(): LayoutPriority | undefined {\n        return this._priority;\n    }\n\n    get snap(): boolean {\n        return this._snap;\n    }\n\n    get minimumWidth(): number {\n        const width =\n            typeof this._minimumWidth === 'function'\n                ? this._minimumWidth()\n                : this._minimumWidth;\n\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n\n        return width;\n    }\n\n    get minimumHeight(): number {\n        const height =\n            typeof this._minimumHeight === 'function'\n                ? this._minimumHeight()\n                : this._minimumHeight;\n\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n\n        return height;\n    }\n\n    get maximumHeight(): number {\n        const height =\n            typeof this._maximumHeight === 'function'\n                ? this._maximumHeight()\n                : this._maximumHeight;\n\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n\n        return height;\n    }\n\n    get maximumWidth(): number {\n        const width =\n            typeof this._maximumWidth === 'function'\n                ? this._maximumWidth()\n                : this._maximumWidth;\n\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n\n        return width;\n    }\n\n    get isActive(): boolean {\n        return this.api.isActive;\n    }\n\n    constructor(\n        id: string,\n        component: string,\n        options?: {\n            minimumWidth?: number;\n            maximumWidth?: number;\n            minimumHeight?: number;\n            maximumHeight?: number;\n        },\n        api?: T\n    ) {\n        super(id, component, api ?? <T>new GridviewPanelApiImpl(id));\n\n        if (typeof options?.minimumWidth === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof options?.maximumWidth === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof options?.minimumHeight === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof options?.maximumHeight === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n\n        this.addDisposables(\n            this.api.onVisibilityChange((event) => {\n                const { isVisible } = event;\n                const { accessor } = this._params as GridviewInitParameters;\n                accessor.setVisible(this, isVisible);\n            }),\n            this.api.onActiveChange(() => {\n                const { accessor } = this._params as GridviewInitParameters;\n                accessor.setActive(this);\n            }),\n            this.api.onDidConstraintsChangeInternal((event) => {\n                if (\n                    typeof event.minimumWidth === 'number' ||\n                    typeof event.minimumWidth === 'function'\n                ) {\n                    this._minimumWidth = event.minimumWidth;\n                }\n                if (\n                    typeof event.minimumHeight === 'number' ||\n                    typeof event.minimumHeight === 'function'\n                ) {\n                    this._minimumHeight = event.minimumHeight;\n                }\n                if (\n                    typeof event.maximumWidth === 'number' ||\n                    typeof event.maximumWidth === 'function'\n                ) {\n                    this._maximumWidth = event.maximumWidth;\n                }\n                if (\n                    typeof event.maximumHeight === 'number' ||\n                    typeof event.maximumHeight === 'function'\n                ) {\n                    this._maximumHeight = event.maximumHeight;\n                }\n            }),\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({\n                    height: event.height,\n                    width: event.width,\n                });\n            }),\n            this._onDidChange\n        );\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    init(parameters: GridviewInitParameters): void {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n\n        super.init(parameters);\n\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n\n    private updateConstraints(): void {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n\n    toJSON(): GridPanelViewState {\n        const state = super.toJSON();\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        return {\n            ...state,\n            minimumHeight: minimum(this.minimumHeight),\n            maximumHeight: maximum(this.maximumHeight),\n            minimumWidth: minimum(this.minimumWidth),\n            maximumWidth: maximum(this.maximumWidth),\n            snap: this.snap,\n            priority: this.priority,\n        };\n    }\n}\n\nexport interface GridPanelViewState extends BasePanelViewState {\n    minimumHeight?: number;\n    maximumHeight?: number;\n    minimumWidth?: number;\n    maximumWidth?: number;\n    snap?: boolean;\n    priority?: LayoutPriority;\n}\n","import { Position } from '../dnd/droptarget';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { Emitter, Event } from '../events';\nimport { GridviewPanelApi, GridviewPanelApiImpl } from './gridviewPanelApi';\n\nexport interface DockviewGroupPanelApi extends GridviewPanelApi {\n    readonly onDidFloatingStateChange: Event<DockviewGroupPanelFloatingChangeEvent>;\n    readonly isFloating: boolean;\n    moveTo(options: { group: DockviewGroupPanel; position?: Position }): void;\n}\n\nexport interface DockviewGroupPanelFloatingChangeEvent {\n    readonly isFloating: boolean;\n}\n\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    private _group: DockviewGroupPanel | undefined;\n\n    readonly _onDidFloatingStateChange =\n        new Emitter<DockviewGroupPanelFloatingChangeEvent>();\n    readonly onDidFloatingStateChange: Event<DockviewGroupPanelFloatingChangeEvent> =\n        this._onDidFloatingStateChange.event;\n\n    get isFloating() {\n        if (!this._group) {\n            throw new Error(`DockviewGroupPanelApiImpl not initialized`);\n        }\n        return this._group.model.isFloating;\n    }\n\n    constructor(id: string, private readonly accessor: DockviewComponent) {\n        super(id);\n\n        this.addDisposables(this._onDidFloatingStateChange);\n    }\n\n    moveTo(options: { group: DockviewGroupPanel; position?: Position }): void {\n        if (!this._group) {\n            throw new Error(`DockviewGroupPanelApiImpl not initialized`);\n        }\n\n        this.accessor.moveGroupOrPanel(\n            options.group,\n            this._group.id,\n            undefined,\n            options.position ?? 'center'\n        );\n    }\n\n    initialize(group: DockviewGroupPanel): void {\n        this._group = group;\n    }\n}\n","import { IFrameworkPart } from '../panel/types';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport {\n    DockviewGroupPanelModel,\n    GroupOptions,\n    IDockviewGroupPanelModel,\n    IHeader,\n} from './dockviewGroupPanelModel';\nimport { GridviewPanel, IGridviewPanel } from '../gridview/gridviewPanel';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport {\n    DockviewGroupPanelApi,\n    DockviewGroupPanelApiImpl,\n} from '../api/dockviewGroupPanelApi';\n\nexport interface IDockviewGroupPanel\n    extends IGridviewPanel<DockviewGroupPanelApi> {\n    model: IDockviewGroupPanelModel;\n    locked: boolean;\n    readonly size: number;\n    readonly panels: IDockviewPanel[];\n    readonly activePanel: IDockviewPanel | undefined;\n}\n\nexport type IDockviewGroupPanelPublic = IDockviewGroupPanel;\n\nexport class DockviewGroupPanel\n    extends GridviewPanel<DockviewGroupPanelApiImpl>\n    implements IDockviewGroupPanel\n{\n    private readonly _model: DockviewGroupPanelModel;\n\n    get panels(): IDockviewPanel[] {\n        return this._model.panels;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this._model.activePanel;\n    }\n\n    get size(): number {\n        return this._model.size;\n    }\n\n    get model(): DockviewGroupPanelModel {\n        return this._model;\n    }\n\n    get locked(): boolean {\n        return this._model.locked;\n    }\n\n    set locked(value: boolean) {\n        this._model.locked = value;\n    }\n\n    get header(): IHeader {\n        return this._model.header;\n    }\n\n    constructor(\n        accessor: DockviewComponent,\n        id: string,\n        options: GroupOptions\n    ) {\n        super(\n            id,\n            'groupview_default',\n            {\n                minimumHeight: 100,\n                minimumWidth: 100,\n            },\n            new DockviewGroupPanelApiImpl(id, accessor)\n        );\n\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n\n        this._model = new DockviewGroupPanelModel(\n            this.element,\n            accessor,\n            id,\n            options,\n            this\n        );\n    }\n\n    initialize(): void {\n        this._model.initialize();\n    }\n\n    setActive(isActive: boolean): void {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n\n    layout(width: number, height: number) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n\n    getComponent(): IFrameworkPart {\n        return this._model;\n    }\n\n    toJSON(): any {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { GridviewPanelApiImpl, GridviewPanelApi } from './gridviewPanelApi';\nimport { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { MutableDisposable } from '../lifecycle';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { Position } from '../dnd/droptarget';\n\nexport interface TitleEvent {\n    readonly title: string;\n}\n\n/*\n * omit visibility modifiers since the visibility of a single group doesn't make sense\n * because it belongs to a groupview\n */\nexport interface DockviewPanelApi\n    extends Omit<\n        GridviewPanelApi,\n        'setVisible' | 'onDidConstraintsChange' | 'setConstraints'\n    > {\n    readonly group: DockviewGroupPanel;\n    readonly isGroupActive: boolean;\n    readonly title: string | undefined;\n    readonly onDidActiveGroupChange: Event<void>;\n    readonly onDidGroupChange: Event<void>;\n    close(): void;\n    setTitle(title: string): void;\n    moveTo(options: {\n        group: DockviewGroupPanel;\n        position?: Position;\n        index?: number;\n    }): void;\n}\n\nexport class DockviewPanelApiImpl\n    extends GridviewPanelApiImpl\n    implements DockviewPanelApi\n{\n    private _group: DockviewGroupPanel;\n\n    readonly _onDidTitleChange = new Emitter<TitleEvent>();\n    readonly onDidTitleChange = this._onDidTitleChange.event;\n\n    private readonly _onDidActiveGroupChange = new Emitter<void>();\n    readonly onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n\n    private readonly _onDidGroupChange = new Emitter<void>();\n    readonly onDidGroupChange = this._onDidGroupChange.event;\n\n    private readonly disposable = new MutableDisposable();\n\n    get title(): string | undefined {\n        return this.panel.title;\n    }\n\n    get isGroupActive(): boolean {\n        return !!this.group?.isActive;\n    }\n\n    set group(value: DockviewGroupPanel) {\n        const isOldGroupActive = this.isGroupActive;\n\n        this._group = value;\n\n        this._onDidGroupChange.fire();\n\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        private panel: IDockviewPanel,\n        group: DockviewGroupPanel,\n        private readonly accessor: DockviewComponent\n    ) {\n        super(panel.id);\n\n        this.initialize(panel);\n\n        this._group = group;\n\n        this.addDisposables(\n            this.disposable,\n            this._onDidTitleChange,\n            this._onDidGroupChange,\n            this._onDidActiveGroupChange\n        );\n    }\n\n    moveTo(options: {\n        group: DockviewGroupPanel;\n        position?: Position;\n        index?: number;\n    }): void {\n        this.accessor.moveGroupOrPanel(\n            options.group,\n            this._group.id,\n            this.panel.id,\n            options.position ?? 'center',\n            options.index\n        );\n    }\n\n    setTitle(title: string): void {\n        this.panel.setTitle(title);\n    }\n\n    close(): void {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport {\n    DockviewPanelApi,\n    DockviewPanelApiImpl,\n} from '../api/dockviewPanelApi';\nimport { GroupviewPanelState, IGroupPanelInitParameters } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { CompositeDisposable, IDisposable } from '../lifecycle';\nimport { IPanel, PanelUpdateEvent, Parameters } from '../panel/types';\nimport { IDockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewComponent } from './dockviewComponent';\n\nexport interface IDockviewPanel extends IDisposable, IPanel {\n    readonly view: IDockviewPanelModel;\n    readonly group: DockviewGroupPanel;\n    readonly api: DockviewPanelApi;\n    readonly title: string | undefined;\n    readonly params: Record<string, any> | undefined;\n    updateParentGroup(group: DockviewGroupPanel, isGroupActive: boolean): void;\n    init(params: IGroupPanelInitParameters): void;\n    toJSON(): GroupviewPanelState;\n    setTitle(title: string): void;\n    update(event: PanelUpdateEvent): void;\n}\n\nexport class DockviewPanel\n    extends CompositeDisposable\n    implements IDockviewPanel\n{\n    readonly api: DockviewPanelApiImpl;\n    private _group: DockviewGroupPanel;\n    private _params?: Parameters;\n\n    private _title: string | undefined;\n\n    get params(): Parameters | undefined {\n        return this._params;\n    }\n\n    get title(): string | undefined {\n        return this._title;\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        public readonly id: string,\n        accessor: DockviewComponent,\n        private readonly containerApi: DockviewApi,\n        group: DockviewGroupPanel,\n        readonly view: IDockviewPanelModel\n    ) {\n        super();\n        this._group = group;\n\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor);\n\n        this.addDisposables(\n            this.api.onActiveChange(() => {\n                accessor.setActivePanel(this);\n            }),\n            this.api.onDidSizeChange((event) => {\n                // forward the resize event to the group since if you want to resize a panel\n                // you are actually just resizing the panels parent which is the group\n                this.group.api.setSize(event);\n            })\n        );\n    }\n\n    public init(params: IGroupPanelInitParameters): void {\n        this._params = params.params;\n\n        this.view.init({\n            ...params,\n            api: this.api,\n            containerApi: this.containerApi,\n        });\n\n        this.setTitle(params.title);\n    }\n\n    focus(): void {\n        this.api._onFocusEvent.fire();\n    }\n\n    public toJSON(): GroupviewPanelState {\n        return <GroupviewPanelState>{\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params:\n                Object.keys(this._params || {}).length > 0\n                    ? this._params\n                    : undefined,\n            title: this.title,\n        };\n    }\n\n    setTitle(title: string): void {\n        const didTitleChange = title !== this.title;\n\n        if (didTitleChange) {\n            this._title = title;\n\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        // merge the new parameters with the existing parameters\n        this._params = {\n            ...(this._params || {}),\n            ...event.params,\n        };\n\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n\n    public updateParentGroup(\n        group: DockviewGroupPanel,\n        isGroupActive: boolean\n    ): void {\n        this._group = group;\n        this.api.group = group;\n\n        const isPanelVisible = this._group.model.isPanelActive(this);\n\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n\n        this.view.updateParentGroup(\n            this._group,\n            this._group.model.isPanelActive(this)\n        );\n    }\n\n    public layout(width: number, height: number): void {\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n\n        this.view.layout(width, height);\n    }\n\n    public dispose(): void {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}): SVGSVGElement => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\n\nexport const createCloseButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 28 28',\n        path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n    });\n\nexport const createExpandMoreButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 24 15',\n        path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n    });\n\nexport const createChevronRightButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 15 25',\n        path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n    });\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { ITabRenderer, GroupPanelPartInitParameters } from '../../types';\nimport { addDisposableListener } from '../../../events';\nimport { PanelUpdateEvent } from '../../../panel/types';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { createCloseButton } from '../../../svg';\n\nexport class DefaultTab extends CompositeDisposable implements ITabRenderer {\n    private _element: HTMLElement;\n    private _content: HTMLElement;\n    private _actionContainer: HTMLElement;\n    private _list: HTMLElement;\n    private action: HTMLElement;\n    //\n    private params: GroupPanelPartInitParameters = {} as any;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(\n            addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n                ev.preventDefault();\n            })\n        );\n\n        this.render();\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this.params = { ...this.params, ...event.params };\n        this.render();\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    public init(params: GroupPanelPartInitParameters): void {\n        this.params = params;\n        this._content.textContent = params.title;\n\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n\n    onGroupChange(_group: DockviewGroupPanel): void {\n        this.render();\n    }\n\n    onPanelVisibleChange(_isPanelVisible: boolean): void {\n        this.render();\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    private render(): void {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export interface FrameworkFactory<T> {\n    createComponent: (id: string, componentId: string, component: any) => T;\n}\n\nexport function createComponent<T>(\n    id: string,\n    componentName?: string,\n    components: {\n        [componentName: string]: { new (id: string, component: string): T };\n    } = {},\n    frameworkComponents: {\n        [componentName: string]: any;\n    } = {},\n    createFrameworkComponent?: FrameworkFactory<T>,\n    fallback?: () => T\n): T {\n    const Component =\n        typeof componentName === 'string'\n            ? components[componentName]\n            : undefined;\n    const FrameworkComponent =\n        typeof componentName === 'string'\n            ? frameworkComponents[componentName]\n            : undefined;\n\n    if (Component && FrameworkComponent) {\n        throw new Error(\n            `Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`\n        );\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(\n                `Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`\n            );\n        }\n        return createFrameworkComponent.createComponent(\n            id,\n            componentName!,\n            FrameworkComponent\n        );\n    }\n\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(\n            `Cannot create '${id}', no component '${componentName}' provided`\n        );\n    }\n\n    return new Component(id, componentName!);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport {\n    GroupPanelPartInitParameters,\n    IContentRenderer,\n    ITabRenderer,\n} from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { IDisposable } from '../lifecycle';\nimport { createComponent } from '../panel/componentFactory';\nimport { IDockviewComponent } from './dockviewComponent';\nimport { PanelUpdateEvent } from '../panel/types';\n\nexport interface IDockviewPanelModel extends IDisposable {\n    readonly contentComponent: string;\n    readonly tabComponent?: string;\n    readonly content: IContentRenderer;\n    readonly tab?: ITabRenderer;\n    update(event: PanelUpdateEvent): void;\n    layout(width: number, height: number): void;\n    init(params: GroupPanelPartInitParameters): void;\n    updateParentGroup(group: DockviewGroupPanel, isPanelVisible: boolean): void;\n}\n\nexport class DockviewPanelModel implements IDockviewPanelModel {\n    private readonly _content: IContentRenderer;\n    private readonly _tab: ITabRenderer;\n\n    private _group: DockviewGroupPanel | null = null;\n    private _isPanelVisible: boolean | null = null;\n\n    get content(): IContentRenderer {\n        return this._content;\n    }\n\n    get tab(): ITabRenderer {\n        return this._tab;\n    }\n\n    constructor(\n        private readonly accessor: IDockviewComponent,\n        private readonly id: string,\n        readonly contentComponent: string,\n        readonly tabComponent?: string\n    ) {\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n\n    init(params: GroupPanelPartInitParameters): void {\n        this.content.init({ ...params, tab: this.tab });\n        this.tab.init(params);\n    }\n\n    updateParentGroup(\n        group: DockviewGroupPanel,\n        isPanelVisible: boolean\n    ): void {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n\n    layout(width: number, height: number): void {\n        this.content.layout?.(width, height);\n    }\n\n    update(event: PanelUpdateEvent): void {\n        this.content.update?.(event);\n        this.tab.update?.(event);\n    }\n\n    dispose(): void {\n        this.content.dispose?.();\n        this.tab.dispose?.();\n    }\n\n    private createContentComponent(\n        id: string,\n        componentName: string\n    ): IContentRenderer {\n        return createComponent(\n            id,\n            componentName,\n            this.accessor.options.components || {},\n            this.accessor.options.frameworkComponents,\n            this.accessor.options.frameworkComponentFactory?.content\n        );\n    }\n\n    private createTabComponent(\n        id: string,\n        componentName?: string\n    ): ITabRenderer {\n        if (componentName) {\n            return createComponent(\n                id,\n                componentName,\n                this.accessor.options.tabComponents,\n                this.accessor.options.frameworkTabComponents,\n                this.accessor.options.frameworkComponentFactory?.tab,\n                () => new DefaultTab()\n            );\n        } else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(\n                id,\n                this.accessor.options.defaultTabComponent,\n                this.accessor.options.tabComponents,\n                this.accessor.options.frameworkTabComponents,\n                this.accessor.options.frameworkComponentFactory?.tab,\n                () => new DefaultTab()\n            );\n        } else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { GroupviewPanelState } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanel, IDockviewPanel } from './dockviewPanel';\nimport { DockviewComponent } from './dockviewComponent';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\n\nexport interface IPanelDeserializer {\n    fromJSON(\n        panelData: GroupviewPanelState,\n        group: DockviewGroupPanel\n    ): IDockviewPanel;\n}\n\n// @depreciated\ninterface LegacyState extends GroupviewPanelState {\n    view?: {\n        tab?: { id: string };\n        content: { id: string };\n    };\n}\n\nexport class DefaultDockviewDeserialzier implements IPanelDeserializer {\n    constructor(private readonly layout: DockviewComponent) {}\n\n    public fromJSON(\n        panelData: GroupviewPanelState,\n        group: DockviewGroupPanel\n    ): IDockviewPanel {\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n\n        const viewData = (panelData as LegacyState).view!;\n\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? viewData.tab?.id\n            : panelData.tabComponent;\n\n        const view = new DockviewPanelModel(\n            this.layout,\n            panelId,\n            contentComponent,\n            tabComponent\n        );\n\n        const panel = new DockviewPanel(\n            panelId,\n            this.layout,\n            new DockviewApi(this.layout),\n            group,\n            view\n        );\n\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n\n        return panel;\n    }\n}\n","import {\n    IWatermarkRenderer,\n    WatermarkRendererInitParameters,\n} from '../../types';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { PanelUpdateEvent } from '../../../panel/types';\nimport { createCloseButton } from '../../../svg';\nimport { DockviewApi } from '../../../api/component.api';\n\nexport class Watermark\n    extends CompositeDisposable\n    implements IWatermarkRenderer\n{\n    private _element: HTMLElement;\n    private _group: DockviewGroupPanel | undefined;\n    private _api: DockviewApi | undefined;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n\n        actionsContainer.appendChild(closeAnchor);\n\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n\n        this.addDisposables(\n            addDisposableListener(closeAnchor, 'click', (ev) => {\n                ev.preventDefault();\n                if (this._group) {\n                    this._api?.removeGroup(this._group);\n                }\n            })\n        );\n    }\n\n    update(_event: PanelUpdateEvent): void {\n        // noop\n    }\n\n    focus(): void {\n        // noop\n    }\n\n    layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    init(_params: WatermarkRendererInitParameters): void {\n        this._api = _params.containerApi;\n        this.render();\n    }\n\n    updateParentGroup(group: DockviewGroupPanel, _visible: boolean): void {\n        this._group = group;\n        this.render();\n    }\n\n    dispose(): void {\n        super.dispose();\n    }\n\n    private render(): void {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { quasiDefaultPrevented, toggleClass } from '../dom';\nimport {\n    Emitter,\n    Event,\n    addDisposableListener,\n    addDisposableWindowListener,\n} from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\n\nconst bringElementToFront = (() => {\n    let previous: HTMLElement | null = null;\n\n    function pushToTop(element: HTMLElement) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n\n    return pushToTop;\n})();\n\nexport class Overlay extends CompositeDisposable {\n    private _element: HTMLElement = document.createElement('div');\n\n    private readonly _onDidChange = new Emitter<void>();\n    readonly onDidChange: Event<void> = this._onDidChange.event;\n\n    private static MINIMUM_HEIGHT = 20;\n    private static MINIMUM_WIDTH = 20;\n\n    constructor(\n        private readonly options: {\n            height: number;\n            width: number;\n            left: number;\n            top: number;\n            container: HTMLElement;\n            content: HTMLElement;\n            minimumInViewportWidth: number;\n            minimumInViewportHeight: number;\n        }\n    ) {\n        super();\n\n        this.addDisposables(this._onDidChange);\n\n        this.setupOverlay();\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n\n        // if input bad resize within acceptable boundaries\n        this.renderWithinBoundaryConditions();\n    }\n\n    setBounds(\n        bounds: Partial<{\n            height: number;\n            width: number;\n            top: number;\n            left: number;\n        }>\n    ): void {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n\n        this.renderWithinBoundaryConditions();\n    }\n\n    toJSON(): { top: number; left: number; height: number; width: number } {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n\n    renderWithinBoundaryConditions(): void {\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(\n            0,\n            overlayRect.width - this.options.minimumInViewportWidth\n        );\n\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(\n            0,\n            overlayRect.height - this.options.minimumInViewportHeight\n        );\n\n        const left = clamp(\n            overlayRect.left - containerRect.left,\n            -xOffset,\n            Math.max(0, containerRect.width - overlayRect.width + xOffset)\n        );\n\n        const top = clamp(\n            overlayRect.top - containerRect.top,\n            -yOffset,\n            Math.max(0, containerRect.height - overlayRect.height + yOffset)\n        );\n\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n    }\n\n    setupDrag(\n        dragTarget: HTMLElement,\n        options: { inDragMode: boolean } = { inDragMode: false }\n    ): void {\n        const move = new MutableDisposable();\n\n        const track = () => {\n            let offset: { x: number; y: number } | null = null;\n\n            move.value = new CompositeDisposable(\n                addDisposableWindowListener(window, 'mousemove', (e) => {\n                    const containerRect =\n                        this.options.container.getBoundingClientRect();\n                    const x = e.clientX - containerRect.left;\n                    const y = e.clientY - containerRect.top;\n\n                    toggleClass(\n                        this._element,\n                        'dv-resize-container-dragging',\n                        true\n                    );\n\n                    const overlayRect = this._element.getBoundingClientRect();\n                    if (offset === null) {\n                        offset = {\n                            x: e.clientX - overlayRect.left,\n                            y: e.clientY - overlayRect.top,\n                        };\n                    }\n\n                    const xOffset = Math.max(\n                        0,\n                        overlayRect.width - this.options.minimumInViewportWidth\n                    );\n                    const yOffset = Math.max(\n                        0,\n                        overlayRect.height -\n                            this.options.minimumInViewportHeight\n                    );\n\n                    const left = clamp(\n                        x - offset.x,\n                        -xOffset,\n                        Math.max(\n                            0,\n                            containerRect.width - overlayRect.width + xOffset\n                        )\n                    );\n\n                    const top = clamp(\n                        y - offset.y,\n                        -yOffset,\n                        Math.max(\n                            0,\n                            containerRect.height - overlayRect.height + yOffset\n                        )\n                    );\n\n                    this._element.style.left = `${left}px`;\n                    this._element.style.top = `${top}px`;\n                }),\n                addDisposableWindowListener(window, 'mouseup', () => {\n                    toggleClass(\n                        this._element,\n                        'dv-resize-container-dragging',\n                        false\n                    );\n\n                    move.dispose();\n                    this._onDidChange.fire();\n                })\n            );\n        };\n\n        this.addDisposables(\n            move,\n            addDisposableListener(dragTarget, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    event.preventDefault();\n                    return;\n                }\n\n                // if somebody has marked this event then treat as a defaultPrevented\n                // without actually calling event.preventDefault()\n                if (quasiDefaultPrevented(event)) {\n                    return;\n                }\n\n                track();\n            }),\n            addDisposableListener(\n                this.options.content,\n                'mousedown',\n                (event) => {\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n\n                    // if somebody has marked this event then treat as a defaultPrevented\n                    // without actually calling event.preventDefault()\n                    if (quasiDefaultPrevented(event)) {\n                        return;\n                    }\n\n                    if (event.shiftKey) {\n                        track();\n                    }\n                }\n            ),\n            addDisposableListener(\n                this.options.content,\n                'mousedown',\n                () => {\n                    bringElementToFront(this._element);\n                },\n                true\n            )\n        );\n\n        bringElementToFront(this._element);\n\n        if (options.inDragMode) {\n            track();\n        }\n    }\n\n    private setupOverlay(): void {\n        this._element.style.height = `${this.options.height}px`;\n        this._element.style.width = `${this.options.width}px`;\n        this._element.style.left = `${this.options.left}px`;\n        this._element.style.top = `${this.options.top}px`;\n\n        this._element.className = 'dv-resize-container';\n    }\n\n    private setupResize(\n        direction:\n            | 'top'\n            | 'bottom'\n            | 'left'\n            | 'right'\n            | 'topleft'\n            | 'topright'\n            | 'bottomleft'\n            | 'bottomright'\n    ): void {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n\n        const move = new MutableDisposable();\n\n        this.addDisposables(\n            move,\n            addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n                e.preventDefault();\n\n                let startPosition: {\n                    originalY: number;\n                    originalHeight: number;\n                    originalX: number;\n                    originalWidth: number;\n                } | null = null;\n\n                move.value = new CompositeDisposable(\n                    addDisposableWindowListener(window, 'mousemove', (e) => {\n                        const containerRect =\n                            this.options.container.getBoundingClientRect();\n                        const overlayRect =\n                            this._element.getBoundingClientRect();\n\n                        const y = e.clientY - containerRect.top;\n                        const x = e.clientX - containerRect.left;\n\n                        if (startPosition === null) {\n                            // record the initial dimensions since as all subsequence moves are relative to this\n                            startPosition = {\n                                originalY: y,\n                                originalHeight: overlayRect.height,\n                                originalX: x,\n                                originalWidth: overlayRect.width,\n                            };\n                        }\n\n                        let top: number | null = null;\n                        let height: number | null = null;\n                        let left: number | null = null;\n                        let width: number | null = null;\n\n                        function moveTop() {\n                            top = clamp(\n                                y,\n                                0,\n                                Math.max(\n                                    0,\n                                    startPosition!.originalY +\n                                        startPosition!.originalHeight -\n                                        Overlay.MINIMUM_HEIGHT\n                                )\n                            );\n                            height =\n                                startPosition!.originalY +\n                                startPosition!.originalHeight -\n                                top;\n                        }\n\n                        function moveBottom() {\n                            top =\n                                startPosition!.originalY -\n                                startPosition!.originalHeight;\n\n                            height = clamp(\n                                y - top,\n                                Overlay.MINIMUM_HEIGHT,\n                                Math.max(\n                                    0,\n                                    containerRect.height -\n                                        startPosition!.originalY +\n                                        startPosition!.originalHeight\n                                )\n                            );\n                        }\n\n                        function moveLeft() {\n                            left = clamp(\n                                x,\n                                0,\n                                Math.max(\n                                    0,\n                                    startPosition!.originalX +\n                                        startPosition!.originalWidth -\n                                        Overlay.MINIMUM_WIDTH\n                                )\n                            );\n                            width =\n                                startPosition!.originalX +\n                                startPosition!.originalWidth -\n                                left;\n                        }\n\n                        function moveRight() {\n                            left =\n                                startPosition!.originalX -\n                                startPosition!.originalWidth;\n                            width = clamp(\n                                x - left,\n                                Overlay.MINIMUM_WIDTH,\n                                Math.max(\n                                    0,\n                                    containerRect.width -\n                                        startPosition!.originalX +\n                                        startPosition!.originalWidth\n                                )\n                            );\n                        }\n\n                        switch (direction) {\n                            case 'top':\n                                moveTop();\n                                break;\n                            case 'bottom':\n                                moveBottom();\n                                break;\n                            case 'left':\n                                moveLeft();\n                                break;\n                            case 'right':\n                                moveRight();\n                                break;\n                            case 'topleft':\n                                moveTop();\n                                moveLeft();\n                                break;\n                            case 'topright':\n                                moveTop();\n                                moveRight();\n                                break;\n                            case 'bottomleft':\n                                moveBottom();\n                                moveLeft();\n                                break;\n                            case 'bottomright':\n                                moveBottom();\n                                moveRight();\n                                break;\n                        }\n\n                        if (height !== null) {\n                            this._element.style.height = `${height}px`;\n                        }\n                        if (top !== null) {\n                            this._element.style.top = `${top}px`;\n                        }\n                        if (left !== null) {\n                            this._element.style.left = `${left}px`;\n                        }\n                        if (width !== null) {\n                            this._element.style.width = `${width}px`;\n                        }\n                    }),\n                    addDisposableWindowListener(window, 'mouseup', () => {\n                        move.dispose();\n                        this._onDidChange.fire();\n                    })\n                );\n            })\n        );\n    }\n\n    override dispose(): void {\n        this._element.remove();\n        super.dispose();\n    }\n}\n","import { Overlay } from '../dnd/overlay';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DockviewGroupPanel, IDockviewGroupPanel } from './dockviewGroupPanel';\n\nexport interface IDockviewFloatingGroupPanel {\n    readonly group: IDockviewGroupPanel;\n    position(\n        bounds: Partial<{\n            top: number;\n            left: number;\n            height: number;\n            width: number;\n        }>\n    ): void;\n}\n\nexport class DockviewFloatingGroupPanel\n    extends CompositeDisposable\n    implements IDockviewFloatingGroupPanel\n{\n    constructor(readonly group: DockviewGroupPanel, readonly overlay: Overlay) {\n        super();\n\n        this.addDisposables(overlay);\n    }\n\n    position(\n        bounds: Partial<{\n            top: number;\n            left: number;\n            height: number;\n            width: number;\n        }>\n    ): void {\n        this.overlay.setBounds(bounds);\n    }\n}\n","import {\n    getRelativeLocation,\n    SerializedGridObject,\n    getGridLocation,\n    ISerializedLeafNode,\n} from '../gridview/gridview';\nimport { directionToPosition, Droptarget, Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel, IDockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport {\n    IWatermarkRenderer,\n    GroupviewPanelState,\n    DockviewDropTargets,\n} from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport {\n    AddGroupOptions,\n    AddPanelOptions,\n    DockviewComponentOptions,\n    isGroupOptionsWithGroup,\n    isGroupOptionsWithPanel,\n    isPanelOptionsWithGroup,\n    isPanelOptionsWithPanel,\n    MovementOptions,\n} from './options';\nimport {\n    BaseGrid,\n    Direction,\n    IBaseGrid,\n    toTarget,\n} from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport {\n    GroupOptions,\n    GroupPanelViewState,\n    GroupviewDropEvent,\n} from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass } from '../dom';\nimport {\n    DockviewFloatingGroupPanel,\n    IDockviewFloatingGroupPanel,\n} from './dockviewFloatingGroupPanel';\n\nexport interface PanelReference {\n    update: (event: { params: { [key: string]: any } }) => void;\n    remove: () => void;\n}\n\nexport interface SerializedFloatingGroup {\n    data: GroupPanelViewState;\n    position: { height: number; width: number; left: number; top: number };\n}\n\nexport interface SerializedDockview {\n    grid: {\n        root: SerializedGridObject<GroupPanelViewState>;\n        height: number;\n        width: number;\n        orientation: Orientation;\n    };\n    panels: Record<string, GroupviewPanelState>;\n    activeGroup?: string;\n    floatingGroups?: SerializedFloatingGroup[];\n}\n\nexport type DockviewComponentUpdateOptions = Pick<\n    DockviewComponentOptions,\n    | 'orientation'\n    | 'components'\n    | 'frameworkComponents'\n    | 'tabComponents'\n    | 'frameworkTabComponents'\n    | 'showDndOverlay'\n    | 'watermarkFrameworkComponent'\n    | 'defaultTabComponent'\n    | 'createLeftHeaderActionsElement'\n    | 'createRightHeaderActionsElement'\n    | 'disableFloatingGroups'\n>;\n\nexport interface DockviewDropEvent extends GroupviewDropEvent {\n    api: DockviewApi;\n    group: DockviewGroupPanel | null;\n}\n\nexport interface IDockviewComponent extends IBaseGrid<DockviewGroupPanel> {\n    readonly activePanel: IDockviewPanel | undefined;\n    readonly totalPanels: number;\n    readonly panels: IDockviewPanel[];\n    readonly floatingGroups: IDockviewFloatingGroupPanel[];\n    readonly onDidDrop: Event<DockviewDropEvent>;\n    readonly orientation: Orientation;\n    updateOptions(options: DockviewComponentUpdateOptions): void;\n    moveGroupOrPanel(\n        referenceGroup: DockviewGroupPanel,\n        groupId: string,\n        itemId: string,\n        target: Position,\n        index?: number\n    ): void;\n    doSetGroupActive: (group: DockviewGroupPanel, skipFocus?: boolean) => void;\n    removeGroup: (group: DockviewGroupPanel) => void;\n    options: DockviewComponentOptions;\n    addPanel(options: AddPanelOptions): IDockviewPanel;\n    removePanel(panel: IDockviewPanel): void;\n    getGroupPanel: (id: string) => IDockviewPanel | undefined;\n    createWatermarkComponent(): IWatermarkRenderer;\n    // lifecycle\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel;\n    closeAllGroups(): void;\n    // events\n    moveToNext(options?: MovementOptions): void;\n    moveToPrevious(options?: MovementOptions): void;\n    setActivePanel(panel: IDockviewPanel): void;\n    focus(): void;\n    toJSON(): SerializedDockview;\n    fromJSON(data: SerializedDockview): void;\n    //\n    readonly onDidRemovePanel: Event<IDockviewPanel>;\n    readonly onDidAddPanel: Event<IDockviewPanel>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    readonly onDidActivePanelChange: Event<IDockviewPanel | undefined>;\n    addFloatingGroup(\n        item: IDockviewPanel | DockviewGroupPanel,\n        coord?: { x: number; y: number }\n    ): void;\n}\n\nexport class DockviewComponent\n    extends BaseGrid<DockviewGroupPanel>\n    implements IDockviewComponent\n{\n    private readonly nextGroupId = sequentialNumberGenerator();\n    private readonly _deserializer = new DefaultDockviewDeserialzier(this);\n    private readonly _api: DockviewApi;\n    private _options: Exclude<DockviewComponentOptions, 'orientation'>;\n    private watermark: IWatermarkRenderer | null = null;\n\n    private readonly _onDidDrop = new Emitter<DockviewDropEvent>();\n    readonly onDidDrop: Event<DockviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onDidRemovePanel = new Emitter<IDockviewPanel>();\n    readonly onDidRemovePanel: Event<IDockviewPanel> =\n        this._onDidRemovePanel.event;\n\n    private readonly _onDidAddPanel = new Emitter<IDockviewPanel>();\n    readonly onDidAddPanel: Event<IDockviewPanel> = this._onDidAddPanel.event;\n\n    private readonly _onDidLayoutFromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutFromJSON.event;\n\n    private readonly _onDidActivePanelChange = new Emitter<\n        IDockviewPanel | undefined\n    >();\n    readonly onDidActivePanelChange: Event<IDockviewPanel | undefined> =\n        this._onDidActivePanelChange.event;\n\n    readonly floatingGroups: DockviewFloatingGroupPanel[] = [];\n\n    get orientation(): Orientation {\n        return this.gridview.orientation;\n    }\n\n    get totalPanels(): number {\n        return this.panels.length;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this.groups.flatMap((group) => group.panels);\n    }\n\n    get options(): DockviewComponentOptions {\n        return this._options;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        const activeGroup = this.activeGroup;\n\n        if (!activeGroup) {\n            return undefined;\n        }\n\n        return activeGroup.activePanel;\n    }\n\n    constructor(options: DockviewComponentOptions) {\n        super({\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n        });\n\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n\n        this.addDisposables(\n            this._onDidDrop,\n            Event.any(\n                this.onDidAddGroup,\n                this.onDidRemoveGroup\n            )(() => {\n                this.updateWatermark();\n            }),\n            Event.any(\n                this.onDidAddPanel,\n                this.onDidRemovePanel,\n                this.onDidActivePanelChange\n            )(() => {\n                this._bufferOnDidLayoutChange.fire();\n            })\n        );\n\n        this._options = options;\n\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (\n            !this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent\n        ) {\n            this.options.watermarkComponent = Watermark;\n        }\n\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n\n                    return true;\n                }\n\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n\n        this.addDisposables(\n            dropTarget.onDrop((event) => {\n                const data = getPanelData();\n\n                if (data) {\n                    this.moveGroupOrPanel(\n                        this.orthogonalize(event.position),\n                        data.groupId,\n                        data.panelId || undefined,\n                        'center'\n                    );\n                } else {\n                    this._onDidDrop.fire({\n                        ...event,\n                        api: this._api,\n                        group: null,\n                        getData: getPanelData,\n                    });\n                }\n            }),\n            dropTarget\n        );\n\n        this._api = new DockviewApi(this);\n\n        this.updateWatermark();\n    }\n\n    addFloatingGroup(\n        item: DockviewPanel | DockviewGroupPanel,\n        coord?: { x?: number; y?: number; height?: number; width?: number },\n        options?: { skipRemoveGroup?: boolean; inDragMode: boolean }\n    ): void {\n        let group: DockviewGroupPanel;\n\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n\n            this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n            });\n\n            group.model.openPanel(item);\n        } else {\n            group = item;\n\n            const skip =\n                typeof options?.skipRemoveGroup === 'boolean' &&\n                options.skipRemoveGroup;\n\n            if (!skip) {\n                this.doRemoveGroup(item, { skipDispose: true });\n            }\n        }\n\n        group.model.isFloating = true;\n\n        const overlayLeft =\n            typeof coord?.x === 'number' ? Math.max(coord.x, 0) : 100;\n        const overlayTop =\n            typeof coord?.y === 'number' ? Math.max(coord.y, 0) : 100;\n\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: coord?.height ?? 300,\n            width: coord?.width ?? 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: 100,\n            minimumInViewportHeight: 100,\n        });\n\n        overlay.setupDrag(group.element, {\n            inDragMode:\n                typeof options?.inDragMode === 'boolean'\n                    ? options.inDragMode\n                    : false,\n        });\n\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(\n            group,\n            overlay\n        );\n\n        floatingGroupPanel.addDisposables(\n            overlay.onDidChange(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            {\n                dispose: () => {\n                    group.model.isFloating = false;\n                    remove(this.floatingGroups, floatingGroupPanel);\n                    this.updateWatermark();\n                },\n            }\n        );\n\n        this.floatingGroups.push(floatingGroupPanel);\n        this.updateWatermark();\n    }\n\n    private orthogonalize(position: Position): DockviewGroupPanel {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n\n    updateOptions(options: DockviewComponentUpdateOptions): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation!;\n        }\n\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n\n    override layout(\n        width: number,\n        height: number,\n        forceResize?: boolean | undefined\n    ): void {\n        super.layout(width, height, forceResize);\n\n        if (this.floatingGroups) {\n            for (const floating of this.floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.renderWithinBoundaryConditions();\n            }\n        }\n    }\n\n    focus(): void {\n        this.activeGroup?.focus();\n    }\n\n    getGroupPanel(id: string): IDockviewPanel | undefined {\n        return this.panels.find((panel) => panel.id === id);\n    }\n\n    setActivePanel(panel: IDockviewPanel): void {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n\n    moveToNext(options: MovementOptions = {}): void {\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        if (options.includePanel && options.group) {\n            if (\n                options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]\n            ) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = <DockviewGroupPanel>this.gridview.next(location)?.view;\n        this.doSetGroupActive(next);\n    }\n\n    moveToPrevious(options: MovementOptions = {}): void {\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.previous(location)?.view;\n        if (next) {\n            this.doSetGroupActive(next as DockviewGroupPanel);\n        }\n    }\n\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON(): SerializedDockview {\n        const data = this.gridview.serialize();\n\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {} as { [key: string]: GroupviewPanelState });\n\n        const floats: SerializedFloatingGroup[] = this.floatingGroups.map(\n            (floatingGroup) => {\n                return {\n                    data: floatingGroup.group.toJSON() as GroupPanelViewState,\n                    position: floatingGroup.overlay.toJSON(),\n                };\n            }\n        );\n\n        const result: SerializedDockview = {\n            grid: data,\n            panels,\n            activeGroup: this.activeGroup?.id,\n        };\n\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n\n        return result;\n    }\n\n    fromJSON(data: SerializedDockview): void {\n        this.clear();\n\n        const { grid, panels, activeGroup } = data;\n\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        const createGroupFromSerializedState = (data: GroupPanelViewState) => {\n            const { id, locked, hideHeader, views, activeView } = data;\n\n            const group = this.createGroup({\n                id,\n                locked: !!locked,\n                hideHeader: !!hideHeader,\n            });\n\n            this._onDidAddGroup.fire(group);\n\n            for (const child of views) {\n                const panel = this._deserializer.fromJSON(panels[child], group);\n\n                const isActive =\n                    typeof activeView === 'string' && activeView === panel.id;\n\n                group.model.openPanel(panel, {\n                    skipSetPanelActive: !isActive,\n                    skipSetGroupActive: true,\n                });\n            }\n\n            if (!group.activePanel && group.panels.length > 0) {\n                group.model.openPanel(group.panels[group.panels.length - 1], {\n                    skipSetGroupActive: true,\n                });\n            }\n\n            return group;\n        };\n\n        this.gridview.deserialize(grid, {\n            fromJSON: (node: ISerializedLeafNode<GroupPanelViewState>) => {\n                return createGroupFromSerializedState(node.data);\n            },\n        });\n\n        this.layout(width, height, true);\n\n        const serializedFloatingGroups = data.floatingGroups ?? [];\n\n        for (const serializedFloatingGroup of serializedFloatingGroups) {\n            const { data, position } = serializedFloatingGroup;\n            const group = createGroupFromSerializedState(data);\n\n            this.addFloatingGroup(\n                group,\n                {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                },\n                { skipRemoveGroup: true, inDragMode: false }\n            );\n        }\n\n        for (const floatingGroup of this.floatingGroups) {\n            floatingGroup.overlay.renderWithinBoundaryConditions();\n        }\n\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n\n        this._onDidLayoutFromJSON.fire();\n    }\n\n    clear(): void {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n\n        this.gridview.clear();\n    }\n\n    closeAllGroups(): void {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n\n            group.value.model.closeAllPanels();\n        }\n    }\n\n    addPanel(options: AddPanelOptions): DockviewPanel {\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n\n        let referenceGroup: DockviewGroupPanel | undefined;\n\n        if (options.position && options.floating) {\n            throw new Error(\n                'you can only provide one of: position, floating as arguments to .addPanel(...)'\n            );\n        }\n\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel =\n                    typeof options.position.referencePanel === 'string'\n                        ? this.getGroupPanel(options.position.referencePanel)\n                        : options.position.referencePanel;\n\n                if (!referencePanel) {\n                    throw new Error(\n                        `referencePanel ${options.position.referencePanel} does not exist`\n                    );\n                }\n\n                referenceGroup = this.findGroup(referencePanel);\n            } else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? this._groups.get(options.position.referenceGroup)\n                              ?.value\n                        : options.position.referenceGroup;\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `referencePanel ${options.position.referenceGroup} does not exist`\n                    );\n                }\n            } else {\n                const group = this.orthogonalize(\n                    directionToPosition(<Direction>options.position.direction)\n                );\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        } else {\n            referenceGroup = this.activeGroup;\n        }\n\n        let panel: DockviewPanel;\n\n        if (referenceGroup) {\n            const target = toTarget(\n                <Direction>options.position?.direction || 'within'\n            );\n\n            if (options.floating) {\n                const group = this.createGroup();\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n\n                const o =\n                    typeof options.floating === 'object' &&\n                    options.floating !== null\n                        ? options.floating\n                        : {};\n\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                });\n            } else if (referenceGroup.api.isFloating || target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            } else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    location,\n                    target\n                );\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        } else if (options.floating) {\n            const group = this.createGroup();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n\n            const o =\n                typeof options.floating === 'object' &&\n                options.floating !== null\n                    ? options.floating\n                    : {};\n\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n            });\n        } else {\n            const group = this.createGroupAtLocation();\n\n            panel = this.createPanel(options, group);\n\n            group.model.openPanel(panel);\n        }\n\n        return panel;\n    }\n\n    removePanel(\n        panel: IDockviewPanel,\n        options: { removeEmptyGroup: boolean; skipDispose: boolean } = {\n            removeEmptyGroup: true,\n            skipDispose: false,\n        }\n    ): void {\n        const group = panel.group;\n\n        if (!group) {\n            throw new Error(\n                `cannot remove panel ${panel.id}. it's missing a group.`\n            );\n        }\n\n        group.model.removePanel(panel);\n\n        if (!options.skipDispose) {\n            panel.dispose();\n        }\n\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n\n    createWatermarkComponent(): IWatermarkRenderer {\n        return createComponent(\n            'watermark-id',\n            'watermark-name',\n            this.options.watermarkComponent\n                ? { 'watermark-name': this.options.watermarkComponent }\n                : {},\n            this.options.watermarkFrameworkComponent\n                ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n                : {},\n            this.options.frameworkComponentFactory?.watermark\n        );\n    }\n\n    private updateWatermark(): void {\n        if (this.groups.filter((x) => !x.api.isFloating).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        } else if (this.watermark) {\n            this.watermark.element.parentElement!.remove();\n            this.watermark.dispose?.();\n            this.watermark = null;\n        }\n    }\n\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel {\n        const group = this.createGroup();\n\n        if (options) {\n            let referenceGroup: DockviewGroupPanel | undefined;\n\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel =\n                    typeof options.referencePanel === 'string'\n                        ? this.panels.find(\n                              (panel) => panel.id === options.referencePanel\n                          )\n                        : options.referencePanel;\n\n                if (!referencePanel) {\n                    throw new Error(\n                        `reference panel ${options.referencePanel} does not exist`\n                    );\n                }\n\n                referenceGroup = this.findGroup(referencePanel);\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `reference group for reference panel ${options.referencePanel} does not exist`\n                    );\n                }\n            } else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? this._groups.get(options.referenceGroup)?.value\n                        : options.referenceGroup;\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `reference group ${options.referenceGroup} does not exist`\n                    );\n                }\n            } else {\n                const group = this.orthogonalize(\n                    directionToPosition(<Direction>options.direction)\n                );\n                return group;\n            }\n\n            const target = toTarget(<Direction>options.direction || 'within');\n\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(\n                this.gridview.orientation,\n                location,\n                target\n            );\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        } else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n\n    removeGroup(\n        group: DockviewGroupPanel,\n        options?:\n            | {\n                  skipActive?: boolean;\n                  skipDispose?: boolean;\n              }\n            | undefined\n    ): void {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: options?.skipDispose ?? false,\n            });\n        }\n\n        this.doRemoveGroup(group, options);\n    }\n\n    protected override doRemoveGroup(\n        group: DockviewGroupPanel,\n        options?:\n            | {\n                  skipActive?: boolean;\n                  skipDispose?: boolean;\n              }\n            | undefined\n    ): DockviewGroupPanel {\n        const floatingGroup = this.floatingGroups.find(\n            (_) => _.group === group\n        );\n\n        if (floatingGroup) {\n            if (!options?.skipDispose) {\n                floatingGroup.group.dispose();\n                this._groups.delete(group.id);\n            }\n            floatingGroup.dispose();\n\n            return floatingGroup.group;\n        }\n\n        return super.doRemoveGroup(group, options);\n    }\n\n    moveGroupOrPanel(\n        destinationGroup: DockviewGroupPanel,\n        sourceGroupId: string,\n        sourceItemId: string | undefined,\n        destinationTarget: Position,\n        destinationIndex?: number\n    ): void {\n        const sourceGroup = sourceGroupId\n            ? this._groups.get(sourceGroupId)?.value\n            : undefined;\n\n        if (sourceItemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(\n                    sourceGroup,\n                    destinationGroup,\n                    destinationTarget\n                );\n            }\n            return;\n        }\n\n        if (!destinationTarget || destinationTarget === 'center') {\n            const groupItem: IDockviewPanel | undefined =\n                sourceGroup?.model.removePanel(sourceItemId) ||\n                this.panels.find((panel) => panel.id === sourceItemId);\n\n            if (!groupItem) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n\n            if (sourceGroup?.model.size === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n\n            destinationGroup.model.openPanel(groupItem, {\n                index: destinationIndex,\n            });\n        } else {\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(\n                this.gridview.orientation,\n                referenceLocation,\n                destinationTarget\n            );\n\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n\n                const isFloating = this.floatingGroups.find(\n                    (x) => x.group === sourceGroup\n                );\n\n                if (!isFloating) {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n\n                    if (\n                        sequenceEquals(\n                            sourceParentLocation,\n                            targetParentLocation\n                        )\n                    ) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                    }\n                }\n\n                // source group will become empty so delete the group\n                const targetGroup = this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                });\n\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(\n                    destinationGroup.element\n                );\n                const location = getRelativeLocation(\n                    this.gridview.orientation,\n                    updatedReferenceLocation,\n                    destinationTarget\n                );\n                this.doAddGroup(targetGroup, location);\n            } else {\n                const groupItem: IDockviewPanel | undefined =\n                    sourceGroup?.model.removePanel(sourceItemId) ||\n                    this.panels.find((panel) => panel.id === sourceItemId);\n\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n\n                const dropLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    referenceLocation,\n                    destinationTarget\n                );\n\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n\n    private moveGroup(\n        sourceGroup: DockviewGroupPanel,\n        referenceGroup: DockviewGroupPanel,\n        target: Position\n    ): void {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) =>\n                    sourceGroup.model.removePanel(p.id)\n                );\n\n                if (sourceGroup?.model.size === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            } else {\n                const floatingGroup = this.floatingGroups.find(\n                    (x) => x.group === sourceGroup\n                );\n\n                if (floatingGroup) {\n                    floatingGroup.dispose();\n                } else {\n                    this.gridview.removeView(\n                        getGridLocation(sourceGroup.element)\n                    );\n                }\n\n                const referenceLocation = getGridLocation(\n                    referenceGroup.element\n                );\n                const dropLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    referenceLocation,\n                    target\n                );\n\n                this.gridview.addView(\n                    sourceGroup,\n                    Sizing.Distribute,\n                    dropLocation\n                );\n            }\n        }\n    }\n\n    doSetGroupActive(\n        group: DockviewGroupPanel | undefined,\n        skipFocus?: boolean\n    ): void {\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n\n        if (!isGroupAlreadyFocused && this._activeGroup?.activePanel) {\n            this._onDidActivePanelChange.fire(this._activeGroup?.activePanel);\n        }\n    }\n\n    createGroup(options?: GroupOptions): DockviewGroupPanel {\n        if (!options) {\n            options = {};\n        }\n\n        let id = options?.id;\n\n        if (id && this._groups.has(options.id!)) {\n            console.warn(\n                `Duplicate group id ${options?.id}. reassigning group id to avoid errors`\n            );\n            id = undefined;\n        }\n\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: <any>null }); // required to initialized .part and allow for correct disposal of group\n\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(\n                view.model.onMove((event) => {\n                    const { groupId, itemId, target, index } = event;\n                    this.moveGroupOrPanel(view, groupId, itemId, target, index);\n                }),\n                view.model.onDidDrop((event) => {\n                    this._onDidDrop.fire({\n                        ...event,\n                        api: this._api,\n                        group: view,\n                    });\n                }),\n                view.model.onDidAddPanel((event) => {\n                    this._onDidAddPanel.fire(event.panel);\n                }),\n                view.model.onDidRemovePanel((event) => {\n                    this._onDidRemovePanel.fire(event.panel);\n                }),\n                view.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event.panel);\n                })\n            );\n\n            this._groups.set(view.id, { value: view, disposable });\n        }\n\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n\n        return view;\n    }\n\n    private createPanel(\n        options: AddPanelOptions,\n        group: DockviewGroupPanel\n    ): DockviewPanel {\n        const contentComponent = options.component;\n        const tabComponent =\n            options.tabComponent || this.options.defaultTabComponent;\n\n        const view = new DockviewPanelModel(\n            this,\n            options.id,\n            contentComponent,\n            tabComponent\n        );\n\n        const panel = new DockviewPanel(\n            options.id,\n            this,\n            this._api,\n            group,\n            view\n        );\n        panel.init({\n            title: options.title || options.id,\n            params: options?.params || {},\n        });\n\n        return panel;\n    }\n\n    private createGroupAtLocation(\n        location: number[] = [0]\n    ): DockviewGroupPanel {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n\n    private findGroup(panel: IDockviewPanel): DockviewGroupPanel | undefined {\n        return Array.from(this._groups.values()).find((group) =>\n            group.value.model.containsPanel(panel)\n        )?.value;\n    }\n\n    public dispose(): void {\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n\n        super.dispose();\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { Direction } from '../gridview/baseComponentGridview';\nimport { IGridView } from '../gridview/gridview';\nimport {\n    IContentRenderer,\n    ITabRenderer,\n    WatermarkConstructor,\n    IWatermarkRenderer,\n    DockviewDropTargets,\n} from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { ISplitviewStyles, Orientation } from '../splitview/splitview';\nimport { PanelTransfer } from '../dnd/dataTransfer';\nimport { IDisposable } from '../lifecycle';\nimport { Position } from '../dnd/droptarget';\nimport { IDockviewPanel } from './dockviewPanel';\nimport { FrameworkFactory } from '../panel/componentFactory';\nimport { DockviewGroupPanelApi } from '../api/dockviewGroupPanelApi';\n\nexport interface IHeaderActionsRenderer extends IDisposable {\n    readonly element: HTMLElement;\n    init(params: {\n        containerApi: DockviewApi;\n        api: DockviewGroupPanelApi;\n    }): void;\n}\n\nexport interface GroupPanelFrameworkComponentFactory {\n    content: FrameworkFactory<IContentRenderer>;\n    tab: FrameworkFactory<ITabRenderer>;\n    watermark: FrameworkFactory<IWatermarkRenderer>;\n}\n\nexport interface TabContextMenuEvent {\n    event: MouseEvent;\n    api: DockviewApi;\n    panel: IDockviewPanel;\n}\n\nexport interface DockviewRenderFunctions {\n    tabComponents?: {\n        [componentName: string]: {\n            new (id: string, component: string): ITabRenderer;\n        };\n    };\n    components?: {\n        [componentName: string]: {\n            new (id: string, component: string): IContentRenderer;\n        };\n    };\n    frameworkTabComponents?: {\n        [componentName: string]: any;\n    };\n    frameworkComponents?: {\n        [componentName: string]: any;\n    };\n}\n\nexport interface ViewFactoryData {\n    content: string;\n    tab?: string;\n}\n\nexport interface DockviewDndOverlayEvent {\n    nativeEvent: DragEvent;\n    target: DockviewDropTargets;\n    position: Position;\n    group?: DockviewGroupPanel;\n    getData: () => PanelTransfer | undefined;\n}\n\nexport interface DockviewComponentOptions extends DockviewRenderFunctions {\n    watermarkComponent?: WatermarkConstructor;\n    watermarkFrameworkComponent?: any;\n    frameworkComponentFactory?: GroupPanelFrameworkComponentFactory;\n    orientation?: Orientation;\n    styles?: ISplitviewStyles;\n    defaultTabComponent?: string;\n    showDndOverlay?: (event: DockviewDndOverlayEvent) => boolean;\n    createRightHeaderActionsElement?: (\n        group: DockviewGroupPanel\n    ) => IHeaderActionsRenderer;\n    createLeftHeaderActionsElement?: (\n        group: DockviewGroupPanel\n    ) => IHeaderActionsRenderer;\n    singleTabMode?: 'fullwidth' | 'default';\n    parentElement?: HTMLElement;\n    disableFloatingGroups?: boolean;\n}\n\nexport interface PanelOptions {\n    component: string;\n    tabComponent?: string;\n    params?: { [key: string]: any };\n    id: string;\n    title?: string;\n}\n\ntype RelativePanel = {\n    direction?: Direction;\n    referencePanel: string | IDockviewPanel;\n};\n\ntype RelativeGroup = {\n    direction?: Direction;\n    referenceGroup: string | DockviewGroupPanel;\n};\n\ntype AbsolutePosition = {\n    direction: Omit<Direction, 'within'>;\n};\n\nexport type AddPanelPositionOptions =\n    | RelativePanel\n    | RelativeGroup\n    | AbsolutePosition;\n\nexport function isPanelOptionsWithPanel(\n    data: AddPanelPositionOptions\n): data is RelativePanel {\n    if ((data as RelativePanel).referencePanel) {\n        return true;\n    }\n    return false;\n}\n\nexport function isPanelOptionsWithGroup(\n    data: AddPanelPositionOptions\n): data is RelativeGroup {\n    if ((data as RelativeGroup).referenceGroup) {\n        return true;\n    }\n    return false;\n}\n\ntype AddPanelFloatingGroupUnion = {\n    floating:\n        | {\n              height?: number;\n              width?: number;\n              x?: number;\n              y?: number;\n          }\n        | true;\n    position: never;\n};\n\ntype AddPanelPositionUnion = {\n    floating: false | never;\n    position: AddPanelPositionOptions;\n};\n\ntype AddPanelOptionsUnion = AddPanelFloatingGroupUnion | AddPanelPositionUnion;\n\nexport type AddPanelOptions = Omit<\n    PanelOptions,\n    'component' | 'tabComponent'\n> & {\n    component: string;\n    tabComponent?: string;\n} & Partial<AddPanelOptionsUnion>;\n\ntype AddGroupOptionsWithPanel = {\n    referencePanel: string | IDockviewPanel;\n    direction?: Omit<Direction, 'within'>;\n};\n\ntype AddGroupOptionsWithGroup = {\n    referenceGroup: string | DockviewGroupPanel;\n    direction?: Omit<Direction, 'within'>;\n};\n\nexport type AddGroupOptions =\n    | AddGroupOptionsWithGroup\n    | AddGroupOptionsWithPanel\n    | AbsolutePosition;\n\nexport function isGroupOptionsWithPanel(\n    data: AddGroupOptions\n): data is AddGroupOptionsWithPanel {\n    if ((data as AddGroupOptionsWithPanel).referencePanel) {\n        return true;\n    }\n    return false;\n}\n\nexport function isGroupOptionsWithGroup(\n    data: AddGroupOptions\n): data is AddGroupOptionsWithGroup {\n    if ((data as AddGroupOptionsWithGroup).referenceGroup) {\n        return true;\n    }\n    return false;\n}\n\nexport interface MovementOptions2 {\n    group?: IGridView;\n}\n\nexport interface MovementOptions extends MovementOptions2 {\n    includePanel?: boolean;\n    group?: DockviewGroupPanel;\n}\n","import {\n    getRelativeLocation,\n    SerializedGridObject,\n    getGridLocation,\n    SerializedGridview,\n} from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { IPanelDeserializer } from '../dockview/deserializer';\nimport { GridviewComponentOptions } from './options';\nimport {\n    BaseGrid,\n    Direction,\n    IBaseGrid,\n    IGridPanelView,\n    toTarget,\n} from './baseComponentGridview';\nimport {\n    GridviewPanel,\n    GridviewInitParameters,\n    GridPanelViewState,\n    IGridviewPanel,\n} from './gridviewPanel';\nimport { BaseComponentOptions } from '../panel/types';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter, Event } from '../events';\nimport { Position } from '../dnd/droptarget';\n\nexport interface SerializedGridviewComponent {\n    grid: SerializedGridview<GridPanelViewState>;\n    activePanel?: string;\n}\n\nexport interface AddComponentOptions extends BaseComponentOptions {\n    minimumWidth?: number;\n    maximumWidth?: number;\n    minimumHeight?: number;\n    maximumHeight?: number;\n    position?: {\n        direction: Direction;\n        referencePanel: string;\n    };\n    location?: number[];\n}\n\nexport interface IGridPanelComponentView extends IGridPanelView {\n    init: (params: GridviewInitParameters) => void;\n}\n\nexport type GridviewComponentUpdateOptions = Pick<\n    GridviewComponentOptions,\n    'orientation' | 'components' | 'frameworkComponents'\n>;\n\nexport interface IGridviewComponent extends IBaseGrid<GridviewPanel> {\n    readonly orientation: Orientation;\n    readonly onDidLayoutFromJSON: Event<void>;\n    updateOptions(options: Partial<GridviewComponentUpdateOptions>): void;\n    addPanel(options: AddComponentOptions): IGridviewPanel;\n    removePanel(panel: IGridviewPanel, sizing?: Sizing): void;\n    focus(): void;\n    fromJSON(serializedGridview: SerializedGridviewComponent): void;\n    toJSON(): SerializedGridviewComponent;\n    movePanel(\n        panel: IGridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void;\n    setVisible(panel: IGridviewPanel, visible: boolean): void;\n    setActive(panel: IGridviewPanel): void;\n}\n\nexport class GridviewComponent\n    extends BaseGrid<GridviewPanel>\n    implements IGridviewComponent\n{\n    private _options: Exclude<GridviewComponentOptions, 'orientation'>;\n    private _deserializer: IPanelDeserializer | undefined;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    get orientation(): Orientation {\n        return this.gridview.orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this.gridview.orientation = value;\n    }\n\n    get options(): GridviewComponentOptions {\n        return this._options;\n    }\n\n    get deserializer(): IPanelDeserializer | undefined {\n        return this._deserializer;\n    }\n\n    set deserializer(value: IPanelDeserializer | undefined) {\n        this._deserializer = value;\n    }\n\n    constructor(options: GridviewComponentOptions) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n\n        this._options = options;\n\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n\n    updateOptions(options: Partial<GridviewComponentUpdateOptions>): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation!;\n        }\n\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n\n    removePanel(panel: GridviewPanel): void {\n        this.removeGroup(panel);\n    }\n\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    public toJSON(): SerializedGridviewComponent {\n        const data = this.gridview.serialize() as {\n            height: number;\n            width: number;\n            orientation: Orientation;\n            root: SerializedGridObject<GridPanelViewState>;\n        };\n\n        return {\n            grid: data,\n            activePanel: this.activeGroup?.id,\n        };\n    }\n\n    setVisible(panel: GridviewPanel, visible: boolean): void {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n\n    setActive(panel: GridviewPanel): void {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n\n    focus(): void {\n        this.activeGroup?.focus();\n    }\n\n    public fromJSON(serializedGridview: SerializedGridviewComponent): void {\n        this.clear();\n\n        const { grid, activePanel } = serializedGridview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(\n                    data.id,\n                    data.component,\n                    this.options.components || {},\n                    this.options.frameworkComponents || {},\n                    this.options.frameworkComponentFactory\n                        ? {\n                              createComponent:\n                                  this.options.frameworkComponentFactory\n                                      .createComponent,\n                          }\n                        : undefined\n                );\n\n                queue.push(() =>\n                    view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    })\n                );\n\n                this._onDidAddGroup.fire(view);\n\n                this.registerPanel(view);\n\n                return view;\n            },\n        });\n\n        this.layout(width, height, true);\n\n        queue.forEach((f) => f());\n\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        const hasActiveGroup = this.activeGroup;\n\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n\n        this.gridview.clear();\n    }\n\n    movePanel(\n        panel: GridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void {\n        let relativeLocation: number[];\n\n        const removedPanel = this.gridview.remove(panel) as GridviewPanel;\n\n        const referenceGroup = this._groups.get(options.reference)?.value;\n\n        if (!referenceGroup) {\n            throw new Error(\n                `reference group ${options.reference} does not exist`\n            );\n        }\n\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        } else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(\n                this.gridview.orientation,\n                location,\n                target\n            );\n        }\n\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n\n    public addPanel(options: AddComponentOptions): IGridviewPanel {\n        let relativeLocation: number[] = options.location || [0];\n\n        if (options.position?.referencePanel) {\n            const referenceGroup = this._groups.get(\n                options.position.referencePanel\n            )?.value;\n\n            if (!referenceGroup) {\n                throw new Error(\n                    `reference group ${options.position.referencePanel} does not exist`\n                );\n            }\n\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            } else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    location,\n                    target\n                );\n            }\n        }\n\n        const view = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkComponentFactory\n                ? {\n                      createComponent:\n                          this.options.frameworkComponentFactory\n                              .createComponent,\n                  }\n                : undefined\n        );\n\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n\n        this.registerPanel(view);\n\n        this.doAddGroup(view, relativeLocation, options.size);\n\n        return view;\n    }\n\n    private registerPanel(panel: GridviewPanel): void {\n        const disposable = new CompositeDisposable(\n            panel.api.onDidFocusChange((event) => {\n                if (!event.isFocused) {\n                    return;\n                }\n                this._groups.forEach((groupItem) => {\n                    const group = groupItem.value;\n                    if (group !== panel) {\n                        group.setActive(false);\n                    } else {\n                        group.setActive(true);\n                    }\n                });\n            })\n        );\n\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n\n    public moveGroup(\n        referenceGroup: IGridPanelComponentView,\n        groupId: string,\n        target: Position\n    ): void {\n        const sourceGroup = this.getPanel(groupId);\n\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(\n            this.gridview.orientation,\n            referenceLocation,\n            target\n        );\n\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n\n            return;\n        }\n\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(\n            referenceGroup.element\n        );\n        const location = getRelativeLocation(\n            this.gridview.orientation,\n            updatedReferenceLocation,\n            target\n        );\n        this.doAddGroup(targetGroup, location);\n    }\n\n    removeGroup(group: GridviewPanel): void {\n        super.removeGroup(group);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\nimport {\n    IView,\n    LayoutPriority,\n    Orientation,\n    Sizing,\n    Splitview,\n} from './splitview';\nimport { SplitviewComponentOptions } from './options';\nimport { BaseComponentOptions } from '../panel/types';\nimport { Emitter, Event } from '../events';\nimport { SplitviewPanel, ISplitviewPanel } from './splitviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n\nexport interface SerializedSplitviewPanelData {\n    id: string;\n    component: string;\n    minimumSize?: number;\n    maximumSize?: number;\n    params?: { [index: string]: any };\n}\n\nexport interface SerializedSplitviewPanel {\n    snap?: boolean;\n    priority?: LayoutPriority;\n    data: SerializedSplitviewPanelData;\n    size: number;\n}\n\nexport interface SerializedSplitview {\n    orientation: Orientation;\n    size: number;\n    activeView?: string;\n    views: SerializedSplitviewPanel[];\n}\n\nexport interface AddSplitviewComponentOptions extends BaseComponentOptions {\n    index?: number;\n    minimumSize?: number;\n    maximumSize?: number;\n}\n\nexport type SplitviewComponentUpdateOptions = Pick<\n    SplitviewComponentOptions,\n    'orientation' | 'components' | 'frameworkComponents'\n>;\n\nexport interface ISplitviewComponent extends IDisposable {\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly height: number;\n    readonly width: number;\n    readonly length: number;\n    readonly orientation: Orientation;\n    readonly onDidAddView: Event<IView>;\n    readonly onDidRemoveView: Event<IView>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    readonly panels: SplitviewPanel[];\n    updateOptions(options: Partial<SplitviewComponentUpdateOptions>): void;\n    addPanel(options: AddSplitviewComponentOptions): ISplitviewPanel;\n    layout(width: number, height: number): void;\n    onDidLayoutChange: Event<void>;\n    toJSON(): SerializedSplitview;\n    fromJSON(serializedSplitview: SerializedSplitview): void;\n    focus(): void;\n    getPanel(id: string): ISplitviewPanel | undefined;\n    removePanel(panel: ISplitviewPanel, sizing?: Sizing): void;\n    setVisible(panel: ISplitviewPanel, visible: boolean): void;\n    movePanel(from: number, to: number): void;\n    clear(): void;\n}\n\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent\n    extends Resizable\n    implements ISplitviewComponent\n{\n    private _splitviewChangeDisposable = new MutableDisposable();\n    private _splitview!: Splitview;\n    private _activePanel: SplitviewPanel | undefined;\n    private _panels = new Map<string, IDisposable>();\n    private _options: SplitviewComponentOptions;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    private readonly _onDidAddView = new Emitter<IView>();\n    readonly onDidAddView = this._onDidAddView.event;\n\n    private readonly _onDidRemoveView = new Emitter<IView>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    private readonly _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange: Event<void> = this._onDidLayoutChange.event;\n\n    get panels(): SplitviewPanel[] {\n        return this.splitview.getViews();\n    }\n\n    get options(): SplitviewComponentOptions {\n        return this._options;\n    }\n\n    get length(): number {\n        return this._panels.size;\n    }\n\n    get orientation(): Orientation {\n        return this.splitview.orientation;\n    }\n\n    get splitview(): Splitview {\n        return this._splitview;\n    }\n\n    set splitview(value: Splitview) {\n        this._splitview = value;\n\n        this._splitviewChangeDisposable.value = new CompositeDisposable(\n            this._splitview.onDidSashEnd(() => {\n                this._onDidLayoutChange.fire(undefined);\n            }),\n            this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)),\n            this._splitview.onDidRemoveView((e) =>\n                this._onDidRemoveView.fire(e)\n            )\n        );\n    }\n\n    get minimumSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get height(): number {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n\n    get width(): number {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n\n    constructor(options: SplitviewComponentOptions) {\n        super(options.parentElement);\n\n        this._options = options;\n\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n\n        this.splitview = new Splitview(this.element, options);\n\n        this.addDisposables(\n            this._onDidAddView,\n            this._onDidLayoutfromJSON,\n            this._onDidRemoveView,\n            this._onDidLayoutChange\n        );\n    }\n\n    updateOptions(options: Partial<SplitviewComponentUpdateOptions>): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation!;\n        }\n\n        this.splitview.layout(\n            this.splitview.size,\n            this.splitview.orthogonalSize\n        );\n    }\n\n    focus(): void {\n        this._activePanel?.focus();\n    }\n\n    movePanel(from: number, to: number): void {\n        this.splitview.moveView(from, to);\n    }\n\n    setVisible(panel: SplitviewPanel, visible: boolean): void {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n\n    setActive(view: SplitviewPanel, skipFocus?: boolean): void {\n        this._activePanel = view;\n\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n                v.api._onDidActiveChange.fire({ isActive: false });\n                if (!skipFocus) {\n                    v.focus();\n                }\n            });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n\n    removePanel(panel: SplitviewPanel, sizing?: Sizing): void {\n        const item = this._panels.get(panel.id);\n\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n\n        item.dispose();\n\n        this._panels.delete(panel.id);\n\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n\n    getPanel(id: string): SplitviewPanel | undefined {\n        return this.panels.find((view) => view.id === id);\n    }\n\n    addPanel(options: AddSplitviewComponentOptions): SplitviewPanel {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n\n        const view = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkWrapper\n                ? {\n                      createComponent:\n                          this.options.frameworkWrapper.createComponent,\n                  }\n                : undefined\n        );\n\n        view.orientation = this.splitview.orientation;\n\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n\n        const size: Sizing | number =\n            typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index =\n            typeof options.index === 'number' ? options.index : undefined;\n\n        this.splitview.addView(view, size, index);\n\n        this.doAddView(view);\n        this.setActive(view);\n\n        return view;\n    }\n\n    layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.splitview.orientation === Orientation.HORIZONTAL\n                ? [width, height]\n                : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n\n    private doAddView(view: SplitviewPanel): void {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n\n        this._panels.set(view.id, disposable);\n    }\n\n    toJSON(): SerializedSplitview {\n        const views: SerializedSplitviewPanel[] = this.splitview\n            .getViews<SplitviewPanel>()\n            .map((view, i) => {\n                const size = this.splitview.getViewSize(i);\n                return {\n                    size,\n                    data: view.toJSON(),\n                    snap: !!view.snap,\n                    priority: view.priority,\n                };\n            });\n\n        return {\n            views,\n            activeView: this._activePanel?.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n\n    fromJSON(serializedSplitview: SerializedSplitview): void {\n        this.clear();\n\n        const { views, orientation, size, activeView } = serializedSplitview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n\n                    const panel = createComponent(\n                        data.id,\n                        data.component,\n                        this.options.components || {},\n                        this.options.frameworkComponents || {},\n                        this.options.frameworkWrapper\n                            ? {\n                                  createComponent:\n                                      this.options.frameworkWrapper\n                                          .createComponent,\n                              }\n                            : undefined\n                    );\n\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n\n                    panel.orientation = orientation;\n\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n\n        this.layout(width, height);\n\n        queue.forEach((f) => f());\n\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n\n        this._panels.clear();\n\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n\n    dispose(): void {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n\n        this._panels.clear();\n\n        const views = this.splitview.getViews();\n\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n\n        for (const view of views) {\n            view.dispose();\n        }\n\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { PanelUpdateEvent } from '../panel/types';\nimport { IPaneHeaderPart, PanePanelInitParameter } from './paneviewPanel';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\n\nexport class DefaultHeader\n    extends CompositeDisposable\n    implements IPaneHeaderPart\n{\n    private readonly _expandedIcon = createExpandMoreButton();\n    private readonly _collapsedIcon = createChevronRightButton();\n    private readonly disposable = new MutableDisposable();\n    private readonly _element: HTMLElement;\n    private readonly _content: HTMLElement;\n    private readonly _expander: HTMLElement;\n    private apiRef: { api: PaneviewPanelApiImpl | null } = { api: null };\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n\n        this.addDisposables(\n            addDisposableListener(this._element, 'click', () => {\n                this.apiRef.api?.setExpanded(!this.apiRef.api.isExpanded);\n            })\n        );\n    }\n\n    init(params: PanePanelInitParameter & { api: PaneviewPanelApiImpl }): void {\n        this.apiRef.api = params.api;\n\n        this._content.textContent = params.title;\n\n        this.updateIcon();\n\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n\n    private updateIcon(): void {\n        const isExpanded = !!this.apiRef.api?.isExpanded;\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        } else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n\n    update(_params: PanelUpdateEvent): void {\n        //\n    }\n\n    dispose(): void {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter, Event } from '../events';\nimport {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\nimport { LayoutPriority, Orientation, Sizing } from '../splitview/splitview';\nimport { PaneviewComponentOptions } from './options';\nimport { Paneview } from './paneview';\nimport {\n    IPaneBodyPart,\n    IPaneHeaderPart,\n    PaneviewPanel,\n    IPaneviewPanel,\n} from './paneviewPanel';\nimport {\n    DraggablePaneviewPanel,\n    PaneviewDropEvent,\n} from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { PaneTransfer } from '../dnd/dataTransfer';\nimport { Resizable } from '../resizable';\n\nconst nextLayoutId = sequentialNumberGenerator();\n\nexport interface PaneviewDndOverlayEvent {\n    nativeEvent: DragEvent;\n    panel: IPaneviewPanel;\n    getData: () => PaneTransfer | undefined;\n}\n\nexport interface SerializedPaneviewPanel {\n    snap?: boolean;\n    priority?: LayoutPriority;\n    minimumSize?: number;\n    maximumSize?: number;\n    data: {\n        id: string;\n        component: string;\n        title: string;\n        headerComponent?: string;\n        params?: { [index: string]: any };\n    };\n    size: number;\n    expanded?: boolean;\n}\n\nexport interface SerializedPaneview {\n    size: number;\n    views: SerializedPaneviewPanel[];\n}\n\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(\n        private readonly options: {\n            id: string;\n            component: string;\n            headerComponent: string | undefined;\n            body: IPaneBodyPart;\n            header: IPaneHeaderPart;\n            orientation: Orientation;\n            isExpanded: boolean;\n            disableDnd: boolean;\n            accessor: IPaneviewComponent;\n        }\n    ) {\n        super(\n            options.accessor,\n            options.id,\n            options.component,\n            options.headerComponent,\n            options.orientation,\n            options.isExpanded,\n            options.disableDnd\n        );\n    }\n\n    getBodyComponent() {\n        return this.options.body;\n    }\n\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\n\nexport interface AddPaneviewComponentOptions {\n    id: string;\n    component: string;\n    headerComponent?: string;\n    params?: {\n        [key: string]: any;\n    };\n    minimumBodySize?: number;\n    maximumBodySize?: number;\n    isExpanded?: boolean;\n    title: string;\n    index?: number;\n    size?: number;\n}\n\nexport interface IPaneviewComponent extends IDisposable {\n    readonly id: string;\n    readonly width: number;\n    readonly height: number;\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly panels: IPaneviewPanel[];\n    readonly options: PaneviewComponentOptions;\n    readonly onDidAddView: Event<PaneviewPanel>;\n    readonly onDidRemoveView: Event<PaneviewPanel>;\n    readonly onDidDrop: Event<PaneviewDropEvent>;\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    addPanel(options: AddPaneviewComponentOptions): IPaneviewPanel;\n    layout(width: number, height: number): void;\n    toJSON(): SerializedPaneview;\n    fromJSON(serializedPaneview: SerializedPaneview): void;\n    focus(): void;\n    removePanel(panel: IPaneviewPanel): void;\n    getPanel(id: string): IPaneviewPanel | undefined;\n    movePanel(from: number, to: number): void;\n    updateOptions(options: Partial<PaneviewComponentOptions>): void;\n    clear(): void;\n}\n\nexport class PaneviewComponent extends Resizable implements IPaneviewComponent {\n    private readonly _id = nextLayoutId.next();\n    private _options: PaneviewComponentOptions;\n    private _disposable = new MutableDisposable();\n    private _viewDisposables = new Map<string, IDisposable>();\n    private _paneview!: Paneview;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    private readonly _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange: Event<void> = this._onDidLayoutChange.event;\n\n    private readonly _onDidDrop = new Emitter<PaneviewDropEvent>();\n    readonly onDidDrop: Event<PaneviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onDidAddView = new Emitter<PaneviewPanel>();\n    readonly onDidAddView = this._onDidAddView.event;\n\n    private readonly _onDidRemoveView = new Emitter<PaneviewPanel>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    get id(): string {\n        return this._id;\n    }\n\n    get panels(): PaneviewPanel[] {\n        return this.paneview.getPanes();\n    }\n\n    set paneview(value: Paneview) {\n        this._paneview = value;\n\n        this._disposable.value = new CompositeDisposable(\n            this._paneview.onDidChange(() => {\n                this._onDidLayoutChange.fire(undefined);\n            }),\n            this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)),\n            this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e))\n        );\n    }\n\n    get paneview(): Paneview {\n        return this._paneview;\n    }\n\n    get minimumSize(): number {\n        return this.paneview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.paneview.maximumSize;\n    }\n\n    get height(): number {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n\n    get width(): number {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n\n    get options(): PaneviewComponentOptions {\n        return this._options;\n    }\n\n    constructor(options: PaneviewComponentOptions) {\n        super(options.parentElement);\n\n        this.addDisposables(\n            this._onDidLayoutChange,\n            this._onDidLayoutfromJSON,\n            this._onDidDrop,\n            this._onDidAddView,\n            this._onDidRemoveView\n        );\n\n        this._options = options;\n\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n\n        this.addDisposables(this._disposable);\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    updateOptions(options: Partial<PaneviewComponentOptions>): void {\n        this._options = { ...this.options, ...options };\n    }\n\n    addPanel(options: AddPaneviewComponentOptions): IPaneviewPanel {\n        const body = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkWrapper\n                ? {\n                      createComponent:\n                          this.options.frameworkWrapper.body.createComponent,\n                  }\n                : undefined\n        );\n\n        let header: IPaneHeaderPart;\n\n        if (options.headerComponent) {\n            header = createComponent(\n                options.id,\n                options.headerComponent,\n                this.options.headerComponents || {},\n                this.options.headerframeworkComponents,\n                this.options.frameworkWrapper\n                    ? {\n                          createComponent:\n                              this.options.frameworkWrapper.header\n                                  .createComponent,\n                      }\n                    : undefined\n            );\n        } else {\n            header = new DefaultHeader();\n        }\n\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n\n        this.doAddPanel(view);\n\n        const size: Sizing | number =\n            typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index =\n            typeof options.index === 'number' ? options.index : undefined;\n\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n\n        this.paneview.addPane(view, size, index);\n\n        view.orientation = this.paneview.orientation;\n\n        return view;\n    }\n\n    removePanel(panel: PaneviewPanel): void {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n\n        this.doRemovePanel(panel);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.paneview.moveView(from, to);\n    }\n\n    getPanel(id: string): PaneviewPanel | undefined {\n        return this.panels.find((view) => view.id === id);\n    }\n\n    layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.paneview.orientation === Orientation.HORIZONTAL\n                ? [width, height]\n                : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n\n    toJSON(): SerializedPaneview {\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n                ? undefined\n                : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        const views: SerializedPaneviewPanel[] = this.paneview\n            .getPanes()\n            .map((view, i) => {\n                const size = this.paneview.getViewSize(i);\n                return {\n                    size,\n                    data: view.toJSON(),\n                    minimumSize: minimum(view.minimumBodySize),\n                    maximumSize: maximum(view.maximumBodySize),\n                    expanded: view.isExpanded(),\n                };\n            });\n\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n\n    fromJSON(serializedPaneview: SerializedPaneview): void {\n        this.clear();\n\n        const { views, size } = serializedPaneview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n\n                    const body = createComponent(\n                        data.id,\n                        data.component,\n                        this.options.components || {},\n                        this.options.frameworkComponents || {},\n                        this.options.frameworkWrapper\n                            ? {\n                                  createComponent:\n                                      this.options.frameworkWrapper.body\n                                          .createComponent,\n                              }\n                            : undefined\n                    );\n\n                    let header: IPaneHeaderPart;\n\n                    if (data.headerComponent) {\n                        header = createComponent(\n                            data.id,\n                            data.headerComponent,\n                            this.options.headerComponents || {},\n                            this.options.headerframeworkComponents || {},\n                            this.options.frameworkWrapper\n                                ? {\n                                      createComponent:\n                                          this.options.frameworkWrapper.header\n                                              .createComponent,\n                                  }\n                                : undefined\n                        );\n                    } else {\n                        header = new DefaultHeader();\n                    }\n\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n\n                    this.doAddPanel(panel);\n\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n\n        this.layout(width, height);\n\n        queue.forEach((f) => f());\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n\n        this.paneview.dispose();\n    }\n\n    private doAddPanel(panel: PaneFramework): void {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n\n        this._viewDisposables.set(panel.id, disposable);\n    }\n\n    private doRemovePanel(panel: PaneviewPanel): void {\n        const disposable = this._viewDisposables.get(panel.id);\n\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n\n        this.paneview.dispose();\n    }\n}\n","import { ISerializableView, PanelViewInitParameters } from './options';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n} from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { LayoutPriority, Orientation } from './splitview';\nimport { FunctionOrValue } from '../types';\nimport { Emitter, Event } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n\nexport interface ISplitviewPanel\n    extends BasePanelViewExported<SplitviewPanelApiImpl> {\n    readonly priority: LayoutPriority | undefined;\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly snap: boolean;\n    readonly orientation: Orientation;\n}\n\nexport abstract class SplitviewPanel\n    extends BasePanelView<SplitviewPanelApiImpl>\n    implements ISerializableView, ISplitviewPanel\n{\n    private _evaluatedMinimumSize = 0;\n    private _evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n\n    private _minimumSize: FunctionOrValue<number> = 0;\n    private _maximumSize: FunctionOrValue<number> = Number.POSITIVE_INFINITY;\n    private _priority?: LayoutPriority;\n    private _snap = false;\n\n    private _orientation?: Orientation;\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    get priority(): LayoutPriority | undefined {\n        return this._priority;\n    }\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation!;\n    }\n\n    get minimumSize(): number {\n        const size =\n            typeof this._minimumSize === 'function'\n                ? this._minimumSize()\n                : this._minimumSize;\n\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n\n        return size;\n    }\n\n    get maximumSize(): number {\n        const size =\n            typeof this._maximumSize === 'function'\n                ? this._maximumSize()\n                : this._maximumSize;\n\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n\n        return size;\n    }\n\n    get snap(): boolean {\n        return this._snap;\n    }\n\n    constructor(id: string, componentName: string) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n\n        this.api.initialize(this);\n\n        this.addDisposables(\n            this._onDidChange,\n            this.api.onVisibilityChange((event) => {\n                const { isVisible } = event;\n                const { accessor } = this._params as PanelViewInitParameters;\n                accessor.setVisible(this, isVisible);\n            }),\n            this.api.onActiveChange(() => {\n                const { accessor } = this._params as PanelViewInitParameters;\n                accessor.setActive(this);\n            }),\n            this.api.onDidConstraintsChangeInternal((event) => {\n                if (\n                    typeof event.minimumSize === 'number' ||\n                    typeof event.minimumSize === 'function'\n                ) {\n                    this._minimumSize = event.minimumSize;\n                }\n                if (\n                    typeof event.maximumSize === 'number' ||\n                    typeof event.maximumSize === 'function'\n                ) {\n                    this._maximumSize = event.maximumSize;\n                }\n                this.updateConstraints();\n            }),\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({ size: event.size });\n            })\n        );\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    layout(size: number, orthogonalSize: number): void {\n        const [width, height] =\n            this.orientation === Orientation.HORIZONTAL\n                ? [size, orthogonalSize]\n                : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n\n    init(parameters: PanelViewInitParameters): void {\n        super.init(parameters);\n\n        this._priority = parameters.priority;\n\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n\n    toJSON() {\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n                ? undefined\n                : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        return {\n            ...super.toJSON(),\n            minimumSize: minimum(this.minimumSize),\n            maximumSize: maximum(this.maximumSize),\n        };\n    }\n\n    private updateConstraints(): void {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IFrameworkPart, IDockviewDisposable } from 'dockview-core';\n\nexport interface ReactPortalStore {\n    addPortal: (portal: React.ReactPortal) => IDockviewDisposable;\n}\n\ninterface IPanelWrapperProps {\n    component: React.FunctionComponent<{ [key: string]: any }>;\n    componentProps: { [key: string]: any };\n}\n\ninterface IPanelWrapperRef {\n    update: (props: { [key: string]: any }) => void;\n}\n\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge: React.ForwardRefRenderFunction<\n    IPanelWrapperRef,\n    IPanelWrapperProps\n> = (props, ref) => {\n    const [_, triggerRender] = React.useState<number>();\n    const _props = React.useRef<object>(props.componentProps);\n\n    React.useImperativeHandle(\n        ref,\n        () => ({\n            update: (componentProps: object) => {\n                _props.current = { ..._props.current, ...componentProps };\n                /**\n                 * setting a arbitrary piece of state within this component will\n                 * trigger a re-render.\n                 * we use this rather than updating through a prop since we can\n                 * pass a ref into the vanilla-js world.\n                 */\n                triggerRender(Date.now());\n            },\n        }),\n        []\n    );\n\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\n\nexport const ReactPartContext = React.createContext<{}>({});\n\nexport class ReactPart<P extends object, C extends object = {}>\n    implements IFrameworkPart\n{\n    private _initialProps: Record<string, any> = {};\n    private componentInstance?: IPanelWrapperRef;\n    private ref?: {\n        portal: React.ReactPortal;\n        disposable: IDockviewDisposable;\n    };\n    private disposed = false;\n\n    constructor(\n        private readonly parent: HTMLElement,\n        private readonly portalStore: ReactPortalStore,\n        private readonly component: React.FunctionComponent<P>,\n        private readonly parameters: P,\n        private readonly context?: C\n    ) {\n        this.createPortal();\n    }\n\n    public update(props: { [index: string]: any }) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = { ...this._initialProps, ...props };\n        } else {\n            this.componentInstance.update(props);\n        }\n    }\n\n    private createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error(\n                'Invalid Operation. dockview only supports React Functional Components.'\n            );\n        }\n\n        const bridgeComponent = React.createElement(\n            React.forwardRef(ReactComponentBridge),\n            {\n                component: this\n                    .component as unknown as React.FunctionComponent<{}>,\n                componentProps: this.parameters as unknown as {},\n                ref: (element: IPanelWrapperRef) => {\n                    this.componentInstance = element;\n\n                    if (Object.keys(this._initialProps).length > 0) {\n                        this.componentInstance.update(this._initialProps);\n                        this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                    }\n                },\n            }\n        );\n\n        const node = this.context\n            ? React.createElement(\n                  ReactPartContext.Provider,\n                  { value: this.context },\n                  bridgeComponent\n              )\n            : bridgeComponent;\n\n        const portal = ReactDOM.createPortal(\n            node,\n            this.parent,\n            uniquePortalKeyGenerator.next()\n        );\n\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n\n    public dispose() {\n        this.ref?.disposable.dispose();\n        this.disposed = true;\n    }\n}\n\ntype PortalLifecycleHook = () => [\n    React.ReactPortal[],\n    (portal: React.ReactPortal) => IDockviewDisposable\n];\n\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle: PortalLifecycleHook = () => {\n    const [portals, setPortals] = React.useState<React.ReactPortal[]>([]);\n\n    React.useDebugValue(`Portal count: ${portals.length}`);\n\n    const addPortal = React.useCallback((portal: React.ReactPortal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error(\n                        'invalid operation: resource already disposed'\n                    );\n                }\n                disposed = true;\n                setPortals((existingPortals) =>\n                    existingPortals.filter((p) => p !== portal)\n                );\n            },\n        };\n    }, []);\n\n    return [portals, addPortal];\n};\n\n// it does the job...\nexport function isReactElement(\n    element: any | React.ReactElement\n): element is React.ReactElement {\n    return element?.type;\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IDockviewPanelProps } from '../dockview/dockview';\nimport {\n    DockviewEmitter,\n    DockviewEvent,\n    PanelUpdateEvent,\n    IContentRenderer,\n    GroupPanelContentPartInitParameters,\n} from 'dockview-core';\n\nexport class ReactPanelContentPart implements IContentRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IDockviewPanelProps>;\n\n    private readonly _onDidFocus = new DockviewEmitter<void>();\n    readonly onDidFocus: DockviewEvent<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new DockviewEmitter<void>();\n    readonly onDidBlur: DockviewEvent<void> = this._onDidBlur.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IDockviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        // TODO\n    }\n\n    public init(parameters: GroupPanelContentPartInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent) {\n        this.part?.update(event.params);\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    public dispose(): void {\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IGroupPanelBaseProps } from './dockview';\nimport {\n    PanelUpdateEvent,\n    ITabRenderer,\n    GroupPanelPartInitParameters,\n} from 'dockview-core';\n\nexport class ReactPanelHeaderPart implements ITabRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IGroupPanelBaseProps>;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IGroupPanelBaseProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    public init(parameters: GroupPanelPartInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this.part?.update(event.params);\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop - retrieval from api\n    }\n\n    public dispose(): void {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport {\n    PanelUpdateEvent,\n    DockviewGroupPanel,\n    GroupPanelPartInitParameters,\n    IWatermarkRenderer,\n    WatermarkRendererInitParameters,\n    DockviewApi,\n    IDockviewGroupPanel,\n} from 'dockview-core';\n\nexport interface IWatermarkPanelProps {\n    containerApi: DockviewApi;\n    group?: IDockviewGroupPanel;\n    close: () => void;\n}\n\nexport class ReactWatermarkPart implements IWatermarkRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IWatermarkPanelProps>;\n    private parameters: GroupPanelPartInitParameters | undefined;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IWatermarkPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    init(parameters: WatermarkRendererInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                group: parameters.group,\n                containerApi: parameters.containerApi,\n                close: () => {\n                    if (parameters.group) {\n                        parameters.containerApi.removeGroup(parameters.group);\n                    }\n                },\n            }\n        );\n    }\n\n    focus(): void {\n        // noop\n    }\n\n    update(params: PanelUpdateEvent): void {\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n\n        this.part?.update({ params: this.parameters?.params || {} });\n    }\n\n    layout(_width: number, _height: number): void {\n        // noop - retrieval from api\n    }\n\n    updateParentGroup(\n        _group: DockviewGroupPanel,\n        _isPanelVisible: boolean\n    ): void {\n        // noop\n    }\n\n    dispose(): void {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport {\n    IDockviewPanel,\n    DockviewCompositeDisposable,\n    DockviewMutableDisposable,\n    DockviewApi,\n    DockviewGroupPanel,\n    DockviewGroupPanelApi,\n    PanelUpdateEvent,\n} from 'dockview-core';\n\nexport interface IDockviewHeaderActionsProps {\n    api: DockviewGroupPanelApi;\n    containerApi: DockviewApi;\n    panels: IDockviewPanel[];\n    activePanel: IDockviewPanel | undefined;\n    isGroupActive: boolean;\n    group: DockviewGroupPanel;\n}\n\nexport class ReactHeaderActionsRendererPart {\n    private mutableDisposable = new DockviewMutableDisposable();\n    private _element: HTMLElement;\n    private _part?: ReactPart<IDockviewHeaderActionsProps>;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    get part(): ReactPart<IDockviewHeaderActionsProps> | undefined {\n        return this._part;\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        private readonly component: React.FunctionComponent<IDockviewHeaderActionsProps>,\n        private readonly reactPortalStore: ReactPortalStore,\n        private readonly _group: DockviewGroupPanel\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        // TODO\n    }\n\n    public init(parameters: {\n        containerApi: DockviewApi;\n        api: DockviewGroupPanelApi;\n    }): void {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(\n            this._group.model.onDidAddPanel(() => {\n                this.updatePanels();\n            }),\n            this._group.model.onDidRemovePanel(() => {\n                this.updatePanels();\n            }),\n            this._group.model.onDidActivePanelChange(() => {\n                this.updateActivePanel();\n            }),\n            parameters.api.onDidActiveChange(() => {\n                this.updateGroupActive();\n            })\n        );\n\n        this._part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n                panels: this._group.model.panels,\n                activePanel: this._group.model.activePanel,\n                isGroupActive: this._group.api.isActive,\n                group: this._group,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this._part?.update(event.params);\n    }\n\n    public dispose(): void {\n        this.mutableDisposable.dispose();\n        this._part?.dispose();\n    }\n\n    private updatePanels(): void {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n\n    private updateActivePanel(): void {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n\n    private updateGroupActive(): void {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport {\n    DockviewComponent,\n    DockviewDropEvent,\n    DockviewDndOverlayEvent,\n    GroupPanelFrameworkComponentFactory,\n    DockviewPanelApi,\n    DockviewApi,\n    IContentRenderer,\n    ITabRenderer,\n    DockviewGroupPanel,\n    IHeaderActionsRenderer,\n} from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\n\nimport { ReactPortalStore, usePortalsLifecycle } from '../react';\nimport { IWatermarkPanelProps, ReactWatermarkPart } from './reactWatermarkPart';\nimport { PanelCollection, PanelParameters } from '../types';\nimport {\n    IDockviewHeaderActionsProps,\n    ReactHeaderActionsRendererPart,\n} from './headerActionsRenderer';\n\nfunction createGroupControlElement(\n    component: React.FunctionComponent<IDockviewHeaderActionsProps> | undefined,\n    store: ReactPortalStore\n): ((groupPanel: DockviewGroupPanel) => IHeaderActionsRenderer) | undefined {\n    return component\n        ? (groupPanel: DockviewGroupPanel) => {\n              return new ReactHeaderActionsRendererPart(\n                  component,\n                  store,\n                  groupPanel\n              );\n          }\n        : undefined;\n}\n\nexport interface IGroupPanelBaseProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: DockviewPanelApi;\n    containerApi: DockviewApi;\n}\n\nexport type IDockviewPanelHeaderProps<\n    T extends { [index: string]: any } = any\n> = IGroupPanelBaseProps<T>;\n\nexport type IDockviewPanelProps<T extends { [index: string]: any } = any> =\n    IGroupPanelBaseProps<T>;\n\nexport interface DockviewReadyEvent {\n    api: DockviewApi;\n}\n\nexport interface IDockviewReactProps {\n    onReady: (event: DockviewReadyEvent) => void;\n    components: PanelCollection<IDockviewPanelProps>;\n    tabComponents?: PanelCollection<IDockviewPanelHeaderProps>;\n    watermarkComponent?: React.FunctionComponent<IWatermarkPanelProps>;\n    onDidDrop?: (event: DockviewDropEvent) => void;\n    showDndOverlay?: (event: DockviewDndOverlayEvent) => boolean;\n    hideBorders?: boolean;\n    className?: string;\n    disableAutoResizing?: boolean;\n    defaultTabComponent?: React.FunctionComponent<IDockviewPanelHeaderProps>;\n    rightHeaderActionsComponent?: React.FunctionComponent<IDockviewHeaderActionsProps>;\n    leftHeaderActionsComponent?: React.FunctionComponent<IDockviewHeaderActionsProps>;\n    singleTabMode?: 'fullwidth' | 'default';\n    disableFloatingGroups?: boolean;\n}\n\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\n\nexport const DockviewReact = React.forwardRef(\n    (props: IDockviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const dockviewRef = React.useRef<DockviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            if (!domRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const factory: GroupPanelFrameworkComponentFactory = {\n                content: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<IDockviewPanelProps>\n                    ): IContentRenderer => {\n                        return new ReactPanelContentPart(\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                tab: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<IDockviewPanelHeaderProps>\n                    ): ITabRenderer => {\n                        return new ReactPanelHeaderPart(\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                watermark: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<{}>\n                    ) => {\n                        return new ReactWatermarkPart(componentId, component, {\n                            addPortal,\n                        });\n                    },\n                },\n            };\n\n            const frameworkTabComponents = props.tabComponents || {};\n\n            if (props.defaultTabComponent) {\n                frameworkTabComponents[DEFAULT_REACT_TAB] =\n                    props.defaultTabComponent;\n            }\n\n            const dockview = new DockviewComponent({\n                parentElement: domRef.current,\n                frameworkComponentFactory: factory,\n                frameworkComponents: props.components,\n                frameworkTabComponents,\n                watermarkFrameworkComponent: props.watermarkComponent,\n                defaultTabComponent: props.defaultTabComponent\n                    ? DEFAULT_REACT_TAB\n                    : undefined,\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n                showDndOverlay: props.showDndOverlay,\n                createLeftHeaderActionsElement: createGroupControlElement(\n                    props.leftHeaderActionsComponent,\n                    { addPortal }\n                ),\n                createRightHeaderActionsElement: createGroupControlElement(\n                    props.rightHeaderActionsComponent,\n                    { addPortal }\n                ),\n                singleTabMode: props.singleTabMode,\n                disableFloatingGroups: props.disableFloatingGroups,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current;\n            dockview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new DockviewApi(dockview) });\n            }\n\n            dockviewRef.current = dockview;\n\n            return () => {\n                dockview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const disposable = dockviewRef.current.onDidDrop((event) => {\n                if (props.onDidDrop) {\n                    props.onDidDrop(event);\n                }\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.onDidDrop]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                watermarkFrameworkComponent: props.watermarkComponent,\n            });\n        }, [props.watermarkComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                showDndOverlay: props.showDndOverlay,\n            });\n        }, [props.showDndOverlay]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                frameworkTabComponents: props.tabComponents,\n            });\n        }, [props.tabComponents]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                disableFloatingGroups: props.disableFloatingGroups,\n            });\n        }, [props.disableFloatingGroups]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n\n            const frameworkTabComponents = props.tabComponents || {};\n\n            if (props.defaultTabComponent) {\n                frameworkTabComponents[DEFAULT_REACT_TAB] =\n                    props.defaultTabComponent;\n            }\n\n            dockviewRef.current.updateOptions({\n                defaultTabComponent: props.defaultTabComponent\n                    ? DEFAULT_REACT_TAB\n                    : undefined,\n                frameworkTabComponents,\n            });\n        }, [props.defaultTabComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                createRightHeaderActionsElement: createGroupControlElement(\n                    props.rightHeaderActionsComponent,\n                    { addPortal }\n                ),\n            });\n        }, [props.rightHeaderActionsComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                createLeftHeaderActionsElement: createGroupControlElement(\n                    props.leftHeaderActionsComponent,\n                    { addPortal }\n                ),\n            });\n        }, [props.leftHeaderActionsComponent]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\n\nexport const CloseButton = () => (\n    <svg\n        height=\"11\"\n        width=\"11\"\n        viewBox=\"0 0 28 28\"\n        aria-hidden={'false'}\n        focusable={false}\n        className=\"dockview-svg\"\n    >\n        <path d=\"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\"></path>\n    </svg>\n);\n\nexport const ExpandMore = () => {\n    return (\n        <svg\n            width=\"11\"\n            height=\"11\"\n            viewBox=\"0 0 24 15\"\n            aria-hidden={'false'}\n            focusable={false}\n            className=\"dockview-svg\"\n        >\n            <path d=\"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" />\n        </svg>\n    );\n};\n","import { IDockviewPanelHeaderProps } from './dockview';\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\n\nexport type IDockviewDefaultTabProps = IDockviewPanelHeaderProps &\n    React.DOMAttributes<HTMLDivElement>;\n\nexport const DockviewDefaultTab: React.FunctionComponent<IDockviewDefaultTabProps> =\n    ({ api, containerApi: _containerApi, params: _params, ...rest }) => {\n        const onClose = React.useCallback(\n            (event: React.MouseEvent<HTMLSpanElement>) => {\n                event.stopPropagation();\n                api.close();\n            },\n            [api]\n        );\n\n        const onClick = React.useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n                api.setActive();\n\n                if (rest.onClick) {\n                    rest.onClick(event);\n                }\n            },\n            [api, rest.onClick]\n        );\n\n        const iconClassname = React.useMemo(() => {\n            const cn = ['dockview-react-tab-action'];\n            return cn.join(',');\n        }, []);\n\n        return (\n            <div {...rest} onClick={onClick} className=\"dockview-react-tab\">\n                <span className=\"dockview-react-tab-title\">{api.title}</span>\n                <div className={iconClassname} onClick={onClose}>\n                    <CloseButton />\n                </div>\n            </div>\n        );\n    };\n","import {\n    SplitviewApi,\n    PanelViewInitParameters,\n    SplitviewPanel,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { ISplitviewPanelProps } from './splitview';\n\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(\n        id: string,\n        component: string,\n        private readonly reactComponent: React.FunctionComponent<ISplitviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        super(id, component);\n    }\n\n    getComponent(): ReactPart<ISplitviewPanelProps> {\n        return new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.reactComponent,\n            {\n                params: this._params?.params || {},\n                api: this.api,\n                containerApi: new SplitviewApi(\n                    (this._params as PanelViewInitParameters).accessor\n                ),\n            }\n        );\n    }\n}\n","import * as React from 'react';\nimport {\n    SplitviewApi,\n    SplitviewPanelApi,\n    ISplitviewComponent,\n    SplitviewComponent,\n    Orientation,\n} from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanelCollection, PanelParameters } from '../types';\nimport { ReactPanelView } from './view';\n\nexport interface SplitviewReadyEvent {\n    api: SplitviewApi;\n}\n\nexport interface ISplitviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: SplitviewPanelApi;\n    containerApi: SplitviewApi;\n}\n\nexport interface ISplitviewReactProps {\n    orientation?: Orientation;\n    onReady: (event: SplitviewReadyEvent) => void;\n    components: PanelCollection<ISplitviewPanelProps>;\n    proportionalLayout?: boolean;\n    hideBorders?: boolean;\n    className?: string;\n    disableAutoResizing?: boolean;\n}\n\nexport const SplitviewReact = React.forwardRef(\n    (props: ISplitviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const splitviewRef = React.useRef<ISplitviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            const splitview = new SplitviewComponent({\n                parentElement: domRef.current!,\n                orientation: props.orientation || Orientation.HORIZONTAL,\n                frameworkComponents: props.components,\n                frameworkWrapper: {\n                    createComponent: (\n                        id: string,\n                        componentId,\n                        component: any\n                    ) => {\n                        return new ReactPanelView(id, componentId, component, {\n                            addPortal,\n                        });\n                    },\n                },\n                proportionalLayout:\n                    typeof props.proportionalLayout === 'boolean'\n                        ? props.proportionalLayout\n                        : true,\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current!;\n            splitview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new SplitviewApi(splitview) });\n            }\n\n            splitviewRef.current = splitview;\n\n            return () => {\n                splitview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!splitviewRef.current) {\n                return;\n            }\n            splitviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nSplitviewReact.displayName = 'SplitviewComponent';\n","import {\n    GridviewApi,\n    GridviewPanel,\n    GridviewInitParameters,\n    IFrameworkPart,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IGridviewPanelProps } from './gridview';\n\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(\n        id: string,\n        component: string,\n        private readonly reactComponent: React.FunctionComponent<IGridviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        super(id, component);\n    }\n\n    getComponent(): IFrameworkPart {\n        return new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.reactComponent,\n            {\n                params: this._params?.params || {},\n                api: this.api,\n                containerApi: new GridviewApi(\n                    (this._params as GridviewInitParameters).accessor\n                ),\n            }\n        );\n    }\n}\n","import * as React from 'react';\nimport {\n    GridviewComponent,\n    IGridviewComponent,\n    GridviewPanelApi,\n    Orientation,\n    GridviewApi,\n} from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { PanelCollection, PanelParameters } from '../types';\n\nexport interface GridviewReadyEvent {\n    api: GridviewApi;\n}\n\nexport interface IGridviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: GridviewPanelApi;\n    containerApi: GridviewApi;\n}\n\nexport interface IGridviewReactProps {\n    orientation?: Orientation;\n    onReady: (event: GridviewReadyEvent) => void;\n    components: PanelCollection<IGridviewPanelProps>;\n    hideBorders?: boolean;\n    className?: string;\n    proportionalLayout?: boolean;\n    disableAutoResizing?: boolean;\n}\n\nexport const GridviewReact = React.forwardRef(\n    (props: IGridviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const gridviewRef = React.useRef<IGridviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            if (!domRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const gridview = new GridviewComponent({\n                parentElement: domRef.current,\n                proportionalLayout:\n                    typeof props.proportionalLayout === 'boolean'\n                        ? props.proportionalLayout\n                        : true,\n                orientation: props.orientation || Orientation.HORIZONTAL,\n                frameworkComponents: props.components,\n                frameworkComponentFactory: {\n                    createComponent: (id: string, componentId, component) => {\n                        return new ReactGridPanelView(\n                            id,\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current;\n            gridview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new GridviewApi(gridview) });\n            }\n\n            gridviewRef.current = gridview;\n\n            return () => {\n                gridview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!gridviewRef.current) {\n                return;\n            }\n            gridviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nGridviewReact.displayName = 'GridviewComponent';\n","import * as React from 'react';\nimport {\n    PanelUpdateEvent,\n    IPaneBodyPart,\n    PanePanelComponentInitParameter,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IPaneviewPanelProps } from './paneview';\n\nexport class PanePanelSection implements IPaneBodyPart {\n    private _element: HTMLElement;\n    private part?: ReactPart<IPaneviewPanelProps>;\n\n    get element() {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IPaneviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n\n    public init(parameters: PanePanelComponentInitParameter): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                title: parameters.title,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n\n    public update(params: PanelUpdateEvent) {\n        this.part?.update(params.params);\n    }\n\n    public dispose() {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport {\n    PaneviewPanelApi,\n    PaneviewComponent,\n    IPaneviewComponent,\n    PaneviewDndOverlayEvent,\n    PaneviewApi,\n    PaneviewDropEvent,\n} from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nimport { PanelCollection, PanelParameters } from '../types';\n\nexport interface PaneviewReadyEvent {\n    api: PaneviewApi;\n}\n\nexport interface IPaneviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: PaneviewPanelApi;\n    containerApi: PaneviewApi;\n    title: string;\n}\n\nexport interface IPaneviewReactProps {\n    onReady: (event: PaneviewReadyEvent) => void;\n    components: PanelCollection<IPaneviewPanelProps>;\n    headerComponents?: PanelCollection<IPaneviewPanelProps>;\n    className?: string;\n    disableAutoResizing?: boolean;\n    disableDnd?: boolean;\n    showDndOverlay?: (event: PaneviewDndOverlayEvent) => boolean;\n    onDidDrop?(event: PaneviewDropEvent): void;\n}\n\nexport const PaneviewReact = React.forwardRef(\n    (props: IPaneviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const paneviewRef = React.useRef<IPaneviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            const createComponent = (\n                id: string,\n                _componentId: string,\n                component: any\n            ) =>\n                new PanePanelSection(id, component, {\n                    addPortal,\n                });\n\n            const paneview = new PaneviewComponent({\n                parentElement: domRef.current!,\n                frameworkComponents: props.components,\n                components: {},\n                headerComponents: {},\n                disableDnd: props.disableDnd,\n                headerframeworkComponents: props.headerComponents,\n                frameworkWrapper: {\n                    header: {\n                        createComponent,\n                    },\n                    body: {\n                        createComponent,\n                    },\n                },\n                showDndOverlay: props.showDndOverlay,\n            });\n\n            const api = new PaneviewApi(paneview);\n\n            const { clientWidth, clientHeight } = domRef.current!;\n            paneview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api });\n            }\n\n            paneviewRef.current = paneview;\n\n            return () => {\n                paneview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                headerframeworkComponents: props.headerComponents,\n            });\n        }, [props.headerComponents]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return () => {\n                    //\n                };\n            }\n\n            const paneview = paneviewRef.current;\n\n            const disposable = paneview.onDidDrop((event) => {\n                if (props.onDidDrop) {\n                    props.onDidDrop({\n                        ...event,\n                        api: new PaneviewApi(paneview),\n                    });\n                }\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.onDidDrop]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                showDndOverlay: props.showDndOverlay,\n            });\n        }, [props.showDndOverlay]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: { id: string }) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            <ThemePicker />\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton id={sandboxId} />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heroBanner\":\"heroBanner_qdFl\",\"buttons\":\"buttons_AeoN\"};","// extracted by mini-css-extract-plugin\nexport default {\"features\":\"features_t9lD\",\"featureSvg\":\"featureSvg_GfXr\"};","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\n\ntype FeatureItem = {\n    title: string;\n    Svg: React.ComponentType<React.ComponentProps<'svg'>>;\n    description: JSX.Element;\n};\n\nconst FeatureList: FeatureItem[] = [\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_grid_3.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Serializable Layouts\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Add and remove panels using the provided api or use the\n                        serialziation methods to persist layouts.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Customizable Theme\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Adjust a number of provided CSS Properties for a simple\n                        change or target specific classes for a more customized\n                        approach.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Choose Your Control\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Choose from a simple splitview, gridview, collapsable\n                        panes or a full docking solution. Combine multiple for\n                        complex layouts.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_grid_4.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Rich Feature Control\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Customize header features to add additional icons and\n                        more as well as custom tab rendering.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Floating Group Support\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Built-in support for floating groups with a supporting\n                        api for progmatic control.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">Drag And Drop</h3>\n                    <p className=\"feature-banner-content\">\n                        Drag and Drop tab to position your layout as well as\n                        interacting with external drag events.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_splash_2.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">Zero Dependencies</h3>\n                    <p className=\"feature-banner-content\">\n                        Zero dependencies, that's all.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Code Quality and Transparency\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        All of the code is run through Sonarcloud Code Analysis,\n                        which along with the source code and high test coverage\n                        can be viewed from the Github page.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        React or Vanilla TypeScript\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Exposes native support for both ReactJS components and\n                        Vanilla TypeScript.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n];\n\nfunction Feature({ title, Svg, description }: FeatureItem) {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                margin: 'auto',\n                justifyContent: 'center',\n            }}\n            className=\"dockview-feature\"\n        >\n            <Svg className={styles.featureSvg} role=\"img\" />\n            <div style={{ maxWidth: '400px', padding: '0px 20px' }}>\n                <h3>{title}</h3>\n                {description}\n            </div>\n        </div>\n    );\n}\n\nexport default function HomepageFeatures(): JSX.Element {\n    return (\n        <section className={styles.features}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {FeatureList.map((props, idx) => (\n                        <Feature key={idx} {...props} />\n                    ))}\n                </div>\n            </div>\n        </section>\n    );\n}\n","import * as React from 'react';\n\nexport const BrowserHeader = () => (\n    <div\n        style={{\n            height: '30px',\n            borderBottom: '1px solid #BABABA',\n            backgroundColor: '#DCDCDC',\n            borderTopLeftRadius: '15px',\n            borderTopRightRadius: '15px',\n            padding: '0px 15px',\n            display: 'flex',\n            alignItems: 'center',\n        }}\n    >\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#FD605E',\n                marginRight: 7,\n            }}\n        />\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#FBBC3F',\n                marginRight: 7,\n            }}\n        />\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#34C942',\n                marginRight: 7,\n            }}\n        />\n    </div>\n);\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import {\n    DockviewDefaultTab,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelHeaderProps,\n    IDockviewPanelProps,\n    IDockviewHeaderActionsProps,\n} from 'dockview';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { v4 } from 'uuid';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst headerComponents = {\n    default: (props: IDockviewPanelHeaderProps) => {\n        const onContextMenu = (event: React.MouseEvent) => {\n            event.preventDefault();\n            alert('context menu');\n        };\n        return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n    },\n};\n\nconst Popover = (props: {\n    children: React.ReactNode;\n    position?: { x: number; y: number };\n    close: () => void;\n}) => {\n    const uuid = React.useMemo(() => v4(), []);\n\n    React.useEffect(() => {\n        const listener = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                props.close();\n            }\n        };\n        const listener2 = (event: MouseEvent) => {\n            let target = event.target;\n\n            while (target) {\n                if (target instanceof HTMLElement) {\n                    if (target.classList.contains(uuid)) {\n                        return;\n                    } else {\n                        target = target.parentElement;\n                    }\n                } else {\n                    target = null;\n                }\n            }\n\n            props.close();\n        };\n        window.addEventListener('keypress', listener);\n        window.addEventListener('mousedown', listener2);\n\n        return () => {\n            window.removeEventListener('keypress', listener);\n            window.removeEventListener('mousedown', listener2);\n        };\n    }, [props.close, uuid]);\n\n    if (!props.position) {\n        return null;\n    }\n\n    return ReactDOM.createPortal(\n        <div\n            className={uuid}\n            style={{\n                position: 'absolute',\n                top: props.position.y,\n                left: props.position.x,\n                background: 'white',\n                border: '1px solid black',\n                zIndex: 99,\n                padding: '10px',\n            }}\n        >\n            {props.children}\n        </div>,\n        document.body\n    );\n};\n\nconst Icon = (props: {\n    icon: string;\n    onClick?: (event: React.MouseEvent) => void;\n}) => {\n    return (\n        <div className=\"action\" onClick={props.onClick}>\n            <span\n                style={{ fontSize: 'inherit' }}\n                className=\"material-symbols-outlined\"\n            >\n                {props.icon}\n            </span>\n        </div>\n    );\n};\n\nconst Button = () => {\n    const [position, setPosition] = React.useState<\n        { x: number; y: number } | undefined\n    >(undefined);\n\n    const close = () => setPosition(undefined);\n\n    const onClick = (event: React.MouseEvent) => {\n        setPosition({ x: event.pageX, y: event.pageY });\n    };\n\n    return (\n        <>\n            <Icon icon=\"more_vert\" onClick={onClick} />\n            {position && (\n                <Popover position={position} close={close}>\n                    <div>hello</div>\n                </Popover>\n            )}\n        </>\n    );\n};\n\nconst groupControlsComponents = {\n    panel_1: () => {\n        return <Icon icon=\"file_download\" />;\n    },\n};\n\nconst RightControls = (props: IDockviewHeaderActionsProps) => {\n    const Component = React.useMemo(() => {\n        if (!props.isGroupActive || !props.activePanel) {\n            return null;\n        }\n\n        return groupControlsComponents[props.activePanel.id];\n    }, [props.isGroupActive, props.activePanel]);\n\n    return (\n        <div\n            className=\"group-control\"\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 8px',\n                height: '100%',\n                color: 'var(--dv-activegroup-visiblepanel-tab-color)',\n            }}\n        >\n            {props.isGroupActive && <Icon icon=\"star\" />}\n            {Component && <Component />}\n            <Button />\n        </div>\n    );\n};\n\nlet counter = 0;\n\nconst LeftControls = (props: IDockviewHeaderActionsProps) => {\n    const onClick = () => {\n        props.containerApi.addPanel({\n            id: `id_${Date.now().toString()}`,\n            component: 'default',\n            title: `Tab ${counter++}`,\n            position: {\n                referenceGroup: props.group,\n            },\n        });\n    };\n\n    return (\n        <div\n            className=\"group-control\"\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 8px',\n                height: '100%',\n                color: 'var(--dv-activegroup-visiblepanel-tab-color)',\n            }}\n        >\n            <Icon onClick={onClick} icon=\"add\" />\n        </div>\n    );\n};\n\nconst DockviewDemo = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            title: 'Panel 6',\n            position: { referencePanel: 'panel_4', direction: 'below' },\n        });\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            title: 'Panel 7',\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            title: 'Panel 8',\n            position: { referencePanel: 'panel_7', direction: 'within' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_9',\n            component: 'default',\n            title: 'Panel 9',\n            floating: { width: 450, height: 250 },\n        });\n\n        event.api.addPanel({\n            id: 'panel_10',\n            component: 'default',\n            title: 'Panel 10',\n            position: { referencePanel: 'panel_9' },\n        });\n\n        event.api.getPanel('panel_1')!.api.setActive();\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            defaultTabComponent={headerComponents.default}\n            rightHeaderActionsComponent={RightControls}\n            leftHeaderActionsComponent={LeftControls}\n            onReady={onReady}\n            className={props.theme || 'dockview-theme-abyss'}\n        />\n    );\n};\n\nexport default DockviewDemo;\n","import {\n    GridviewReact,\n    GridviewReadyEvent,\n    IGridviewPanelProps,\n    IPaneviewPanelProps,\n    PaneviewReact,\n    PaneviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst paneComponents = {\n    default: (props: IPaneviewPanelProps) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n    panes: (props: IGridviewPanelProps) => {\n        const onReady = (event: PaneviewReadyEvent) => {\n            event.api.addPanel({\n                id: 'pane_1',\n                component: 'default',\n                title: 'Pane 1',\n                isExpanded: false,\n            });\n\n            event.api.addPanel({\n                id: 'pane_2',\n                component: 'default',\n                title: 'Pane 2',\n                isExpanded: true,\n            });\n\n            event.api.addPanel({\n                id: 'pane_3',\n                component: 'default',\n                title: 'Pane 3',\n                isExpanded: true,\n            });\n\n            event.api.addPanel({\n                id: 'pane_4',\n                component: 'default',\n                title: 'Pane 4',\n                isExpanded: false,\n            });\n        };\n\n        return <PaneviewReact onReady={onReady} components={paneComponents} />;\n    },\n};\n\nconst DockviewDemo2 = (props: { theme?: string }) => {\n    const onReady = (event: GridviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panes',\n            component: 'panes',\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            position: { referencePanel: 'panes', direction: 'right' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: { referencePanel: 'panel_1', direction: 'below' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: { referencePanel: 'panel_2', direction: 'below' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n    };\n\n    return (\n        <GridviewReact\n            onReady={onReady}\n            components={components}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default DockviewDemo2;\n","import useBaseUrl from '@docusaurus/useBaseUrl';\nimport HomepageFeatures from '.';\nimport { BrowserHeader } from '../ui/browserHeader';\nimport { MultiFrameworkContainer } from '../ui/container';\nimport * as React from 'react';\nimport DockviewDemo from '@site/sandboxes/demo-dockview/src/app';\nimport DockviewDemo2 from '@site/sandboxes/dockview-app/src/app';\n\nexport const Introduction = () => {\n    return (\n        <>\n            <HomepageFeatures />\n            <div\n                id=\"live-demo\"\n                style={{\n                    height: '30px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '1.5em',\n                    fontWeight: 'bold',\n                }}\n            >\n                <img src={useBaseUrl('/img/dockview_logo.svg')} height={30} />\n                <span style={{ paddingLeft: '8px' }}>Dockview Live Demos</span>\n            </div>\n            <div style={{ padding: '20px' }}>\n                <BrowserHeader />\n                <MultiFrameworkContainer\n                    height={500}\n                    sandboxId=\"demo-dockview\"\n                    react={DockviewDemo}\n                />\n            </div>\n            <div style={{ padding: '20px' }}>\n                <BrowserHeader />\n                <MultiFrameworkContainer\n                    height={500}\n                    react={DockviewDemo2}\n                    sandboxId=\"dockview-app\"\n                />\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport Layout from '@theme/Layout';\nimport Link from '@docusaurus/Link';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport styles from './index.module.css';\nimport HomepageFeatures from '@site/src/components/HomepageFeatures';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport DockviewDemo from '@site/sandboxes/demo-dockview/src/app';\nimport DockviewDemo2 from '@site/sandboxes/dockview-app/src/app';\nimport { MultiFrameworkContainer } from '../components/ui/container';\nimport { BrowserHeader } from '../components/ui/browserHeader';\nimport './index.scss';\nimport { Introduction } from '../components/HomepageFeatures/introduction';\n\nfunction HomepageHeader() {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <header className={clsx('hero hero--primary', styles.heroBanner)}>\n            <div className=\"container\">\n                <h1 className=\"hero__title\">{siteConfig.title}</h1>\n                <p className=\"hero__subtitle\">{siteConfig.tagline}</p>\n                <div className={styles.buttons}>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={useBaseUrl('docs/')}\n                    >\n                        Get Started\n                    </Link>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nfunction HomepageHeader2() {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <header className={clsx('hero hero--primary', styles.heroBanner)}>\n            <div className=\"container homepage\">\n                <img src={useBaseUrl('/img/dockview_logo.svg')} />\n                <h1 className=\"hero__title\">{siteConfig.title}</h1>\n                {/* <div className=\"badge-container\">\n                            <img src=\"https://badge.fury.io/js/dockview.svg\" />\n                            <img src=\"https://github.com/mathuo/dockview/workflows/CI/badge.svg\" />\n                            <img src=\"https://sonarcloud.io/api/project_badges/measure?project=mathuo_dockview&metric=coverage\" />\n                            <img src=\"https://sonarcloud.io/api/project_badges/measure?project=mathuo_dockview&metric=alert_status\" />\n                        </div> */}\n                <p className=\"hero__subtitle\">{siteConfig.tagline}</p>\n                <div className={styles.buttons}>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={useBaseUrl('docs/')}\n                    >\n                        Get Started\n                    </Link>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={'#live-demo'}\n                    >\n                        Live Demo\n                    </Link>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default function Home(): JSX.Element {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <Layout\n            title={`${siteConfig.tagline}`}\n            description={`${siteConfig.description}`}\n        >\n            <HomepageHeader2 />\n            <main className=\"container\">\n                <Introduction />\n            </main>\n        </Layout>\n    );\n}\n"],"names":["_rect","_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","_path14","_path15","_path16","_path17","_rect2","_rect3","_rect4","_rect5","_rect6","_rect7","_rect8","_rect9","_rect10","_rect11","_rect12","_rect13","_rect14","_rect15","_rect16","_path18","_path19","_path20","_path21","_path22","_path23","_rect17","_rect18","_path24","_path25","_path26","_path27","_rect19","_rect20","_path28","_path29","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","width","height","viewBox","fill","xmlns","id","rx","d","x","y","fillOpacity","stroke","fillRule","clipRule","strokeDasharray","_circle","_circle2","_circle3","_circle4","_circle5","_circle6","_circle7","_circle8","_circle9","_g","_path30","_path31","_rect21","_path32","_path33","_path34","cx","cy","r","transform","opacity","_rect22","_rect23","BrowserOnly","children","fallback","useIsBrowser","React","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","_len","Array","_key","listener","disposables","map","child","dispose","forEach","Stacktrace","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","options","_listeners","_disposed","event","_event","replay","_last","create","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","isDisposed","_isDisposed","args","_len2","_key2","_disposables","addDisposables","_len3","_key3","arg","MutableDisposable","_disposable","disposable","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","from","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","_acceptedTargetZonesSet","Set","acceptedTargetZones","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","setState","stopPropagation","nativeEvent","setTargetZones","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","_b","overlayModel","_d","_c","translate","overlayType","isPercentage","activationSize","maybeNumber","_f","_e","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","focusTracker","_width","_height","closePanel","DockviewDropTargets","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","shiftKey","isFloating","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","tab","selectedIndex","findIndex","singleTabMode","tabContainer","voidContainer","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","isFloatingGroupsEnabled","isFloatingWithOnePanel","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","contentContainer","_isFloating","dropTarget","groupPanel","_onDidFloatingStateChange","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","Resizable","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","watchElementResize","entry","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","DockviewGroupPanelApiImpl","_group","onDidFloatingStateChange","moveTo","moveGroupOrPanel","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_api","_visible","isOneGroup","bringElementToFront","Overlay","setupOverlay","setupResize","renderWithinBoundaryConditions","setBounds","bounds","containerRect","overlayRect","xOffset","minimumInViewportWidth","yOffset","minimumInViewportHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","floatingGroups","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","orthogonalize","createGroup","removeEmptyGroup","skipRemoveGroup","overlayLeft","overlayTop","floatingGroupPanel","t","createGroupAtLocation","hasOrientationChanged","floating","includePanel","collection","floats","floatingGroup","grid","isArray","createGroupFromSerializedState","serializedFloatingGroups","serializedFloatingGroup","hasActiveGroup","hasActivePanel","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","_splitviewChangeDisposable","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","onReady","CloseButton","focusable","DockviewDefaultTab","_containerApi","__rest","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","url","ThemePicker","alignItems","href","fontWeight","paddingRight","Spinner","Container","injectVanillaJS","sandboxId","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","theme","setTheme","localStorage","getItem","setItem","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","defaultValue","useLocalStorageItem","typescript","background","zIndex","justifyContent","react","margin","cursor","border","MultiFrameworkContainer","FeatureList","Svg","require","description","Feature","flexWrap","featureSvg","role","maxWidth","HomepageFeatures","features","idx","BrowserHeader","borderBottom","borderTopLeftRadius","borderTopRightRadius","randomUUID","crypto","getRandomValues","rnds8","Uint8Array","rng","byteToHex","unsafeStringify","toLowerCase","buf","rnds","random","default","onContextMenu","alert","Popover","uuid","v4","listener2","Icon","icon","Button","setPosition","pageX","pageY","groupControlsComponents","panel_1","RightControls","counter","LeftControls","paneComponents","panes","Introduction","paddingLeft","DockviewDemo","DockviewDemo2","HomepageHeader2","siteConfig","useDocusaurusContext","clsx","heroBanner","tagline","buttons","Link","Home","Layout"],"sourceRoot":""}