{"version":3,"file":"assets/js/9944.3676a5b9.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/dnd-events/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn((_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        this.removeDropTarget();\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisibile':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const _onDidFocus = panel.view.content.onDidFocus;\n            const _onDidBlur = panel.view.content.onDidBlur;\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisibile') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent, } from '../../dockviewGroupPanelModel';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, { kind: 'tab' }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this._kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionsElement) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onUpdateParameters, this._onWillFocus, this._onWillVisibilityChange, this._onUpdateParameters);\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\n// TODO find a better way to initialize and avoid needing null checks\nconst NOT_INITIALIZED_MESSAGE = 'DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id);\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.addDisposables(this._onDidLocationChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group, accessor) {\n        super(panel.id);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            if (!event.isVisible && this.isVisible) {\n                this._onDidVisibilityChange.fire(event);\n            }\n            else if (event.isVisible &&\n                !this.isVisible &&\n                this.group.model.isPanelActive(this.panel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a, _b;\n        return createComponent(id, componentName, (_a = this.accessor.options.components) !== null && _a !== void 0 ? _a : {}, this.accessor.options.frameworkComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a, _b;\n        if (componentName) {\n            return createComponent(id, componentName, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n        }\n        else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(id, this.accessor.options.defaultTabComponent, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisibile';\n    }\n    constructor(options) {\n        var _a, _b;\n        super({\n            proportionalLayout: true,\n            orientation: (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    if (position === 'center' && this.gridview.length !== 0) {\n                        /**\n                         * for external events only show the four-corner drag overlays, disable\n                         * the center position so that external drag events can fall through to the group\n                         * and panel drop target handlers\n                         */\n                        return false;\n                    }\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: 'edge',\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_b = this.options.rootOverlayModel) !== null && _b !== void 0 ? _b : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId(); //item.id;\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else {\n                    if (this.getPanel(group.id)) {\n                        const removedGroup = this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                        });\n                        removedGroup.model.renderContainer =\n                            this.overlayRenderContainer;\n                        removedGroup.model.location = { type: 'grid' };\n                        returnedGroup = removedGroup;\n                    }\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error(err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            group.model.openPanel(item, { skipSetGroupActive: true });\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: !!popoutReferenceGroup,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.height, group.width);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_orientation = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        const changed_floatingGroupBounds = options.floatingGroupBounds !== undefined &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = options.rootOverlayModel !== undefined &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(referenceGroup);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const o = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n            this.doSetGroupAndPanelActive(group);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup(options);\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart, } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent({\n            parentElement: domRef.current,\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkTabComponents,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n            disableFloatingGroups: props.disableFloatingGroups,\n            floatingGroupBounds: props.floatingGroupBounds,\n            defaultRenderer: props.defaultRenderer,\n            debug: props.debug,\n            rootOverlayModel: props.rootOverlayModel,\n            locked: props.locked,\n            disableDnd: props.disableDnd,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.locked = !!props.locked;\n    }, [props.locked]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableDnd: props.disableDnd,\n        });\n    }, [props.disableDnd]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            floatingGroupBounds: props.floatingGroupBounds,\n        });\n    }, [props.floatingGroupBounds]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableFloatingGroups: props.disableFloatingGroups,\n        });\n    }, [props.disableFloatingGroups]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            rootOverlayModel: props.rootOverlayModel,\n        });\n    }, [props.rootOverlayModel]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-default-tab\" }, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-react-tab-close-btn\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst Default = (props: IDockviewPanelProps) => {\n    return (\n        <div style={{ height: '100%' }}>\n            <div>{props.api.title}</div>\n        </div>\n    );\n};\n\nconst components = {\n    default: Default,\n};\n\nconst Component = (props: { theme?: string }) => {\n    const [disablePanelDrag, setDisablePanelDrag] =\n        React.useState<boolean>(false);\n    const [disableGroupDrag, setDisableGroupDrag] =\n        React.useState<boolean>(false);\n    const [disableOverlay, setDisableOverlay] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        const disposables = [\n            api.onWillDragPanel((e) => {\n                if (!disablePanelDrag) {\n                    return;\n                }\n                e.nativeEvent.preventDefault();\n            }),\n\n            api.onWillDragGroup((e) => {\n                if (!disableGroupDrag) {\n                    return;\n                }\n                e.nativeEvent.preventDefault();\n            }),\n            api.onWillShowOverlay((e) => {\n                console.log(e);\n\n                if (!disableOverlay) {\n                    return;\n                }\n\n                e.preventDefault();\n            }),\n\n            api.onWillDrop((e) => {\n                //\n            }),\n\n            api.onDidDrop((e) => {\n                //\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => {\n                disposable.dispose();\n            });\n        };\n    }, [api, disablePanelDrag, disableGroupDrag, disableOverlay]);\n\n    const onReady = (event: DockviewReadyEvent) => {\n        setApi(event.api);\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                direction: 'right',\n                referencePanel: 'panel_1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                direction: 'below',\n                referencePanel: 'panel_1',\n            },\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n        });\n    };\n\n    return (\n        <div\n            style={{ display: 'flex', flexDirection: 'column', height: '100%' }}\n        >\n            <div>\n                <button\n                    onClick={() => setDisablePanelDrag(!disablePanelDrag)}\n                >{`Panel Drag: ${\n                    disablePanelDrag ? 'disabled' : 'enabled'\n                }`}</button>\n                <button\n                    onClick={() => setDisableGroupDrag(!disableGroupDrag)}\n                >{`Group Drag: ${\n                    disableGroupDrag ? 'disabled' : 'enabled'\n                }`}</button>\n                <button\n                    onClick={() => setDisableOverlay(!disableOverlay)}\n                >{`Overlay: ${\n                    disableOverlay ? 'disabled' : 'enabled'\n                }`}</button>\n            </div>\n            <div style={{ flexGrow: 1 }}>\n                <DockviewReact\n                    className={`${props.theme || 'dockview-theme-abyss'}`}\n                    onReady={onReady}\n                    components={components}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Component;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","activeGroup","getGroupPanel","addGroup","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","moveToNext","moveToPrevious","maximizeGroup","hasMaximizedGroup","exitMaximizedGroup","onDidMaximizedGroupChange","addPopoutGroup","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","willShowOverlayEvent","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","accessor","tabIndex","dropTarget","shiftKey","show","display","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","focusTracker","openPanel","_width","_height","closePanel","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","draggable","dragHandler","setActive","isActive","setContent","part","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onWillDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","createPrefixHeaderActionsElement","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","_params","update","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","runEvents","createWatermarkComponent","showDndOverlay","willDropEvent","getKind","itemId","_c","Resizable","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","disableAutoResizing","_onDidLayoutChange","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","isVisible","isMaximizedGroup","doAddGroup","doRemoveGroup","get","skipActive","forceResize","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","_onDidTitleChange","onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","DockviewPanel","_title","_renderer","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","_ref","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","defaultRenderer","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","debug","updateWatermark","watermarkComponent","watermarkFrameworkComponent","_rootDropTarget","rootOverlayModel","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutUrl","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","floatingGroupBounds","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_orientation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","_jsx","disablePanelDrag","setDisablePanelDrag","disableGroupDrag","setDisableGroupDrag","disableOverlay","setDisableOverlay","setApi","log","_jsxs","flexDirection"],"sourceRoot":""}