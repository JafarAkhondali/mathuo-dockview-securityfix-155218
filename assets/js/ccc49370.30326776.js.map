{"version":3,"file":"assets/js/ccc49370.30326776.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/Metadata/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogPostPaginator(props) {\n  const {nextItem, prevItem} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.blog.post.paginator.navAriaLabel',\n        message: 'Blog post page navigation',\n        description: 'The ARIA label for the blog posts pagination',\n      })}>\n      {prevItem && (\n        <PaginatorNavLink\n          {...prevItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.newerPost\"\n              description=\"The blog post button label to navigate to the newer/previous post\">\n              Newer Post\n            </Translate>\n          }\n        />\n      )}\n      {nextItem && (\n        <PaginatorNavLink\n          {...nextItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.olderPost\"\n              description=\"The blog post button label to navigate to the older/next post\">\n              Older Post\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {PageMetadata} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostPageMetadata() {\n  const {assets, metadata} = useBlogPost();\n  const {title, description, date, tags, authors, frontMatter} = metadata;\n  const {keywords} = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <PageMetadata\n      title={title}\n      description={description}\n      keywords={keywords}\n      image={image}>\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"article:published_time\" content={date} />\n      {/* TODO double check those article meta array syntaxes, see https://ogp.me/#array */}\n      {authors.some((author) => author.url) && (\n        <meta\n          property=\"article:author\"\n          content={authors\n            .map((author) => author.url)\n            .filter(Boolean)\n            .join(',')}\n        />\n      )}\n      {tags.length > 0 && (\n        <meta\n          property=\"article:tag\"\n          content={tags.map((tag) => tag.label).join(',')}\n        />\n      )}\n    </PageMetadata>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {HtmlClassNameProvider, ThemeClassNames} from '@docusaurus/theme-common';\nimport {BlogPostProvider, useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport BlogPostPaginator from '@theme/BlogPostPaginator';\nimport BlogPostPageMetadata from '@theme/BlogPostPage/Metadata';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nfunction BlogPostPageContent({sidebar, children}) {\n  const {metadata, toc} = useBlogPost();\n  const {nextItem, prevItem, frontMatter, unlisted} = metadata;\n  const {\n    hide_table_of_contents: hideTableOfContents,\n    toc_min_heading_level: tocMinHeadingLevel,\n    toc_max_heading_level: tocMaxHeadingLevel,\n  } = frontMatter;\n  return (\n    <BlogLayout\n      sidebar={sidebar}\n      toc={\n        !hideTableOfContents && toc.length > 0 ? (\n          <TOC\n            toc={toc}\n            minHeadingLevel={tocMinHeadingLevel}\n            maxHeadingLevel={tocMaxHeadingLevel}\n          />\n        ) : undefined\n      }>\n      {unlisted && <Unlisted />}\n      <BlogPostItem>{children}</BlogPostItem>\n\n      {(nextItem || prevItem) && (\n        <BlogPostPaginator nextItem={nextItem} prevItem={prevItem} />\n      )}\n    </BlogLayout>\n  );\n}\nexport default function BlogPostPage(props) {\n  const BlogPostContent = props.content;\n  return (\n    <BlogPostProvider content={props.content} isBlogPostPage>\n      <HtmlClassNameProvider\n        className={clsx(\n          ThemeClassNames.wrapper.blogPages,\n          ThemeClassNames.page.blogPostPage,\n        )}>\n        <BlogPostPageMetadata />\n        <BlogPostPageContent sidebar={props.sidebar}>\n          <BlogPostContent />\n        </BlogPostPageContent>\n      </HtmlClassNameProvider>\n    </BlogPostProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const sashCount = this.viewItems.length - 1;\n        const marginReducedSize = (this.margin * sashCount) / this.viewItems.length;\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const offset = Math.min(Math.max(0, totalLeftOffset - 2), this.size - this.margin);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            const size = view.size - marginReducedSize;\n            const offset = i === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (i / sashCount) * marginReducedSize;\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    // { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogPostPaginator","props","nextItem","prevItem","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","subLabel","Translate","isNext","BlogPostPageMetadata","assets","metadata","useBlogPost","title","date","tags","authors","frontMatter","keywords","image","PageMetadata","property","content","some","author","url","map","filter","Boolean","join","length","tag","label","BlogPostPageContent","_ref","sidebar","toc","unlisted","hide_table_of_contents","hideTableOfContents","toc_min_heading_level","tocMinHeadingLevel","toc_max_heading_level","tocMaxHeadingLevel","BlogLayout","TOC","minHeadingLevel","maxHeadingLevel","undefined","Unlisted","BlogPostItem","BlogPostPage","BlogPostContent","BlogPostProvider","isBlogPostPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogPostPage","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","styles","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","Link","to","dangerouslySetInnerHTML","__html","value","React","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","_key","listener","disposables","child","dispose","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","index","splice","fire","e","queueMicrotask","delete","addDisposableWindowListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","contains","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","getElementsByTagName","call","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","width","height","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","sequentialNumberGenerator","next","toString","range","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","right","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","open","features","entries","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","setAttribute","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","_props","componentProps","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}