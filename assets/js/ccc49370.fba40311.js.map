{"version":3,"file":"assets/js/ccc49370.fba40311.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/Metadata/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/flags.ts","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogPostPaginator(props) {\n  const {nextItem, prevItem} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.blog.post.paginator.navAriaLabel',\n        message: 'Blog post page navigation',\n        description: 'The ARIA label for the blog posts pagination',\n      })}>\n      {prevItem && (\n        <PaginatorNavLink\n          {...prevItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.newerPost\"\n              description=\"The blog post button label to navigate to the newer/previous post\">\n              Newer Post\n            </Translate>\n          }\n        />\n      )}\n      {nextItem && (\n        <PaginatorNavLink\n          {...nextItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.olderPost\"\n              description=\"The blog post button label to navigate to the older/next post\">\n              Older Post\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {PageMetadata} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostPageMetadata() {\n  const {assets, metadata} = useBlogPost();\n  const {title, description, date, tags, authors, frontMatter} = metadata;\n  const {keywords} = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <PageMetadata\n      title={title}\n      description={description}\n      keywords={keywords}\n      image={image}>\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"article:published_time\" content={date} />\n      {/* TODO double check those article meta array syntaxes, see https://ogp.me/#array */}\n      {authors.some((author) => author.url) && (\n        <meta\n          property=\"article:author\"\n          content={authors\n            .map((author) => author.url)\n            .filter(Boolean)\n            .join(',')}\n        />\n      )}\n      {tags.length > 0 && (\n        <meta\n          property=\"article:tag\"\n          content={tags.map((tag) => tag.label).join(',')}\n        />\n      )}\n    </PageMetadata>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {HtmlClassNameProvider, ThemeClassNames} from '@docusaurus/theme-common';\nimport {BlogPostProvider, useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport BlogPostPaginator from '@theme/BlogPostPaginator';\nimport BlogPostPageMetadata from '@theme/BlogPostPage/Metadata';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nfunction BlogPostPageContent({sidebar, children}) {\n  const {metadata, toc} = useBlogPost();\n  const {nextItem, prevItem, frontMatter, unlisted} = metadata;\n  const {\n    hide_table_of_contents: hideTableOfContents,\n    toc_min_heading_level: tocMinHeadingLevel,\n    toc_max_heading_level: tocMaxHeadingLevel,\n  } = frontMatter;\n  return (\n    <BlogLayout\n      sidebar={sidebar}\n      toc={\n        !hideTableOfContents && toc.length > 0 ? (\n          <TOC\n            toc={toc}\n            minHeadingLevel={tocMinHeadingLevel}\n            maxHeadingLevel={tocMaxHeadingLevel}\n          />\n        ) : undefined\n      }>\n      {unlisted && <Unlisted />}\n      <BlogPostItem>{children}</BlogPostItem>\n\n      {(nextItem || prevItem) && (\n        <BlogPostPaginator nextItem={nextItem} prevItem={prevItem} />\n      )}\n    </BlogLayout>\n  );\n}\nexport default function BlogPostPage(props) {\n  const BlogPostContent = props.content;\n  return (\n    <BlogPostProvider content={props.content} isBlogPostPage>\n      <HtmlClassNameProvider\n        className={clsx(\n          ThemeClassNames.wrapper.blogPages,\n          ThemeClassNames.page.blogPostPage,\n        )}>\n        <BlogPostPageMetadata />\n        <BlogPostPageContent sidebar={props.sidebar}>\n          <BlogPostContent />\n        </BlogPostPageContent>\n      </HtmlClassNameProvider>\n    </BlogPostProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, coordinates, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","export const IS_PROD = false;\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    // { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Vue', label: 'Vue' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[0].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.toLowerCase()}`;\n    const path = `/templates/${props.id}/${framework.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogPostPaginator","props","nextItem","prevItem","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","subLabel","Translate","isNext","BlogPostPageMetadata","assets","metadata","useBlogPost","title","date","tags","authors","frontMatter","keywords","image","PageMetadata","property","content","some","author","url","map","filter","Boolean","join","length","tag","label","BlogPostPageContent","_ref","sidebar","toc","unlisted","hide_table_of_contents","hideTableOfContents","toc_min_heading_level","tocMinHeadingLevel","toc_max_heading_level","tocMaxHeadingLevel","BlogLayout","TOC","minHeadingLevel","maxHeadingLevel","undefined","Unlisted","BlogPostItem","BlogPostPage","BlogPostContent","BlogPostProvider","isBlogPostPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogPostPage","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","styles","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","Link","to","dangerouslySetInnerHTML","__html","value","React","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","_key","listener","disposables","child","dispose","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","index","splice","fire","e","queueMicrotask","delete","addDisposableWindowListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","contains","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","getElementsByTagName","call","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","width","height","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","sequentialNumberGenerator","next","toString","range","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","coord","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","open","features","entries","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","minimumWidthWithinViewport","minimumHeightWithinViewport","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","o","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","_props","componentProps","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","IS_PROD","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","onChange","framework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","src","justifyContent","CodeSandbox","alignItems","fontWeight","paddingRight"],"sourceRoot":""}