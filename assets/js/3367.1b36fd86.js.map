{"version":3,"file":"assets/js/3367.1b36fd86.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeInline/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/lib/components/Details/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/components/Details/index.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Details/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Details/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Details.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Heading.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Ul/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Ul/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Img/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Code.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/A.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Pre.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Li.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXComponents/Img/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXContent/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXPage/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/MDXPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/admonitionUtils.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\n// Simple component used to render inline code blocks\n// its purpose is to be swizzled and customized\n// MDX 1 used to have a inlineCode comp, see https://mdxjs.com/migrating/v2/\nexport default function CodeInline(props) {\n  return <code {...props} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"details_B4FW\",\"isBrowser\":\"isBrowser_Cof9\",\"collapsibleContent\":\"collapsibleContent_VYua\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {\n  useRef,\n  useState,\n  type ComponentProps,\n  type ReactElement,\n} from 'react';\nimport clsx from 'clsx';\nimport useBrokenLinks from '@docusaurus/useBrokenLinks';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\nimport {useCollapsible, Collapsible} from '../Collapsible';\nimport styles from './styles.module.css';\n\nfunction isInSummary(node: HTMLElement | null): boolean {\n  if (!node) {\n    return false;\n  }\n  return node.tagName === 'SUMMARY' || isInSummary(node.parentElement);\n}\n\nfunction hasParent(node: HTMLElement | null, parent: HTMLElement): boolean {\n  if (!node) {\n    return false;\n  }\n  return node === parent || hasParent(node.parentElement, parent);\n}\n\nexport type DetailsProps = {\n  /**\n   * Summary is provided as props, optionally including the wrapping\n   * `<summary>` tag\n   */\n  summary?: ReactElement | string;\n} & ComponentProps<'details'>;\n\n/**\n * A mostly un-styled `<details>` element with smooth collapsing. Provides some\n * very lightweight styles, but you should bring your UI.\n */\nexport function Details({\n  summary,\n  children,\n  ...props\n}: DetailsProps): JSX.Element {\n  useBrokenLinks().collectAnchor(props.id);\n\n  const isBrowser = useIsBrowser();\n  const detailsRef = useRef<HTMLDetailsElement>(null);\n\n  const {collapsed, setCollapsed} = useCollapsible({\n    initialState: !props.open,\n  });\n  // Use a separate state for the actual details prop, because it must be set\n  // only after animation completes, otherwise close animations won't work\n  const [open, setOpen] = useState(props.open);\n\n  const summaryElement = React.isValidElement(summary) ? (\n    summary\n  ) : (\n    <summary>{summary ?? 'Details'}</summary>\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n    <details\n      {...props}\n      ref={detailsRef}\n      open={open}\n      data-collapsed={collapsed}\n      className={clsx(\n        styles.details,\n        isBrowser && styles.isBrowser,\n        props.className,\n      )}\n      onMouseDown={(e) => {\n        const target = e.target as HTMLElement;\n        // Prevent a double-click to highlight summary text\n        if (isInSummary(target) && e.detail > 1) {\n          e.preventDefault();\n        }\n      }}\n      onClick={(e) => {\n        e.stopPropagation(); // For isolation of multiple nested details/summary\n        const target = e.target as HTMLElement;\n        const shouldToggle =\n          isInSummary(target) && hasParent(target, detailsRef.current!);\n        if (!shouldToggle) {\n          return;\n        }\n        e.preventDefault();\n        if (collapsed) {\n          setCollapsed(false);\n          setOpen(true);\n        } else {\n          setCollapsed(true);\n          // Don't do this, it breaks close animation!\n          // setOpen(false);\n        }\n      }}>\n      {summaryElement}\n\n      <Collapsible\n        lazy={false} // Content might matter for SEO in this case\n        collapsed={collapsed}\n        disableSSRStyle // Allows component to work fine even with JS disabled!\n        onCollapseTransitionEnd={(newCollapsed) => {\n          setCollapsed(newCollapsed);\n          setOpen(!newCollapsed);\n        }}>\n        <div className={styles.collapsibleContent}>{children}</div>\n      </Collapsible>\n    </details>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"details_SZgV\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {Details as DetailsGeneric} from '@docusaurus/theme-common/Details';\nimport styles from './styles.module.css';\n// Should we have a custom details/summary comp in Infima instead of reusing\n// alert classes?\nconst InfimaClasses = 'alert alert--info';\nexport default function Details({...props}) {\n  return (\n    <DetailsGeneric\n      {...props}\n      className={clsx(InfimaClasses, styles.details, props.className)}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Details from '@theme/Details';\nexport default function MDXDetails(props) {\n  const items = React.Children.toArray(props.children);\n  // Split summary item from the rest to pass it as a separate prop to the\n  // Details theme component\n  const summary = items.find(\n    (item) => React.isValidElement(item) && item.type === 'summary',\n  );\n  const children = <>{items.filter((item) => item !== summary)}</>;\n  return (\n    <Details {...props} summary={summary}>\n      {children}\n    </Details>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Heading from '@theme/Heading';\nexport default function MDXHeading(props) {\n  return <Heading {...props} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"containsTaskList\":\"containsTaskList__YnT\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\nfunction transformUlClassName(className) {\n  // Fix https://github.com/facebook/docusaurus/issues/9098\n  if (typeof className === 'undefined') {\n    return undefined;\n  }\n  return clsx(\n    className,\n    // This class is set globally by GitHub/MDX. We keep the global class, and\n    // add another class to get a task list without the default ul styling\n    // See https://github.com/syntax-tree/mdast-util-to-hast/issues/28\n    className?.includes('contains-task-list') && styles.containsTaskList,\n  );\n}\nexport default function MDXUl(props) {\n  return <ul {...props} className={transformUlClassName(props.className)} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"img__Ss2\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Head from '@docusaurus/Head';\nimport MDXCode from '@theme/MDXComponents/Code';\nimport MDXA from '@theme/MDXComponents/A';\nimport MDXPre from '@theme/MDXComponents/Pre';\nimport MDXDetails from '@theme/MDXComponents/Details';\nimport MDXHeading from '@theme/MDXComponents/Heading';\nimport MDXUl from '@theme/MDXComponents/Ul';\nimport MDXLi from '@theme/MDXComponents/Li';\nimport MDXImg from '@theme/MDXComponents/Img';\nimport Admonition from '@theme/Admonition';\nimport Mermaid from '@theme/Mermaid';\nconst MDXComponents = {\n  Head,\n  details: MDXDetails,\n  Details: MDXDetails,\n  code: MDXCode,\n  a: MDXA,\n  pre: MDXPre,\n  ul: MDXUl,\n  li: MDXLi,\n  img: MDXImg,\n  h1: (props) => <MDXHeading as=\"h1\" {...props} />,\n  h2: (props) => <MDXHeading as=\"h2\" {...props} />,\n  h3: (props) => <MDXHeading as=\"h3\" {...props} />,\n  h4: (props) => <MDXHeading as=\"h4\" {...props} />,\n  h5: (props) => <MDXHeading as=\"h5\" {...props} />,\n  h6: (props) => <MDXHeading as=\"h6\" {...props} />,\n  admonition: Admonition,\n  mermaid: Mermaid,\n};\nexport default MDXComponents;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport CodeBlock from '@theme/CodeBlock';\nimport CodeInline from '@theme/CodeInline';\nfunction shouldBeInline(props) {\n  return (\n    // empty code blocks have no props.children,\n    // see https://github.com/facebook/docusaurus/pull/9704\n    typeof props.children !== 'undefined' &&\n    React.Children.toArray(props.children).every(\n      (el) => typeof el === 'string' && !el.includes('\\n'),\n    )\n  );\n}\nexport default function MDXCode(props) {\n  return shouldBeInline(props) ? (\n    <CodeInline {...props} />\n  ) : (\n    <CodeBlock {...props} />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\nexport default function MDXA(props) {\n  return <Link {...props} />;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nexport default function MDXPre(props) {\n  // With MDX 2, this element is only used for fenced code blocks\n  // It always receives a MDXComponents/Code as children\n  return <>{props.children}</>;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport useBrokenLinks from '@docusaurus/useBrokenLinks';\nexport default function MDXLi(props) {\n  // MDX Footnotes have ids such as <li id=\"user-content-fn-1-953011\">\n  useBrokenLinks().collectAnchor(props.id);\n  return <li {...props} />;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\nfunction transformImgClassName(className) {\n  return clsx(className, styles.img);\n}\nexport default function MDXImg(props) {\n  return (\n    // eslint-disable-next-line jsx-a11y/alt-text\n    <img\n      decoding=\"async\"\n      loading=\"lazy\"\n      {...props}\n      className={transformImgClassName(props.className)}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {MDXProvider} from '@mdx-js/react';\nimport MDXComponents from '@theme/MDXComponents';\nexport default function MDXContent({children}) {\n  return <MDXProvider components={MDXComponents}>{children}</MDXProvider>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"mdxPageWrapper\":\"mdxPageWrapper_SLvB\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport Layout from '@theme/Layout';\nimport MDXContent from '@theme/MDXContent';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nimport styles from './styles.module.css';\nexport default function MDXPage(props) {\n  const {content: MDXPageContent} = props;\n  const {\n    metadata: {title, description, frontMatter, unlisted},\n    assets,\n  } = MDXPageContent;\n  const {\n    keywords,\n    wrapperClassName,\n    hide_table_of_contents: hideTableOfContents,\n  } = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        wrapperClassName ?? ThemeClassNames.wrapper.mdxPages,\n        ThemeClassNames.page.mdxPage,\n      )}>\n      <Layout>\n        <PageMetadata\n          title={title}\n          description={description}\n          keywords={keywords}\n          image={image}\n        />\n        <main className=\"container container--fluid margin-vert--lg\">\n          <div className={clsx('row', styles.mdxPageWrapper)}>\n            <div className={clsx('col', !hideTableOfContents && 'col--8')}>\n              {unlisted && <Unlisted />}\n              <article>\n                <MDXContent>\n                  <MDXPageContent />\n                </MDXContent>\n              </article>\n            </div>\n            {!hideTableOfContents && MDXPageContent.toc.length > 0 && (\n              <div className=\"col col--2\">\n                <TOC\n                  toc={MDXPageContent.toc}\n                  minHeadingLevel={frontMatter.toc_min_heading_level}\n                  maxHeadingLevel={frontMatter.toc_max_heading_level}\n                />\n              </div>\n            )}\n          </div>\n        </main>\n      </Layout>\n    </HtmlClassNameProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {type ReactNode} from 'react';\n\n// Workaround because it's difficult in MDX v1 to provide a MDX title as props\n// See https://github.com/facebook/docusaurus/pull/7152#issuecomment-1145779682\nfunction extractMDXAdmonitionTitle(children: ReactNode): {\n  mdxAdmonitionTitle: ReactNode | undefined;\n  rest: ReactNode;\n} {\n  const items = React.Children.toArray(children);\n  const mdxAdmonitionTitleWrapper = items.find(\n    (item) => React.isValidElement(item) && item.type === 'mdxAdmonitionTitle',\n  ) as JSX.Element | undefined;\n\n  const rest = items.filter((item) => item !== mdxAdmonitionTitleWrapper);\n\n  const mdxAdmonitionTitle = mdxAdmonitionTitleWrapper?.props.children;\n\n  return {\n    mdxAdmonitionTitle,\n    rest: rest.length > 0 ? <>{rest}</> : null,\n  };\n}\n\nexport function processAdmonitionProps<\n  Props extends {readonly children: ReactNode; readonly title?: ReactNode},\n>(props: Props): Props {\n  const {mdxAdmonitionTitle, rest} = extractMDXAdmonitionTitle(props.children);\n  const title = props.title ?? mdxAdmonitionTitle;\n  return {\n    ...props,\n    // Do not return \"title: undefined\" prop\n    // this might create unwanted props overrides when merging props\n    // For example: {...default,...props}\n    ...(title && {title}),\n    children: rest,\n  };\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","CodeInline","props","isInSummary","node","tagName","parentElement","hasParent","parent","Details","summary","useBrokenLinks","collectAnchor","id","isBrowser","detailsRef","useRef","collapsed","setCollapsed","useCollapsible","initialState","open","setOpen","useState","summaryElement","React","_jsxs","ref","className","clsx","styles","details","onMouseDown","e","target","detail","preventDefault","onClick","stopPropagation","current","Collapsible","lazy","disableSSRStyle","onCollapseTransitionEnd","newCollapsed","collapsibleContent","InfimaClasses","DetailsGeneric","MDXDetails","items","toArray","find","item","type","filter","MDXHeading","Heading","transformUlClassName","includes","containsTaskList","Head","code","every","el","shouldBeInline","CodeBlock","a","Link","pre","ul","li","img","decoding","loading","h1","as","h2","h3","h4","h5","h6","admonition","Admonition","mermaid","Mermaid","MDXContent","MDXProvider","components","MDXComponents","MDXPage","content","MDXPageContent","metadata","title","description","frontMatter","unlisted","assets","keywords","wrapperClassName","hide_table_of_contents","hideTableOfContents","image","HtmlClassNameProvider","ThemeClassNames","wrapper","mdxPages","page","mdxPage","Layout","PageMetadata","mdxPageWrapper","Unlisted","toc","length","TOC","minHeadingLevel","toc_min_heading_level","maxHeadingLevel","toc_max_heading_level","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","map","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","navbar","hideOnScroll","useThemeConfig","useEffect","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","undefined","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","join","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","to","dangerouslySetInnerHTML","__html","value","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","Translate","UnlistedBannerMessage","UnlistedMetadata","name","UnlistedBanner","common","unlistedBanner","processAdmonitionProps","mdxAdmonitionTitle","mdxAdmonitionTitleWrapper","extractMDXAdmonitionTitle"],"sourceRoot":""}