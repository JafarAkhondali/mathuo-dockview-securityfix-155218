{"version":3,"file":"assets/js/a6aa9e1f.4f1b5367.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        // const gready = document.createElement('div');\n        // gready.className = 'dv-overlay-render-container';\n        // this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super({\n            parentElement: parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        if (typeof options.className === 'string') {\n            this.element.classList.add(options.className);\n        }\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    // { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","updateOptions","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}