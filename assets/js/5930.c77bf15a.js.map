{"version":3,"file":"assets/js/5930.c77bf15a.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/usePrismTheme.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/codeBlockUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Container/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Container/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Content/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Content/Element.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useMutationObserver.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useCodeWordWrap.ts","webpack://dockview-docs/../../node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://dockview-docs/../../node_modules/prism-react-renderer/dist/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Line/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Line/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Icon/Copy/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Icon/Success/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/CopyButton/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/CopyButton/index.js","webpack://dockview-docs/../../node_modules/copy-text-to-clipboard/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Icon/WordWrap/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/WordWrapButton/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/WordWrapButton/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/Content/String.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../../node_modules/parse-numeric-range/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useColorMode} from '../contexts/colorMode';\nimport {useThemeConfig} from '../utils/useThemeConfig';\nimport type {PrismTheme} from 'prism-react-renderer';\n\n/**\n * Returns a color-mode-dependent Prism theme: whatever the user specified in\n * the config. Falls back to `palenight`.\n */\nexport function usePrismTheme(): PrismTheme {\n  const {prism} = useThemeConfig();\n  const {colorMode} = useColorMode();\n  const lightModeTheme = prism.theme;\n  const darkModeTheme = prism.darkTheme || lightModeTheme;\n  const prismTheme = colorMode === 'dark' ? darkModeTheme : lightModeTheme;\n\n  return prismTheme;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {CSSProperties} from 'react';\nimport rangeParser from 'parse-numeric-range';\nimport type {PrismTheme} from 'prism-react-renderer';\n\nconst codeBlockTitleRegex = /title=(?<quote>[\"'])(?<title>.*?)\\1/;\nconst metastringLinesRangeRegex = /\\{(?<range>[\\d,-]+)\\}/;\n\n// Supported types of highlight comments\nconst commentPatterns = {\n  js: {start: '\\\\/\\\\/', end: ''},\n  jsBlock: {start: '\\\\/\\\\*', end: '\\\\*\\\\/'},\n  jsx: {start: '\\\\{\\\\s*\\\\/\\\\*', end: '\\\\*\\\\/\\\\s*\\\\}'},\n  bash: {start: '#', end: ''},\n  html: {start: '<!--', end: '-->'},\n};\n\ntype CommentType = keyof typeof commentPatterns;\n\nexport type MagicCommentConfig = {\n  className: string;\n  line?: string;\n  block?: {start: string; end: string};\n};\n\nfunction getCommentPattern(\n  languages: CommentType[],\n  magicCommentDirectives: MagicCommentConfig[],\n) {\n  // To be more reliable, the opening and closing comment must match\n  const commentPattern = languages\n    .map((lang) => {\n      const {start, end} = commentPatterns[lang];\n      return `(?:${start}\\\\s*(${magicCommentDirectives\n        .flatMap((d) => [d.line, d.block?.start, d.block?.end].filter(Boolean))\n        .join('|')})\\\\s*${end})`;\n    })\n    .join('|');\n  // White space is allowed, but otherwise it should be on it's own line\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n}\n\n/**\n * Select comment styles based on language\n */\nfunction getAllMagicCommentDirectiveStyles(\n  lang: string,\n  magicCommentDirectives: MagicCommentConfig[],\n) {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getCommentPattern(['js', 'jsBlock'], magicCommentDirectives);\n\n    case 'jsx':\n    case 'tsx':\n      return getCommentPattern(\n        ['js', 'jsBlock', 'jsx'],\n        magicCommentDirectives,\n      );\n\n    case 'html':\n      return getCommentPattern(\n        ['js', 'jsBlock', 'html'],\n        magicCommentDirectives,\n      );\n\n    case 'python':\n    case 'py':\n    case 'bash':\n      return getCommentPattern(['bash'], magicCommentDirectives);\n\n    case 'markdown':\n    case 'md':\n      // Text uses HTML, front matter uses bash\n      return getCommentPattern(['html', 'jsx', 'bash'], magicCommentDirectives);\n\n    default:\n      // All comment types\n      return getCommentPattern(\n        Object.keys(commentPatterns) as CommentType[],\n        magicCommentDirectives,\n      );\n  }\n}\n\nexport function parseCodeBlockTitle(metastring?: string): string {\n  return metastring?.match(codeBlockTitleRegex)?.groups!.title ?? '';\n}\n\nexport function containsLineNumbers(metastring?: string): boolean {\n  return Boolean(metastring?.includes('showLineNumbers'));\n}\n\n/**\n * Gets the language name from the class name (set by MDX).\n * e.g. `\"language-javascript\"` => `\"javascript\"`.\n * Returns undefined if there is no language class name.\n */\nexport function parseLanguage(className: string): string | undefined {\n  const languageClassName = className\n    .split(' ')\n    .find((str) => str.startsWith('language-'));\n  return languageClassName?.replace(/language-/, '');\n}\n\n/**\n * Parses the code content, strips away any magic comments, and returns the\n * clean content and the highlighted lines marked by the comments or metastring.\n *\n * If the metastring contains a range, the `content` will be returned as-is\n * without any parsing. The returned `lineClassNames` will be a map from that\n * number range to the first magic comment config entry (which _should_ be for\n * line highlight directives.)\n *\n * @param content The raw code with magic comments. Trailing newline will be\n * trimmed upfront.\n * @param options Options for parsing behavior.\n */\nexport function parseLines(\n  content: string,\n  options: {\n    /**\n     * The full metastring, as received from MDX. Line ranges declared here\n     * start at 1.\n     */\n    metastring: string | undefined;\n    /**\n     * Language of the code block, used to determine which kinds of magic\n     * comment styles to enable.\n     */\n    language: string | undefined;\n    /**\n     * Magic comment types that we should try to parse. Each entry would\n     * correspond to one class name to apply to each line.\n     */\n    magicComments: MagicCommentConfig[];\n  },\n): {\n  /**\n   * The highlighted lines, 0-indexed. e.g. `{ 0: [\"highlight\", \"sample\"] }`\n   * means the 1st line should have `highlight` and `sample` as class names.\n   */\n  lineClassNames: {[lineIndex: number]: string[]};\n  /**\n   * If there's number range declared in the metastring, the code block is\n   * returned as-is (no parsing); otherwise, this is the clean code with all\n   * magic comments stripped away.\n   */\n  code: string;\n} {\n  let code = content.replace(/\\n$/, '');\n  const {language, magicComments, metastring} = options;\n  // Highlighted lines specified in props: don't parse the content\n  if (metastring && metastringLinesRangeRegex.test(metastring)) {\n    const linesRange = metastring.match(metastringLinesRangeRegex)!.groups!\n      .range!;\n    if (magicComments.length === 0) {\n      throw new Error(\n        `A highlight range has been given in code block's metastring (\\`\\`\\` ${metastring}), but no magic comment config is available. Docusaurus applies the first magic comment entry's className for metastring ranges.`,\n      );\n    }\n    const metastringRangeClassName = magicComments[0]!.className;\n    const lines = rangeParser(linesRange)\n      .filter((n) => n > 0)\n      .map((n) => [n - 1, [metastringRangeClassName]] as [number, string[]]);\n    return {lineClassNames: Object.fromEntries(lines), code};\n  }\n  if (language === undefined) {\n    return {lineClassNames: {}, code};\n  }\n  const directiveRegex = getAllMagicCommentDirectiveStyles(\n    language,\n    magicComments,\n  );\n  // Go through line by line\n  const lines = code.split('\\n');\n  const blocks = Object.fromEntries(\n    magicComments.map((d) => [d.className, {start: 0, range: ''}]),\n  );\n  const lineToClassName: {[comment: string]: string} = Object.fromEntries(\n    magicComments\n      .filter((d) => d.line)\n      .map(({className, line}) => [line!, className] as [string, string]),\n  );\n  const blockStartToClassName: {[comment: string]: string} = Object.fromEntries(\n    magicComments\n      .filter((d) => d.block)\n      .map(({className, block}) => [block!.start, className]),\n  );\n  const blockEndToClassName: {[comment: string]: string} = Object.fromEntries(\n    magicComments\n      .filter((d) => d.block)\n      .map(({className, block}) => [block!.end, className]),\n  );\n  for (let lineNumber = 0; lineNumber < lines.length; ) {\n    const line = lines[lineNumber]!;\n    const match = line.match(directiveRegex);\n    if (!match) {\n      // Lines without directives are unchanged\n      lineNumber += 1;\n      continue;\n    }\n    const directive = match\n      .slice(1)\n      .find((item: string | undefined) => item !== undefined)!;\n    if (lineToClassName[directive]) {\n      blocks[lineToClassName[directive]!]!.range += `${lineNumber},`;\n    } else if (blockStartToClassName[directive]) {\n      blocks[blockStartToClassName[directive]!]!.start = lineNumber;\n    } else if (blockEndToClassName[directive]) {\n      blocks[blockEndToClassName[directive]!]!.range += `${\n        blocks[blockEndToClassName[directive]!]!.start\n      }-${lineNumber - 1},`;\n    }\n    lines.splice(lineNumber, 1);\n  }\n  code = lines.join('\\n');\n  const lineClassNames: {[lineIndex: number]: string[]} = {};\n  Object.entries(blocks).forEach(([className, {range}]) => {\n    rangeParser(range).forEach((l) => {\n      lineClassNames[l] ??= [];\n      lineClassNames[l]!.push(className);\n    });\n  });\n  return {lineClassNames, code};\n}\n\nexport function getPrismCssVariables(prismTheme: PrismTheme): CSSProperties {\n  const mapping: {[name: keyof PrismTheme['plain']]: string} = {\n    color: '--prism-color',\n    backgroundColor: '--prism-background-color',\n  };\n\n  const properties: {[key: string]: string} = {};\n  Object.entries(prismTheme.plain).forEach(([key, value]) => {\n    const varName = mapping[key];\n    if (varName && typeof value === 'string') {\n      properties[varName] = value;\n    }\n  });\n  return properties;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"codeBlockContainer\":\"codeBlockContainer_ZGJx\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {ThemeClassNames, usePrismTheme} from '@docusaurus/theme-common';\nimport {getPrismCssVariables} from '@docusaurus/theme-common/internal';\nimport styles from './styles.module.css';\nexport default function CodeBlockContainer({as: As, ...props}) {\n  const prismTheme = usePrismTheme();\n  const prismCssVariables = getPrismCssVariables(prismTheme);\n  return (\n    <As\n      // Polymorphic components are hard to type, without `oneOf` generics\n      {...props}\n      style={prismCssVariables}\n      className={clsx(\n        props.className,\n        styles.codeBlockContainer,\n        ThemeClassNames.common.codeBlock,\n      )}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"codeBlockContent\":\"codeBlockContent_qZBB\",\"codeBlockTitle\":\"codeBlockTitle_zAEH\",\"codeBlock\":\"codeBlock_TAPP\",\"codeBlockStandalone\":\"codeBlockStandalone_K9VJ\",\"codeBlockLines\":\"codeBlockLines_AdAo\",\"codeBlockLinesWithNumbering\":\"codeBlockLinesWithNumbering_p5De\",\"buttonGroup\":\"buttonGroup_TNwR\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Container from '@theme/CodeBlock/Container';\nimport styles from './styles.module.css';\n// <pre> tags in markdown map to CodeBlocks. They may contain JSX children. When\n// the children is not a simple string, we just return a styled block without\n// actually highlighting.\nexport default function CodeBlockJSX({children, className}) {\n  return (\n    <Container\n      as=\"pre\"\n      tabIndex={0}\n      className={clsx(styles.codeBlockStandalone, 'thin-scrollbar', className)}>\n      <code className={styles.codeBlockLines}>{children}</code>\n    </Container>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {useEffect} from 'react';\nimport {useEvent, useShallowMemoObject} from '../utils/reactUtils';\n\ntype Options = MutationObserverInit;\n\nconst DefaultOptions: Options = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true,\n};\n\nexport function useMutationObserver(\n  target: Element | undefined | null,\n  callback: MutationCallback,\n  options: Options = DefaultOptions,\n): void {\n  const stableCallback = useEvent(callback);\n\n  // MutationObserver options are not nested much\n  // so this should be to memo options in 99%\n  // TODO handle options.attributeFilter array\n  const stableOptions: Options = useShallowMemoObject(options);\n\n  useEffect(() => {\n    const observer = new MutationObserver(stableCallback);\n    if (target) {\n      observer.observe(target, stableOptions);\n    }\n    return () => observer.disconnect();\n  }, [target, stableCallback, stableOptions]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport type {RefObject} from 'react';\nimport {useState, useCallback, useEffect, useRef} from 'react';\nimport {useMutationObserver} from './useMutationObserver';\n\n// Callback fires when the \"hidden\" attribute of a tabpanel changes\n// See https://github.com/facebook/docusaurus/pull/7485\nfunction useTabBecameVisibleCallback(\n  codeBlockRef: RefObject<HTMLPreElement>,\n  callback: () => void,\n) {\n  const [hiddenTabElement, setHiddenTabElement] = useState<\n    Element | null | undefined\n  >();\n\n  const updateHiddenTabElement = useCallback(() => {\n    // No need to observe non-hidden tabs\n    // + we want to force a re-render when a tab becomes visible\n    setHiddenTabElement(\n      codeBlockRef.current?.closest('[role=tabpanel][hidden]'),\n    );\n  }, [codeBlockRef, setHiddenTabElement]);\n\n  useEffect(() => {\n    updateHiddenTabElement();\n  }, [updateHiddenTabElement]);\n\n  useMutationObserver(\n    hiddenTabElement,\n    (mutations: MutationRecord[]) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'hidden'\n        ) {\n          callback();\n          updateHiddenTabElement();\n        }\n      });\n    },\n    {\n      attributes: true,\n      characterData: false,\n      childList: false,\n      subtree: false,\n    },\n  );\n}\n\nexport function useCodeWordWrap(): {\n  readonly codeBlockRef: RefObject<HTMLPreElement>;\n  readonly isEnabled: boolean;\n  readonly isCodeScrollable: boolean;\n  readonly toggle: () => void;\n} {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [isCodeScrollable, setIsCodeScrollable] = useState<boolean>(false);\n  const codeBlockRef = useRef<HTMLPreElement>(null);\n\n  const toggle = useCallback(() => {\n    const codeElement = codeBlockRef.current!.querySelector('code')!;\n\n    if (isEnabled) {\n      codeElement.removeAttribute('style');\n    } else {\n      codeElement.style.whiteSpace = 'pre-wrap';\n      // When code wrap is enabled, we want to avoid a scrollbar in any case\n      // Ensure that very very long words/strings/tokens still wrap\n      codeElement.style.overflowWrap = 'anywhere';\n    }\n\n    setIsEnabled((value) => !value);\n  }, [codeBlockRef, isEnabled]);\n\n  const updateCodeIsScrollable = useCallback(() => {\n    const {scrollWidth, clientWidth} = codeBlockRef.current!;\n    const isScrollable =\n      scrollWidth > clientWidth ||\n      codeBlockRef.current!.querySelector('code')!.hasAttribute('style');\n    setIsCodeScrollable(isScrollable);\n  }, [codeBlockRef]);\n\n  useTabBecameVisibleCallback(codeBlockRef, updateCodeIsScrollable);\n\n  useEffect(() => {\n    updateCodeIsScrollable();\n  }, [isEnabled, updateCodeIsScrollable]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateCodeIsScrollable, {\n      passive: true,\n    });\n\n    return () => {\n      window.removeEventListener('resize', updateCodeIsScrollable);\n    };\n  }, [updateCodeIsScrollable]);\n\n  return {codeBlockRef, isEnabled, isCodeScrollable, toggle};\n}\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","// extracted by mini-css-extract-plugin\nexport default {\"codeLine\":\"codeLine_DPDv\",\"codeLineNumber\":\"codeLineNumber_YxQB\",\"codeLineContent\":\"codeLineContent_SOIp\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\nexport default function CodeBlockLine({\n  line,\n  classNames,\n  showLineNumbers,\n  getLineProps,\n  getTokenProps,\n}) {\n  if (line.length === 1 && line[0].content === '\\n') {\n    line[0].content = '';\n  }\n  const lineProps = getLineProps({\n    line,\n    className: clsx(classNames, showLineNumbers && styles.codeLine),\n  });\n  const lineTokens = line.map((token, key) => (\n    <span key={key} {...getTokenProps({token, key})} />\n  ));\n  return (\n    <span {...lineProps}>\n      {showLineNumbers ? (\n        <>\n          <span className={styles.codeLineNumber} />\n          <span className={styles.codeLineContent}>{lineTokens}</span>\n        </>\n      ) : (\n        lineTokens\n      )}\n      <br />\n    </span>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nexport default function IconCopy(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"\n      />\n    </svg>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nexport default function IconSuccess(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"\n      />\n    </svg>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"copyButtonCopied\":\"copyButtonCopied_Mzdr\",\"copyButtonIcons\":\"copyButtonIcons_MVhB\",\"copyButtonIcon\":\"copyButtonIcon_yxgH\",\"copyButtonSuccessIcon\":\"copyButtonSuccessIcon_QJLJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useCallback, useState, useRef, useEffect} from 'react';\nimport clsx from 'clsx';\n// @ts-expect-error: TODO, we need to make theme-classic have type: module\nimport copy from 'copy-text-to-clipboard';\nimport {translate} from '@docusaurus/Translate';\nimport IconCopy from '@theme/Icon/Copy';\nimport IconSuccess from '@theme/Icon/Success';\nimport styles from './styles.module.css';\nexport default function CopyButton({code, className}) {\n  const [isCopied, setIsCopied] = useState(false);\n  const copyTimeout = useRef(undefined);\n  const handleCopyCode = useCallback(() => {\n    copy(code);\n    setIsCopied(true);\n    copyTimeout.current = window.setTimeout(() => {\n      setIsCopied(false);\n    }, 1000);\n  }, [code]);\n  useEffect(() => () => window.clearTimeout(copyTimeout.current), []);\n  return (\n    <button\n      type=\"button\"\n      aria-label={\n        isCopied\n          ? translate({\n              id: 'theme.CodeBlock.copied',\n              message: 'Copied',\n              description: 'The copied button label on code blocks',\n            })\n          : translate({\n              id: 'theme.CodeBlock.copyButtonAriaLabel',\n              message: 'Copy code to clipboard',\n              description: 'The ARIA label for copy code blocks button',\n            })\n      }\n      title={translate({\n        id: 'theme.CodeBlock.copy',\n        message: 'Copy',\n        description: 'The copy button label on code blocks',\n      })}\n      className={clsx(\n        'clean-btn',\n        className,\n        styles.copyButton,\n        isCopied && styles.copyButtonCopied,\n      )}\n      onClick={handleCopyCode}>\n      <span className={styles.copyButtonIcons} aria-hidden=\"true\">\n        <IconCopy className={styles.copyButtonIcon} />\n        <IconSuccess className={styles.copyButtonSuccessIcon} />\n      </span>\n    </button>\n  );\n}\n","export default function copyTextToClipboard(text, {target = document.body} = {}) {\n\tif (typeof text !== 'string') {\n\t\tthrow new TypeError(`Expected parameter \\`text\\` to be a \\`string\\`, got \\`${typeof text}\\`.`);\n\t}\n\n\tconst element = document.createElement('textarea');\n\tconst previouslyFocusedElement = document.activeElement;\n\n\telement.value = text;\n\n\t// Prevent keyboard from showing on mobile\n\telement.setAttribute('readonly', '');\n\n\telement.style.contain = 'strict';\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\tconst selection = document.getSelection();\n\tconst originalRange = selection.rangeCount > 0 && selection.getRangeAt(0);\n\n\ttarget.append(element);\n\telement.select();\n\n\t// Explicit selection workaround for iOS\n\telement.selectionStart = 0;\n\telement.selectionEnd = text.length;\n\n\tlet isSuccess = false;\n\ttry {\n\t\tisSuccess = document.execCommand('copy');\n\t} catch {}\n\n\telement.remove();\n\n\tif (originalRange) {\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(originalRange);\n\t}\n\n\t// Get the focus back on the previously focused element, if any\n\tif (previouslyFocusedElement) {\n\t\tpreviouslyFocusedElement.focus();\n\t}\n\n\treturn isSuccess;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nexport default function IconWordWrap(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z\"\n      />\n    </svg>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wordWrapButtonIcon\":\"wordWrapButtonIcon_SMj9\",\"wordWrapButtonEnabled\":\"wordWrapButtonEnabled_vR9E\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {translate} from '@docusaurus/Translate';\nimport IconWordWrap from '@theme/Icon/WordWrap';\nimport styles from './styles.module.css';\nexport default function WordWrapButton({className, onClick, isEnabled}) {\n  const title = translate({\n    id: 'theme.CodeBlock.wordWrapToggle',\n    message: 'Toggle word wrap',\n    description:\n      'The title attribute for toggle word wrapping button of code block lines',\n  });\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={clsx(\n        'clean-btn',\n        className,\n        isEnabled && styles.wordWrapButtonEnabled,\n      )}\n      aria-label={title}\n      title={title}>\n      <IconWordWrap className={styles.wordWrapButtonIcon} aria-hidden=\"true\" />\n    </button>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {useThemeConfig, usePrismTheme} from '@docusaurus/theme-common';\nimport {\n  parseCodeBlockTitle,\n  parseLanguage,\n  parseLines,\n  containsLineNumbers,\n  useCodeWordWrap,\n} from '@docusaurus/theme-common/internal';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport Line from '@theme/CodeBlock/Line';\nimport CopyButton from '@theme/CodeBlock/CopyButton';\nimport WordWrapButton from '@theme/CodeBlock/WordWrapButton';\nimport Container from '@theme/CodeBlock/Container';\nimport styles from './styles.module.css';\nexport default function CodeBlockString({\n  children,\n  className: blockClassName = '',\n  metastring,\n  title: titleProp,\n  showLineNumbers: showLineNumbersProp,\n  language: languageProp,\n}) {\n  const {\n    prism: {defaultLanguage, magicComments},\n  } = useThemeConfig();\n  const language =\n    languageProp ?? parseLanguage(blockClassName) ?? defaultLanguage;\n  const prismTheme = usePrismTheme();\n  const wordWrap = useCodeWordWrap();\n  // We still parse the metastring in case we want to support more syntax in the\n  // future. Note that MDX doesn't strip quotes when parsing metastring:\n  // \"title=\\\"xyz\\\"\" => title: \"\\\"xyz\\\"\"\n  const title = parseCodeBlockTitle(metastring) || titleProp;\n  const {lineClassNames, code} = parseLines(children, {\n    metastring,\n    language,\n    magicComments,\n  });\n  const showLineNumbers =\n    showLineNumbersProp ?? containsLineNumbers(metastring);\n  return (\n    <Container\n      as=\"div\"\n      className={clsx(\n        blockClassName,\n        language &&\n          !blockClassName.includes(`language-${language}`) &&\n          `language-${language}`,\n      )}>\n      {title && <div className={styles.codeBlockTitle}>{title}</div>}\n      <div className={styles.codeBlockContent}>\n        <Highlight\n          {...defaultProps}\n          theme={prismTheme}\n          code={code}\n          language={language ?? 'text'}>\n          {({className, tokens, getLineProps, getTokenProps}) => (\n            <pre\n              /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */\n              tabIndex={0}\n              ref={wordWrap.codeBlockRef}\n              className={clsx(className, styles.codeBlock, 'thin-scrollbar')}>\n              <code\n                className={clsx(\n                  styles.codeBlockLines,\n                  showLineNumbers && styles.codeBlockLinesWithNumbering,\n                )}>\n                {tokens.map((line, i) => (\n                  <Line\n                    key={i}\n                    line={line}\n                    getLineProps={getLineProps}\n                    getTokenProps={getTokenProps}\n                    classNames={lineClassNames[i]}\n                    showLineNumbers={showLineNumbers}\n                  />\n                ))}\n              </code>\n            </pre>\n          )}\n        </Highlight>\n        <div className={styles.buttonGroup}>\n          {(wordWrap.isEnabled || wordWrap.isCodeScrollable) && (\n            <WordWrapButton\n              className={styles.codeButton}\n              onClick={() => wordWrap.toggle()}\n              isEnabled={wordWrap.isEnabled}\n            />\n          )}\n          <CopyButton className={styles.codeButton} code={code} />\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {isValidElement} from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\nimport ElementContent from '@theme/CodeBlock/Content/Element';\nimport StringContent from '@theme/CodeBlock/Content/String';\n/**\n * Best attempt to make the children a plain string so it is copyable. If there\n * are react elements, we will not be able to copy the content, and it will\n * return `children` as-is; otherwise, it concatenates the string children\n * together.\n */\nfunction maybeStringifyChildren(children) {\n  if (React.Children.toArray(children).some((el) => isValidElement(el))) {\n    return children;\n  }\n  // The children is now guaranteed to be one/more plain strings\n  return Array.isArray(children) ? children.join('') : children;\n}\nexport default function CodeBlock({children: rawChildren, ...props}) {\n  // The Prism theme on SSR is always the default theme but the site theme can\n  // be in a different mode. React hydration doesn't update DOM styles that come\n  // from SSR. Hence force a re-render after mounting to apply the current\n  // relevant styles.\n  const isBrowser = useIsBrowser();\n  const children = maybeStringifyChildren(rawChildren);\n  const CodeBlockComp =\n    typeof children === 'string' ? StringContent : ElementContent;\n  return (\n    <CodeBlockComp key={String(isBrowser)} {...props}>\n      {children}\n    </CodeBlockComp>\n  );\n}\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n"],"names":["usePrismTheme","prism","useThemeConfig","colorMode","useColorMode","lightModeTheme","theme","darkModeTheme","darkTheme","codeBlockTitleRegex","metastringLinesRangeRegex","commentPatterns","js","start","end","jsBlock","jsx","bash","html","getCommentPattern","languages","magicCommentDirectives","commentPattern","map","lang","flatMap","d","line","block","filter","Boolean","join","RegExp","parseLines","content","options","code","replace","language","magicComments","metastring","test","linesRange","match","groups","range","length","Error","metastringRangeClassName","className","lines","rangeParser","n","lineClassNames","Object","fromEntries","undefined","directiveRegex","keys","getAllMagicCommentDirectiveStyles","split","blocks","lineToClassName","_ref","blockStartToClassName","_ref2","blockEndToClassName","_ref3","lineNumber","directive","slice","find","item","splice","entries","forEach","_ref4","l","push","CodeBlockContainer","as","As","props","prismCssVariables","prismTheme","mapping","color","backgroundColor","properties","plain","_ref5","key","value","varName","getPrismCssVariables","React","_extends","style","clsx","styles","codeBlockContainer","ThemeClassNames","common","codeBlock","CodeBlockJSX","children","Container","tabIndex","codeBlockStandalone","codeBlockLines","DefaultOptions","attributes","characterData","childList","subtree","useTabBecameVisibleCallback","codeBlockRef","callback","hiddenTabElement","setHiddenTabElement","useState","updateHiddenTabElement","useCallback","current","closest","useEffect","target","stableCallback","useEvent","stableOptions","useShallowMemoObject","observer","MutationObserver","observe","disconnect","useMutationObserver","mutations","mutation","type","attributeName","types","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","Prism","_defineProperty","obj","defineProperty","enumerable","configurable","writable","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","newlineRe","normalizeEmptyLines","empty","appendTypes","add","typesSize","concat","objectWithoutProperties","exclude","k","indexOf","Highlight","Component","this$1","args","len","themeDict","prevTheme","prevLanguage","base","create","reduce","acc","themeEntry","includes","accStyle","root","themeToDict","ref","output","getThemeDict","display","baseStyle","typeStyles","token","getStyleForToken","grammar","env","tokens","hooks","run","tokenize","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","alias","splitByNewlines","newlineCount","i$1","pop","normalizeTokens","getLineProps","getTokenProps","CodeBlockLine","classNames","showLineNumbers","lineProps","codeLine","lineTokens","codeLineNumber","codeLineContent","IconCopy","viewBox","fill","IconSuccess","CopyButton","isCopied","setIsCopied","copyTimeout","useRef","handleCopyCode","text","_temp","document","body","TypeError","element","createElement","previouslyFocusedElement","activeElement","setAttribute","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","append","select","selectionStart","selectionEnd","isSuccess","execCommand","remove","removeAllRanges","addRange","focus","copy","window","setTimeout","clearTimeout","translate","id","message","description","title","copyButton","copyButtonCopied","onClick","copyButtonIcons","copyButtonIcon","copyButtonSuccessIcon","IconWordWrap","WordWrapButton","isEnabled","wordWrapButtonEnabled","wordWrapButtonIcon","CodeBlockString","blockClassName","titleProp","showLineNumbersProp","languageProp","defaultLanguage","languageClassName","str","startsWith","parseLanguage","wordWrap","setIsEnabled","isCodeScrollable","setIsCodeScrollable","toggle","codeElement","querySelector","removeAttribute","whiteSpace","overflowWrap","updateCodeIsScrollable","scrollWidth","clientWidth","isScrollable","hasAttribute","addEventListener","passive","removeEventListener","useCodeWordWrap","parseCodeBlockTitle","containsLineNumbers","codeBlockTitle","codeBlockContent","codeBlockLinesWithNumbering","Line","buttonGroup","codeButton","CodeBlock","rawChildren","isBrowser","useIsBrowser","toArray","some","el","isValidElement","Array","isArray","maybeStringifyChildren","CodeBlockComp","StringContent","ElementContent","String","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","Provider","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","MDXCreateElement","propComponents","mdxType","originalType","parentName","etc","argsLength","createElementArgArray","newProps","displayName","parsePart","string","m","res","trim","parseInt","_","lhs","sep","rhs","incr","exports","module"],"sourceRoot":""}