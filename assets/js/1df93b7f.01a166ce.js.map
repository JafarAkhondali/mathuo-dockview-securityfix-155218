{"version":3,"file":"assets/js/1df93b7f.01a166ce.js","mappings":"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","sources":["webpack://dockview-docs/./static/img/dockview_grid_3.svg","webpack://dockview-docs/./static/img/dockview_grid_4.svg","webpack://dockview-docs/./static/img/dockview_splash_2.svg","webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/src/dnd/dataTransfer.ts","webpack://dockview-docs/../dockview-core/src/events.ts","webpack://dockview-docs/../dockview-core/src/lifecycle.ts","webpack://dockview-docs/../dockview-core/src/dom.ts","webpack://dockview-docs/../dockview-core/src/array.ts","webpack://dockview-docs/../dockview-core/src/math.ts","webpack://dockview-docs/../dockview-core/src/splitview/viewItem.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitview.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneview.ts","webpack://dockview-docs/../dockview-core/src/gridview/leafNode.ts","webpack://dockview-docs/../dockview-core/src/gridview/branchNode.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridview.ts","webpack://dockview-docs/../dockview-core/src/api/component.api.ts","webpack://dockview-docs/../dockview-core/src/dnd/dnd.ts","webpack://dockview-docs/../dockview-core/src/dnd/droptarget.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/panel/content.ts","webpack://dockview-docs/../dockview-core/src/dockview/types.ts","webpack://dockview-docs/../dockview-core/src/dnd/abstractDragHandler.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/tab/tab.ts","webpack://dockview-docs/../dockview-core/src/dnd/groupDragHandler.ts","webpack://dockview-docs/../dockview-core/src/dnd/ghost.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/titlebar/voidContainer.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/titlebar/tabsContainer.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewGroupPanelModel.ts","webpack://dockview-docs/../dockview-core/src/resizable.ts","webpack://dockview-docs/../dockview-core/src/gridview/baseComponentGridview.ts","webpack://dockview-docs/../dockview-core/src/api/panelApi.ts","webpack://dockview-docs/../dockview-core/src/api/splitviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/api/paneviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/gridview/basePanelView.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneviewPanel.ts","webpack://dockview-docs/../dockview-core/src/paneview/draggablePaneviewPanel.ts","webpack://dockview-docs/../dockview-core/src/api/gridviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridviewPanel.ts","webpack://dockview-docs/../dockview-core/src/api/dockviewGroupPanelApi.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewGroupPanel.ts","webpack://dockview-docs/../dockview-core/src/api/dockviewPanelApi.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewPanel.ts","webpack://dockview-docs/../dockview-core/src/svg.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/tab/defaultTab.ts","webpack://dockview-docs/../dockview-core/src/panel/componentFactory.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewPanelModel.ts","webpack://dockview-docs/../dockview-core/src/dockview/deserializer.ts","webpack://dockview-docs/../dockview-core/src/dockview/components/watermark/watermark.ts","webpack://dockview-docs/../dockview-core/src/dnd/overlay.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewFloatingGroupPanel.ts","webpack://dockview-docs/../dockview-core/src/dockview/dockviewComponent.ts","webpack://dockview-docs/../dockview-core/src/dockview/options.ts","webpack://dockview-docs/../dockview-core/src/gridview/gridviewComponent.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitviewComponent.ts","webpack://dockview-docs/../dockview-core/src/paneview/defaultPaneviewHeader.ts","webpack://dockview-docs/../dockview-core/src/paneview/paneviewComponent.ts","webpack://dockview-docs/../dockview-core/src/splitview/splitviewPanel.ts","webpack://dockview-docs/../dockview/src/react.ts","webpack://dockview-docs/../dockview/src/dockview/reactContentPart.ts","webpack://dockview-docs/../dockview/src/dockview/reactHeaderPart.ts","webpack://dockview-docs/../dockview/src/dockview/reactWatermarkPart.ts","webpack://dockview-docs/../dockview/src/dockview/headerActionsRenderer.ts","webpack://dockview-docs/../dockview/src/dockview/dockview.tsx","webpack://dockview-docs/../dockview/src/svg.tsx","webpack://dockview-docs/../dockview/src/dockview/defaultTab.tsx","webpack://dockview-docs/../dockview/src/splitview/view.ts","webpack://dockview-docs/../dockview/src/splitview/splitview.tsx","webpack://dockview-docs/../dockview/src/gridview/view.ts","webpack://dockview-docs/../dockview/src/gridview/gridview.tsx","webpack://dockview-docs/../dockview/src/paneview/view.tsx","webpack://dockview-docs/../dockview/src/paneview/paneview.tsx","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./src/pages/index.module.css","webpack://dockview-docs/./src/components/HomepageFeatures/styles.module.css","webpack://dockview-docs/./src/components/HomepageFeatures/index.tsx","webpack://dockview-docs/./src/components/ui/browserHeader.tsx","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/native.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/rng.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://dockview-docs/./node_modules/uuid/dist/esm-browser/v4.js","webpack://dockview-docs/./sandboxes/demo-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/dockview-app/src/app.tsx","webpack://dockview-docs/./src/components/HomepageFeatures/introduction.tsx","webpack://dockview-docs/./src/pages/index.tsx"],"sourcesContent":["var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _path18, _path19, _path20, _path21, _path22, _path23, _rect17, _rect18, _path24, _path25, _path26, _path27, _rect19, _rect20, _path28, _path29;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewGrid3 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 311.504,\n    height: 200,\n    rx: 5,\n    fill: \"#fff\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A8A8A8\",\n    d: \"M0 11h156v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M156 11h156v91H156zM234 102h78v98h-78zM156 102h78v98h-78zM0 24h156v176H0z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M157 102h155v1H157zM157 11h-1v189h1zM234 103h-1v97h1v-97Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h156v14H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M0 11h30v14H0zM31 11h30v14H31z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M62 11h30v14H62z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M30 11h1v14h-1zM61 11h1v14h-1zM92 11h1v14h-1z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M157 11h155v14H157z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M157 11h30v14h-30z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M188 11h30v14h-30z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M187 11h1v14h-1zM218 11h1v14h-1z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M234 103h78v14h-78z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M234 103h24v14h-24z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M258 103h24v14h-24z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M258 103h.503v14H258zM282 103h.503v14H282z\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 66,\n    y: 16,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 76,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 260,\n    y: 108,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 268,\n    y: 108,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 206,\n    y: 16,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 160,\n    y: 16,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 166,\n    y: 16,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 237,\n    y: 108,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 33,\n    y: 16,\n    width: 15,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 16,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 16,\n    width: 18,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1E1E1\",\n    fillOpacity: 0.25,\n    d: \"M297 11h15v189h-15z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M90.5 18.5h48v13h-48z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M140.344 22.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M139.5 23.5h4v2h-4z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M97.33 23.09h.421l.989 2.416h.034l.989-2.415h.42V26h-.33v-2.21h-.028L98.916 26h-.318l-.91-2.21h-.028V26h-.33v-2.91Zm4.889 2.018v-1.29h.335V26h-.335v-.37h-.023a.713.713 0 0 1-.238.283.692.692 0 0 1-.41.115.727.727 0 0 1-.363-.09.623.623 0 0 1-.25-.272 1.03 1.03 0 0 1-.091-.462v-1.386h.335v1.364c0 .159.045.286.134.38.09.095.204.142.343.142a.571.571 0 0 0 .563-.596Zm1.284-2.017V26h-.335v-2.91h.335Zm1.563.727v.284h-1.13v-.284h1.13Zm-.801-.523h.335v2.08c0 .095.014.166.042.213a.212.212 0 0 0 .107.094.438.438 0 0 0 .141.023.598.598 0 0 0 .091-.006l.057-.012.068.302a.7.7 0 0 1-.528-.021.556.556 0 0 1-.225-.187.532.532 0 0 1-.088-.315v-2.17ZM105.57 26v-2.182h.336V26h-.336Zm.171-2.546a.238.238 0 0 1-.169-.066.216.216 0 0 1-.07-.16c0-.063.024-.117.07-.161a.238.238 0 0 1 .169-.067c.065 0 .121.022.168.067a.214.214 0 0 1 .071.16.214.214 0 0 1-.071.16.236.236 0 0 1-.168.067Zm.779 3.364v-3h.324v.347h.039c.025-.038.059-.086.103-.145a.596.596 0 0 1 .19-.16.683.683 0 0 1 .338-.07c.184 0 .346.046.486.138a.92.92 0 0 1 .328.39c.079.169.118.368.118.597 0 .23-.039.431-.118.6a.935.935 0 0 1-.327.393.852.852 0 0 1-.481.137.7.7 0 0 1-.337-.07.636.636 0 0 1-.195-.16c-.045-.06-.08-.11-.105-.15h-.028v1.153h-.335Zm.329-1.909c0 .165.024.31.073.436a.661.661 0 0 0 .211.294.55.55 0 0 0 .341.105.55.55 0 0 0 .351-.11.672.672 0 0 0 .213-.302c.048-.127.073-.268.073-.423 0-.153-.024-.292-.071-.415a.644.644 0 0 0-.212-.294.56.56 0 0 0-.354-.11.556.556 0 0 0-.343.105.627.627 0 0 0-.211.287 1.187 1.187 0 0 0-.071.427Zm2.443-1.818V26h-.335v-2.91h.335Zm1.529 2.954c-.21 0-.391-.046-.544-.139a.942.942 0 0 1-.351-.392 1.343 1.343 0 0 1-.122-.588c0-.223.041-.42.122-.59a.967.967 0 0 1 .344-.401.924.924 0 0 1 .517-.145c.114 0 .226.019.337.057.111.037.211.099.302.184a.884.884 0 0 1 .218.335c.054.14.081.311.081.515v.142h-1.682v-.29h1.341a.718.718 0 0 0-.074-.33.556.556 0 0 0-.523-.312.6.6 0 0 0-.346.1.65.65 0 0 0-.223.255.74.74 0 0 0-.079.338v.193c0 .165.029.305.086.42.057.113.137.2.24.26a.701.701 0 0 0 .356.087.728.728 0 0 0 .239-.037.511.511 0 0 0 .186-.113.526.526 0 0 0 .121-.19l.324.09a.734.734 0 0 1-.172.29.84.84 0 0 1-.299.193 1.104 1.104 0 0 1-.399.069Zm2.539.773v-3h.323v.347h.04a3.76 3.76 0 0 1 .102-.145.6.6 0 0 1 .191-.16.683.683 0 0 1 .338-.07c.184 0 .346.046.486.138a.92.92 0 0 1 .328.39c.078.169.118.368.118.597 0 .23-.04.431-.118.6a.935.935 0 0 1-.327.393.854.854 0 0 1-.481.137.697.697 0 0 1-.337-.07.636.636 0 0 1-.195-.16c-.045-.06-.08-.11-.105-.15h-.028v1.153h-.335Zm.329-1.909c0 .165.024.31.073.436a.653.653 0 0 0 .211.294.55.55 0 0 0 .341.105.55.55 0 0 0 .351-.11.672.672 0 0 0 .213-.302c.048-.127.072-.268.072-.423 0-.153-.023-.292-.071-.415a.642.642 0 0 0-.211-.294.56.56 0 0 0-.354-.11.561.561 0 0 0-.344.105.625.625 0 0 0-.21.287 1.187 1.187 0 0 0-.071.427Zm2.75 1.142a.883.883 0 0 1-.376-.078.643.643 0 0 1-.269-.229.647.647 0 0 1-.099-.363c0-.125.024-.227.074-.304a.522.522 0 0 1 .197-.185c.082-.044.173-.078.273-.1.1-.022.201-.04.302-.053.133-.017.24-.03.323-.039a.5.5 0 0 0 .182-.047c.038-.021.058-.06.058-.113v-.012a.444.444 0 0 0-.115-.326c-.076-.078-.191-.117-.345-.117a.605.605 0 0 0-.377.105.622.622 0 0 0-.192.225l-.318-.114a.764.764 0 0 1 .228-.31.843.843 0 0 1 .312-.156c.114-.03.225-.045.335-.045.07 0 .151.008.242.025.092.016.18.05.265.101a.59.59 0 0 1 .215.232.86.86 0 0 1 .085.415V26h-.335v-.296h-.017a.653.653 0 0 1-.325.29.82.82 0 0 1-.323.057Zm.051-.301a.66.66 0 0 0 .335-.078.537.537 0 0 0 .279-.462v-.307c-.014.018-.046.033-.094.047a1.55 1.55 0 0 1-.165.036 6.889 6.889 0 0 1-.321.042c-.087.012-.168.03-.244.056a.424.424 0 0 0-.182.112.288.288 0 0 0-.068.202.3.3 0 0 0 .129.264.581.581 0 0 0 .331.088Zm1.896-1.063V26h-.335v-2.182h.324v.341h.028c.051-.11.129-.2.233-.267a.726.726 0 0 1 .404-.102c.147 0 .277.03.387.09.111.06.197.151.259.273.061.122.092.275.092.46V26h-.335v-1.364c0-.171-.045-.305-.134-.4a.473.473 0 0 0-.366-.145.585.585 0 0 0-.287.07.497.497 0 0 0-.197.203.663.663 0 0 0-.073.323Zm2.92 1.358c-.211 0-.392-.046-.544-.139a.929.929 0 0 1-.351-.392 1.33 1.33 0 0 1-.122-.588c0-.223.04-.42.122-.59a.964.964 0 0 1 .343-.401.926.926 0 0 1 .517-.145c.114 0 .226.019.337.057a.835.835 0 0 1 .52.52c.054.139.081.31.081.514v.142h-1.682v-.29h1.341a.718.718 0 0 0-.074-.33.554.554 0 0 0-.523-.312.6.6 0 0 0-.346.1.65.65 0 0 0-.223.255.752.752 0 0 0-.078.338v.193c0 .165.028.305.085.42.058.113.138.2.24.26a.702.702 0 0 0 .357.087.722.722 0 0 0 .238-.037.511.511 0 0 0 .186-.113.513.513 0 0 0 .121-.19l.324.09a.711.711 0 0 1-.172.29.835.835 0 0 1-.298.193 1.112 1.112 0 0 1-.399.069Zm1.748-2.954V26h-.335v-2.91h.335Zm2.16 1.216-.302.085a.53.53 0 0 0-.083-.146.413.413 0 0 0-.148-.12.54.54 0 0 0-.24-.047.572.572 0 0 0-.334.093c-.088.06-.132.138-.132.231 0 .084.03.15.091.198.06.048.155.088.284.12l.324.08c.195.048.34.12.436.218a.507.507 0 0 1 .143.373.554.554 0 0 1-.108.335.713.713 0 0 1-.298.233 1.089 1.089 0 0 1-.446.085.978.978 0 0 1-.552-.144.639.639 0 0 1-.277-.424l.318-.08c.03.118.087.206.172.265a.575.575 0 0 0 .333.088.625.625 0 0 0 .373-.1c.092-.067.139-.147.139-.24a.254.254 0 0 0-.08-.191.505.505 0 0 0-.244-.117l-.364-.085c-.2-.047-.346-.12-.44-.22a.532.532 0 0 1-.139-.377.54.54 0 0 1 .103-.326.716.716 0 0 1 .286-.223c.121-.054.258-.081.412-.081.216 0 .385.047.508.142.124.095.213.22.265.375Zm1.788.239c0-.358.047-.688.14-.988.093-.3.227-.578.4-.83h.296a1.75 1.75 0 0 0-.192.346 4.068 4.068 0 0 0-.26.956 3.627 3.627 0 0 0 .028 1.201c.044.232.103.448.176.647.074.199.157.36.248.486h-.296a3.068 3.068 0 0 1-.4-.83 3.337 3.337 0 0 1-.14-.988Zm2.307 1.494c-.187 0-.354-.032-.501-.097a.857.857 0 0 1-.348-.268.719.719 0 0 1-.139-.402h.358c.007.093.04.174.096.243.057.067.132.119.223.156a.815.815 0 0 0 .306.055.796.796 0 0 0 .332-.065.536.536 0 0 0 .227-.182.455.455 0 0 0 .083-.27.507.507 0 0 0-.313-.476.903.903 0 0 0-.375-.07h-.233v-.312h.233c.116 0 .217-.02.304-.062a.474.474 0 0 0 .282-.443.488.488 0 0 0-.066-.258.446.446 0 0 0-.184-.17.602.602 0 0 0-.279-.061c-.1 0-.195.018-.284.055a.53.53 0 0 0-.216.158.412.412 0 0 0-.091.247h-.341a.696.696 0 0 1 .138-.4.868.868 0 0 1 .338-.27c.14-.065.294-.097.462-.097.18 0 .334.037.463.11a.748.748 0 0 1 .4.669.653.653 0 0 1-.477.66v.021c.184.03.327.109.431.235.103.125.154.28.154.464 0 .158-.043.3-.129.426a.88.88 0 0 1-.349.296 1.139 1.139 0 0 1-.505.108Zm2.286-1.494c0 .357-.047.687-.141.988-.092.3-.225.577-.399.83h-.295a1.8 1.8 0 0 0 .19-.347c.06-.136.112-.286.156-.449a4.123 4.123 0 0 0 .142-1.023c0-.225-.021-.454-.065-.686a3.876 3.876 0 0 0-.176-.646 2.031 2.031 0 0 0-.247-.486h.295c.174.253.307.53.399.831.094.3.141.63.141.988Z\",\n    fill: \"#fff\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M279.5 46.5h29v13h-29z\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 283,\n    y: 51,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 294,\n    y: 51,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M305.344 61.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M304.5 62.5h4v2h-4z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1E1E1\",\n    fillOpacity: 0.25,\n    d: \"M157 153h76v47h-76z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    stroke: \"#2B2B4A\",\n    d: \"M180.5 163.5h29v13h-29z\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 184,\n    y: 168,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 195,\n    y: 168,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M194.344 176.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M193.5 177.5h4v2h-4z\"\n  })));\n};\nexport default SvgDockviewGrid3;","var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _path19, _rect10, _rect11, _rect12, _rect13, _rect14, _path20, _circle, _circle2, _circle3, _path21, _circle4, _circle5, _circle6, _path22, _rect15, _rect16, _path23, _circle7, _circle8, _circle9, _path24, _rect17, _path25, _g, _path26, _path27, _path28, _path29, _path30, _path31, _rect18, _rect19, _rect20, _rect21, _path32, _path33, _path34;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewGrid4 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 311.504,\n    height: 200,\n    rx: 5,\n    fill: \"#fff\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A8A8A8\",\n    d: \"M0 11h156v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M188 11h124v91H188zM188 102h124v98H188zM0 24h187v176H0z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M188 102h124v1H188zM188 11h-1v189h1z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h187v14H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M0 11h35.962v14H0zM37.16 11h35.962v14H37.16z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M74.32 11h35.962v14H74.32z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M35.962 11h1.199v14h-1.199zM73.122 11h1.199v14h-1.199zM110.282 11h1.199v14h-1.199z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M188 11h124v14H188z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M188 11h30v14h-30z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M219 11h30v14h-30z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M218 11h1v14h-1zM249 11h1v14h-1z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M188 103h124v14H188z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M188 103h24v14h-24z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M212 103h24v14h-24z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M212 103h.503v14H212zM236 103h.503v14H236z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76 18a2 2 0 0 1 2-2h3a2 2 0 1 1 0 4h-3a2 2 0 0 1-2-2Z\",\n    fill: \"#fff\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 85,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 222,\n    y: 16,\n    width: 12,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 214,\n    y: 108,\n    width: 7,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 222,\n    y: 108,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 237,\n    y: 16,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 16,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 197,\n    y: 16,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 191,\n    y: 108,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39 18a2 2 0 0 1 2-2h11a2 2 0 1 1 0 4H41a2 2 0 0 1-2-2Z\",\n    fill: \"#777\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 16,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 16,\n    width: 18,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M173 11h14v14h-14z\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 176,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 176 18)\",\n    fill: \"#fff\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 184,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 184 18)\",\n    fill: \"#fff\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 180,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 180 18)\",\n    fill: \"#fff\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M298 11h14v14h-14z\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 301,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 301 18)\",\n    fill: \"#fff\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 309,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 309 18)\",\n    fill: \"#fff\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 305,\n    cy: 18,\n    r: 1,\n    transform: \"rotate(-90 305 18)\",\n    fill: \"#fff\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M111 11h14v14h-14z\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 117.333,\n    y: 14,\n    width: 1.333,\n    height: 8,\n    rx: 0.667,\n    fill: \"#fff\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 114,\n    y: 18.666,\n    width: 1.333,\n    height: 8,\n    rx: 0.667,\n    transform: \"rotate(-90 114 18.666)\",\n    fill: \"#fff\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M298 103h14v14h-14z\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 301,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 301 110)\",\n    fill: \"#fff\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 309,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 309 110)\",\n    fill: \"#fff\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 305,\n    cy: 110,\n    r: 1,\n    transform: \"rotate(-90 305 110)\",\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M285 103h14v14h-14z\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 288.5,\n    y: 106.5,\n    width: 7,\n    height: 7,\n    rx: 1.5,\n    stroke: \"#fff\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M288 109h8v2h-8z\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.35\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M40 45h128.769v91H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M40 136h128.769v1H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M40 45h128.769v14H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M40 45h31.154v14H40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M72.192 45h31.154v14H72.192z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M71.154 45h1.038v14h-1.038zM40 45h1v92h-1zM168 45h1v92h-1zM103.346 45h1.038v14h-1.038z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 75.308,\n    y: 50,\n    width: 12.461,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 90.885,\n    y: 50,\n    width: 4.154,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.115,\n    y: 50,\n    width: 5.192,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 49.346,\n    y: 50,\n    width: 16.615,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M40 45h128.769v1H40z\"\n  }))), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M29 54h128.769v91H29z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M29 145h128.769v1H29z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M29 54h128.769v14H29z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#10192C\",\n    d: \"M29 54h31.154v14H29z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M61.192 54h31.154v14H61.192z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M60.154 54h1.038v14h-1.038zM29 54h1v92h-1zM157 54h1v92h-1zM92.346 54h1.038v14h-1.038z\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 64.308,\n    y: 59,\n    width: 12.461,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 79.885,\n    y: 59,\n    width: 4.154,\n    height: 4,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 32.115,\n    y: 59,\n    width: 5.192,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 38.346,\n    y: 59,\n    width: 16.615,\n    height: 4,\n    rx: 2,\n    fill: \"#282828\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M29 54h128.769v1H29z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M128.344 61.265a.295.295 0 0 0-.017-.495l-4.147-2.48a.295.295 0 0 0-.441.31l.912 4.744c.04.21.284.309.459.186l.662-.463a.296.296 0 0 0 .12-.298l-.29-1.508a.296.296 0 0 1 .442-.309l1.318.788c.1.06.226.055.321-.011l.661-.464Z\",\n    fill: \"#fff\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    strokeDasharray: \"0.25 0.25\",\n    d: \"M127.5 62.5h4v2h-4z\"\n  })));\n};\nexport default SvgDockviewGrid4;","var _path, _path2, _rect, _rect2, _rect3, _path3, _path4, _path5, _path6, _path7, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _path8, _path9, _path10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgDockviewSplash2 = _ref => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 312,\n    height: 200,\n    viewBox: \"0 0 312 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 5a5 5 0 0 1 5-5h302a5 5 0 0 1 5 5v6H0V5Z\",\n    fill: \"#DCDCDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BABABA\",\n    d: \"M0 10h312v1H0z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FD605E\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#FBBC3F\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 16,\n    y: 3,\n    width: 4,\n    height: 4,\n    rx: 2,\n    fill: \"#34C942\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D9D9D9\",\n    d: \"M0 11h312v189H0z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000C18\",\n    d: \"M0 11h166v189H0zM167 11h145v189H167z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M166 11h1v189h-1zM167 56h145v1H167zM167 112h145v1H167z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1C1C2A\",\n    d: \"M0 11h166v10H0zM0 22h166v10H0zM0 94h166v10H0zM0 190h166v10H0z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2B2B4A\",\n    d: \"M0 21h166v1H0z\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 14,\n    width: 21,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34,\n    y: 14,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 25,\n    width: 6,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 25,\n    width: 11,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 97,\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29,\n    y: 97,\n    width: 5,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 193,\n    width: 14,\n    height: 4,\n    rx: 2,\n    fill: \"#fff\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5 29-3-3.392.538-.608L5 27.799l2.463-2.785.537.608L5 29ZM5 101l-3-3.392.538-.608L5 99.799l2.463-2.785.537.608L5 101ZM6 16l-3.392 3L2 18.462 4.799 16l-2.785-2.463.608-.537L6 16ZM6 195l-3.392 3-.608-.537L4.799 195l-2.785-2.462.608-.538L6 195Z\",\n    fill: \"#fff\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M212.674 111c.236 0 .394-.221.297-.416l-2.174-4.409c-.115-.233-.479-.233-.594 0l-2.174 4.409c-.097.195.061.416.297.416h.889a.327.327 0 0 0 .297-.175l.691-1.401c.115-.233.479-.233.594 0l.691 1.401a.327.327 0 0 0 .297.175h.889ZM208.326 114c-.236 0-.394.221-.297.416l2.174 4.409c.115.233.479.233.594 0l2.174-4.409c.097-.195-.061-.416-.297-.416h-.889a.327.327 0 0 0-.297.175l-.691 1.401c-.115.233-.479.233-.594 0l-.691-1.401a.327.327 0 0 0-.297-.175h-.889Z\",\n    fill: \"#fff\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#fff\",\n    d: \"M210.5 116v-7\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 175,\n    y: 18,\n    width: 20,\n    height: 19,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 198,\n    y: 18,\n    width: 5,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 206,\n    y: 18,\n    width: 26,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 203,\n    y: 71,\n    width: 44,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 228,\n    y: 78,\n    width: 44,\n    height: 14,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 250,\n    y: 71,\n    width: 22,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 239,\n    y: 95,\n    width: 33,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 272,\n    y: 117,\n    width: 33,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 259,\n    y: 117,\n    width: 7,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 213,\n    y: 95,\n    width: 23,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 203,\n    y: 95,\n    width: 8,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 198,\n    y: 25,\n    width: 15,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 215,\n    y: 25,\n    width: 18,\n    height: 5,\n    rx: 2,\n    fill: \"#777\"\n  })));\n};\nexport default SvgDockviewSplash2;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\n\nexport class PanelTransfer extends TransferObject {\n    constructor(\n        public readonly viewId: string,\n        public readonly groupId: string,\n        public readonly panelId: string | null\n    ) {\n        super();\n    }\n}\n\nexport class PaneTransfer extends TransferObject {\n    constructor(\n        public readonly viewId: string,\n        public readonly paneId: string\n    ) {\n        super();\n    }\n}\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n    private static readonly INSTANCE = new LocalSelectionTransfer();\n\n    private data?: T[];\n    private proto?: T;\n\n    private constructor() {\n        // protect against external instantiation\n    }\n\n    static getInstance<T>(): LocalSelectionTransfer<T> {\n        return LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n    }\n\n    hasData(proto: T): boolean {\n        return proto && proto === this.proto;\n    }\n\n    clearData(proto: T): void {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n\n    getData(proto: T): T[] | undefined {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n\n        return undefined;\n    }\n\n    setData(data: T[], proto: T): void {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\n\nexport function getPanelData(): PanelTransfer | undefined {\n    const panelTransfer = LocalSelectionTransfer.getInstance<PanelTransfer>();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n\n    if (!isPanelEvent) {\n        return undefined;\n    }\n\n    return panelTransfer.getData(PanelTransfer.prototype)![0];\n}\n\nexport function getPaneData(): PaneTransfer | undefined {\n    const paneTransfer = LocalSelectionTransfer.getInstance<PaneTransfer>();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n\n    if (!isPanelEvent) {\n        return undefined;\n    }\n\n    return paneTransfer.getData(PaneTransfer.prototype)![0];\n}\n","import { IDisposable } from './lifecycle';\n\nexport interface Event<T> {\n    (listener: (e: T) => any): IDisposable;\n}\n\nexport interface EmitterOptions {\n    readonly replay?: boolean;\n}\n\nexport namespace Event {\n    export const any = <T>(...children: Event<T>[]): Event<T> => {\n        return (listener: (e: T) => void) => {\n            const disposables = children.map((child) => child(listener));\n\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n}\n\nclass LeakageMonitor {\n    readonly events = new Map<Event<any>, Stacktrace>();\n\n    get size(): number {\n        return this.events.size;\n    }\n\n    add<T>(event: Event<T>, stacktrace: Stacktrace): void {\n        this.events.set(event, stacktrace);\n    }\n\n    delete<T>(event: Event<T>): void {\n        this.events.delete(event);\n    }\n\n    clear(): void {\n        this.events.clear();\n    }\n}\n\nclass Stacktrace {\n    static create(): Stacktrace {\n        return new Stacktrace(new Error().stack ?? '');\n    }\n\n    private constructor(readonly value: string) {}\n\n    print(): void {\n        console.warn(this.value);\n    }\n}\n\nclass Listener<T> {\n    constructor(\n        readonly callback: (t: T) => void,\n        readonly stacktrace: Stacktrace | undefined\n    ) {}\n}\n\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter<T> implements IDisposable {\n    private _event?: Event<T>;\n\n    private _last?: T;\n    private _listeners: Listener<any>[] = [];\n    private _disposed = false;\n\n    static ENABLE_TRACKING = false;\n    static readonly MEMORY_LEAK_WATCHER = new LeakageMonitor();\n\n    static setLeakageMonitorEnabled(isEnabled: boolean): void {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n\n    constructor(private readonly options?: EmitterOptions) {}\n\n    get event(): Event<T> {\n        if (!this._event) {\n            this._event = (callback: (e: T) => void): IDisposable => {\n                if (this.options?.replay && this._last !== undefined) {\n                    callback(this._last);\n                }\n\n                const listener = new Listener(\n                    callback,\n                    Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined\n                );\n                this._listeners.push(listener);\n\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        } else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(\n                    this._event,\n                    Stacktrace.create()\n                );\n            }\n        }\n        return this._event;\n    }\n\n    public fire(e: T): void {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n\n    public dispose(): void {\n        if (!this._disposed) {\n            this._disposed = true;\n\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn(listener.stacktrace?.print());\n                        }\n                    });\n                }\n\n                this._listeners = [];\n            }\n\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\n\nexport function addDisposableWindowListener<K extends keyof WindowEventMap>(\n    element: Window,\n    type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n): IDisposable {\n    element.addEventListener(type, listener, options);\n\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n\nexport function addDisposableListener<K extends keyof HTMLElementEventMap>(\n    element: HTMLElement,\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n): IDisposable {\n    element.addEventListener(type, listener, options);\n\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n\nexport class TickDelayedEvent implements IDisposable {\n    private timer: any;\n\n    private readonly _onFired = new Emitter<void>();\n    readonly onEvent = this._onFired.event;\n\n    fire(): void {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n\n    dispose(): void {\n        this._onFired.dispose();\n    }\n}\n","export interface IDisposable {\n    dispose: () => void;\n}\n\nexport interface IValueDisposable<T> {\n    readonly value: T;\n    readonly disposable: IDisposable;\n}\n\nexport namespace Disposable {\n    export const NONE: IDisposable = {\n        dispose: () => {\n            // noop\n        },\n    };\n}\n\nexport class CompositeDisposable {\n    private readonly _disposables: IDisposable[];\n    private _isDisposed = false;\n\n    protected get isDisposed(): boolean {\n        return this._isDisposed;\n    }\n\n    constructor(...args: IDisposable[]) {\n        this._disposables = args;\n    }\n\n    public addDisposables(...args: IDisposable[]): void {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n\n    public dispose(): void {\n        this._disposables.forEach((arg) => arg.dispose());\n\n        this._isDisposed = true;\n    }\n}\n\nexport class MutableDisposable implements IDisposable {\n    private _disposable = Disposable.NONE;\n\n    set value(disposable: IDisposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n\n    public dispose(): void {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import {\n    Event as DockviewEvent,\n    Emitter,\n    addDisposableListener,\n    addDisposableWindowListener,\n} from './events';\nimport { IDisposable, CompositeDisposable } from './lifecycle';\n\nexport function watchElementResize(\n    element: HTMLElement,\n    cb: (entry: ResizeObserverEntry) => void\n): IDisposable {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n\n    observer.observe(element);\n\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\n\nexport const removeClasses = (\n    element: HTMLElement,\n    ...classes: string[]\n): void => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\n\nexport const addClasses = (\n    element: HTMLElement,\n    ...classes: string[]\n): void => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\n\nexport const toggleClass = (\n    element: HTMLElement,\n    className: string,\n    isToggled: boolean\n): void => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\n\nexport function isAncestor(\n    testChild: Node | null,\n    testAncestor: Node | null\n): boolean {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n\n    return false;\n}\n\nexport function getElementsByTagName(tag: string): HTMLElement[] {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\n\nexport interface IFocusTracker extends IDisposable {\n    readonly onDidFocus: DockviewEvent<void>;\n    readonly onDidBlur: DockviewEvent<void>;\n    refreshState?(): void;\n}\n\nexport function trackFocus(element: HTMLElement | Window): IFocusTracker {\n    return new FocusTracker(element);\n}\n\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable implements IFocusTracker {\n    private readonly _onDidFocus = new Emitter<void>();\n    public readonly onDidFocus: DockviewEvent<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new Emitter<void>();\n    public readonly onDidBlur: DockviewEvent<void> = this._onDidBlur.event;\n\n    private _refreshStateHandler: () => void;\n\n    constructor(element: HTMLElement | Window) {\n        super();\n\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n\n        let hasFocus = isAncestor(document.activeElement, <HTMLElement>element);\n        let loosingFocus = false;\n\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(\n                document.activeElement,\n                <HTMLElement>element\n            );\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                } else {\n                    onFocus();\n                }\n            }\n        };\n\n        if (element instanceof HTMLElement) {\n            this.addDisposables(\n                addDisposableListener(element, 'focus', onFocus, true)\n            );\n            this.addDisposables(\n                addDisposableListener(element, 'blur', onBlur, true)\n            );\n        } else {\n            this.addDisposables(\n                addDisposableWindowListener(element, 'focus', onFocus, true)\n            );\n            this.addDisposables(\n                addDisposableWindowListener(element, 'blur', onBlur, true)\n            );\n        }\n    }\n\n    refreshState(): void {\n        this._refreshStateHandler();\n    }\n}\n\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event: Event): void {\n    (event as any)[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n\n// check if this event has been marked\nexport function quasiDefaultPrevented(event: Event): boolean {\n    return (event as any)[QUASI_PREVENT_DEFAULT_KEY];\n}\n","export function tail<T>(arr: T[]): [T[], T] {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function last<T>(arr: T[]): T | undefined {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n\nexport function sequenceEquals<T>(arr1: T[], arr2: T[]): boolean {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n    const index = arr.indexOf(value);\n\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n    const index = arr.indexOf(value);\n\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\n\nexport function firstIndex<T>(\n    array: T[] | ReadonlyArray<T>,\n    fn: (item: T) => boolean\n): number {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n\n        if (fn(element)) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nexport function remove<T>(array: T[], value: T): boolean {\n    const index = array.findIndex((t) => t === value);\n\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value: number, min: number, max: number): number => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\n\nexport const sequentialNumberGenerator = (): { next: () => string } => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n\nexport const range = (from: number, to?: number): number[] => {\n    const result: number[] = [];\n\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    } else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n\n    return result;\n};\n","import { IDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nimport { IView, LayoutPriority } from './splitview';\n\nexport class ViewItem {\n    private _size: number;\n    private _cachedVisibleSize: number | undefined = undefined;\n\n    set size(size: number) {\n        this._size = size;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get cachedVisibleSize(): number | undefined {\n        return this._cachedVisibleSize;\n    }\n\n    get visible(): boolean {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n\n    get minimumSize(): number {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize(): number {\n        return this.view.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize(): number {\n        return this.view.maximumSize;\n    }\n\n    get priority(): LayoutPriority | undefined {\n        return this.view.priority;\n    }\n    get snap(): boolean {\n        return !!this.view.snap;\n    }\n\n    set enabled(enabled: boolean) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n\n    constructor(\n        public container: HTMLElement,\n        public view: IView,\n        size: number | { cachedVisibleSize: number },\n        private disposable: IDisposable\n    ) {\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        } else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n\n    setVisible(visible: boolean, size?: number): void {\n        if (visible === this.visible) {\n            return;\n        }\n\n        if (visible) {\n            this.size = clamp(\n                this._cachedVisibleSize ?? 0,\n                this.viewMinimumSize,\n                this.viewMaximumSize\n            );\n            this._cachedVisibleSize = undefined;\n        } else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n\n        this.container.classList.toggle('visible', visible);\n\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n\n    dispose(): IView {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    removeClasses,\n    addClasses,\n    toggleClass,\n    getElementsByTagName,\n} from '../dom';\nimport { Event, Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nimport { IDisposable } from '../lifecycle';\n\nexport enum Orientation {\n    HORIZONTAL = 'HORIZONTAL',\n    VERTICAL = 'VERTICAL',\n}\n\nexport enum SashState {\n    MAXIMUM,\n    MINIMUM,\n    DISABLED,\n    ENABLED,\n}\n\nexport interface ISplitviewStyles {\n    separatorBorder: string;\n}\n\nexport interface SplitViewOptions {\n    readonly orientation: Orientation;\n    readonly descriptor?: ISplitViewDescriptor;\n    readonly proportionalLayout?: boolean;\n    readonly styles?: ISplitviewStyles;\n}\nexport enum LayoutPriority {\n    Low = 'low',\n    High = 'high',\n    Normal = 'normal',\n}\n\nexport interface IBaseView extends IDisposable {\n    minimumSize: number;\n    maximumSize: number;\n    snap?: boolean;\n    priority?: LayoutPriority;\n}\n\nexport interface IView extends IBaseView {\n    readonly element: HTMLElement | DocumentFragment;\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }>;\n    layout(size: number, orthogonalSize: number): void;\n    setVisible(visible: boolean): void;\n}\n\ninterface ISashItem {\n    container: HTMLElement;\n    disposable: () => void;\n}\n\ninterface ISashDragSnapState {\n    readonly index: number;\n    readonly limitDelta: number;\n    readonly size: number;\n}\n\ntype ViewItemSize = number | { cachedVisibleSize: number };\n\nexport type DistributeSizing = { type: 'distribute' };\nexport type SplitSizing = { type: 'split'; index: number };\nexport type InvisibleSizing = { type: 'invisible'; cachedVisibleSize: number };\nexport type Sizing = DistributeSizing | SplitSizing | InvisibleSizing;\n\nexport namespace Sizing {\n    export const Distribute: DistributeSizing = { type: 'distribute' };\n    export function Split(index: number): SplitSizing {\n        return { type: 'split', index };\n    }\n    export function Invisible(cachedVisibleSize: number): InvisibleSizing {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n}\n\nexport interface ISplitViewDescriptor {\n    size: number;\n    views: {\n        visible?: boolean;\n        size: number;\n        view: IView;\n    }[];\n}\n\nexport class Splitview {\n    private element: HTMLElement;\n    private viewContainer: HTMLElement;\n    private sashContainer: HTMLElement;\n    private viewItems: ViewItem[] = [];\n    private sashes: ISashItem[] = [];\n    private _orientation: Orientation;\n    private _size = 0;\n    private _orthogonalSize = 0;\n    private contentSize = 0;\n    private _proportions: number[] | undefined = undefined;\n    private proportionalLayout: boolean;\n    private _startSnappingEnabled = true;\n    private _endSnappingEnabled = true;\n\n    private readonly _onDidSashEnd = new Emitter<void>();\n    readonly onDidSashEnd = this._onDidSashEnd.event;\n    private readonly _onDidAddView = new Emitter<IView>();\n    readonly onDidAddView = this._onDidAddView.event;\n    private readonly _onDidRemoveView = new Emitter<IView>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    get size(): number {\n        return this._size;\n    }\n\n    set size(value: number) {\n        this._size = value;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    set orthogonalSize(value: number) {\n        this._orthogonalSize = value;\n    }\n\n    public get length(): number {\n        return this.viewItems.length;\n    }\n\n    public get proportions(): number[] | undefined {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(\n            this.orientation == Orientation.HORIZONTAL\n                ? 'horizontal'\n                : 'vertical'\n        );\n    }\n\n    get minimumSize(): number {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n\n    get maximumSize(): number {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n\n    get startSnappingEnabled(): boolean {\n        return this._startSnappingEnabled;\n    }\n\n    set startSnappingEnabled(startSnappingEnabled: boolean) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n\n    get endSnappingEnabled(): boolean {\n        return this._endSnappingEnabled;\n    }\n\n    set endSnappingEnabled(endSnappingEnabled: boolean) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n\n    constructor(\n        private readonly container: HTMLElement,\n        options: SplitViewOptions\n    ) {\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n\n        this.container.appendChild(this.element);\n\n        this.style(options.styles);\n\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing =\n                    viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                        ? viewDescriptor.size\n                        : ({\n                              type: 'invisible',\n                              cachedVisibleSize: viewDescriptor.size,\n                          } as InvisibleSizing);\n\n                const view = viewDescriptor.view;\n                this.addView(\n                    view,\n                    sizing,\n                    index,\n                    true\n                    // true skip layout\n                );\n            });\n\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n\n    style(styles?: ISplitviewStyles): void {\n        if (styles?.separatorBorder === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        } else {\n            addClasses(this.element, 'separator-border');\n            if (styles?.separatorBorder) {\n                this.element.style.setProperty(\n                    '--dv-separator-border',\n                    styles.separatorBorder\n                );\n            }\n        }\n    }\n\n    isViewVisible(index: number): boolean {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n\n    setViewVisible(index: number, visible: boolean): void {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        toggleClass(this.container, 'visible', visible);\n\n        const viewItem = this.viewItems[index];\n\n        toggleClass(this.container, 'visible', visible);\n\n        viewItem.setVisible(visible, viewItem.size);\n\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n\n    getViewSize(index: number): number {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n\n        return this.viewItems[index].size;\n    }\n\n    resizeView(index: number, size: number): void {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.Low\n            ),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(\n            size,\n            item.minimumSize,\n            Math.min(item.maximumSize, this._size)\n        );\n\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n\n    public getViews<T extends IView>(): T[] {\n        return this.viewItems.map((x) => x.view as T);\n    }\n\n    private onDidChange(item: ViewItem, size: number | undefined): void {\n        const index = this.viewItems.indexOf(item);\n\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n\n        item.size = size;\n\n        this.relayout([index]);\n    }\n\n    public addView(\n        view: IView,\n        size: number | Sizing = { type: 'distribute' },\n        index: number = this.viewItems.length,\n        skipLayout?: boolean\n    ): void {\n        const container = document.createElement('div');\n        container.className = 'view';\n\n        container.appendChild(view.element);\n\n        let viewSize: ViewItemSize;\n\n        if (typeof size === 'number') {\n            viewSize = size;\n        } else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        } else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        } else {\n            viewSize = view.minimumSize;\n        }\n\n        const disposable = view.onDidChange((newSize) =>\n            this.onDidChange(viewItem, newSize.size)\n        );\n\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        } else {\n            this.viewContainer.insertBefore(\n                container,\n                this.viewContainer.children.item(index)\n            );\n        }\n\n        this.viewItems.splice(index, 0, viewItem);\n\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n\n            const onPointerStart = (event: PointerEvent) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n\n                const start =\n                    this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n\n                const sashIndex = firstIndex(\n                    this.sashes,\n                    (s) => s.container === sash\n                );\n\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n\n                //\n                let snapBefore: ISashDragSnapState | undefined;\n                let snapAfter: ISashDragSnapState | undefined;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce(\n                    (r, i) => r + (this.viewItems[i].minimumSize - sizes[i]),\n                    0\n                );\n                const maxDeltaUp = upIndexes.reduce(\n                    (r, i) =>\n                        r + (this.viewItems[i].viewMaximumSize - sizes[i]),\n                    0\n                );\n                const maxDeltaDown =\n                    downIndexes.length === 0\n                        ? Number.POSITIVE_INFINITY\n                        : downIndexes.reduce(\n                              (r, i) =>\n                                  r +\n                                  (sizes[i] - this.viewItems[i].minimumSize),\n                              0\n                          );\n                const minDeltaDown =\n                    downIndexes.length === 0\n                        ? Number.NEGATIVE_INFINITY\n                        : downIndexes.reduce(\n                              (r, i) =>\n                                  r +\n                                  (sizes[i] -\n                                      this.viewItems[i].viewMaximumSize),\n                              0\n                          );\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(\n                        snappedViewItem.viewMinimumSize / 2\n                    );\n\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(\n                        snappedViewItem.viewMinimumSize / 2\n                    );\n\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n\n                const onPointerMove = (event: PointerEvent) => {\n                    const current =\n                        this._orientation === Orientation.HORIZONTAL\n                            ? event.clientX\n                            : event.clientY;\n                    const delta = current - start;\n\n                    this.resize(\n                        sashIndex,\n                        delta,\n                        sizes,\n                        undefined,\n                        undefined,\n                        minDelta,\n                        maxDelta,\n                        snapBefore,\n                        snapAfter\n                    );\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n\n                    this.saveProportions();\n\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n\n                    this._onDidSashEnd.fire(undefined);\n                };\n\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n\n            sash.addEventListener('pointerdown', onPointerStart);\n\n            const sashItem: ISashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n\n        if (\n            !skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute'\n        ) {\n            this.distributeViewSizes();\n        }\n\n        this._onDidAddView.fire(view);\n    }\n\n    distributeViewSizes(): void {\n        const flexibleViewItems: ViewItem[] = [];\n        let flexibleSize = 0;\n\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.Low\n        );\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n\n    public removeView(\n        index: number,\n        sizing?: Sizing,\n        skipLayout = false\n    ): IView {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n\n        if (!skipLayout) {\n            this.relayout();\n        }\n\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n\n        this._onDidRemoveView.fire(viewItem.view);\n\n        return viewItem.view;\n    }\n\n    getViewCachedVisibleSize(index: number): number | undefined {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n\n    public moveView(from: number, to: number): void {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing =\n            typeof cachedVisibleSize === 'undefined'\n                ? this.getViewSize(from)\n                : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.Low\n            );\n            const highPriorityIndexes = indexes.filter(\n                (i) => this.viewItems[i].priority === LayoutPriority.High\n            );\n\n            this.resize(\n                this.viewItems.length - 1,\n                size - previousSize,\n                undefined,\n                lowPriorityIndexes,\n                highPriorityIndexes\n            );\n        } else {\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n\n                item.size = clamp(\n                    Math.round(this.proportions[i] * size),\n                    item.minimumSize,\n                    item.maximumSize\n                );\n            }\n        }\n\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n\n    private relayout(\n        lowPriorityIndexes?: number[],\n        highPriorityIndexes?: number[]\n    ): void {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\n        this.resize(\n            this.viewItems.length - 1,\n            this._size - contentSize,\n            undefined,\n            lowPriorityIndexes,\n            highPriorityIndexes\n        );\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n\n    private distributeEmptySpace(lowPriorityIndex?: number): void {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.Low\n        );\n        const highPriorityIndexes = indexes.filter(\n            (i) => this.viewItems[i].priority === LayoutPriority.High\n        );\n\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(\n                item.size + emptyDelta,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - item.size;\n\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n\n    private saveProportions(): void {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.viewItems.map(\n                (i) => i.size / this.contentSize\n            );\n        }\n    }\n\n    private layoutViews(): void {\n        this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x: number[] = [];\n\n        this.updateSashEnablement();\n\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n\n    private findFirstSnapIndex(indexes: number[]): number | undefined {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n\n            if (!viewItem.visible) {\n                continue;\n            }\n\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n\n            if (\n                viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0\n            ) {\n                return undefined;\n            }\n\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n\n        return undefined;\n    }\n\n    private updateSashEnablement(): void {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(\n            (i) => (previous = i.size - i.minimumSize > 0 || previous)\n        );\n\n        previous = false;\n        const expandsDown = this.viewItems.map(\n            (i) => (previous = i.maximumSize - i.size > 0 || previous)\n        );\n\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n\n                const snappedBefore =\n                    typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter =\n                    typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n\n                if (\n                    snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)\n                ) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                } else if (\n                    snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)\n                ) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                } else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            } else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            } else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            } else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n\n    private updateSash(sash: ISashItem, state: SashState): void {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n\n    private resize = (\n        index: number,\n        delta: number,\n        sizes: number[] = this.viewItems.map((x) => x.size),\n        lowPriorityIndexes?: number[],\n        highPriorityIndexes?: number[],\n        overloadMinDelta: number = Number.NEGATIVE_INFINITY,\n        overloadMaxDelta: number = Number.POSITIVE_INFINITY,\n        snapBefore?: ISashDragSnapState,\n        snapAfter?: ISashDragSnapState\n    ): number => {\n        if (index < 0 || index > this.viewItems.length) {\n            return 0;\n        }\n\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        //\n        if (highPriorityIndexes) {\n            for (const i of highPriorityIndexes) {\n                pushToStart(upIndexes, i);\n                pushToStart(downIndexes, i);\n            }\n        }\n\n        if (lowPriorityIndexes) {\n            for (const i of lowPriorityIndexes) {\n                pushToEnd(upIndexes, i);\n                pushToEnd(downIndexes, i);\n            }\n        }\n        //\n        const upItems = upIndexes.map((i) => this.viewItems[i]);\n        const upSizes = upIndexes.map((i) => sizes[i]);\n        //\n        const downItems = downIndexes.map((i) => this.viewItems[i]);\n        const downSizes = downIndexes.map((i) => sizes[i]);\n        //\n        const minDeltaUp = upIndexes.reduce(\n            (_, i) => _ + this.viewItems[i].minimumSize - sizes[i],\n            0\n        );\n        const maxDeltaUp = upIndexes.reduce(\n            (_, i) => _ + this.viewItems[i].maximumSize - sizes[i],\n            0\n        );\n        //\n        const maxDeltaDown =\n            downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce(\n                      (_, i) => _ + sizes[i] - this.viewItems[i].minimumSize,\n\n                      0\n                  );\n        const minDeltaDown =\n            downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce(\n                      (_, i) => _ + sizes[i] - this.viewItems[i].maximumSize,\n                      0\n                  );\n        //\n        const minDelta = Math.max(minDeltaUp, minDeltaDown);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n        //\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n\n        if (snapped) {\n            return this.resize(\n                index,\n                delta,\n                sizes,\n                lowPriorityIndexes,\n                highPriorityIndexes,\n                overloadMinDelta,\n                overloadMaxDelta\n            );\n        }\n        //\n        const tentativeDelta = clamp(delta, minDelta, maxDelta);\n        let actualDelta = 0;\n        //\n        let deltaUp = tentativeDelta;\n\n        for (let i = 0; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(\n                upSizes[i] + deltaUp,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - upSizes[i];\n\n            actualDelta += viewDelta;\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        //\n        let deltaDown = actualDelta;\n        for (let i = 0; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(\n                downSizes[i] - deltaDown,\n                item.minimumSize,\n                item.maximumSize\n            );\n            const viewDelta = size - downSizes[i];\n\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        //\n        return delta;\n    };\n\n    private createViewContainer(): HTMLElement {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n\n    private createSashContainer(): HTMLElement {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n\n    private createContainer(): HTMLElement {\n        const element = document.createElement('div');\n        const orientationClassname =\n            this._orientation === Orientation.HORIZONTAL\n                ? 'horizontal'\n                : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n\n    public dispose(): void {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n\n        this.element.remove();\n    }\n}\n","import {\n    Splitview,\n    Orientation,\n    ISplitViewDescriptor,\n    Sizing,\n} from '../splitview/splitview';\nimport { CompositeDisposable, IDisposable } from '../lifecycle';\nimport { Emitter, Event } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nimport { PaneviewPanel } from './paneviewPanel';\n\ninterface PaneItem {\n    pane: PaneviewPanel;\n    disposable: IDisposable;\n}\n\nexport class Paneview extends CompositeDisposable implements IDisposable {\n    private element: HTMLElement;\n    private splitview: Splitview;\n    private paneItems: PaneItem[] = [];\n    private _orientation: Orientation;\n    private animationTimer: any | undefined;\n    private skipAnimation = false;\n\n    private readonly _onDidChange = new Emitter<void>();\n    readonly onDidChange: Event<void> = this._onDidChange.event;\n\n    get onDidAddView(): Event<PaneviewPanel> {\n        return <Event<PaneviewPanel>>this.splitview.onDidAddView;\n    }\n    get onDidRemoveView(): Event<PaneviewPanel> {\n        return <Event<PaneviewPanel>>this.splitview.onDidRemoveView;\n    }\n\n    get minimumSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get orientation(): Orientation {\n        return this.splitview.orientation;\n    }\n\n    get size(): number {\n        return this.splitview.size;\n    }\n\n    get orthogonalSize(): number {\n        return this.splitview.orthogonalSize;\n    }\n\n    constructor(\n        container: HTMLElement,\n        options: { orientation: Orientation; descriptor?: ISplitViewDescriptor }\n    ) {\n        super();\n\n        this._orientation = options.orientation ?? Orientation.VERTICAL;\n\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n\n        container.appendChild(this.element);\n\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(\n                pane.onDidChangeExpansionState(() => {\n                    this.setupAnimation();\n                    this._onDidChange.fire(undefined);\n                })\n            );\n\n            const paneItem: PaneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n\n        this.addDisposables(\n            this._onDidChange,\n            this.splitview.onDidSashEnd(() => {\n                this._onDidChange.fire(undefined);\n            }),\n            this.splitview.onDidAddView(() => {\n                this._onDidChange.fire();\n            }),\n            this.splitview.onDidRemoveView(() => {\n                this._onDidChange.fire();\n            })\n        );\n    }\n\n    public addPane(\n        pane: PaneviewPanel,\n        size?: number | Sizing,\n        index = this.splitview.length,\n        skipLayout = false\n    ): void {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n\n        const paneItem: PaneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n\n        this.paneItems.splice(index, 0, paneItem);\n\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n\n    getViewSize(index: number): number {\n        return this.splitview.getViewSize(index);\n    }\n\n    public getPanes(): PaneviewPanel[] {\n        return this.splitview.getViews();\n    }\n\n    public removePane(\n        index: number,\n        options: { skipDispose: boolean } = { skipDispose: false }\n    ): PaneItem {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n\n        return paneItem;\n    }\n\n    public moveView(from: number, to: number): void {\n        if (from === to) {\n            return;\n        }\n\n        const view = this.removePane(from, { skipDispose: true });\n\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        } finally {\n            this.skipAnimation = false;\n        }\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        this.splitview.layout(size, orthogonalSize);\n    }\n\n    private setupAnimation(): void {\n        if (this.skipAnimation) {\n            return;\n        }\n\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n\n        addClasses(this.element, 'animated');\n\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport { IView, LayoutPriority, Orientation } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { IGridView } from './gridview';\nimport { IDisposable } from '../lifecycle';\n\nexport class LeafNode implements IView {\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n    private _size: number;\n    private _orthogonalSize: number;\n    private _disposable: IDisposable;\n\n    private get minimumWidth(): number {\n        return this.view.minimumWidth;\n    }\n\n    private get maximumWidth(): number {\n        return this.view.maximumWidth;\n    }\n\n    private get minimumHeight(): number {\n        return this.view.minimumHeight;\n    }\n\n    private get maximumHeight(): number {\n        return this.view.maximumHeight;\n    }\n\n    get priority(): LayoutPriority | undefined {\n        return this.view.priority;\n    }\n\n    get snap(): boolean | undefined {\n        return this.view.snap;\n    }\n\n    get minimumSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n\n    get maximumSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n\n    get minimumOrthogonalSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n\n    get maximumOrthogonalSize(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get element(): HTMLElement {\n        return this.view.element;\n    }\n\n    get width(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n\n    get height(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n\n    constructor(\n        public readonly view: IGridView,\n        readonly orientation: Orientation,\n        orthogonalSize: number,\n        size = 0\n    ) {\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size:\n                        this.orientation === Orientation.VERTICAL\n                            ? event.width\n                            : event.height,\n                    orthogonalSize:\n                        this.orientation === Orientation.VERTICAL\n                            ? event.height\n                            : event.width,\n                });\n            } else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n\n    public setVisible(visible: boolean): void {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n\n    public layout(size: number, orthogonalSize: number): void {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n\n        this.view.layout(this.width, this.height);\n    }\n\n    public dispose(): void {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    IView,\n    Splitview,\n    Orientation,\n    Sizing,\n    LayoutPriority,\n    ISplitviewStyles,\n} from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { INodeDescriptor } from './gridview';\nimport { LeafNode } from './leafNode';\nimport { Node } from './types';\nimport { CompositeDisposable, IDisposable, Disposable } from '../lifecycle';\n\nexport class BranchNode extends CompositeDisposable implements IView {\n    readonly element: HTMLElement;\n    private splitview: Splitview;\n    private _orthogonalSize: number;\n    private _size: number;\n    private _childrenDisposable: IDisposable = Disposable.NONE;\n\n    public readonly children: Node[] = [];\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    get width(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n\n    get height(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n\n    get minimumSize(): number {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n\n    get maximumSize(): number {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n\n    get minimumOrthogonalSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumOrthogonalSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get minimumWidth(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n\n    get minimumHeight(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n\n    get maximumWidth(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n\n    get maximumHeight(): number {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n\n    get priority(): LayoutPriority {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n\n        const priorities = this.children.map((c) =>\n            typeof c.priority === 'undefined'\n                ? LayoutPriority.Normal\n                : c.priority\n        );\n\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        } else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n\n        return LayoutPriority.Normal;\n    }\n\n    constructor(\n        readonly orientation: Orientation,\n        readonly proportionalLayout: boolean,\n        readonly styles: ISplitviewStyles | undefined,\n        size: number,\n        orthogonalSize: number,\n        childDescriptors?: INodeDescriptor[]\n    ) {\n        super();\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        } else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible:\n                            childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                                ? childDescriptor.visible\n                                : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n\n        this.addDisposables(\n            this._onDidChange,\n            this.splitview.onDidSashEnd(() => {\n                this._onDidChange.fire({});\n            })\n        );\n\n        this.setupChildrenEvents();\n    }\n\n    setVisible(visible: boolean): void {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n\n    isChildVisible(index: number): boolean {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.isViewVisible(index);\n    }\n\n    setChildVisible(index: number, visible: boolean): void {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n\n        this.splitview.setViewVisible(index, visible);\n    }\n\n    moveChild(from: number, to: number): void {\n        if (from === to) {\n            return;\n        }\n\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n\n        if (from < to) {\n            to--;\n        }\n\n        this.splitview.moveView(from, to);\n\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n\n    getChildSize(index: number): number {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.getViewSize(index);\n    }\n\n    resizeChild(index: number, size: number): void {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.resizeView(index, size);\n    }\n\n    public layout(size: number, orthogonalSize: number) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n\n        this.splitview.layout(orthogonalSize, size);\n    }\n\n    public addChild(\n        node: Node,\n        size: number | Sizing,\n        index: number,\n        skipLayout?: boolean\n    ): void {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n\n    getChildCachedVisibleSize(index: number): number | undefined {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n\n    public removeChild(index: number, sizing?: Sizing): Node {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n\n    private _addChild(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n\n    private _removeChild(index: number): Node {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n\n        return child;\n    }\n\n    private setupChildrenEvents(): void {\n        this._childrenDisposable.dispose();\n\n        this._childrenDisposable = Event.any(\n            ...this.children.map((c) => c.onDidChange)\n        )((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n\n    public dispose(): void {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    ISplitviewStyles,\n    LayoutPriority,\n    Orientation,\n    Sizing,\n} from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Node } from './types';\nimport { Emitter, Event } from '../events';\nimport { IDisposable, MutableDisposable } from '../lifecycle';\nimport { Position } from '../dnd/droptarget';\n\nfunction findLeaf(candiateNode: Node, last: boolean): LeafNode {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(\n            candiateNode.children[last ? candiateNode.children.length - 1 : 0],\n            last\n        );\n    }\n    throw new Error('invalid node');\n}\n\nfunction flipNode<T extends Node>(\n    node: T,\n    size: number,\n    orthogonalSize: number\n): T {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(\n            orthogonal(node.orientation),\n            node.proportionalLayout,\n            node.styles,\n            size,\n            orthogonalSize\n        );\n\n        let totalSize = 0;\n\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize =\n                child instanceof BranchNode ? child.orthogonalSize : child.size;\n\n            let newSize =\n                node.size === 0\n                    ? 0\n                    : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n\n            result.addChild(\n                flipNode(child, orthogonalSize, newSize),\n                newSize,\n                0,\n                true\n            );\n        }\n\n        return result as T;\n    } else {\n        return new LeafNode(\n            node.view,\n            orthogonal(node.orientation),\n            orthogonalSize\n        ) as T;\n    }\n}\n\nexport function indexInParent(element: HTMLElement): number {\n    const parentElement = element.parentElement;\n\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n\n    let el = parentElement.firstElementChild;\n    let index = 0;\n\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n\n    return index;\n}\n\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element: HTMLElement): number[] {\n    const parentElement = element.parentElement;\n\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement!.parentElement!.parentElement!;\n    return [...getGridLocation(ancestor), index];\n}\n\nexport function getRelativeLocation(\n    rootOrientation: Orientation,\n    location: number[],\n    direction: Position\n): number[] {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n\n        return [...rest, index];\n    } else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\n\nexport function getDirectionOrientation(direction: Position): Orientation {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\n\nexport function getLocationOrientation(\n    rootOrientation: Orientation,\n    location: number[]\n): Orientation {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\n\nexport interface IViewSize {\n    width?: number;\n    height?: number;\n}\n\nexport interface IGridView {\n    readonly onDidChange: Event<IViewSize | undefined>;\n    readonly element: HTMLElement;\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    priority?: LayoutPriority;\n    layout(width: number, height: number): void;\n    toJSON(): object;\n    fromJSON?(json: object): void;\n    snap?: boolean;\n    setVisible?(visible: boolean): void;\n}\n\nexport const orthogonal = (orientation: Orientation) =>\n    orientation === Orientation.HORIZONTAL\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n\nexport interface GridLeafNode<T extends IGridView> {\n    readonly view: T;\n    readonly cachedVisibleSize: number | undefined;\n    readonly box: { width: number; height: number };\n}\n\nexport interface GridBranchNode<T extends IGridView> {\n    readonly children: GridNode<T>[];\n    readonly box: { width: number; height: number };\n}\n\nexport type GridNode<T extends IGridView> = GridLeafNode<T> | GridBranchNode<T>;\n\nexport function isGridBranchNode<T extends IGridView>(\n    node: GridNode<T>\n): node is GridBranchNode<T> {\n    return !!(node as any).children;\n}\n\nexport interface SerializedGridObject<T> {\n    type: 'leaf' | 'branch';\n    data: T | SerializedGridObject<T>[];\n    size?: number;\n    visible?: boolean;\n}\n\nconst serializeBranchNode = <T extends IGridView>(\n    node: GridNode<T>,\n    orientation: Orientation\n): SerializedGridObject<any> => {\n    const size =\n        orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n\n    return {\n        type: 'branch',\n        data: node.children.map((c) =>\n            serializeBranchNode(c, orthogonal(orientation))\n        ),\n        size,\n    };\n};\n\nexport interface ISerializedLeafNode<T = any> {\n    type: 'leaf';\n    data: T;\n    size: number;\n    visible?: boolean;\n}\n\nexport interface ISerializedBranchNode {\n    type: 'branch';\n    data: ISerializedNode[];\n    size: number;\n}\n\nexport type ISerializedNode = ISerializedLeafNode | ISerializedBranchNode;\n\nexport interface INodeDescriptor {\n    node: Node;\n    visible?: boolean;\n}\n\nexport interface IViewDeserializer {\n    fromJSON: (data: ISerializedLeafNode) => IGridView;\n}\n\nexport interface SerializedGridview<T> {\n    root: SerializedGridObject<T>;\n    width: number;\n    height: number;\n    orientation: Orientation;\n}\n\nexport class Gridview implements IDisposable {\n    private _root: BranchNode | undefined;\n    public readonly element: HTMLElement;\n    private disposable: MutableDisposable = new MutableDisposable();\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    public get length(): number {\n        return this._root ? this._root.children.length : 0;\n    }\n\n    public get orientation(): Orientation {\n        return this.root.orientation;\n    }\n\n    public set orientation(orientation: Orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n\n    get width(): number {\n        return this.root.width;\n    }\n    get height(): number {\n        return this.root.height;\n    }\n\n    get minimumWidth(): number {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight(): number {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth(): number {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight(): number {\n        return this.root.maximumHeight;\n    }\n\n    public serialize(): SerializedGridview<any> {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n\n    public dispose(): void {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n\n        this.element.remove();\n    }\n\n    public clear(): void {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(\n            orientation,\n            this.proportionalLayout,\n            this.styles,\n            this.root.size,\n            this.root.orthogonalSize\n        );\n    }\n\n    public deserialize(json: any, deserializer: IViewDeserializer): void {\n        const orientation = json.orientation;\n        const height =\n            orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(\n            json.root as ISerializedBranchNode,\n            orientation,\n            deserializer,\n            height\n        );\n    }\n\n    private _deserialize(\n        root: ISerializedBranchNode,\n        orientation: Orientation,\n        deserializer: IViewDeserializer,\n        orthogonalSize: number\n    ): void {\n        this.root = this._deserializeNode(\n            root,\n            orientation,\n            deserializer,\n            orthogonalSize\n        ) as BranchNode;\n    }\n\n    private _deserializeNode(\n        node: ISerializedNode,\n        orientation: Orientation,\n        deserializer: IViewDeserializer,\n        orthogonalSize: number\n    ): Node {\n        let result: Node;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(\n                        serializedChild,\n                        orthogonal(orientation),\n                        deserializer,\n                        node.size\n                    ),\n                    visible: (serializedChild as { visible: boolean }).visible,\n                } as INodeDescriptor;\n            });\n\n            result = new BranchNode(\n                orientation,\n                this.proportionalLayout,\n                this.styles,\n                node.size, // <- orthogonal size - flips at each depth\n                orthogonalSize, // <- size - flips at each depth\n\n                children\n            );\n        } else {\n            result = new LeafNode(\n                deserializer.fromJSON(node),\n                orientation,\n                orthogonalSize,\n                node.size\n            );\n        }\n\n        return result;\n    }\n\n    private get root(): BranchNode {\n        return this._root!;\n    }\n\n    private set root(root: BranchNode) {\n        const oldRoot = this._root;\n\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    public insertOrthogonalSplitviewAtRoot(): void {\n        if (!this._root) {\n            return;\n        }\n\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n\n        this._root = new BranchNode(\n            orthogonal(oldRoot.orientation),\n            this.proportionalLayout,\n            this.styles,\n            this.root.orthogonalSize,\n            this.root.size\n        );\n\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        } else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n\n            this._root.addChild(\n                /**\n                 * the child node will have the same orientation as the new root since\n                 * we are removing the inbetween node.\n                 * the entire 'tree' must be flipped recursively to ensure that the orientation\n                 * flips at each level\n                 */\n                flipNode(\n                    childReference,\n                    childReference.orthogonalSize,\n                    childReference.size\n                ),\n                Sizing.Distribute,\n                0\n            );\n        } else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n\n        this.element.appendChild(this._root.element);\n\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n\n    public next(location: number[]): LeafNode {\n        return this.progmaticSelect(location);\n    }\n\n    public previous(location: number[]): LeafNode {\n        return this.progmaticSelect(location, true);\n    }\n\n    getView(): GridBranchNode<IGridView>;\n    getView(location?: number[]): GridNode<IGridView>;\n    getView(location?: number[]): GridNode<IGridView> {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n\n    private _getViews(\n        node: Node,\n        orientation: Orientation,\n        cachedVisibleSize?: number\n    ): GridNode<IGridView> {\n        const box = { height: node.height, width: node.width };\n\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n\n        const children: GridNode<IGridView>[] = [];\n\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n\n            children.push(\n                this._getViews(\n                    child,\n                    orthogonal(orientation),\n                    nodeCachedVisibleSize\n                )\n            );\n        }\n\n        return { box, children };\n    }\n\n    private progmaticSelect(location: number[], reverse = false): LeafNode {\n        const [path, node] = this.getNode(location);\n\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n\n        return findLeaf(this.root, reverse);\n    }\n\n    constructor(\n        readonly proportionalLayout: boolean,\n        readonly styles: ISplitviewStyles | undefined,\n        orientation: Orientation\n    ) {\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(\n            orientation,\n            proportionalLayout,\n            styles,\n            0,\n            0\n        );\n    }\n\n    isViewVisible(location: number[]): boolean {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n\n        return parent.isChildVisible(index);\n    }\n\n    setViewVisible(location: number[], visible: boolean): void {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n\n        parent.setChildVisible(index, visible);\n    }\n\n    public moveView(parentLocation: number[], from: number, to: number): void {\n        const [, parent] = this.getNode(parentLocation);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        parent.moveChild(from, to);\n    }\n\n    public addView(\n        view: IGridView,\n        size: number | Sizing,\n        location: number[]\n    ): void {\n        const [rest, index] = tail(location);\n\n        const [pathToParent, parent] = this.getNode(rest);\n\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(\n                view,\n                orthogonal(parent.orientation),\n                parent.orthogonalSize\n            );\n            parent.addChild(node, size, index);\n        } else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n\n            let newSiblingSize: number | Sizing = 0;\n\n            const newSiblingCachedVisibleSize =\n                grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n\n            const newParent = new BranchNode(\n                parent.orientation,\n                this.proportionalLayout,\n                this.styles,\n                parent.size,\n                parent.orthogonalSize\n            );\n            grandParent.addChild(newParent, parent.size, parentIndex);\n\n            const newSibling = new LeafNode(\n                parent.view,\n                grandParent.orientation,\n                parent.size\n            );\n            newParent.addChild(newSibling, newSiblingSize, 0);\n\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n\n            const node = new LeafNode(\n                view,\n                grandParent.orientation,\n                parent.size\n            );\n            newParent.addChild(node, size, index);\n        }\n    }\n\n    public remove(view: IGridView, sizing?: Sizing): IGridView {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n\n    removeView(location: number[], sizing?: Sizing): IGridView {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        const nodeToRemove = parent.children[index];\n\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n\n        if (pathToParent.length === 0) {\n            // if the parent is root\n\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n\n            // and set that sibling node to be root\n            this.root = sibling;\n\n            return nodeToRemove.view;\n        }\n\n        // otherwise the parent is apart of a large sub-tree\n\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n\n        const isSiblingVisible = parent.isChildVisible(0);\n\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) =>\n            grandParent.getChildSize(i)\n        );\n\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(\n                parentIndex,\n                1,\n                ...sibling.children.map((c) => c.size)\n            );\n\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        } else {\n            // otherwise create a new leaf node and add that to the grandparent\n\n            const newSibling = new LeafNode(\n                sibling.view,\n                orthogonal(sibling.orientation),\n                sibling.size\n            );\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n\n        return nodeToRemove.view;\n    }\n\n    public layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.root.orientation === Orientation.HORIZONTAL\n                ? [height, width]\n                : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n\n    private getNode(\n        location: number[],\n        node: Node = this.root,\n        path: BranchNode[] = []\n    ): [BranchNode[], Node] {\n        if (location.length === 0) {\n            return [path, node];\n        }\n\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n\n        const [index, ...rest] = location;\n\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n\n        const child = node.children[index];\n        path.push(node);\n\n        return this.getNode(rest, child, path);\n    }\n}\n","import {\n    DockviewDropEvent,\n    IDockviewComponent,\n    SerializedDockview,\n} from '../dockview/dockviewComponent';\nimport {\n    AddGroupOptions,\n    AddPanelOptions,\n    MovementOptions,\n} from '../dockview/options';\nimport { Parameters } from '../panel/types';\nimport { Direction } from '../gridview/baseComponentGridview';\nimport {\n    AddComponentOptions,\n    IGridviewComponent,\n    SerializedGridviewComponent,\n} from '../gridview/gridviewComponent';\nimport { IGridviewPanel } from '../gridview/gridviewPanel';\n\nimport {\n    AddPaneviewComponentOptions,\n    SerializedPaneview,\n    IPaneviewComponent,\n} from '../paneview/paneviewComponent';\nimport { IPaneviewPanel } from '../paneview/paneviewPanel';\nimport {\n    AddSplitviewComponentOptions,\n    ISplitviewComponent,\n    SerializedSplitview,\n    SplitviewComponentUpdateOptions,\n} from '../splitview/splitviewComponent';\nimport { IView, Orientation, Sizing } from '../splitview/splitview';\nimport { ISplitviewPanel } from '../splitview/splitviewPanel';\nimport {\n    DockviewGroupPanel,\n    IDockviewGroupPanel,\n} from '../dockview/dockviewGroupPanel';\nimport { Emitter, Event } from '../events';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport { PaneviewDropEvent } from '../paneview/draggablePaneviewPanel';\nimport {\n    GroupDragEvent,\n    TabDragEvent,\n} from '../dockview/components/titlebar/tabsContainer';\n\nexport interface CommonApi<T = any> {\n    readonly height: number;\n    readonly width: number;\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    focus(): void;\n    layout(width: number, height: number): void;\n    fromJSON(data: T): void;\n    toJSON(): T;\n    clear(): void;\n}\n\nexport class SplitviewApi implements CommonApi<SerializedSplitview> {\n    get minimumSize(): number {\n        return this.component.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.component.maximumSize;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get length(): number {\n        return this.component.length;\n    }\n\n    get orientation(): Orientation {\n        return this.component.orientation;\n    }\n\n    get panels(): ISplitviewPanel[] {\n        return this.component.panels;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidAddView(): Event<IView> {\n        return this.component.onDidAddView;\n    }\n\n    get onDidRemoveView(): Event<IView> {\n        return this.component.onDidRemoveView;\n    }\n\n    constructor(private readonly component: ISplitviewComponent) {}\n\n    updateOptions(options: SplitviewComponentUpdateOptions): void {\n        this.component.updateOptions(options);\n    }\n\n    removePanel(panel: ISplitviewPanel, sizing?: Sizing): void {\n        this.component.removePanel(panel, sizing);\n    }\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    getPanel(id: string): ISplitviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    layout(width: number, height: number): void {\n        return this.component.layout(width, height);\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddSplitviewComponentOptions<T>\n    ): ISplitviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.component.movePanel(from, to);\n    }\n\n    fromJSON(data: SerializedSplitview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedSplitview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class PaneviewApi implements CommonApi<SerializedPaneview> {\n    get minimumSize(): number {\n        return this.component.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.component.maximumSize;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get panels(): IPaneviewPanel[] {\n        return this.component.panels;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidAddView(): Event<IPaneviewPanel> {\n        return this.component.onDidAddView;\n    }\n\n    get onDidRemoveView(): Event<IPaneviewPanel> {\n        return this.component.onDidRemoveView;\n    }\n\n    get onDidDrop(): Event<PaneviewDropEvent> {\n        const emitter = new Emitter<PaneviewDropEvent>();\n\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire({ ...e, api: this });\n        });\n\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n\n        return emitter.event;\n    }\n\n    constructor(private readonly component: IPaneviewComponent) {}\n\n    removePanel(panel: IPaneviewPanel): void {\n        this.component.removePanel(panel);\n    }\n\n    getPanel(id: string): IPaneviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.component.movePanel(from, to);\n    }\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    layout(width: number, height: number): void {\n        this.component.layout(width, height);\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddPaneviewComponentOptions<T>\n    ): IPaneviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    fromJSON(data: SerializedPaneview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedPaneview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class GridviewApi implements CommonApi<SerializedGridviewComponent> {\n    get minimumHeight(): number {\n        return this.component.minimumHeight;\n    }\n\n    get maximumHeight(): number {\n        return this.component.maximumHeight;\n    }\n\n    get minimumWidth(): number {\n        return this.component.minimumWidth;\n    }\n\n    get maximumWidth(): number {\n        return this.component.maximumWidth;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidAddPanel(): Event<IGridviewPanel> {\n        return this.component.onDidAddGroup;\n    }\n\n    get onDidRemovePanel(): Event<IGridviewPanel> {\n        return this.component.onDidRemoveGroup;\n    }\n\n    get onDidActivePanelChange(): Event<IGridviewPanel | undefined> {\n        return this.component.onDidActiveGroupChange;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get panels(): IGridviewPanel[] {\n        return this.component.groups;\n    }\n\n    get orientation(): Orientation {\n        return this.component.orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this.component.updateOptions({ orientation: value });\n    }\n\n    constructor(private readonly component: IGridviewComponent) {}\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    layout(width: number, height: number, force = false): void {\n        this.component.layout(width, height, force);\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddComponentOptions<T>\n    ): IGridviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    removePanel(panel: IGridviewPanel, sizing?: Sizing): void {\n        this.component.removePanel(panel, sizing);\n    }\n\n    movePanel(\n        panel: IGridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void {\n        this.component.movePanel(panel, options);\n    }\n\n    getPanel(id: string): IGridviewPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    fromJSON(data: SerializedGridviewComponent): void {\n        return this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedGridviewComponent {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n\nexport class DockviewApi implements CommonApi<SerializedDockview> {\n    get id(): string {\n        return this.component.id;\n    }\n\n    get width(): number {\n        return this.component.width;\n    }\n\n    get height(): number {\n        return this.component.height;\n    }\n\n    get minimumHeight(): number {\n        return this.component.minimumHeight;\n    }\n\n    get maximumHeight(): number {\n        return this.component.maximumHeight;\n    }\n\n    get minimumWidth(): number {\n        return this.component.minimumWidth;\n    }\n\n    get maximumWidth(): number {\n        return this.component.maximumWidth;\n    }\n\n    get size(): number {\n        return this.component.size;\n    }\n\n    get totalPanels(): number {\n        return this.component.totalPanels;\n    }\n\n    get onDidActiveGroupChange(): Event<DockviewGroupPanel | undefined> {\n        return this.component.onDidActiveGroupChange;\n    }\n\n    get onDidAddGroup(): Event<DockviewGroupPanel> {\n        return this.component.onDidAddGroup;\n    }\n\n    get onDidRemoveGroup(): Event<DockviewGroupPanel> {\n        return this.component.onDidRemoveGroup;\n    }\n\n    get onDidActivePanelChange(): Event<IDockviewPanel | undefined> {\n        return this.component.onDidActivePanelChange;\n    }\n\n    get onDidAddPanel(): Event<IDockviewPanel> {\n        return this.component.onDidAddPanel;\n    }\n\n    get onDidRemovePanel(): Event<IDockviewPanel> {\n        return this.component.onDidRemovePanel;\n    }\n\n    get onDidLayoutFromJSON(): Event<void> {\n        return this.component.onDidLayoutFromJSON;\n    }\n\n    get onDidLayoutChange(): Event<void> {\n        return this.component.onDidLayoutChange;\n    }\n\n    get onDidDrop(): Event<DockviewDropEvent> {\n        return this.component.onDidDrop;\n    }\n\n    get onWillDragGroup(): Event<GroupDragEvent> {\n        return this.component.onWillDragGroup;\n    }\n\n    get onWillDragPanel(): Event<TabDragEvent> {\n        return this.component.onWillDragPanel;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this.component.panels;\n    }\n\n    get groups(): DockviewGroupPanel[] {\n        return this.component.groups;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this.component.activePanel;\n    }\n\n    get activeGroup(): DockviewGroupPanel | undefined {\n        return this.component.activeGroup;\n    }\n\n    constructor(private readonly component: IDockviewComponent) {}\n\n    focus(): void {\n        this.component.focus();\n    }\n\n    getPanel(id: string): IDockviewPanel | undefined {\n        return this.component.getGroupPanel(id);\n    }\n\n    layout(width: number, height: number, force = false): void {\n        this.component.layout(width, height, force);\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddPanelOptions<T>\n    ): IDockviewPanel {\n        return this.component.addPanel(options);\n    }\n\n    removePanel(panel: IDockviewPanel): void {\n        this.component.removePanel(panel);\n    }\n\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel {\n        return this.component.addGroup(options);\n    }\n\n    moveToNext(options?: MovementOptions): void {\n        this.component.moveToNext(options);\n    }\n\n    moveToPrevious(options?: MovementOptions): void {\n        this.component.moveToPrevious(options);\n    }\n\n    closeAllGroups(): void {\n        return this.component.closeAllGroups();\n    }\n\n    removeGroup(group: IDockviewGroupPanel): void {\n        this.component.removeGroup(<DockviewGroupPanel>group);\n    }\n\n    getGroup(id: string): DockviewGroupPanel | undefined {\n        return this.component.getPanel(id);\n    }\n\n    addFloatingGroup(\n        item: IDockviewPanel | DockviewGroupPanel,\n        coord?: { x: number; y: number }\n    ): void {\n        return this.component.addFloatingGroup(item, coord);\n    }\n\n    fromJSON(data: SerializedDockview): void {\n        this.component.fromJSON(data);\n    }\n\n    toJSON(): SerializedDockview {\n        return this.component.toJSON();\n    }\n\n    clear(): void {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n\nexport interface IDragAndDropObserverCallbacks {\n    onDragEnter: (e: DragEvent) => void;\n    onDragLeave: (e: DragEvent) => void;\n    onDrop: (e: DragEvent) => void;\n    onDragEnd: (e: DragEvent) => void;\n    onDragOver?: (e: DragEvent) => void;\n}\n\nexport class DragAndDropObserver extends CompositeDisposable {\n    private target: EventTarget | null = null;\n\n    constructor(\n        private element: HTMLElement,\n        private callbacks: IDragAndDropObserverCallbacks\n    ) {\n        super();\n\n        this.registerListeners();\n    }\n\n    private registerListeners(): void {\n        this.addDisposables(\n            addDisposableListener(\n                this.element,\n                'dragenter',\n                (e: DragEvent) => {\n                    this.target = e.target;\n                    this.callbacks.onDragEnter(e);\n                },\n                true\n            )\n        );\n\n        this.addDisposables(\n            addDisposableListener(\n                this.element,\n                'dragover',\n                (e: DragEvent) => {\n                    e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n                    if (this.callbacks.onDragOver) {\n                        this.callbacks.onDragOver(e);\n                    }\n                },\n                true\n            )\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'dragleave', (e: DragEvent) => {\n                if (this.target === e.target) {\n                    this.target = null;\n\n                    this.callbacks.onDragLeave(e);\n                }\n            })\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'dragend', (e: DragEvent) => {\n                this.target = null;\n                this.callbacks.onDragEnd(e);\n            })\n        );\n\n        this.addDisposables(\n            addDisposableListener(this.element, 'drop', (e: DragEvent) => {\n                this.callbacks.onDrop(e);\n            })\n        );\n    }\n}\n\nexport interface IDraggedCompositeData {\n    eventData: DragEvent;\n    dragAndDropData: any;\n}\n\nexport interface ICompositeDragAndDropObserverCallbacks {\n    onDragEnter?: (e: IDraggedCompositeData) => void;\n    onDragLeave?: (e: IDraggedCompositeData) => void;\n    onDrop?: (e: IDraggedCompositeData) => void;\n    onDragOver?: (e: IDraggedCompositeData) => void;\n    onDragStart?: (e: IDraggedCompositeData) => void;\n    onDragEnd?: (e: IDraggedCompositeData) => void;\n}\n","import { toggleClass } from '../dom';\nimport { Emitter, Event } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nimport { Direction } from '../gridview/baseComponentGridview';\n\nfunction numberOrFallback(maybeNumber: any, fallback: number): number {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\n\nexport function directionToPosition(direction: Direction): Position {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\n\nexport function positionToDirection(position: Position): Direction {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\n\nexport interface DroptargetEvent {\n    readonly position: Position;\n    readonly nativeEvent: DragEvent;\n}\n\nexport type Position = 'top' | 'bottom' | 'left' | 'right' | 'center';\n\nexport type CanDisplayOverlay =\n    | boolean\n    | ((dragEvent: DragEvent, state: Position) => boolean);\n\nexport class Droptarget extends CompositeDisposable {\n    private targetElement: HTMLElement | undefined;\n    private overlayElement: HTMLElement | undefined;\n    private _state: Position | undefined;\n    private _acceptedTargetZonesSet: Set<Position>;\n\n    private readonly _onDrop = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDrop.event;\n\n    private static USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\n\n    get state(): Position | undefined {\n        return this._state;\n    }\n\n    constructor(\n        private readonly element: HTMLElement,\n        private readonly options: {\n            canDisplayOverlay: CanDisplayOverlay;\n            acceptedTargetZones: Position[];\n            overlayModel?: {\n                size?: { value: number; type: 'pixels' | 'percentage' };\n                activationSize?: {\n                    value: number;\n                    type: 'pixels' | 'percentage';\n                };\n            };\n        }\n    ) {\n        super();\n\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(\n            this.options.acceptedTargetZones\n        );\n\n        this.addDisposables(\n            this._onDrop,\n            new DragAndDropObserver(this.element, {\n                onDragEnter: () => undefined,\n                onDragOver: (e) => {\n                    if (this._acceptedTargetZonesSet.size === 0) {\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    const width = this.element.clientWidth;\n                    const height = this.element.clientHeight;\n\n                    if (width === 0 || height === 0) {\n                        return; // avoid div!0\n                    }\n\n                    const rect = (\n                        e.currentTarget as HTMLElement\n                    ).getBoundingClientRect();\n                    const x = e.clientX - rect.left;\n                    const y = e.clientY - rect.top;\n\n                    const quadrant = this.calculateQuadrant(\n                        this._acceptedTargetZonesSet,\n                        x,\n                        y,\n                        width,\n                        height\n                    );\n\n                    /**\n                     * If the event has already been used by another DropTarget instance\n                     * then don't show a second drop target, only one target should be\n                     * active at any one time\n                     */\n                    if (this.isAlreadyUsed(e) || quadrant === null) {\n                        // no drop target should be displayed\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    if (typeof this.options.canDisplayOverlay === 'boolean') {\n                        if (!this.options.canDisplayOverlay) {\n                            this.removeDropTarget();\n                            return;\n                        }\n                    } else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                        this.removeDropTarget();\n                        return;\n                    }\n\n                    this.markAsUsed(e);\n\n                    if (!this.targetElement) {\n                        this.targetElement = document.createElement('div');\n                        this.targetElement.className = 'drop-target-dropzone';\n                        this.overlayElement = document.createElement('div');\n                        this.overlayElement.className = 'drop-target-selection';\n                        this._state = 'center';\n                        this.targetElement.appendChild(this.overlayElement);\n\n                        this.element.classList.add('drop-target');\n                        this.element.append(this.targetElement);\n                    }\n\n                    this.toggleClasses(quadrant, width, height);\n\n                    this.setState(quadrant);\n                },\n                onDragLeave: () => {\n                    this.removeDropTarget();\n                },\n                onDragEnd: () => {\n                    this.removeDropTarget();\n                },\n                onDrop: (e) => {\n                    e.preventDefault();\n\n                    const state = this._state;\n\n                    this.removeDropTarget();\n\n                    if (state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({ position: state, nativeEvent: e });\n                    }\n                },\n            })\n        );\n    }\n\n    setTargetZones(acceptedTargetZones: Position[]): void {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n\n    dispose(): void {\n        this.removeDropTarget();\n        super.dispose();\n    }\n\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    private markAsUsed(event: DragEvent): void {\n        (event as any)[Droptarget.USED_EVENT_ID] = true;\n    }\n\n    /**\n     * Check is the event has already been used by another instance od DropTarget\n     */\n    private isAlreadyUsed(event: DragEvent): boolean {\n        const value = (event as any)[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n\n    private toggleClasses(\n        quadrant: Position,\n        width: number,\n        height: number\n    ): void {\n        if (!this.overlayElement) {\n            return;\n        }\n\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n\n        let size = 0.5;\n\n        if (this.options.overlayModel?.size?.type === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n\n        if (this.options.overlayModel?.size?.type === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                    width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                    height;\n            }\n        }\n\n        const translate = (1 - size) / 2;\n        const scale = size;\n\n        let transform: string;\n\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        } else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        } else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        } else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        } else {\n            transform = '';\n        }\n\n        this.overlayElement.style.transform = transform;\n\n        toggleClass(this.overlayElement, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlayElement, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlayElement, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlayElement, 'small-bottom', isSmallY && isBottom);\n    }\n\n    private setState(quadrant: Position): void {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n\n    private calculateQuadrant(\n        overlayType: Set<Position>,\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    ): Position | null {\n        const isPercentage =\n            this.options.overlayModel?.activationSize === undefined ||\n            this.options.overlayModel?.activationSize?.type === 'percentage';\n\n        const value = numberOrFallback(\n            this.options?.overlayModel?.activationSize?.value,\n            20\n        );\n\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(\n                overlayType,\n                x,\n                y,\n                width,\n                height,\n                value\n            );\n        }\n\n        return calculateQuadrantAsPixels(\n            overlayType,\n            x,\n            y,\n            width,\n            height,\n            value\n        );\n    }\n\n    private removeDropTarget(): void {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\n\nexport function calculateQuadrantAsPercentage(\n    overlayType: Set<Position>,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    threshold: number\n): Position | null {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n\n    if (!overlayType.has('center')) {\n        return null;\n    }\n\n    return 'center';\n}\n\nexport function calculateQuadrantAsPixels(\n    overlayType: Set<Position>,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    threshold: number\n): Position | null {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n\n    if (!overlayType.has('center')) {\n        return null;\n    }\n\n    return 'center';\n}\n","import {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../../../lifecycle';\nimport { Emitter, Event } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { IDockviewPanel } from '../../dockviewPanel';\n\nexport interface IContentContainer extends IDisposable {\n    onDidFocus: Event<void>;\n    onDidBlur: Event<void>;\n    element: HTMLElement;\n    layout(width: number, height: number): void;\n    openPanel: (panel: IDockviewPanel) => void;\n    closePanel: () => void;\n    show(): void;\n    hide(): void;\n}\n\nexport class ContentContainer\n    extends CompositeDisposable\n    implements IContentContainer\n{\n    private _element: HTMLElement;\n    private panel: IDockviewPanel | undefined;\n    private disposable = new MutableDisposable();\n\n    private readonly _onDidFocus = new Emitter<void>();\n    readonly onDidFocus: Event<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new Emitter<void>();\n    readonly onDidBlur: Event<void> = this._onDidBlur.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n\n    show(): void {\n        this.element.style.display = '';\n    }\n\n    hide(): void {\n        this.element.style.display = 'none';\n    }\n\n    public openPanel(panel: IDockviewPanel): void {\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if (this.panel.view?.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n\n        const disposable = new CompositeDisposable();\n\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n\n            const focusTracker = trackFocus(this._element);\n\n            disposable.addDisposables(\n                focusTracker,\n                focusTracker.onDidFocus(() => this._onDidFocus.fire()),\n                focusTracker.onDidBlur(() => this._onDidBlur.fire())\n            );\n\n            if (_onDidFocus) {\n                disposable.addDisposables(\n                    _onDidFocus(() => this._onDidFocus.fire())\n                );\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(\n                    _onDidBlur(() => this._onDidBlur.fire())\n                );\n            }\n\n            this._element.appendChild(this.panel.view.content.element);\n        }\n\n        this.disposable.value = disposable;\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    public closePanel(): void {\n        if (this.panel?.view?.content?.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n\n    public dispose(): void {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { IDockviewComponent } from './dockviewComponent';\nimport { DockviewPanelApi } from '../api/dockviewPanelApi';\nimport { PanelInitParameters, IPanel } from '../panel/types';\nimport { DockviewApi } from '../api/component.api';\nimport { Event } from '../events';\nimport { Optional } from '../types';\nimport { DockviewGroupPanel, IDockviewGroupPanel } from './dockviewGroupPanel';\n\nexport enum DockviewDropTargets {\n    Tab,\n    Panel,\n    TabContainer,\n    Edge,\n}\n\nexport interface HeaderPartInitParameters {\n    title: string;\n}\n\nexport interface GroupPanelPartInitParameters\n    extends PanelInitParameters,\n        HeaderPartInitParameters {\n    api: DockviewPanelApi;\n    containerApi: DockviewApi;\n}\n\nexport interface GroupPanelContentPartInitParameters\n    extends GroupPanelPartInitParameters {\n    tab: ITabRenderer;\n}\n\nexport interface WatermarkRendererInitParameters {\n    containerApi: DockviewApi;\n    group?: IDockviewGroupPanel;\n}\n\nexport interface IWatermarkRenderer\n    extends Optional<\n        Omit<IPanel, 'id' | 'init'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    init: (params: WatermarkRendererInitParameters) => void;\n    updateParentGroup(group: DockviewGroupPanel, visible: boolean): void;\n}\n\nexport interface ITabRenderer\n    extends Optional<\n        Omit<IPanel, 'id'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    init(parameters: GroupPanelPartInitParameters): void;\n    onGroupChange?(group: DockviewGroupPanel): void;\n    onPanelVisibleChange?(isPanelVisible: boolean): void;\n}\n\nexport interface IContentRenderer\n    extends Optional<\n        Omit<IPanel, 'id'>,\n        'dispose' | 'update' | 'layout' | 'toJSON'\n    > {\n    readonly element: HTMLElement;\n    readonly onDidFocus?: Event<void>;\n    readonly onDidBlur?: Event<void>;\n    init(parameters: GroupPanelContentPartInitParameters): void;\n    onGroupChange?(group: DockviewGroupPanel): void;\n    onPanelVisibleChange?(isPanelVisible: boolean): void;\n}\n\n// watermark component\n\nexport interface WatermarkPartInitParameters {\n    accessor: IDockviewComponent;\n}\n\n// constructors\n\nexport interface WatermarkConstructor {\n    new (): IWatermarkRenderer;\n}\n\nexport interface IGroupPanelInitParameters\n    extends PanelInitParameters,\n        HeaderPartInitParameters {\n    //\n}\n\nexport interface GroupviewPanelState {\n    id: string;\n    contentComponent?: string;\n    tabComponent?: string;\n    title?: string;\n    params?: { [key: string]: any };\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\n\nexport abstract class DragHandler extends CompositeDisposable {\n    private readonly dataDisposable = new MutableDisposable();\n    private readonly pointerEventsDisposable = new MutableDisposable();\n\n    private readonly _onDragStart = new Emitter<DragEvent>();\n    readonly onDragStart = this._onDragStart.event;\n\n    constructor(protected readonly el: HTMLElement) {\n        super();\n\n        this.addDisposables(\n            this._onDragStart,\n            this.dataDisposable,\n            this.pointerEventsDisposable\n        );\n\n        this.configure();\n    }\n\n    abstract getData(event: DragEvent): IDisposable;\n\n    protected isCancelled(_event: DragEvent): boolean {\n        return false;\n    }\n\n    private configure(): void {\n        this.addDisposables(\n            this._onDragStart,\n            addDisposableListener(this.el, 'dragstart', (event) => {\n                if (event.defaultPrevented || this.isCancelled(event)) {\n                    event.preventDefault();\n                    return;\n                }\n\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n\n                this.pointerEventsDisposable.value = {\n                    dispose: () => {\n                        for (const iframe of iframes) {\n                            iframe.style.pointerEvents = 'auto';\n                        }\n                    },\n                };\n\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n\n                this.el.classList.add('dv-dragged');\n                setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n\n                this.dataDisposable.value = this.getData(event);\n                this._onDragStart.fire(event);\n\n                if (event.dataTransfer) {\n                    event.dataTransfer.effectAllowed = 'move';\n\n                    const hasData = event.dataTransfer.items.length > 0;\n\n                    if (!hasData) {\n                        /**\n                         * Although this is not used by dockview many third party dnd libraries will check\n                         * dataTransfer.types to determine valid drag events.\n                         *\n                         * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                         * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                         * dnd logic. You can see the code at\n                         * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                         */\n                        event.dataTransfer.setData(\n                            'text/plain',\n                            '__dockview_internal_drag_event__'\n                        );\n                    }\n                }\n            }),\n            addDisposableListener(this.el, 'dragend', () => {\n                this.pointerEventsDisposable.dispose();\n                this.dataDisposable.dispose();\n            })\n        );\n    }\n}\n","import { addDisposableListener, Emitter, Event } from '../../../events';\nimport { CompositeDisposable, IDisposable } from '../../../lifecycle';\nimport {\n    getPanelData,\n    LocalSelectionTransfer,\n    PanelTransfer,\n} from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { DockviewDropTargets, ITabRenderer } from '../../types';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { DroptargetEvent, Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { IDockviewPanel } from '../../dockviewPanel';\n\nclass TabDragHandler extends DragHandler {\n    private readonly panelTransfer =\n        LocalSelectionTransfer.getInstance<PanelTransfer>();\n\n    constructor(\n        element: HTMLElement,\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel,\n        private readonly panel: IDockviewPanel\n    ) {\n        super(element);\n    }\n\n    getData(event: DragEvent): IDisposable {\n        this.panelTransfer.setData(\n            [new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)],\n            PanelTransfer.prototype\n        );\n\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n\nexport interface ITab extends IDisposable {\n    readonly panel: IDockviewPanel;\n    readonly element: HTMLElement;\n    setContent: (element: ITabRenderer) => void;\n    onChanged: Event<MouseEvent>;\n    onDrop: Event<DroptargetEvent>;\n    setActive(isActive: boolean): void;\n}\n\nexport class Tab extends CompositeDisposable implements ITab {\n    private readonly _element: HTMLElement;\n    private readonly droptarget: Droptarget;\n    private content: ITabRenderer | undefined = undefined;\n\n    private readonly _onChanged = new Emitter<MouseEvent>();\n    readonly onChanged: Event<MouseEvent> = this._onChanged.event;\n\n    private readonly _onDropped = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDropped.event;\n\n    private readonly _onDragStart = new Emitter<DragEvent>();\n    readonly onDragStart = this._onDragStart.event;\n\n    public get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly panel: IDockviewPanel,\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n\n        toggleClass(this.element, 'inactive-tab', true);\n\n        const dragHandler = new TabDragHandler(\n            this._element,\n            this.accessor,\n            this.group,\n            this.panel\n        );\n\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n\n                const data = getPanelData();\n\n                if (data && this.accessor.id === data.viewId) {\n                    if (\n                        data.panelId === null &&\n                        data.groupId === this.group.id\n                    ) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n\n                    return this.panel.id !== data.panelId;\n                }\n\n                return this.group.model.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Tab\n                );\n            },\n        });\n\n        this.addDisposables(\n            this._onChanged,\n            this._onDropped,\n            this._onDragStart,\n            dragHandler.onDragStart((event) => {\n                this._onDragStart.fire(event);\n            }),\n            dragHandler,\n            addDisposableListener(this._element, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    return;\n                }\n\n                this._onChanged.fire(event);\n            }),\n            this.droptarget.onDrop((event) => {\n                this._onDropped.fire(event);\n            }),\n            this.droptarget\n        );\n    }\n\n    public setActive(isActive: boolean): void {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n\n    public setContent(part: ITabRenderer): void {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n\n    public dispose(): void {\n        super.dispose();\n    }\n}\n","import { DockviewComponent } from '../dockview/dockviewComponent';\nimport { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\n\nexport class GroupDragHandler extends DragHandler {\n    private readonly panelTransfer =\n        LocalSelectionTransfer.getInstance<PanelTransfer>();\n\n    constructor(\n        element: HTMLElement,\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super(element);\n\n        this.addDisposables(\n            addDisposableListener(\n                element,\n                'mousedown',\n                (e) => {\n                    if (e.shiftKey) {\n                        /**\n                         * You cannot call e.preventDefault() because that will prevent drag events from firing\n                         * but we also need to stop any group overlay drag events from occuring\n                         * Use a custom event marker that can be checked by the overlay drag events\n                         */\n                        quasiPreventDefault(e);\n                    }\n                },\n                true\n            )\n        );\n    }\n\n    override isCancelled(_event: DragEvent): boolean {\n        if (this.group.api.isFloating && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n\n    getData(dragEvent: DragEvent): IDisposable {\n        const dataTransfer = dragEvent.dataTransfer;\n\n        this.panelTransfer.setData(\n            [new PanelTransfer(this.accessor.id, this.group.id, null)],\n            PanelTransfer.prototype\n        );\n\n        const style = window.getComputedStyle(this.el);\n\n        const bgColor = style.getPropertyValue(\n            '--dv-activegroup-visiblepanel-tab-background-color'\n        );\n        const color = style.getPropertyValue(\n            '--dv-activegroup-visiblepanel-tab-color'\n        );\n\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n\n            addGhostImage(dataTransfer, ghostElement);\n        }\n\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\n\nexport function addGhostImage(\n    dataTransfer: DataTransfer,\n    ghostElement: HTMLElement\n): void {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, DroptargetEvent } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { addDisposableListener, Emitter, Event } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { DockviewDropTargets } from '../../types';\n\nexport class VoidContainer extends CompositeDisposable {\n    private readonly _element: HTMLElement;\n    private readonly voidDropTarget: Droptarget;\n\n    private readonly _onDrop = new Emitter<DroptargetEvent>();\n    readonly onDrop: Event<DroptargetEvent> = this._onDrop.event;\n\n    private readonly _onDragStart = new Emitter<DragEvent>();\n    readonly onDragStart = this._onDragStart.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n\n        this.addDisposables(\n            this._onDrop,\n            this._onDragStart,\n            addDisposableListener(this._element, 'click', () => {\n                this.accessor.doSetGroupActive(this.group);\n            })\n        );\n\n        const handler = new GroupDragHandler(this._element, accessor, group);\n\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n\n                if (data && this.accessor.id === data.viewId) {\n                    if (\n                        data.panelId === null &&\n                        data.groupId === this.group.id\n                    ) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return last(this.group.panels)?.id !== data.panelId;\n                }\n\n                return group.model.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Panel\n                );\n            },\n        });\n\n        this.addDisposables(\n            handler,\n            handler.onDragStart((event) => {\n                this._onDragStart.fire(event);\n            }),\n            this.voidDropTarget.onDrop((event) => {\n                this._onDrop.fire(event);\n            }),\n            this.voidDropTarget\n        );\n    }\n}\n","import {\n    IDisposable,\n    CompositeDisposable,\n    IValueDisposable,\n} from '../../../lifecycle';\nimport { addDisposableListener, Emitter, Event } from '../../../events';\nimport { ITab, Tab } from '../tab/tab';\nimport { DockviewComponent } from '../../dockviewComponent';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewPanel, IDockviewPanel } from '../../dockviewPanel';\n\nexport interface TabDropIndexEvent {\n    readonly event: DragEvent;\n    readonly index: number;\n}\n\nexport interface TabDragEvent {\n    readonly nativeEvent: DragEvent;\n    readonly panel: IDockviewPanel;\n}\n\nexport interface GroupDragEvent {\n    readonly nativeEvent: DragEvent;\n    readonly group: DockviewGroupPanel;\n}\n\nexport interface ITabsContainer extends IDisposable {\n    readonly element: HTMLElement;\n    readonly panels: string[];\n    readonly size: number;\n    hidden: boolean;\n    delete: (id: string) => void;\n    indexOf: (id: string) => number;\n    onDrop: Event<TabDropIndexEvent>;\n    onTabDragStart: Event<TabDragEvent>;\n    onGroupDragStart: Event<GroupDragEvent>;\n    setActive: (isGroupActive: boolean) => void;\n    setActivePanel: (panel: IDockviewPanel) => void;\n    isActive: (tab: ITab) => boolean;\n    closePanel: (panel: IDockviewPanel) => void;\n    openPanel: (panel: IDockviewPanel, index?: number) => void;\n    setRightActionsElement(element: HTMLElement | undefined): void;\n    setLeftActionsElement(element: HTMLElement | undefined): void;\n    show(): void;\n    hide(): void;\n}\n\nexport class TabsContainer\n    extends CompositeDisposable\n    implements ITabsContainer\n{\n    private readonly _element: HTMLElement;\n    private readonly tabContainer: HTMLElement;\n    private readonly rightActionsContainer: HTMLElement;\n    private readonly leftActionsContainer: HTMLElement;\n    private readonly voidContainer: VoidContainer;\n\n    private tabs: IValueDisposable<ITab>[] = [];\n    private selectedIndex = -1;\n    private rightActions: HTMLElement | undefined;\n    private leftActions: HTMLElement | undefined;\n\n    private _hidden = false;\n\n    private readonly _onDrop = new Emitter<TabDropIndexEvent>();\n    readonly onDrop: Event<TabDropIndexEvent> = this._onDrop.event;\n\n    private readonly _onTabDragStart = new Emitter<TabDragEvent>();\n    readonly onTabDragStart: Event<TabDragEvent> = this._onTabDragStart.event;\n\n    private readonly _onGroupDragStart = new Emitter<GroupDragEvent>();\n    readonly onGroupDragStart: Event<GroupDragEvent> =\n        this._onGroupDragStart.event;\n\n    get panels(): string[] {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n\n    get size(): number {\n        return this.tabs.length;\n    }\n\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    set hidden(value: boolean) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n\n    show(): void {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n\n    hide(): void {\n        this._element.style.display = 'none';\n    }\n\n    setRightActionsElement(element: HTMLElement | undefined): void {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n\n    setLeftActionsElement(element: HTMLElement | undefined): void {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    public isActive(tab: ITab): boolean {\n        return (\n            this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab\n        );\n    }\n\n    public indexOf(id: string): number {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n\n    constructor(\n        private readonly accessor: DockviewComponent,\n        private readonly group: DockviewGroupPanel\n    ) {\n        super();\n\n        this.addDisposables(\n            this._onDrop,\n            this._onTabDragStart,\n            this._onGroupDragStart\n        );\n\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n\n        toggleClass(\n            this._element,\n            'dv-full-width-single-tab',\n            this.accessor.options.singleTabMode === 'fullwidth'\n        );\n\n        this.addDisposables(\n            this.accessor.onDidAddPanel((e) => {\n                if (e.api.group === this.group) {\n                    toggleClass(\n                        this._element,\n                        'dv-single-tab',\n                        this.size === 1\n                    );\n                }\n            }),\n            this.accessor.onDidRemovePanel((e) => {\n                if (e.api.group === this.group) {\n                    toggleClass(\n                        this._element,\n                        'dv-single-tab',\n                        this.size === 1\n                    );\n                }\n            })\n        );\n\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n\n        this.addDisposables(\n            this.voidContainer,\n            this.voidContainer.onDragStart((event) => {\n                this._onGroupDragStart.fire({\n                    nativeEvent: event,\n                    group: this.group,\n                });\n            }),\n            this.voidContainer.onDrop((event) => {\n                this._onDrop.fire({\n                    event: event.nativeEvent,\n                    index: this.tabs.length,\n                });\n            }),\n            addDisposableListener(\n                this.voidContainer.element,\n                'mousedown',\n                (event) => {\n                    const isFloatingGroupsEnabled =\n                        !this.accessor.options.disableFloatingGroups;\n\n                    if (\n                        isFloatingGroupsEnabled &&\n                        event.shiftKey &&\n                        !this.group.api.isFloating\n                    ) {\n                        event.preventDefault();\n\n                        const { top, left } =\n                            this.element.getBoundingClientRect();\n                        const { top: rootTop, left: rootLeft } =\n                            this.accessor.element.getBoundingClientRect();\n\n                        this.accessor.addFloatingGroup(\n                            this.group,\n                            {\n                                x: left - rootLeft + 20,\n                                y: top - rootTop + 20,\n                            },\n                            { inDragMode: true }\n                        );\n                    }\n                }\n            ),\n            addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    return;\n                }\n\n                const isLeftClick = event.button === 0;\n\n                if (isLeftClick) {\n                    this.accessor.doSetGroupActive(this.group);\n                }\n            })\n        );\n    }\n\n    public setActive(_isGroupActive: boolean) {\n        // noop\n    }\n\n    private addTab(\n        tab: IValueDisposable<ITab>,\n        index: number = this.tabs.length\n    ): void {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n\n        this.tabContainer.insertBefore(\n            tab.value.element,\n            this.tabContainer.children[index]\n        );\n\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n\n    public delete(id: string): void {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n\n        const { value, disposable } = tabToRemove;\n\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n\n    public setActivePanel(panel: IDockviewPanel): void {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n\n    public openPanel(\n        panel: IDockviewPanel,\n        index: number = this.tabs.length\n    ): void {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!panel.view?.tab) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n\n        const disposable = new CompositeDisposable(\n            tab.onDragStart((event) => {\n                this._onTabDragStart.fire({ nativeEvent: event, panel });\n            }),\n            tab.onChanged((event) => {\n                const isFloatingGroupsEnabled =\n                    !this.accessor.options.disableFloatingGroups;\n\n                const isFloatingWithOnePanel =\n                    this.group.api.isFloating && this.size === 1;\n\n                if (\n                    isFloatingGroupsEnabled &&\n                    !isFloatingWithOnePanel &&\n                    event.shiftKey\n                ) {\n                    event.preventDefault();\n\n                    const panel = this.accessor.getGroupPanel(tab.panel.id);\n\n                    const { top, left } = tab.element.getBoundingClientRect();\n                    const { top: rootTop, left: rootLeft } =\n                        this.accessor.element.getBoundingClientRect();\n\n                    this.accessor.addFloatingGroup(\n                        panel as DockviewPanel,\n                        {\n                            x: left - rootLeft,\n                            y: top - rootTop,\n                        },\n                        { inDragMode: true }\n                    );\n                    return;\n                }\n\n                const alreadyFocused =\n                    panel.id === this.group.model.activePanel?.id &&\n                    this.group.model.isContentFocused;\n\n                const isLeftClick = event.button === 0;\n\n                if (!isLeftClick || event.defaultPrevented) {\n                    return;\n                }\n\n                this.group.model.openPanel(panel, {\n                    skipFocus: alreadyFocused,\n                });\n            }),\n            tab.onDrop((event) => {\n                this._onDrop.fire({\n                    event: event.nativeEvent,\n                    index: this.tabs.findIndex((x) => x.value === tab),\n                });\n            })\n        );\n\n        const value: IValueDisposable<ITab> = { value: tab, disposable };\n\n        this.addTab(value, index);\n    }\n\n    public closePanel(panel: IDockviewPanel): void {\n        this.delete(panel.id);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData, PanelTransfer } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { DockviewComponent } from './dockviewComponent';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter, Event } from '../events';\nimport { IViewSize } from '../gridview/gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { IPanel, PanelInitParameters, PanelUpdateEvent } from '../panel/types';\nimport {\n    ContentContainer,\n    IContentContainer,\n} from './components/panel/content';\nimport {\n  GroupDragEvent,\n    ITabsContainer,\n    TabDragEvent,\n    TabsContainer,\n} from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets, IWatermarkRenderer } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { IDockviewPanel } from './dockviewPanel';\nimport { IHeaderActionsRenderer } from './options';\n\nexport interface DndService {\n    canDisplayOverlay(\n        group: IDockviewGroupPanelModel,\n        event: DragEvent,\n        target: DockviewDropTargets\n    ): boolean;\n    onDrop(\n        group: IDockviewGroupPanelModel,\n        event: DragEvent,\n        position: Position,\n        index?: number\n    ): void;\n}\n\nexport interface IGroupItem {\n    id: string;\n    header: { element: HTMLElement };\n    body: { element: HTMLElement };\n}\n\ninterface GroupMoveEvent {\n    groupId: string;\n    itemId?: string;\n    target: Position;\n    index?: number;\n}\n\ninterface CoreGroupOptions {\n    locked?: DockviewGroupPanelLocked;\n    hideHeader?: boolean;\n}\n\nexport interface GroupOptions extends CoreGroupOptions {\n    readonly panels?: IDockviewPanel[];\n    readonly activePanel?: IDockviewPanel;\n    readonly id?: string;\n}\n\nexport interface GroupPanelViewState extends CoreGroupOptions {\n    views: string[];\n    activeView?: string;\n    id: string;\n}\n\nexport interface GroupviewChangeEvent {\n    readonly panel: IDockviewPanel;\n}\n\nexport interface GroupviewDropEvent {\n    readonly nativeEvent: DragEvent;\n    readonly position: Position;\n    readonly index?: number;\n    getData(): PanelTransfer | undefined;\n}\n\nexport interface IHeader {\n    hidden: boolean;\n}\n\nexport type DockviewGroupPanelLocked = boolean | 'no-drop-target';\n\nexport interface IDockviewGroupPanelModel extends IPanel {\n    readonly isActive: boolean;\n    readonly size: number;\n    readonly panels: IDockviewPanel[];\n    readonly activePanel: IDockviewPanel | undefined;\n    readonly header: IHeader;\n    readonly isContentFocused: boolean;\n    readonly onDidDrop: Event<GroupviewDropEvent>;\n    readonly onDidAddPanel: Event<GroupviewChangeEvent>;\n    readonly onDidRemovePanel: Event<GroupviewChangeEvent>;\n    readonly onDidActivePanelChange: Event<GroupviewChangeEvent>;\n    readonly onMove: Event<GroupMoveEvent>;\n    locked: DockviewGroupPanelLocked;\n    setActive(isActive: boolean): void;\n    initialize(): void;\n    // state\n    isPanelActive: (panel: IDockviewPanel) => boolean;\n    indexOf(panel: IDockviewPanel): number;\n    // panel lifecycle\n    openPanel(\n        panel: IDockviewPanel,\n        options?: {\n            index?: number;\n            skipFocus?: boolean;\n            skipSetPanelActive?: boolean;\n            skipSetGroupActive?: boolean;\n        }\n    ): void;\n    closePanel(panel: IDockviewPanel): void;\n    closeAllPanels(): void;\n    containsPanel(panel: IDockviewPanel): boolean;\n    removePanel: (panelOrId: IDockviewPanel | string) => IDockviewPanel;\n    moveToNext(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void;\n    moveToPrevious(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void;\n    canDisplayOverlay(\n        event: DragEvent,\n        position: Position,\n        target: DockviewDropTargets\n    ): boolean;\n}\n\nexport class DockviewGroupPanelModel\n    extends CompositeDisposable\n    implements IDockviewGroupPanelModel\n{\n    private readonly tabsContainer: ITabsContainer;\n    private readonly contentContainer: IContentContainer;\n    private readonly dropTarget: Droptarget;\n    private _activePanel: IDockviewPanel | undefined;\n    private watermark?: IWatermarkRenderer;\n    private _isGroupActive = false;\n    private _locked: DockviewGroupPanelLocked = false;\n    private _isFloating = false;\n    private _rightHeaderActions: IHeaderActionsRenderer | undefined;\n    private _leftHeaderActions: IHeaderActionsRenderer | undefined;\n\n    private mostRecentlyUsed: IDockviewPanel[] = [];\n\n    private readonly _onDidChange = new Emitter<IViewSize | undefined>();\n    readonly onDidChange: Event<IViewSize | undefined> =\n        this._onDidChange.event;\n\n    private _width = 0;\n    private _height = 0;\n\n    private _panels: IDockviewPanel[] = [];\n\n    private readonly _onMove = new Emitter<GroupMoveEvent>();\n    readonly onMove: Event<GroupMoveEvent> = this._onMove.event;\n\n    private readonly _onDidDrop = new Emitter<GroupviewDropEvent>();\n    readonly onDidDrop: Event<GroupviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onTabDragStart = new Emitter<TabDragEvent>();\n    readonly onTabDragStart: Event<TabDragEvent> = this._onTabDragStart.event;\n\n    private readonly _onGroupDragStart = new Emitter<GroupDragEvent>();\n    readonly onGroupDragStart: Event<GroupDragEvent> =\n        this._onGroupDragStart.event;\n\n    private readonly _onDidAddPanel = new Emitter<GroupviewChangeEvent>();\n    readonly onDidAddPanel: Event<GroupviewChangeEvent> =\n        this._onDidAddPanel.event;\n\n    private readonly _onDidRemovePanel = new Emitter<GroupviewChangeEvent>();\n    readonly onDidRemovePanel: Event<GroupviewChangeEvent> =\n        this._onDidRemovePanel.event;\n\n    private readonly _onDidActivePanelChange =\n        new Emitter<GroupviewChangeEvent>();\n    readonly onDidActivePanelChange: Event<GroupviewChangeEvent> =\n        this._onDidActivePanelChange.event;\n\n    get element(): HTMLElement {\n        throw new Error('not supported');\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this._activePanel;\n    }\n\n    get locked(): DockviewGroupPanelLocked {\n        return this._locked;\n    }\n\n    set locked(value: DockviewGroupPanelLocked) {\n        this._locked = value;\n\n        toggleClass(\n            this.container,\n            'locked-groupview',\n            value === 'no-drop-target' || value\n        );\n    }\n\n    get isActive(): boolean {\n        return this._isGroupActive;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this._panels;\n    }\n\n    get size(): number {\n        return this._panels.length;\n    }\n\n    get isEmpty(): boolean {\n        return this._panels.length === 0;\n    }\n\n    get hasWatermark(): boolean {\n        return !!(\n            this.watermark && this.container.contains(this.watermark.element)\n        );\n    }\n\n    get header(): IHeader {\n        return this.tabsContainer;\n    }\n\n    get isContentFocused(): boolean {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(\n            document.activeElement,\n            this.contentContainer.element\n        );\n    }\n\n    get isFloating(): boolean {\n        return this._isFloating;\n    }\n\n    set isFloating(value: boolean) {\n        this._isFloating = value;\n\n        this.dropTarget.setTargetZones(\n            value ? ['center'] : ['top', 'bottom', 'left', 'right', 'center']\n        );\n\n        toggleClass(this.container, 'dv-groupview-floating', value);\n\n        this.groupPanel.api._onDidFloatingStateChange.fire({\n            isFloating: this.isFloating,\n        });\n    }\n\n    constructor(\n        private readonly container: HTMLElement,\n        private accessor: DockviewComponent,\n        public id: string,\n        private readonly options: GroupOptions,\n        private readonly groupPanel: DockviewGroupPanel\n    ) {\n        super();\n\n        toggleClass(this.container, 'groupview', true);\n\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n\n        this.contentContainer = new ContentContainer();\n\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (\n                    this.locked === 'no-drop-target' ||\n                    (this.locked && position === 'center')\n                ) {\n                    return false;\n                }\n\n                const data = getPanelData();\n\n                if (!data && event.shiftKey && !this.isFloating) {\n                    return false;\n                }\n\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n\n                    const groupHasOnePanelAndIsActiveDragElement =\n                        this._panels.length === 1 && data.groupId === this.id;\n\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n\n                return this.canDisplayOverlay(\n                    event,\n                    position,\n                    DockviewDropTargets.Panel\n                );\n            },\n        });\n\n        container.append(\n            this.tabsContainer.element,\n            this.contentContainer.element\n        );\n\n        this.header.hidden = !!options.hideHeader;\n        this.locked = options.locked || false;\n\n        this.addDisposables(\n            this._onTabDragStart,\n            this._onGroupDragStart,\n            this.tabsContainer.onTabDragStart((event) => {\n                this._onTabDragStart.fire(event);\n            }),\n            this.tabsContainer.onGroupDragStart((event) => {\n                this._onGroupDragStart.fire(event);\n            }),\n            this.tabsContainer.onDrop((event) => {\n                this.handleDropEvent(event.event, 'center', event.index);\n            }),\n            this.contentContainer.onDidFocus(() => {\n                this.accessor.doSetGroupActive(this.groupPanel, true);\n            }),\n            this.contentContainer.onDidBlur(() => {\n                // noop\n            }),\n            this.dropTarget.onDrop((event) => {\n                this.handleDropEvent(event.nativeEvent, event.position);\n            }),\n            this._onMove,\n            this._onDidChange,\n            this._onDidDrop,\n            this._onDidAddPanel,\n            this._onDidRemovePanel,\n            this._onDidActivePanelChange\n        );\n    }\n\n    initialize(): void {\n        if (this.options?.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n\n        if (this.options?.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(\n                    this.groupPanel\n                );\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(\n                this._rightHeaderActions.element\n            );\n        }\n\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(\n                    this.groupPanel\n                );\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(\n                this._leftHeaderActions.element\n            );\n        }\n    }\n\n    public indexOf(panel: IDockviewPanel): number {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n\n    public toJSON(): GroupPanelViewState {\n        const result: GroupPanelViewState = {\n            views: this.tabsContainer.panels,\n            activeView: this._activePanel?.id,\n            id: this.id,\n        };\n\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n\n        return result;\n    }\n\n    public moveToNext(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n\n        let normalizedIndex: number;\n\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        } else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        } else {\n            return;\n        }\n\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n\n    public moveToPrevious(options?: {\n        panel?: IDockviewPanel;\n        suppressRoll?: boolean;\n    }): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n\n        if (!options.panel) {\n            return;\n        }\n\n        const index = this.panels.indexOf(options.panel);\n\n        let normalizedIndex: number;\n\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        } else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        } else {\n            return;\n        }\n\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n\n    public containsPanel(panel: IDockviewPanel): boolean {\n        return this.panels.includes(panel);\n    }\n\n    init(_params: PanelInitParameters): void {\n        //noop\n    }\n\n    update(_params: PanelUpdateEvent): void {\n        //noop\n    }\n\n    focus(): void {\n        this._activePanel?.focus?.();\n    }\n\n    public openPanel(\n        panel: IDockviewPanel,\n        options: {\n            index?: number;\n            skipFocus?: boolean;\n            skipSetPanelActive?: boolean;\n            skipSetGroupActive?: boolean;\n        } = {}\n    ): void {\n        if (\n            typeof options.index !== 'number' ||\n            options.index > this.panels.length\n        ) {\n            options.index = this.panels.length;\n        }\n\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(\n                this.groupPanel,\n                !!options.skipFocus\n            );\n        }\n\n        this.updateContainer();\n    }\n\n    public removePanel(groupItemOrId: IDockviewPanel | string): IDockviewPanel {\n        const id =\n            typeof groupItemOrId === 'string'\n                ? groupItemOrId\n                : groupItemOrId.id;\n\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n\n        return this._removePanel(panelToRemove);\n    }\n\n    public closeAllPanels(): void {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        } else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n\n    public closePanel(panel: IDockviewPanel): void {\n        this.doClose(panel);\n    }\n\n    private doClose(panel: IDockviewPanel): void {\n        this.accessor.removePanel(panel);\n    }\n\n    public isPanelActive(panel: IDockviewPanel): boolean {\n        return this._activePanel === panel;\n    }\n\n    updateActions(element: HTMLElement | undefined): void {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n\n    public setActive(\n        isGroupActive: boolean,\n        skipFocus = false,\n        force = false\n    ): void {\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                this._activePanel?.focus?.();\n            }\n            return;\n        }\n\n        this._isGroupActive = isGroupActive;\n\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n\n        this.tabsContainer.setActive(this.isActive);\n\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n\n        this.updateContainer();\n\n        if (isGroupActive) {\n            if (!skipFocus) {\n                this._activePanel?.focus?.();\n            }\n        }\n    }\n\n    public layout(width: number, height: number): void {\n        this._width = width;\n        this._height = height;\n\n        this.contentContainer.layout(this._width, this._height);\n\n        if (this._activePanel?.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n\n    private _removePanel(panel: IDockviewPanel): IDockviewPanel {\n        const isActivePanel = this._activePanel === panel;\n\n        this.doRemovePanel(panel);\n\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n\n        this.updateContainer();\n        return panel;\n    }\n\n    private doRemovePanel(panel: IDockviewPanel): void {\n        const index = this.panels.indexOf(panel);\n\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(\n                this.mostRecentlyUsed.indexOf(panel),\n                1\n            );\n        }\n\n        this._onDidRemovePanel.fire({ panel });\n    }\n\n    private doAddPanel(\n        panel: IDockviewPanel,\n        index: number = this.panels.length,\n        skipSetActive = false\n    ): void {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n\n        this.tabsContainer.openPanel(panel, index);\n\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n\n        this.tabsContainer.show();\n        this.contentContainer.show();\n\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n\n        this._onDidAddPanel.fire({ panel });\n    }\n\n    private doSetActivePanel(panel: IDockviewPanel | undefined): void {\n        this._activePanel = panel;\n\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n\n            panel.layout(this._width, this._height);\n\n            this.updateMru(panel);\n\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n\n    private updateMru(panel: IDockviewPanel): void {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(\n                this.mostRecentlyUsed.indexOf(panel),\n                1\n            );\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n\n    private updateContainer(): void {\n        toggleClass(this.container, 'empty', this.isEmpty);\n\n        this.panels.forEach((panel) =>\n            panel.updateParentGroup(this.groupPanel, this.isActive)\n        );\n\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose?.();\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n\n    canDisplayOverlay(\n        event: DragEvent,\n        position: Position,\n        target: DockviewDropTargets\n    ): boolean {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id)!,\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n\n    private handleDropEvent(\n        event: DragEvent,\n        position: Position,\n        index?: number\n    ): void {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n\n        const data = getPanelData();\n\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n\n            const fromSameGroup =\n                this.tabsContainer.indexOf(data.panelId) !== -1;\n\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        } else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this.watermark?.element.remove();\n        this.watermark?.dispose?.();\n\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\n\nexport abstract class Resizable extends CompositeDisposable {\n    private readonly _element: HTMLElement;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(parentElement?: HTMLElement) {\n        super();\n\n        if (parentElement) {\n            this._element = parentElement;\n        } else {\n            this._element = document.createElement('div');\n            this._element.style.height = '100%';\n            this._element.style.width = '100%';\n            this._element.className = 'dv-resizable-container';\n        }\n\n        this.addDisposables(\n            watchElementResize(this._element, (entry) => {\n                if (this.isDisposed) {\n                    /**\n                     * resize is delayed through requestAnimationFrame so there is a small chance\n                     * the component has already been disposed of\n                     */\n                    return;\n                }\n                const { width, height } = entry.contentRect;\n                this.layout(width, height);\n            })\n        );\n    }\n\n    abstract layout(width: number, height: number): void;\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview, IGridView } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { IValueDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { ISplitviewStyles, Orientation, Sizing } from '../splitview/splitview';\nimport { IPanel } from '../panel/types';\nimport { MovementOptions2 } from '../dockview/options';\nimport { Resizable } from '../resizable';\n\nconst nextLayoutId = sequentialNumberGenerator();\n\nexport type Direction = 'left' | 'right' | 'above' | 'below' | 'within';\n\nexport function toTarget(direction: Direction): Position {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\n\nexport interface BaseGridOptions {\n    readonly proportionalLayout: boolean;\n    readonly orientation: Orientation;\n    readonly styles?: ISplitviewStyles;\n    readonly parentElement?: HTMLElement;\n}\n\nexport interface IGridPanelView extends IGridView, IPanel {\n    setActive(isActive: boolean): void;\n    readonly isActive: boolean;\n}\n\nexport interface IBaseGrid<T extends IGridPanelView> {\n    readonly element: HTMLElement;\n    readonly id: string;\n    readonly width: number;\n    readonly height: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly activeGroup: T | undefined;\n    readonly size: number;\n    readonly groups: T[];\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidRemoveGroup: Event<T>;\n    readonly onDidAddGroup: Event<T>;\n    readonly onDidActiveGroupChange: Event<T | undefined>;\n    getPanel(id: string): T | undefined;\n    toJSON(): object;\n    fromJSON(data: any): void;\n    clear(): void;\n    layout(width: number, height: number, force?: boolean): void;\n    setVisible(panel: T, visible: boolean): void;\n    isVisible(panel: T): boolean;\n}\n\nexport abstract class BaseGrid<T extends IGridPanelView>\n    extends Resizable\n    implements IBaseGrid<T>\n{\n    private readonly _id = nextLayoutId.next();\n    protected readonly _groups = new Map<string, IValueDisposable<T>>();\n    protected readonly gridview: Gridview;\n    //\n    protected _activeGroup: T | undefined;\n\n    private _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange = this._onDidLayoutChange.event;\n\n    private readonly _onDidRemoveGroup = new Emitter<T>();\n    readonly onDidRemoveGroup: Event<T> = this._onDidRemoveGroup.event;\n\n    protected readonly _onDidAddGroup = new Emitter<T>();\n    readonly onDidAddGroup: Event<T> = this._onDidAddGroup.event;\n\n    private readonly _onDidActiveGroupChange = new Emitter<T | undefined>();\n    readonly onDidActiveGroupChange: Event<T | undefined> =\n        this._onDidActiveGroupChange.event;\n\n    protected readonly _bufferOnDidLayoutChange = new TickDelayedEvent();\n\n    get id(): string {\n        return this._id;\n    }\n\n    get size(): number {\n        return this._groups.size;\n    }\n\n    get groups(): T[] {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n\n    get width(): number {\n        return this.gridview.width;\n    }\n\n    get height(): number {\n        return this.gridview.height;\n    }\n\n    get minimumHeight(): number {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight(): number {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth(): number {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth(): number {\n        return this.gridview.maximumWidth;\n    }\n\n    get activeGroup(): T | undefined {\n        return this._activeGroup;\n    }\n\n    constructor(options: BaseGridOptions) {\n        super(options.parentElement);\n\n        this.gridview = new Gridview(\n            !!options.proportionalLayout,\n            options.styles,\n            options.orientation\n        );\n\n        this.element.appendChild(this.gridview.element);\n\n        this.layout(0, 0, true); // set some elements height/widths\n\n        this.addDisposables(\n            this.gridview.onDidChange(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            Event.any(\n                this.onDidAddGroup,\n                this.onDidRemoveGroup,\n                this.onDidActiveGroupChange\n            )(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            this._bufferOnDidLayoutChange.onEvent(() => {\n                this._onDidLayoutChange.fire();\n            }),\n            this._bufferOnDidLayoutChange\n        );\n    }\n\n    public abstract toJSON(): object;\n\n    public abstract fromJSON(data: any): void;\n\n    public abstract clear(): void;\n\n    public setVisible(panel: T, visible: boolean): void {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n\n    public isVisible(panel: T): boolean {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n\n    protected doAddGroup(\n        group: T,\n        location: number[] = [0],\n        size?: number\n    ): void {\n        this.gridview.addView(group, size ?? Sizing.Distribute, location);\n\n        this._onDidAddGroup.fire(group);\n\n        this.doSetGroupActive(group);\n    }\n\n    protected doRemoveGroup(\n        group: T,\n        options?: { skipActive?: boolean; skipDispose?: boolean }\n    ): T {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n\n        const item = this._groups.get(group.id);\n\n        const view = this.gridview.remove(group, Sizing.Distribute);\n\n        if (item && !options?.skipDispose) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n\n        this._onDidRemoveGroup.fire(group);\n\n        if (!options?.skipActive && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n\n            this.doSetGroupActive(\n                groups.length > 0 ? groups[0].value : undefined\n            );\n        }\n\n        return view as T;\n    }\n\n    public getPanel(id: string): T | undefined {\n        return this._groups.get(id)?.value;\n    }\n\n    public doSetGroupActive(group: T | undefined, skipFocus?: boolean): void {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus?.();\n            }\n        }\n\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus?.();\n            }\n        }\n\n        this._activeGroup = group;\n\n        this._onDidActiveGroupChange.fire(group);\n    }\n\n    public removeGroup(group: T): void {\n        this.doRemoveGroup(group);\n    }\n\n    public moveToNext(options?: MovementOptions2): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.next(location)?.view;\n        this.doSetGroupActive(next as T);\n    }\n\n    public moveToPrevious(options?: MovementOptions2): void {\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.previous(location)?.view;\n        this.doSetGroupActive(next as T);\n    }\n\n    public layout(width: number, height: number, forceResize?: boolean): void {\n        const different =\n            forceResize || width !== this.width || height !== this.height;\n\n        if (!different) {\n            return;\n        }\n\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n\n        this.gridview.layout(width, height);\n    }\n\n    public dispose(): void {\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n\n        for (const group of this.groups) {\n            group.dispose();\n        }\n\n        this.gridview.dispose();\n\n        super.dispose();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { IPanel, Parameters } from '../panel/types';\n\nexport interface FocusEvent {\n    readonly isFocused: boolean;\n}\nexport interface PanelDimensionChangeEvent {\n    readonly width: number;\n    readonly height: number;\n}\n\nexport interface VisibilityEvent {\n    readonly isVisible: boolean;\n}\n\nexport interface ActiveEvent {\n    readonly isActive: boolean;\n}\n\nexport interface PanelApi {\n    // events\n    readonly onDidDimensionsChange: Event<PanelDimensionChangeEvent>;\n    readonly onDidFocusChange: Event<FocusEvent>;\n    readonly onDidVisibilityChange: Event<VisibilityEvent>;\n    readonly onDidActiveChange: Event<ActiveEvent>;\n    setVisible(isVisible: boolean): void;\n    setActive(): void;\n    updateParameters(parameters: Parameters): void;\n    /**\n     * The id of the panel that would have been assigned when the panel was created\n     */\n    readonly id: string;\n    /**\n     * Whether the panel holds the current focus\n     */\n    readonly isFocused: boolean;\n    /**\n     * Whether the panel is the actively selected panel\n     */\n    readonly isActive: boolean;\n    /**\n     * Whether the panel is visible\n     */\n    readonly isVisible: boolean;\n    /**\n     * The panel width in pixels\n     */\n    readonly width: number;\n    /**\n     * The panel height in pixels\n     */\n    readonly height: number;\n}\n\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable implements PanelApi {\n    private _isFocused = false;\n    private _isActive = false;\n    private _isVisible = true;\n    private _width = 0;\n    private _height = 0;\n\n    private readonly panelUpdatesDisposable = new MutableDisposable();\n\n    readonly _onDidDimensionChange = new Emitter<PanelDimensionChangeEvent>({\n        replay: true,\n    });\n    readonly onDidDimensionsChange = this._onDidDimensionChange.event;\n    //\n    readonly _onDidChangeFocus = new Emitter<FocusEvent>({\n        replay: true,\n    });\n    readonly onDidFocusChange: Event<FocusEvent> = this._onDidChangeFocus.event;\n    //\n    readonly _onFocusEvent = new Emitter<void>();\n    readonly onFocusEvent: Event<void> = this._onFocusEvent.event;\n    //\n    readonly _onDidVisibilityChange = new Emitter<VisibilityEvent>({\n        replay: true,\n    });\n    readonly onDidVisibilityChange: Event<VisibilityEvent> =\n        this._onDidVisibilityChange.event;\n    //\n\n    readonly _onVisibilityChange = new Emitter<VisibilityEvent>();\n    readonly onVisibilityChange: Event<VisibilityEvent> =\n        this._onVisibilityChange.event;\n    //\n    readonly _onDidActiveChange = new Emitter<ActiveEvent>({\n        replay: true,\n    });\n    readonly onDidActiveChange: Event<ActiveEvent> =\n        this._onDidActiveChange.event;\n    //\n    readonly _onActiveChange = new Emitter<void>();\n    readonly onActiveChange: Event<void> = this._onActiveChange.event;\n    //\n    readonly _onUpdateParameters = new Emitter<Parameters>();\n    readonly onUpdateParameters: Event<Parameters> =\n        this._onUpdateParameters.event;\n    //\n\n    get isFocused() {\n        return this._isFocused;\n    }\n\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    constructor(readonly id: string) {\n        super();\n\n        this.addDisposables(\n            this.onDidFocusChange((event) => {\n                this._isFocused = event.isFocused;\n            }),\n            this.onDidActiveChange((event) => {\n                this._isActive = event.isActive;\n            }),\n            this.onDidVisibilityChange((event) => {\n                this._isVisible = event.isVisible;\n            }),\n            this.onDidDimensionsChange((event) => {\n                this._width = event.width;\n                this._height = event.height;\n            }),\n            this.panelUpdatesDisposable,\n            this._onDidDimensionChange,\n            this._onDidChangeFocus,\n            this._onDidVisibilityChange,\n            this._onDidActiveChange,\n            this._onFocusEvent,\n            this._onActiveChange,\n            this._onVisibilityChange,\n            this._onUpdateParameters\n        );\n    }\n\n    public initialize(panel: IPanel): void {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event(\n            (parameters) => {\n                panel.update({\n                    params: parameters,\n                });\n            }\n        );\n    }\n\n    setVisible(isVisible: boolean) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(): void {\n        this._onActiveChange.fire();\n    }\n\n    updateParameters(parameters: Parameters): void {\n        this._onUpdateParameters.fire(parameters);\n    }\n\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { FunctionOrValue } from '../types';\nimport { PanelApiImpl, PanelApi } from './panelApi';\n\ninterface PanelConstraintChangeEvent2 {\n    readonly minimumSize?: FunctionOrValue<number>;\n    readonly maximumSize?: FunctionOrValue<number>;\n}\n\nexport interface PanelConstraintChangeEvent {\n    readonly minimumSize?: number;\n    readonly maximumSize?: number;\n}\n\nexport interface PanelSizeEvent {\n    readonly size: number;\n}\n\nexport interface SplitviewPanelApi extends PanelApi {\n    readonly onDidConstraintsChange: Event<PanelConstraintChangeEvent>;\n    setConstraints(value: PanelConstraintChangeEvent2): void;\n    setSize(event: PanelSizeEvent): void;\n}\n\nexport class SplitviewPanelApiImpl\n    extends PanelApiImpl\n    implements SplitviewPanelApi, IDisposable\n{\n    readonly _onDidConstraintsChangeInternal =\n        new Emitter<PanelConstraintChangeEvent2>();\n    readonly onDidConstraintsChangeInternal: Event<PanelConstraintChangeEvent2> =\n        this._onDidConstraintsChangeInternal.event;\n    //\n\n    readonly _onDidConstraintsChange = new Emitter<PanelConstraintChangeEvent>({\n        replay: true,\n    });\n    readonly onDidConstraintsChange: Event<PanelConstraintChangeEvent> =\n        this._onDidConstraintsChange.event;\n    //\n\n    readonly _onDidSizeChange = new Emitter<PanelSizeEvent>();\n    readonly onDidSizeChange: Event<PanelSizeEvent> =\n        this._onDidSizeChange.event;\n    //\n\n    constructor(id: string) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidConstraintsChangeInternal,\n            this._onDidConstraintsChange,\n            this._onDidSizeChange\n        );\n    }\n\n    setConstraints(value: PanelConstraintChangeEvent2) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n\n    setSize(event: PanelSizeEvent) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { PaneviewPanel } from '../paneview/paneviewPanel';\nimport { SplitviewPanelApi, SplitviewPanelApiImpl } from './splitviewPanelApi';\n\nexport interface ExpansionEvent {\n    readonly isExpanded: boolean;\n}\n\nexport interface PaneviewPanelApi extends SplitviewPanelApi {\n    readonly isExpanded: boolean;\n    readonly onDidExpansionChange: Event<ExpansionEvent>;\n    readonly onMouseEnter: Event<MouseEvent>;\n    readonly onMouseLeave: Event<MouseEvent>;\n    setExpanded(isExpanded: boolean): void;\n}\n\nexport class PaneviewPanelApiImpl\n    extends SplitviewPanelApiImpl\n    implements PaneviewPanelApi\n{\n    readonly _onDidExpansionChange = new Emitter<ExpansionEvent>({\n        replay: true,\n    });\n    readonly onDidExpansionChange: Event<ExpansionEvent> =\n        this._onDidExpansionChange.event;\n\n    readonly _onMouseEnter = new Emitter<MouseEvent>({});\n    readonly onMouseEnter: Event<MouseEvent> = this._onMouseEnter.event;\n    readonly _onMouseLeave = new Emitter<MouseEvent>({});\n    readonly onMouseLeave: Event<MouseEvent> = this._onMouseLeave.event;\n\n    private _pane: PaneviewPanel | undefined;\n\n    set pane(pane: PaneviewPanel) {\n        this._pane = pane;\n    }\n\n    constructor(id: string) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidExpansionChange,\n            this._onMouseEnter,\n            this._onMouseLeave\n        );\n    }\n\n    setExpanded(isExpanded: boolean): void {\n        this._pane?.setExpanded(isExpanded);\n    }\n\n    get isExpanded(): boolean {\n        return !!this._pane?.isExpanded();\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport {\n    IFrameworkPart,\n    PanelUpdateEvent,\n    PanelInitParameters,\n    IPanel,\n    Parameters,\n} from '../panel/types';\nimport { PanelApi, PanelApiImpl } from '../api/panelApi';\n\nexport interface BasePanelViewState {\n    readonly id: string;\n    readonly component: string;\n    readonly params?: Parameters;\n}\n\nexport interface BasePanelViewExported<T extends PanelApi> {\n    readonly id: string;\n    readonly api: T;\n    readonly width: number;\n    readonly height: number;\n    readonly params: Parameters | undefined;\n    focus(): void;\n    toJSON(): object;\n    update(event: PanelUpdateEvent): void;\n}\n\nexport abstract class BasePanelView<T extends PanelApiImpl>\n    extends CompositeDisposable\n    implements IPanel, BasePanelViewExported<T>\n{\n    private _height = 0;\n    private _width = 0;\n    private _element: HTMLElement;\n    protected part?: IFrameworkPart;\n    protected _params?: PanelInitParameters;\n\n    // provide an IFrameworkPart that will determine the rendered UI of this view piece.\n    protected abstract getComponent(): IFrameworkPart;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    get params(): Parameters | undefined {\n        return this._params?.params;\n    }\n\n    constructor(\n        public readonly id: string,\n        protected readonly component: string,\n        public readonly api: T\n    ) {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n\n        const focusTracker = trackFocus(this._element);\n\n        this.addDisposables(\n            this.api,\n            focusTracker.onDidFocus(() => {\n                this.api._onDidChangeFocus.fire({ isFocused: true });\n            }),\n            focusTracker.onDidBlur(() => {\n                this.api._onDidChangeFocus.fire({ isFocused: false });\n            }),\n            focusTracker\n        );\n    }\n\n    focus(): void {\n        this.api._onFocusEvent.fire();\n    }\n\n    layout(width: number, height: number): void {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n\n    init(parameters: PanelInitParameters): void {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n\n    update(event: PanelUpdateEvent): void {\n        // merge the new parameters with the existing parameters\n        this._params = {\n            ...this._params,\n            params: {\n                ...this._params?.params,\n                ...event.params,\n            },\n        };\n\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n\n        // update the view with the updated props\n        this.part?.update({ params: this._params.params });\n    }\n\n    toJSON(): BasePanelViewState {\n        const params = this._params?.params ?? {};\n\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n\n    dispose(): void {\n        this.api.dispose();\n        this.part?.dispose();\n\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter, Event } from '../events';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n    BasePanelViewState,\n} from '../gridview/basePanelView';\nimport { IDisposable } from '../lifecycle';\nimport {\n    IFrameworkPart,\n    PanelInitParameters,\n    PanelUpdateEvent,\n    Parameters,\n} from '../panel/types';\nimport { IView, Orientation } from '../splitview/splitview';\n\nexport interface PanePanelViewState extends BasePanelViewState {\n    headerComponent?: string;\n    title: string;\n}\n\nexport interface PanePanelInitParameter extends PanelInitParameters {\n    minimumBodySize?: number;\n    maximumBodySize?: number;\n    isExpanded?: boolean;\n    title: string;\n    containerApi: PaneviewApi;\n}\n\nexport interface PanePanelComponentInitParameter\n    extends PanePanelInitParameter {\n    api: PaneviewPanelApiImpl;\n}\n\nexport interface IPaneBodyPart extends IDisposable {\n    readonly element: HTMLElement;\n    update(params: PanelUpdateEvent): void;\n    init(parameters: PanePanelComponentInitParameter): void;\n}\n\nexport interface IPaneHeaderPart extends IDisposable {\n    readonly element: HTMLElement;\n    update(params: PanelUpdateEvent): void;\n    init(parameters: PanePanelComponentInitParameter): void;\n}\n\nexport interface IPaneview extends IView {\n    onDidChangeExpansionState: Event<boolean>;\n}\n\nexport interface IPaneviewPanel\n    extends BasePanelViewExported<PaneviewPanelApiImpl> {\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly minimumBodySize: number;\n    readonly maximumBodySize: number;\n    isExpanded(): boolean;\n    setExpanded(isExpanded: boolean): void;\n    headerVisible: boolean;\n}\n\nexport abstract class PaneviewPanel\n    extends BasePanelView<PaneviewPanelApiImpl>\n    implements IPaneview, IPaneviewPanel\n{\n    private _onDidChangeExpansionState: Emitter<boolean> = new Emitter<boolean>(\n        { replay: true }\n    );\n    onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    private headerSize = 22;\n    private _orthogonalSize = 0;\n    private _size = 0;\n    private _minimumBodySize = 100;\n    private _maximumBodySize: number = Number.POSITIVE_INFINITY;\n    private _isExpanded = false;\n    protected header?: HTMLElement;\n    protected body?: HTMLElement;\n    private bodyPart?: IPaneHeaderPart;\n    private headerPart?: IPaneBodyPart;\n    private expandedSize = 0;\n    private animationTimer: any | undefined;\n    private _orientation: Orientation;\n\n    private _headerVisible: boolean;\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation;\n    }\n\n    get minimumSize(): number {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n\n        return headerSize + minimumBodySize;\n    }\n\n    get maximumSize(): number {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n\n        return headerSize + maximumBodySize;\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get orthogonalSize(): number {\n        return this._orthogonalSize;\n    }\n\n    set orthogonalSize(size: number) {\n        this._orthogonalSize = size;\n    }\n\n    get minimumBodySize(): number {\n        return this._minimumBodySize;\n    }\n\n    set minimumBodySize(value: number) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n\n    get maximumBodySize(): number {\n        return this._maximumBodySize;\n    }\n\n    set maximumBodySize(value: number) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n\n    get headerVisible(): boolean {\n        return this._headerVisible;\n    }\n\n    set headerVisible(value: boolean) {\n        this._headerVisible = value;\n        this.header!.style.display = value ? '' : 'none';\n    }\n\n    constructor(\n        id: string,\n        component: string,\n        private readonly headerComponent: string | undefined,\n        orientation: Orientation,\n        isExpanded: boolean,\n        isHeaderVisible: boolean\n    ) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n\n        this._orientation = orientation;\n\n        this.element.classList.add('pane');\n\n        this.addDisposables(\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({ size: event.size });\n            }),\n            addDisposableListener(\n                this.element,\n                'mouseenter',\n                (ev: MouseEvent) => {\n                    this.api._onMouseEnter.fire(ev);\n                }\n            ),\n            addDisposableListener(\n                this.element,\n                'mouseleave',\n                (ev: MouseEvent) => {\n                    this.api._onMouseLeave.fire(ev);\n                }\n            )\n        );\n\n        this.addDisposables(\n            this._onDidChangeExpansionState,\n            this.onDidChangeExpansionState((isPanelExpanded) => {\n                this.api._onDidExpansionChange.fire({\n                    isExpanded: isPanelExpanded,\n                });\n            }),\n            this.api.onDidFocusChange((e) => {\n                if (!this.header) {\n                    return;\n                }\n                if (e.isFocused) {\n                    addClasses(this.header, 'focused');\n                } else {\n                    removeClasses(this.header, 'focused');\n                }\n            })\n        );\n\n        this.renderOnce();\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    isExpanded(): boolean {\n        return this._isExpanded;\n    }\n\n    setExpanded(expanded: boolean): void {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n\n        this._isExpanded = expanded;\n\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        } else {\n            this.animationTimer = setTimeout(() => {\n                this.body?.remove();\n            }, 200);\n        }\n\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n\n    layout(size: number, orthogonalSize: number): void {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] =\n            this.orientation === Orientation.HORIZONTAL\n                ? [size, orthogonalSize]\n                : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n\n    init(parameters: PanePanelInitParameter): void {\n        super.init(parameters);\n\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n\n        this.bodyPart.init({ ...parameters, api: this.api });\n        this.headerPart.init({ ...parameters, api: this.api });\n\n        this.body?.append(this.bodyPart.element);\n        this.header?.append(this.headerPart.element);\n\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n\n    toJSON(): PanePanelViewState {\n        const params = this._params as PanePanelInitParameter;\n        return {\n            ...super.toJSON(),\n            headerComponent: this.headerComponent,\n            title: params.title,\n        };\n    }\n\n    private renderOnce(): void {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n\n        this.element.appendChild(this.header);\n\n        this.body = document.createElement('div');\n\n        this.body.className = 'pane-body';\n\n        this.element.appendChild(this.body);\n    }\n\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent(): IFrameworkPart {\n        return {\n            update: (params: Parameters) => {\n                this.bodyPart?.update({ params });\n                this.headerPart?.update({ params });\n            },\n            dispose: () => {\n                this.bodyPart?.dispose();\n                this.headerPart?.dispose();\n            },\n        };\n    }\n\n    protected abstract getBodyComponent(): IPaneBodyPart;\n    protected abstract getHeaderComponent(): IPaneHeaderPart;\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport {\n    getPaneData,\n    LocalSelectionTransfer,\n    PaneTransfer,\n} from '../dnd/dataTransfer';\nimport { Droptarget, DroptargetEvent } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { IDisposable } from '../lifecycle';\nimport { Orientation } from '../splitview/splitview';\nimport { IPaneviewComponent } from './paneviewComponent';\nimport {\n    IPaneviewPanel,\n    PanePanelInitParameter,\n    PaneviewPanel,\n} from './paneviewPanel';\n\nexport interface PaneviewDropEvent extends DroptargetEvent {\n    panel: IPaneviewPanel;\n    getData: () => PaneTransfer | undefined;\n    api: PaneviewApi;\n}\n\nexport abstract class DraggablePaneviewPanel extends PaneviewPanel {\n    private handler: DragHandler | undefined;\n    private target: Droptarget | undefined;\n\n    private readonly _onDidDrop = new Emitter<PaneviewDropEvent>();\n    readonly onDidDrop = this._onDidDrop.event;\n\n    constructor(\n        private readonly accessor: IPaneviewComponent,\n        id: string,\n        component: string,\n        headerComponent: string | undefined,\n        orientation: Orientation,\n        isExpanded: boolean,\n        disableDnd: boolean\n    ) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n\n    private initDragFeatures(): void {\n        if (!this.header) {\n            return;\n        }\n\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData(): IDisposable {\n                LocalSelectionTransfer.getInstance().setData(\n                    [new PaneTransfer(accessorId, id)],\n                    PaneTransfer.prototype\n                );\n\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(\n                            PaneTransfer.prototype\n                        );\n                    },\n                };\n            }\n        })(this.header);\n\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n\n                if (data) {\n                    if (\n                        data.paneId !== this.id &&\n                        data.viewId === this.accessor.id\n                    ) {\n                        return true;\n                    }\n                }\n\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n\n                return false;\n            },\n        });\n\n        this.addDisposables(\n            this._onDidDrop,\n            this.handler,\n            this.target,\n            this.target.onDrop((event) => {\n                this.onDrop(event);\n            })\n        );\n    }\n\n    private onDrop(event: DroptargetEvent): void {\n        const data = getPaneData();\n\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire({\n                ...event,\n                panel: this,\n                api: new PaneviewApi(this.accessor),\n                getData: getPaneData,\n            });\n            return;\n        }\n\n        const containerApi = (this._params! as PanePanelInitParameter)\n            .containerApi;\n        const panelId = data.paneId;\n\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire({\n                ...event,\n                panel: this,\n                getData: getPaneData,\n                api: new PaneviewApi(this.accessor),\n            });\n            return;\n        }\n\n        const allPanels = containerApi.panels;\n\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { IPanel } from '../panel/types';\nimport { FunctionOrValue } from '../types';\nimport { PanelApiImpl, PanelApi } from './panelApi';\n\nexport interface GridConstraintChangeEvent {\n    readonly minimumWidth?: number;\n    readonly minimumHeight?: number;\n    readonly maximumWidth?: number;\n    readonly maximumHeight?: number;\n}\n\ninterface GridConstraintChangeEvent2 {\n    readonly minimumWidth?: FunctionOrValue<number>;\n    readonly minimumHeight?: FunctionOrValue<number>;\n    readonly maximumWidth?: FunctionOrValue<number>;\n    readonly maximumHeight?: FunctionOrValue<number>;\n}\n\nexport interface SizeEvent {\n    readonly width?: number;\n    readonly height?: number;\n}\n\nexport interface GridviewPanelApi extends PanelApi {\n    readonly onDidConstraintsChange: Event<GridConstraintChangeEvent>;\n    setConstraints(value: GridConstraintChangeEvent2): void;\n    setSize(event: SizeEvent): void;\n}\n\nexport class GridviewPanelApiImpl\n    extends PanelApiImpl\n    implements GridviewPanelApi\n{\n    private readonly _onDidConstraintsChangeInternal =\n        new Emitter<GridConstraintChangeEvent2>();\n    readonly onDidConstraintsChangeInternal: Event<GridConstraintChangeEvent2> =\n        this._onDidConstraintsChangeInternal.event;\n\n    readonly _onDidConstraintsChange = new Emitter<GridConstraintChangeEvent>({\n        replay: true,\n    });\n    readonly onDidConstraintsChange: Event<GridConstraintChangeEvent> =\n        this._onDidConstraintsChange.event;\n\n    private readonly _onDidSizeChange = new Emitter<SizeEvent>();\n    readonly onDidSizeChange: Event<SizeEvent> = this._onDidSizeChange.event;\n\n    constructor(id: string, panel?: IPanel) {\n        super(id);\n\n        this.addDisposables(\n            this._onDidConstraintsChangeInternal,\n            this._onDidConstraintsChange,\n            this._onDidSizeChange\n        );\n\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n\n    public setConstraints(value: GridConstraintChangeEvent): void {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n\n    public setSize(event: SizeEvent): void {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { PanelInitParameters } from '../panel/types';\nimport {\n    GridviewComponent,\n    IGridPanelComponentView,\n} from './gridviewComponent';\nimport { FunctionOrValue } from '../types';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n    BasePanelViewState,\n} from './basePanelView';\nimport {\n    GridviewPanelApi,\n    GridviewPanelApiImpl,\n} from '../api/gridviewPanelApi';\nimport { LayoutPriority } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { IViewSize } from './gridview';\n\nexport interface GridviewInitParameters extends PanelInitParameters {\n    minimumWidth?: number;\n    maximumWidth?: number;\n    minimumHeight?: number;\n    maximumHeight?: number;\n    priority?: LayoutPriority;\n    snap?: boolean;\n    accessor: GridviewComponent;\n    isVisible?: boolean;\n}\n\nexport interface IGridviewPanel<T extends GridviewPanelApi = GridviewPanelApi>\n    extends BasePanelViewExported<T> {\n    readonly minimumWidth: number;\n    readonly maximumWidth: number;\n    readonly minimumHeight: number;\n    readonly maximumHeight: number;\n    readonly priority: LayoutPriority | undefined;\n    readonly snap: boolean;\n}\n\nexport abstract class GridviewPanel<\n        T extends GridviewPanelApiImpl = GridviewPanelApiImpl\n    >\n    extends BasePanelView<T>\n    implements IGridPanelComponentView, IGridviewPanel\n{\n    private _evaluatedMinimumWidth = 0;\n    private _evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n    private _evaluatedMinimumHeight = 0;\n    private _evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n\n    private _minimumWidth: FunctionOrValue<number> = 0;\n    private _minimumHeight: FunctionOrValue<number> = 0;\n    private _maximumWidth: FunctionOrValue<number> = Number.MAX_SAFE_INTEGER;\n    private _maximumHeight: FunctionOrValue<number> = Number.MAX_SAFE_INTEGER;\n    private _priority?: LayoutPriority;\n    private _snap = false;\n\n    private readonly _onDidChange = new Emitter<IViewSize | undefined>();\n    readonly onDidChange: Event<IViewSize | undefined> =\n        this._onDidChange.event;\n\n    get priority(): LayoutPriority | undefined {\n        return this._priority;\n    }\n\n    get snap(): boolean {\n        return this._snap;\n    }\n\n    get minimumWidth(): number {\n        const width =\n            typeof this._minimumWidth === 'function'\n                ? this._minimumWidth()\n                : this._minimumWidth;\n\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n\n        return width;\n    }\n\n    get minimumHeight(): number {\n        const height =\n            typeof this._minimumHeight === 'function'\n                ? this._minimumHeight()\n                : this._minimumHeight;\n\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n\n        return height;\n    }\n\n    get maximumHeight(): number {\n        const height =\n            typeof this._maximumHeight === 'function'\n                ? this._maximumHeight()\n                : this._maximumHeight;\n\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n\n        return height;\n    }\n\n    get maximumWidth(): number {\n        const width =\n            typeof this._maximumWidth === 'function'\n                ? this._maximumWidth()\n                : this._maximumWidth;\n\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n\n        return width;\n    }\n\n    get isActive(): boolean {\n        return this.api.isActive;\n    }\n\n    constructor(\n        id: string,\n        component: string,\n        options?: {\n            minimumWidth?: number;\n            maximumWidth?: number;\n            minimumHeight?: number;\n            maximumHeight?: number;\n        },\n        api?: T\n    ) {\n        super(id, component, api ?? <T>new GridviewPanelApiImpl(id));\n\n        if (typeof options?.minimumWidth === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof options?.maximumWidth === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof options?.minimumHeight === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof options?.maximumHeight === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n\n        this.addDisposables(\n            this.api.onVisibilityChange((event) => {\n                const { isVisible } = event;\n                const { accessor } = this._params as GridviewInitParameters;\n                accessor.setVisible(this, isVisible);\n            }),\n            this.api.onActiveChange(() => {\n                const { accessor } = this._params as GridviewInitParameters;\n                accessor.setActive(this);\n            }),\n            this.api.onDidConstraintsChangeInternal((event) => {\n                if (\n                    typeof event.minimumWidth === 'number' ||\n                    typeof event.minimumWidth === 'function'\n                ) {\n                    this._minimumWidth = event.minimumWidth;\n                }\n                if (\n                    typeof event.minimumHeight === 'number' ||\n                    typeof event.minimumHeight === 'function'\n                ) {\n                    this._minimumHeight = event.minimumHeight;\n                }\n                if (\n                    typeof event.maximumWidth === 'number' ||\n                    typeof event.maximumWidth === 'function'\n                ) {\n                    this._maximumWidth = event.maximumWidth;\n                }\n                if (\n                    typeof event.maximumHeight === 'number' ||\n                    typeof event.maximumHeight === 'function'\n                ) {\n                    this._maximumHeight = event.maximumHeight;\n                }\n            }),\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({\n                    height: event.height,\n                    width: event.width,\n                });\n            }),\n            this._onDidChange\n        );\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    init(parameters: GridviewInitParameters): void {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n\n        super.init(parameters);\n\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n\n    private updateConstraints(): void {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n\n    toJSON(): GridPanelViewState {\n        const state = super.toJSON();\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        return {\n            ...state,\n            minimumHeight: minimum(this.minimumHeight),\n            maximumHeight: maximum(this.maximumHeight),\n            minimumWidth: minimum(this.minimumWidth),\n            maximumWidth: maximum(this.maximumWidth),\n            snap: this.snap,\n            priority: this.priority,\n        };\n    }\n}\n\nexport interface GridPanelViewState extends BasePanelViewState {\n    minimumHeight?: number;\n    maximumHeight?: number;\n    minimumWidth?: number;\n    maximumWidth?: number;\n    snap?: boolean;\n    priority?: LayoutPriority;\n}\n","import { Position } from '../dnd/droptarget';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { Emitter, Event } from '../events';\nimport { GridviewPanelApi, GridviewPanelApiImpl } from './gridviewPanelApi';\n\nexport interface DockviewGroupPanelApi extends GridviewPanelApi {\n    readonly onDidFloatingStateChange: Event<DockviewGroupPanelFloatingChangeEvent>;\n    readonly isFloating: boolean;\n    moveTo(options: { group: DockviewGroupPanel; position?: Position }): void;\n}\n\nexport interface DockviewGroupPanelFloatingChangeEvent {\n    readonly isFloating: boolean;\n}\n\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    private _group: DockviewGroupPanel | undefined;\n\n    readonly _onDidFloatingStateChange =\n        new Emitter<DockviewGroupPanelFloatingChangeEvent>();\n    readonly onDidFloatingStateChange: Event<DockviewGroupPanelFloatingChangeEvent> =\n        this._onDidFloatingStateChange.event;\n\n    get isFloating() {\n        if (!this._group) {\n            throw new Error(`DockviewGroupPanelApiImpl not initialized`);\n        }\n        return this._group.model.isFloating;\n    }\n\n    constructor(id: string, private readonly accessor: DockviewComponent) {\n        super(id);\n\n        this.addDisposables(this._onDidFloatingStateChange);\n    }\n\n    moveTo(options: { group: DockviewGroupPanel; position?: Position }): void {\n        if (!this._group) {\n            throw new Error(`DockviewGroupPanelApiImpl not initialized`);\n        }\n\n        this.accessor.moveGroupOrPanel(\n            options.group,\n            this._group.id,\n            undefined,\n            options.position ?? 'center'\n        );\n    }\n\n    initialize(group: DockviewGroupPanel): void {\n        this._group = group;\n    }\n}\n","import { IFrameworkPart } from '../panel/types';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport {\n    DockviewGroupPanelModel,\n    GroupOptions,\n    IDockviewGroupPanelModel,\n    IHeader,\n    DockviewGroupPanelLocked,\n} from './dockviewGroupPanelModel';\nimport { GridviewPanel, IGridviewPanel } from '../gridview/gridviewPanel';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport {\n    DockviewGroupPanelApi,\n    DockviewGroupPanelApiImpl,\n} from '../api/dockviewGroupPanelApi';\n\nexport interface IDockviewGroupPanel\n    extends IGridviewPanel<DockviewGroupPanelApi> {\n    model: IDockviewGroupPanelModel;\n    locked: DockviewGroupPanelLocked;\n    readonly size: number;\n    readonly panels: IDockviewPanel[];\n    readonly activePanel: IDockviewPanel | undefined;\n}\n\nexport type IDockviewGroupPanelPublic = IDockviewGroupPanel;\n\nexport class DockviewGroupPanel\n    extends GridviewPanel<DockviewGroupPanelApiImpl>\n    implements IDockviewGroupPanel\n{\n    private readonly _model: DockviewGroupPanelModel;\n\n    get panels(): IDockviewPanel[] {\n        return this._model.panels;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        return this._model.activePanel;\n    }\n\n    get size(): number {\n        return this._model.size;\n    }\n\n    get model(): DockviewGroupPanelModel {\n        return this._model;\n    }\n\n    get locked(): DockviewGroupPanelLocked {\n        return this._model.locked;\n    }\n\n    set locked(value: DockviewGroupPanelLocked) {\n        this._model.locked = value;\n    }\n\n    get header(): IHeader {\n        return this._model.header;\n    }\n\n    constructor(\n        accessor: DockviewComponent,\n        id: string,\n        options: GroupOptions\n    ) {\n        super(\n            id,\n            'groupview_default',\n            {\n                minimumHeight: 100,\n                minimumWidth: 100,\n            },\n            new DockviewGroupPanelApiImpl(id, accessor)\n        );\n\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n\n        this._model = new DockviewGroupPanelModel(\n            this.element,\n            accessor,\n            id,\n            options,\n            this\n        );\n    }\n\n    initialize(): void {\n        this._model.initialize();\n    }\n\n    setActive(isActive: boolean): void {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n\n    layout(width: number, height: number) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n\n    getComponent(): IFrameworkPart {\n        return this._model;\n    }\n\n    toJSON(): any {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter, Event } from '../events';\nimport { GridviewPanelApiImpl, GridviewPanelApi } from './gridviewPanelApi';\nimport { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { MutableDisposable } from '../lifecycle';\nimport { IDockviewPanel } from '../dockview/dockviewPanel';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { Position } from '../dnd/droptarget';\n\nexport interface TitleEvent {\n    readonly title: string;\n}\n\n/*\n * omit visibility modifiers since the visibility of a single group doesn't make sense\n * because it belongs to a groupview\n */\nexport interface DockviewPanelApi\n    extends Omit<\n        GridviewPanelApi,\n        'setVisible' | 'onDidConstraintsChange' | 'setConstraints'\n    > {\n    readonly group: DockviewGroupPanel;\n    readonly isGroupActive: boolean;\n    readonly title: string | undefined;\n    readonly onDidActiveGroupChange: Event<void>;\n    readonly onDidGroupChange: Event<void>;\n    close(): void;\n    setTitle(title: string): void;\n    moveTo(options: {\n        group: DockviewGroupPanel;\n        position?: Position;\n        index?: number;\n    }): void;\n}\n\nexport class DockviewPanelApiImpl\n    extends GridviewPanelApiImpl\n    implements DockviewPanelApi\n{\n    private _group: DockviewGroupPanel;\n\n    readonly _onDidTitleChange = new Emitter<TitleEvent>();\n    readonly onDidTitleChange = this._onDidTitleChange.event;\n\n    private readonly _onDidActiveGroupChange = new Emitter<void>();\n    readonly onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n\n    private readonly _onDidGroupChange = new Emitter<void>();\n    readonly onDidGroupChange = this._onDidGroupChange.event;\n\n    private readonly disposable = new MutableDisposable();\n\n    get title(): string | undefined {\n        return this.panel.title;\n    }\n\n    get isGroupActive(): boolean {\n        return !!this.group?.isActive;\n    }\n\n    set group(value: DockviewGroupPanel) {\n        const isOldGroupActive = this.isGroupActive;\n\n        this._group = value;\n\n        this._onDidGroupChange.fire();\n\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        private panel: IDockviewPanel,\n        group: DockviewGroupPanel,\n        private readonly accessor: DockviewComponent\n    ) {\n        super(panel.id);\n\n        this.initialize(panel);\n\n        this._group = group;\n\n        this.addDisposables(\n            this.disposable,\n            this._onDidTitleChange,\n            this._onDidGroupChange,\n            this._onDidActiveGroupChange\n        );\n    }\n\n    moveTo(options: {\n        group: DockviewGroupPanel;\n        position?: Position;\n        index?: number;\n    }): void {\n        this.accessor.moveGroupOrPanel(\n            options.group,\n            this._group.id,\n            this.panel.id,\n            options.position ?? 'center',\n            options.index\n        );\n    }\n\n    setTitle(title: string): void {\n        this.panel.setTitle(title);\n    }\n\n    close(): void {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport {\n    DockviewPanelApi,\n    DockviewPanelApiImpl,\n} from '../api/dockviewPanelApi';\nimport { GroupviewPanelState, IGroupPanelInitParameters } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { CompositeDisposable, IDisposable } from '../lifecycle';\nimport { IPanel, PanelUpdateEvent, Parameters } from '../panel/types';\nimport { IDockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewComponent } from './dockviewComponent';\n\nexport interface IDockviewPanel extends IDisposable, IPanel {\n    readonly view: IDockviewPanelModel;\n    readonly group: DockviewGroupPanel;\n    readonly api: DockviewPanelApi;\n    readonly title: string | undefined;\n    readonly params: Parameters | undefined;\n    updateParentGroup(group: DockviewGroupPanel, isGroupActive: boolean): void;\n    init(params: IGroupPanelInitParameters): void;\n    toJSON(): GroupviewPanelState;\n    setTitle(title: string): void;\n    update(event: PanelUpdateEvent): void;\n}\n\nexport class DockviewPanel\n    extends CompositeDisposable\n    implements IDockviewPanel\n{\n    readonly api: DockviewPanelApiImpl;\n    private _group: DockviewGroupPanel;\n    private _params?: Parameters;\n\n    private _title: string | undefined;\n\n    get params(): Parameters | undefined {\n        return this._params;\n    }\n\n    get title(): string | undefined {\n        return this._title;\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        public readonly id: string,\n        accessor: DockviewComponent,\n        private readonly containerApi: DockviewApi,\n        group: DockviewGroupPanel,\n        readonly view: IDockviewPanelModel\n    ) {\n        super();\n        this._group = group;\n\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor);\n\n        this.addDisposables(\n            this.api.onActiveChange(() => {\n                accessor.setActivePanel(this);\n            }),\n            this.api.onDidSizeChange((event) => {\n                // forward the resize event to the group since if you want to resize a panel\n                // you are actually just resizing the panels parent which is the group\n                this.group.api.setSize(event);\n            })\n        );\n    }\n\n    public init(params: IGroupPanelInitParameters): void {\n        this._params = params.params;\n\n        this.view.init({\n            ...params,\n            api: this.api,\n            containerApi: this.containerApi,\n        });\n\n        this.setTitle(params.title);\n    }\n\n    focus(): void {\n        this.api._onFocusEvent.fire();\n    }\n\n    public toJSON(): GroupviewPanelState {\n        return <GroupviewPanelState>{\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params:\n                Object.keys(this._params || {}).length > 0\n                    ? this._params\n                    : undefined,\n            title: this.title,\n        };\n    }\n\n    setTitle(title: string): void {\n        const didTitleChange = title !== this.title;\n\n        if (didTitleChange) {\n            this._title = title;\n\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        // merge the new parameters with the existing parameters\n        this._params = {\n            ...(this._params || {}),\n            ...event.params,\n        };\n\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n\n    public updateParentGroup(\n        group: DockviewGroupPanel,\n        isGroupActive: boolean\n    ): void {\n        this._group = group;\n        this.api.group = group;\n\n        const isPanelVisible = this._group.model.isPanelActive(this);\n\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n\n        this.view.updateParentGroup(\n            this._group,\n            this._group.model.isPanelActive(this)\n        );\n    }\n\n    public layout(width: number, height: number): void {\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n\n        this.view.layout(width, height);\n    }\n\n    public dispose(): void {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}): SVGSVGElement => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\n\nexport const createCloseButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 28 28',\n        path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n    });\n\nexport const createExpandMoreButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 24 15',\n        path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n    });\n\nexport const createChevronRightButton = (): SVGSVGElement =>\n    createSvgElementFromPath({\n        width: '11',\n        height: '11',\n        viewbox: '0 0 15 25',\n        path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n    });\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { ITabRenderer, GroupPanelPartInitParameters } from '../../types';\nimport { addDisposableListener } from '../../../events';\nimport { PanelUpdateEvent } from '../../../panel/types';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { createCloseButton } from '../../../svg';\n\nexport class DefaultTab extends CompositeDisposable implements ITabRenderer {\n    private _element: HTMLElement;\n    private _content: HTMLElement;\n    private _actionContainer: HTMLElement;\n    private _list: HTMLElement;\n    private action: HTMLElement;\n    //\n    private params: GroupPanelPartInitParameters = {} as any;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(\n            addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n                ev.preventDefault();\n            })\n        );\n\n        this.render();\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this.params = { ...this.params, ...event.params };\n        this.render();\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    public init(params: GroupPanelPartInitParameters): void {\n        this.params = params;\n        this._content.textContent = params.title;\n\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n\n    onGroupChange(_group: DockviewGroupPanel): void {\n        this.render();\n    }\n\n    onPanelVisibleChange(_isPanelVisible: boolean): void {\n        this.render();\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    private render(): void {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export interface FrameworkFactory<T> {\n    createComponent: (id: string, componentId: string, component: any) => T;\n}\n\nexport function createComponent<T>(\n    id: string,\n    componentName?: string,\n    components: {\n        [componentName: string]: { new (id: string, component: string): T };\n    } = {},\n    frameworkComponents: {\n        [componentName: string]: any;\n    } = {},\n    createFrameworkComponent?: FrameworkFactory<T>,\n    fallback?: () => T\n): T {\n    const Component =\n        typeof componentName === 'string'\n            ? components[componentName]\n            : undefined;\n    const FrameworkComponent =\n        typeof componentName === 'string'\n            ? frameworkComponents[componentName]\n            : undefined;\n\n    if (Component && FrameworkComponent) {\n        throw new Error(\n            `Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`\n        );\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(\n                `Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`\n            );\n        }\n        return createFrameworkComponent.createComponent(\n            id,\n            componentName!,\n            FrameworkComponent\n        );\n    }\n\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(\n            `Cannot create '${id}', no component '${componentName}' provided`\n        );\n    }\n\n    return new Component(id, componentName!);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport {\n    GroupPanelPartInitParameters,\n    IContentRenderer,\n    ITabRenderer,\n} from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { IDisposable } from '../lifecycle';\nimport { createComponent } from '../panel/componentFactory';\nimport { IDockviewComponent } from './dockviewComponent';\nimport { PanelUpdateEvent } from '../panel/types';\n\nexport interface IDockviewPanelModel extends IDisposable {\n    readonly contentComponent: string;\n    readonly tabComponent?: string;\n    readonly content: IContentRenderer;\n    readonly tab?: ITabRenderer;\n    update(event: PanelUpdateEvent): void;\n    layout(width: number, height: number): void;\n    init(params: GroupPanelPartInitParameters): void;\n    updateParentGroup(group: DockviewGroupPanel, isPanelVisible: boolean): void;\n}\n\nexport class DockviewPanelModel implements IDockviewPanelModel {\n    private readonly _content: IContentRenderer;\n    private readonly _tab: ITabRenderer;\n\n    private _group: DockviewGroupPanel | null = null;\n    private _isPanelVisible: boolean | null = null;\n\n    get content(): IContentRenderer {\n        return this._content;\n    }\n\n    get tab(): ITabRenderer {\n        return this._tab;\n    }\n\n    constructor(\n        private readonly accessor: IDockviewComponent,\n        private readonly id: string,\n        readonly contentComponent: string,\n        readonly tabComponent?: string\n    ) {\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n\n    init(params: GroupPanelPartInitParameters): void {\n        this.content.init({ ...params, tab: this.tab });\n        this.tab.init(params);\n    }\n\n    updateParentGroup(\n        group: DockviewGroupPanel,\n        isPanelVisible: boolean\n    ): void {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n\n    layout(width: number, height: number): void {\n        this.content.layout?.(width, height);\n    }\n\n    update(event: PanelUpdateEvent): void {\n        this.content.update?.(event);\n        this.tab.update?.(event);\n    }\n\n    dispose(): void {\n        this.content.dispose?.();\n        this.tab.dispose?.();\n    }\n\n    private createContentComponent(\n        id: string,\n        componentName: string\n    ): IContentRenderer {\n        return createComponent(\n            id,\n            componentName,\n            this.accessor.options.components || {},\n            this.accessor.options.frameworkComponents,\n            this.accessor.options.frameworkComponentFactory?.content\n        );\n    }\n\n    private createTabComponent(\n        id: string,\n        componentName?: string\n    ): ITabRenderer {\n        if (componentName) {\n            return createComponent(\n                id,\n                componentName,\n                this.accessor.options.tabComponents,\n                this.accessor.options.frameworkTabComponents,\n                this.accessor.options.frameworkComponentFactory?.tab,\n                () => new DefaultTab()\n            );\n        } else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(\n                id,\n                this.accessor.options.defaultTabComponent,\n                this.accessor.options.tabComponents,\n                this.accessor.options.frameworkTabComponents,\n                this.accessor.options.frameworkComponentFactory?.tab,\n                () => new DefaultTab()\n            );\n        } else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { GroupviewPanelState } from './types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanel, IDockviewPanel } from './dockviewPanel';\nimport { DockviewComponent } from './dockviewComponent';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\n\nexport interface IPanelDeserializer {\n    fromJSON(\n        panelData: GroupviewPanelState,\n        group: DockviewGroupPanel\n    ): IDockviewPanel;\n}\n\n// @depreciated\ninterface LegacyState extends GroupviewPanelState {\n    view?: {\n        tab?: { id: string };\n        content: { id: string };\n    };\n}\n\nexport class DefaultDockviewDeserialzier implements IPanelDeserializer {\n    constructor(private readonly layout: DockviewComponent) {}\n\n    public fromJSON(\n        panelData: GroupviewPanelState,\n        group: DockviewGroupPanel\n    ): IDockviewPanel {\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n\n        const viewData = (panelData as LegacyState).view!;\n\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? viewData.tab?.id\n            : panelData.tabComponent;\n\n        const view = new DockviewPanelModel(\n            this.layout,\n            panelId,\n            contentComponent,\n            tabComponent\n        );\n\n        const panel = new DockviewPanel(\n            panelId,\n            this.layout,\n            new DockviewApi(this.layout),\n            group,\n            view\n        );\n\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n\n        return panel;\n    }\n}\n","import {\n    IWatermarkRenderer,\n    WatermarkRendererInitParameters,\n} from '../../types';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewGroupPanel } from '../../dockviewGroupPanel';\nimport { PanelUpdateEvent } from '../../../panel/types';\nimport { createCloseButton } from '../../../svg';\nimport { DockviewApi } from '../../../api/component.api';\n\nexport class Watermark\n    extends CompositeDisposable\n    implements IWatermarkRenderer\n{\n    private _element: HTMLElement;\n    private _group: DockviewGroupPanel | undefined;\n    private _api: DockviewApi | undefined;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n\n        actionsContainer.appendChild(closeAnchor);\n\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n\n        this.addDisposables(\n            addDisposableListener(closeAnchor, 'click', (ev) => {\n                ev.preventDefault();\n                if (this._group) {\n                    this._api?.removeGroup(this._group);\n                }\n            })\n        );\n    }\n\n    update(_event: PanelUpdateEvent): void {\n        // noop\n    }\n\n    focus(): void {\n        // noop\n    }\n\n    layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    init(_params: WatermarkRendererInitParameters): void {\n        this._api = _params.containerApi;\n        this.render();\n    }\n\n    updateParentGroup(group: DockviewGroupPanel, _visible: boolean): void {\n        this._group = group;\n        this.render();\n    }\n\n    dispose(): void {\n        super.dispose();\n    }\n\n    private render(): void {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import {\n    getElementsByTagName,\n    quasiDefaultPrevented,\n    toggleClass,\n} from '../dom';\nimport {\n    Emitter,\n    Event,\n    addDisposableListener,\n    addDisposableWindowListener,\n} from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\n\nconst bringElementToFront = (() => {\n    let previous: HTMLElement | null = null;\n\n    function pushToTop(element: HTMLElement) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n\n    return pushToTop;\n})();\n\nexport class Overlay extends CompositeDisposable {\n    private _element: HTMLElement = document.createElement('div');\n\n    private readonly _onDidChange = new Emitter<void>();\n    readonly onDidChange: Event<void> = this._onDidChange.event;\n\n    private readonly _onDidChangeEnd = new Emitter<void>();\n    readonly onDidChangeEnd: Event<void> = this._onDidChangeEnd.event;\n\n    private static MINIMUM_HEIGHT = 20;\n    private static MINIMUM_WIDTH = 20;\n\n    constructor(\n        private readonly options: {\n            height: number;\n            width: number;\n            left: number;\n            top: number;\n            container: HTMLElement;\n            content: HTMLElement;\n            minimumInViewportWidth: number;\n            minimumInViewportHeight: number;\n        }\n    ) {\n        super();\n\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n\n        this._element.className = 'dv-resize-container';\n\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n\n    setBounds(\n        bounds: Partial<{\n            height: number;\n            width: number;\n            top: number;\n            left: number;\n        }> = {}\n    ): void {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n\n        // region: ensure bounds within allowable limits\n\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(\n            0,\n            overlayRect.width - this.options.minimumInViewportWidth\n        );\n\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(\n            0,\n            overlayRect.height - this.options.minimumInViewportHeight\n        );\n\n        const left = clamp(\n            overlayRect.left - containerRect.left,\n            -xOffset,\n            Math.max(0, containerRect.width - overlayRect.width + xOffset)\n        );\n\n        const top = clamp(\n            overlayRect.top - containerRect.top,\n            -yOffset,\n            Math.max(0, containerRect.height - overlayRect.height + yOffset)\n        );\n\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n\n        this._onDidChange.fire();\n    }\n\n    toJSON(): { top: number; left: number; height: number; width: number } {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n\n    setupDrag(\n        dragTarget: HTMLElement,\n        options: { inDragMode: boolean } = { inDragMode: false }\n    ): void {\n        const move = new MutableDisposable();\n\n        const track = () => {\n            let offset: { x: number; y: number } | null = null;\n\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n\n            move.value = new CompositeDisposable(\n                {\n                    dispose: () => {\n                        for (const iframe of iframes) {\n                            iframe.style.pointerEvents = 'auto';\n                        }\n                    },\n                },\n                addDisposableWindowListener(window, 'mousemove', (e) => {\n                    const containerRect =\n                        this.options.container.getBoundingClientRect();\n                    const x = e.clientX - containerRect.left;\n                    const y = e.clientY - containerRect.top;\n\n                    toggleClass(\n                        this._element,\n                        'dv-resize-container-dragging',\n                        true\n                    );\n\n                    const overlayRect = this._element.getBoundingClientRect();\n                    if (offset === null) {\n                        offset = {\n                            x: e.clientX - overlayRect.left,\n                            y: e.clientY - overlayRect.top,\n                        };\n                    }\n\n                    const xOffset = Math.max(\n                        0,\n                        overlayRect.width - this.options.minimumInViewportWidth\n                    );\n                    const yOffset = Math.max(\n                        0,\n                        overlayRect.height -\n                            this.options.minimumInViewportHeight\n                    );\n\n                    const left = clamp(\n                        x - offset.x,\n                        -xOffset,\n                        Math.max(\n                            0,\n                            containerRect.width - overlayRect.width + xOffset\n                        )\n                    );\n\n                    const top = clamp(\n                        y - offset.y,\n                        -yOffset,\n                        Math.max(\n                            0,\n                            containerRect.height - overlayRect.height + yOffset\n                        )\n                    );\n\n                    this.setBounds({ top, left });\n                }),\n                addDisposableWindowListener(window, 'mouseup', () => {\n                    toggleClass(\n                        this._element,\n                        'dv-resize-container-dragging',\n                        false\n                    );\n\n                    move.dispose();\n                    this._onDidChangeEnd.fire();\n                })\n            );\n        };\n\n        this.addDisposables(\n            move,\n            addDisposableListener(dragTarget, 'mousedown', (event) => {\n                if (event.defaultPrevented) {\n                    event.preventDefault();\n                    return;\n                }\n\n                // if somebody has marked this event then treat as a defaultPrevented\n                // without actually calling event.preventDefault()\n                if (quasiDefaultPrevented(event)) {\n                    return;\n                }\n\n                track();\n            }),\n            addDisposableListener(\n                this.options.content,\n                'mousedown',\n                (event) => {\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n\n                    // if somebody has marked this event then treat as a defaultPrevented\n                    // without actually calling event.preventDefault()\n                    if (quasiDefaultPrevented(event)) {\n                        return;\n                    }\n\n                    if (event.shiftKey) {\n                        track();\n                    }\n                }\n            ),\n            addDisposableListener(\n                this.options.content,\n                'mousedown',\n                () => {\n                    bringElementToFront(this._element);\n                },\n                true\n            )\n        );\n\n        bringElementToFront(this._element);\n\n        if (options.inDragMode) {\n            track();\n        }\n    }\n\n    private setupResize(\n        direction:\n            | 'top'\n            | 'bottom'\n            | 'left'\n            | 'right'\n            | 'topleft'\n            | 'topright'\n            | 'bottomleft'\n            | 'bottomright'\n    ): void {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n\n        const move = new MutableDisposable();\n\n        this.addDisposables(\n            move,\n            addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n                e.preventDefault();\n\n                let startPosition: {\n                    originalY: number;\n                    originalHeight: number;\n                    originalX: number;\n                    originalWidth: number;\n                } | null = null;\n\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n\n                move.value = new CompositeDisposable(\n                    addDisposableWindowListener(window, 'mousemove', (e) => {\n                        const containerRect =\n                            this.options.container.getBoundingClientRect();\n                        const overlayRect =\n                            this._element.getBoundingClientRect();\n\n                        const y = e.clientY - containerRect.top;\n                        const x = e.clientX - containerRect.left;\n\n                        if (startPosition === null) {\n                            // record the initial dimensions since as all subsequence moves are relative to this\n                            startPosition = {\n                                originalY: y,\n                                originalHeight: overlayRect.height,\n                                originalX: x,\n                                originalWidth: overlayRect.width,\n                            };\n                        }\n\n                        let top: number | undefined = undefined;\n                        let height: number | undefined = undefined;\n                        let left: number | undefined = undefined;\n                        let width: number | undefined = undefined;\n\n                        const minimumInViewportHeight =\n                            this.options.minimumInViewportHeight;\n                        const minimumInViewportWidth =\n                            this.options.minimumInViewportWidth;\n\n                        function moveTop(): void {\n                            top = clamp(\n                                y,\n                                -Number.MAX_VALUE,\n                                startPosition!.originalY +\n                                    startPosition!.originalHeight >\n                                    containerRect.height\n                                    ? containerRect.height -\n                                          minimumInViewportHeight\n                                    : Math.max(\n                                          0,\n                                          startPosition!.originalY +\n                                              startPosition!.originalHeight -\n                                              Overlay.MINIMUM_HEIGHT\n                                      )\n                            );\n                            height =\n                                startPosition!.originalY +\n                                startPosition!.originalHeight -\n                                top;\n                        }\n\n                        function moveBottom(): void {\n                            top =\n                                startPosition!.originalY -\n                                startPosition!.originalHeight;\n\n                            height = clamp(\n                                y - top,\n                                top < 0\n                                    ? -top + minimumInViewportHeight\n                                    : Overlay.MINIMUM_HEIGHT,\n                                Number.MAX_VALUE\n                            );\n                        }\n\n                        function moveLeft(): void {\n                            left = clamp(\n                                x,\n                                -Number.MAX_VALUE,\n                                startPosition!.originalX +\n                                    startPosition!.originalWidth >\n                                    containerRect.width\n                                    ? containerRect.width -\n                                          minimumInViewportWidth\n                                    : Math.max(\n                                          0,\n                                          startPosition!.originalX +\n                                              startPosition!.originalWidth -\n                                              Overlay.MINIMUM_WIDTH\n                                      )\n                            );\n\n                            width =\n                                startPosition!.originalX +\n                                startPosition!.originalWidth -\n                                left;\n                        }\n\n                        function moveRight(): void {\n                            left =\n                                startPosition!.originalX -\n                                startPosition!.originalWidth;\n\n                            width = clamp(\n                                x - left,\n                                left < 0\n                                    ? -left + minimumInViewportWidth\n                                    : Overlay.MINIMUM_WIDTH,\n                                Number.MAX_VALUE\n                            );\n                        }\n\n                        switch (direction) {\n                            case 'top':\n                                moveTop();\n                                break;\n                            case 'bottom':\n                                moveBottom();\n                                break;\n                            case 'left':\n                                moveLeft();\n                                break;\n                            case 'right':\n                                moveRight();\n                                break;\n                            case 'topleft':\n                                moveTop();\n                                moveLeft();\n                                break;\n                            case 'topright':\n                                moveTop();\n                                moveRight();\n                                break;\n                            case 'bottomleft':\n                                moveBottom();\n                                moveLeft();\n                                break;\n                            case 'bottomright':\n                                moveBottom();\n                                moveRight();\n                                break;\n                        }\n\n                        this.setBounds({ height, width, top, left });\n                    }),\n                    {\n                        dispose: () => {\n                            for (const iframe of iframes) {\n                                iframe.style.pointerEvents = 'auto';\n                            }\n                        },\n                    },\n                    addDisposableWindowListener(window, 'mouseup', () => {\n                        move.dispose();\n                        this._onDidChangeEnd.fire();\n                    })\n                );\n            })\n        );\n    }\n\n    override dispose(): void {\n        this._element.remove();\n        super.dispose();\n    }\n}\n","import { Overlay } from '../dnd/overlay';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DockviewGroupPanel, IDockviewGroupPanel } from './dockviewGroupPanel';\n\nexport interface IDockviewFloatingGroupPanel {\n    readonly group: IDockviewGroupPanel;\n    position(\n        bounds: Partial<{\n            top: number;\n            left: number;\n            height: number;\n            width: number;\n        }>\n    ): void;\n}\n\nexport class DockviewFloatingGroupPanel\n    extends CompositeDisposable\n    implements IDockviewFloatingGroupPanel\n{\n    constructor(readonly group: DockviewGroupPanel, readonly overlay: Overlay) {\n        super();\n\n        this.addDisposables(overlay);\n    }\n\n    position(\n        bounds: Partial<{\n            top: number;\n            left: number;\n            height: number;\n            width: number;\n        }>\n    ): void {\n        this.overlay.setBounds(bounds);\n    }\n}\n","import {\n    getRelativeLocation,\n    SerializedGridObject,\n    getGridLocation,\n    ISerializedLeafNode,\n} from '../gridview/gridview';\nimport { directionToPosition, Droptarget, Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel, IDockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport {\n    IWatermarkRenderer,\n    GroupviewPanelState,\n    DockviewDropTargets,\n} from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport {\n    AddGroupOptions,\n    AddPanelOptions,\n    DockviewComponentOptions,\n    isGroupOptionsWithGroup,\n    isGroupOptionsWithPanel,\n    isPanelOptionsWithGroup,\n    isPanelOptionsWithPanel,\n    MovementOptions,\n} from './options';\nimport {\n    BaseGrid,\n    Direction,\n    IBaseGrid,\n    toTarget,\n} from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport {\n    GroupOptions,\n    GroupPanelViewState,\n    GroupviewDropEvent,\n} from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Parameters } from '../panel/types';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport {\n    DockviewFloatingGroupPanel,\n    IDockviewFloatingGroupPanel,\n} from './dockviewFloatingGroupPanel';\nimport {\n    GroupDragEvent,\n    TabDragEvent,\n} from './components/titlebar/tabsContainer';\n\nexport interface PanelReference {\n    update: (event: { params: { [key: string]: any } }) => void;\n    remove: () => void;\n}\n\nexport interface SerializedFloatingGroup {\n    data: GroupPanelViewState;\n    position: { height: number; width: number; left: number; top: number };\n}\n\nexport interface SerializedDockview {\n    grid: {\n        root: SerializedGridObject<GroupPanelViewState>;\n        height: number;\n        width: number;\n        orientation: Orientation;\n    };\n    panels: Record<string, GroupviewPanelState>;\n    activeGroup?: string;\n    floatingGroups?: SerializedFloatingGroup[];\n}\n\nexport type DockviewComponentUpdateOptions = Pick<\n    DockviewComponentOptions,\n    | 'orientation'\n    | 'components'\n    | 'frameworkComponents'\n    | 'tabComponents'\n    | 'frameworkTabComponents'\n    | 'showDndOverlay'\n    | 'watermarkFrameworkComponent'\n    | 'defaultTabComponent'\n    | 'createLeftHeaderActionsElement'\n    | 'createRightHeaderActionsElement'\n    | 'disableFloatingGroups'\n>;\n\nexport interface DockviewDropEvent extends GroupviewDropEvent {\n    api: DockviewApi;\n    group: DockviewGroupPanel | null;\n}\n\nexport interface IDockviewComponent extends IBaseGrid<DockviewGroupPanel> {\n    readonly activePanel: IDockviewPanel | undefined;\n    readonly totalPanels: number;\n    readonly panels: IDockviewPanel[];\n    readonly floatingGroups: IDockviewFloatingGroupPanel[];\n    readonly onDidDrop: Event<DockviewDropEvent>;\n    readonly orientation: Orientation;\n    updateOptions(options: DockviewComponentUpdateOptions): void;\n    moveGroupOrPanel(\n        referenceGroup: DockviewGroupPanel,\n        groupId: string,\n        itemId: string,\n        target: Position,\n        index?: number\n    ): void;\n    doSetGroupActive: (group: DockviewGroupPanel, skipFocus?: boolean) => void;\n    removeGroup: (group: DockviewGroupPanel) => void;\n    options: DockviewComponentOptions;\n    addPanel<T extends object = Parameters>(\n        options: AddPanelOptions<T>\n    ): IDockviewPanel;\n    removePanel(panel: IDockviewPanel): void;\n    getGroupPanel: (id: string) => IDockviewPanel | undefined;\n    createWatermarkComponent(): IWatermarkRenderer;\n    // lifecycle\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel;\n    closeAllGroups(): void;\n    // events\n    moveToNext(options?: MovementOptions): void;\n    moveToPrevious(options?: MovementOptions): void;\n    setActivePanel(panel: IDockviewPanel): void;\n    focus(): void;\n    toJSON(): SerializedDockview;\n    fromJSON(data: SerializedDockview): void;\n    //\n    readonly onDidRemovePanel: Event<IDockviewPanel>;\n    readonly onDidAddPanel: Event<IDockviewPanel>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    readonly onDidActivePanelChange: Event<IDockviewPanel | undefined>;\n    readonly onWillDragPanel: Event<TabDragEvent>;\n    readonly onWillDragGroup: Event<GroupDragEvent>;\n    addFloatingGroup(\n        item: IDockviewPanel | DockviewGroupPanel,\n        coord?: { x: number; y: number }\n    ): void;\n}\n\nexport class DockviewComponent\n    extends BaseGrid<DockviewGroupPanel>\n    implements IDockviewComponent\n{\n    private readonly nextGroupId = sequentialNumberGenerator();\n    private readonly _deserializer = new DefaultDockviewDeserialzier(this);\n    private readonly _api: DockviewApi;\n    private _options: Exclude<DockviewComponentOptions, 'orientation'>;\n    private watermark: IWatermarkRenderer | null = null;\n\n    private readonly _onWillDragPanel = new Emitter<TabDragEvent>();\n    readonly onWillDragPanel: Event<TabDragEvent> = this._onWillDragPanel.event;\n\n    private readonly _onWillDragGroup = new Emitter<GroupDragEvent>();\n    readonly onWillDragGroup: Event<GroupDragEvent> =\n        this._onWillDragGroup.event;\n\n    private readonly _onDidDrop = new Emitter<DockviewDropEvent>();\n    readonly onDidDrop: Event<DockviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onDidRemovePanel = new Emitter<IDockviewPanel>();\n    readonly onDidRemovePanel: Event<IDockviewPanel> =\n        this._onDidRemovePanel.event;\n\n    private readonly _onDidAddPanel = new Emitter<IDockviewPanel>();\n    readonly onDidAddPanel: Event<IDockviewPanel> = this._onDidAddPanel.event;\n\n    private readonly _onDidLayoutFromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutFromJSON.event;\n\n    private readonly _onDidActivePanelChange = new Emitter<\n        IDockviewPanel | undefined\n    >();\n    readonly onDidActivePanelChange: Event<IDockviewPanel | undefined> =\n        this._onDidActivePanelChange.event;\n\n    readonly floatingGroups: DockviewFloatingGroupPanel[] = [];\n\n    get orientation(): Orientation {\n        return this.gridview.orientation;\n    }\n\n    get totalPanels(): number {\n        return this.panels.length;\n    }\n\n    get panels(): IDockviewPanel[] {\n        return this.groups.flatMap((group) => group.panels);\n    }\n\n    get options(): DockviewComponentOptions {\n        return this._options;\n    }\n\n    get activePanel(): IDockviewPanel | undefined {\n        const activeGroup = this.activeGroup;\n\n        if (!activeGroup) {\n            return undefined;\n        }\n\n        return activeGroup.activePanel;\n    }\n\n    constructor(options: DockviewComponentOptions) {\n        super({\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n        });\n\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n\n        this.addDisposables(\n            this._onWillDragPanel,\n            this._onWillDragGroup,\n            this._onDidActivePanelChange,\n            this._onDidAddPanel,\n            this._onDidRemovePanel,\n            this._onDidLayoutFromJSON,\n            this._onDidDrop,\n            Event.any(\n                this.onDidAddGroup,\n                this.onDidRemoveGroup\n            )(() => {\n                this.updateWatermark();\n            }),\n            Event.any(\n                this.onDidAddPanel,\n                this.onDidRemovePanel,\n                this.onDidActivePanelChange\n            )(() => {\n                this._bufferOnDidLayoutChange.fire();\n            })\n        );\n\n        this._options = options;\n\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (\n            !this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent\n        ) {\n            this.options.watermarkComponent = Watermark;\n        }\n\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n\n                    return true;\n                }\n\n                if (this.options.showDndOverlay) {\n                    if (position === 'center' && this.gridview.length !== 0) {\n                        /**\n                         * for external events only show the four-corner drag overlays, disable\n                         * the center position so that external drag events can fall through to the group\n                         * and panel drop target handlers\n                         */\n                        return false;\n                    }\n\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n\n        this.addDisposables(\n            dropTarget.onDrop((event) => {\n                const data = getPanelData();\n\n                if (data) {\n                    this.moveGroupOrPanel(\n                        this.orthogonalize(event.position),\n                        data.groupId,\n                        data.panelId || undefined,\n                        'center'\n                    );\n                } else {\n                    this._onDidDrop.fire({\n                        ...event,\n                        api: this._api,\n                        group: null,\n                        getData: getPanelData,\n                    });\n                }\n            }),\n            dropTarget\n        );\n\n        this._api = new DockviewApi(this);\n\n        this.updateWatermark();\n    }\n\n    addFloatingGroup(\n        item: DockviewPanel | DockviewGroupPanel,\n        coord?: { x?: number; y?: number; height?: number; width?: number },\n        options?: { skipRemoveGroup?: boolean; inDragMode: boolean }\n    ): void {\n        let group: DockviewGroupPanel;\n\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n\n            this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n            });\n\n            group.model.openPanel(item);\n        } else {\n            group = item;\n\n            const skip =\n                typeof options?.skipRemoveGroup === 'boolean' &&\n                options.skipRemoveGroup;\n\n            if (!skip) {\n                this.doRemoveGroup(item, { skipDispose: true });\n            }\n        }\n\n        group.model.isFloating = true;\n\n        const overlayLeft =\n            typeof coord?.x === 'number' ? Math.max(coord.x, 0) : 100;\n        const overlayTop =\n            typeof coord?.y === 'number' ? Math.max(coord.y, 0) : 100;\n\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: coord?.height ?? 300,\n            width: coord?.width ?? 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: 100,\n            minimumInViewportHeight: 100,\n        });\n\n        const el = group.element.querySelector('.void-container');\n\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n\n        overlay.setupDrag(<HTMLElement>el, {\n            inDragMode:\n                typeof options?.inDragMode === 'boolean'\n                    ? options.inDragMode\n                    : false,\n        });\n\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(\n            group,\n            overlay\n        );\n\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n\n        floatingGroupPanel.addDisposables(\n            overlay.onDidChange(() => {\n                // this is either a resize or a move\n                // to inform the panels .layout(...) the group with it's current size\n                // don't care about resize since the above watcher handles that\n                group.layout(group.height, group.width);\n            }),\n            overlay.onDidChangeEnd(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }),\n            group.onDidChange((event) => {\n                overlay.setBounds({\n                    height: event?.height,\n                    width: event?.width,\n                });\n            }),\n            {\n                dispose: () => {\n                    disposable.dispose();\n\n                    group.model.isFloating = false;\n                    remove(this.floatingGroups, floatingGroupPanel);\n                    this.updateWatermark();\n                },\n            }\n        );\n\n        this.floatingGroups.push(floatingGroupPanel);\n        this.updateWatermark();\n    }\n\n    private orthogonalize(position: Position): DockviewGroupPanel {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n\n    updateOptions(options: DockviewComponentUpdateOptions): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation!;\n        }\n\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n\n    override layout(\n        width: number,\n        height: number,\n        forceResize?: boolean | undefined\n    ): void {\n        super.layout(width, height, forceResize);\n\n        if (this.floatingGroups) {\n            for (const floating of this.floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n\n    focus(): void {\n        this.activeGroup?.focus();\n    }\n\n    getGroupPanel(id: string): IDockviewPanel | undefined {\n        return this.panels.find((panel) => panel.id === id);\n    }\n\n    setActivePanel(panel: IDockviewPanel): void {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n\n    moveToNext(options: MovementOptions = {}): void {\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        if (options.includePanel && options.group) {\n            if (\n                options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]\n            ) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = <DockviewGroupPanel>this.gridview.next(location)?.view;\n        this.doSetGroupActive(next);\n    }\n\n    moveToPrevious(options: MovementOptions = {}): void {\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n\n        const location = getGridLocation(options.group.element);\n        const next = this.gridview.previous(location)?.view;\n        if (next) {\n            this.doSetGroupActive(next as DockviewGroupPanel);\n        }\n    }\n\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON(): SerializedDockview {\n        const data = this.gridview.serialize();\n\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {} as { [key: string]: GroupviewPanelState });\n\n        const floats: SerializedFloatingGroup[] = this.floatingGroups.map(\n            (floatingGroup) => {\n                return {\n                    data: floatingGroup.group.toJSON() as GroupPanelViewState,\n                    position: floatingGroup.overlay.toJSON(),\n                };\n            }\n        );\n\n        const result: SerializedDockview = {\n            grid: data,\n            panels,\n            activeGroup: this.activeGroup?.id,\n        };\n\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n\n        return result;\n    }\n\n    fromJSON(data: SerializedDockview): void {\n        this.clear();\n\n        const { grid, panels, activeGroup } = data;\n\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        const createGroupFromSerializedState = (data: GroupPanelViewState) => {\n            const { id, locked, hideHeader, views, activeView } = data;\n\n            const group = this.createGroup({\n                id,\n                locked: !!locked,\n                hideHeader: !!hideHeader,\n            });\n\n            this._onDidAddGroup.fire(group);\n\n            for (const child of views) {\n                const panel = this._deserializer.fromJSON(panels[child], group);\n\n                const isActive =\n                    typeof activeView === 'string' && activeView === panel.id;\n\n                group.model.openPanel(panel, {\n                    skipSetPanelActive: !isActive,\n                    skipSetGroupActive: true,\n                });\n            }\n\n            if (!group.activePanel && group.panels.length > 0) {\n                group.model.openPanel(group.panels[group.panels.length - 1], {\n                    skipSetGroupActive: true,\n                });\n            }\n\n            return group;\n        };\n\n        this.gridview.deserialize(grid, {\n            fromJSON: (node: ISerializedLeafNode<GroupPanelViewState>) => {\n                return createGroupFromSerializedState(node.data);\n            },\n        });\n\n        this.layout(width, height, true);\n\n        const serializedFloatingGroups = data.floatingGroups ?? [];\n\n        for (const serializedFloatingGroup of serializedFloatingGroups) {\n            const { data, position } = serializedFloatingGroup;\n            const group = createGroupFromSerializedState(data);\n\n            this.addFloatingGroup(\n                group,\n                {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                },\n                { skipRemoveGroup: true, inDragMode: false }\n            );\n        }\n\n        for (const floatingGroup of this.floatingGroups) {\n            floatingGroup.overlay.setBounds();\n        }\n\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n\n        this._onDidLayoutFromJSON.fire();\n    }\n\n    clear(): void {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n\n        this.gridview.clear();\n    }\n\n    closeAllGroups(): void {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n\n            group.value.model.closeAllPanels();\n        }\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddPanelOptions<T>\n    ): DockviewPanel {\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n\n        let referenceGroup: DockviewGroupPanel | undefined;\n\n        if (options.position && options.floating) {\n            throw new Error(\n                'you can only provide one of: position, floating as arguments to .addPanel(...)'\n            );\n        }\n\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel =\n                    typeof options.position.referencePanel === 'string'\n                        ? this.getGroupPanel(options.position.referencePanel)\n                        : options.position.referencePanel;\n\n                if (!referencePanel) {\n                    throw new Error(\n                        `referencePanel ${options.position.referencePanel} does not exist`\n                    );\n                }\n\n                referenceGroup = this.findGroup(referencePanel);\n            } else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? this._groups.get(options.position.referenceGroup)\n                              ?.value\n                        : options.position.referenceGroup;\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `referencePanel ${options.position.referenceGroup} does not exist`\n                    );\n                }\n            } else {\n                const group = this.orthogonalize(\n                    directionToPosition(<Direction>options.position.direction)\n                );\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        } else {\n            referenceGroup = this.activeGroup;\n        }\n\n        let panel: DockviewPanel;\n\n        if (referenceGroup) {\n            const target = toTarget(\n                <Direction>options.position?.direction || 'within'\n            );\n\n            if (options.floating) {\n                const group = this.createGroup();\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n\n                const o =\n                    typeof options.floating === 'object' &&\n                    options.floating !== null\n                        ? options.floating\n                        : {};\n\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                });\n            } else if (referenceGroup.api.isFloating || target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            } else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    location,\n                    target\n                );\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        } else if (options.floating) {\n            const group = this.createGroup();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n\n            const o =\n                typeof options.floating === 'object' &&\n                options.floating !== null\n                    ? options.floating\n                    : {};\n\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n            });\n        } else {\n            const group = this.createGroupAtLocation();\n\n            panel = this.createPanel(options, group);\n\n            group.model.openPanel(panel);\n        }\n\n        return panel;\n    }\n\n    removePanel(\n        panel: IDockviewPanel,\n        options: { removeEmptyGroup: boolean; skipDispose: boolean } = {\n            removeEmptyGroup: true,\n            skipDispose: false,\n        }\n    ): void {\n        const group = panel.group;\n\n        if (!group) {\n            throw new Error(\n                `cannot remove panel ${panel.id}. it's missing a group.`\n            );\n        }\n\n        group.model.removePanel(panel);\n\n        if (!options.skipDispose) {\n            panel.dispose();\n        }\n\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n\n    createWatermarkComponent(): IWatermarkRenderer {\n        return createComponent(\n            'watermark-id',\n            'watermark-name',\n            this.options.watermarkComponent\n                ? { 'watermark-name': this.options.watermarkComponent }\n                : {},\n            this.options.watermarkFrameworkComponent\n                ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n                : {},\n            this.options.frameworkComponentFactory?.watermark\n        );\n    }\n\n    private updateWatermark(): void {\n        if (this.groups.filter((x) => !x.api.isFloating).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        } else if (this.watermark) {\n            this.watermark.element.parentElement!.remove();\n            this.watermark.dispose?.();\n            this.watermark = null;\n        }\n    }\n\n    addGroup(options?: AddGroupOptions): DockviewGroupPanel {\n        const group = this.createGroup();\n\n        if (options) {\n            let referenceGroup: DockviewGroupPanel | undefined;\n\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel =\n                    typeof options.referencePanel === 'string'\n                        ? this.panels.find(\n                              (panel) => panel.id === options.referencePanel\n                          )\n                        : options.referencePanel;\n\n                if (!referencePanel) {\n                    throw new Error(\n                        `reference panel ${options.referencePanel} does not exist`\n                    );\n                }\n\n                referenceGroup = this.findGroup(referencePanel);\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `reference group for reference panel ${options.referencePanel} does not exist`\n                    );\n                }\n            } else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? this._groups.get(options.referenceGroup)?.value\n                        : options.referenceGroup;\n\n                if (!referenceGroup) {\n                    throw new Error(\n                        `reference group ${options.referenceGroup} does not exist`\n                    );\n                }\n            } else {\n                const group = this.orthogonalize(\n                    directionToPosition(<Direction>options.direction)\n                );\n                return group;\n            }\n\n            const target = toTarget(<Direction>options.direction || 'within');\n\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(\n                this.gridview.orientation,\n                location,\n                target\n            );\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        } else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n\n    removeGroup(\n        group: DockviewGroupPanel,\n        options?:\n            | {\n                  skipActive?: boolean;\n                  skipDispose?: boolean;\n              }\n            | undefined\n    ): void {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: options?.skipDispose ?? false,\n            });\n        }\n\n        this.doRemoveGroup(group, options);\n    }\n\n    protected override doRemoveGroup(\n        group: DockviewGroupPanel,\n        options?:\n            | {\n                  skipActive?: boolean;\n                  skipDispose?: boolean;\n              }\n            | undefined\n    ): DockviewGroupPanel {\n        const floatingGroup = this.floatingGroups.find(\n            (_) => _.group === group\n        );\n\n        if (floatingGroup) {\n            if (!options?.skipDispose) {\n                floatingGroup.group.dispose();\n                this._groups.delete(group.id);\n            }\n            floatingGroup.dispose();\n\n            return floatingGroup.group;\n        }\n\n        return super.doRemoveGroup(group, options);\n    }\n\n    moveGroupOrPanel(\n        destinationGroup: DockviewGroupPanel,\n        sourceGroupId: string,\n        sourceItemId: string | undefined,\n        destinationTarget: Position,\n        destinationIndex?: number\n    ): void {\n        const sourceGroup = sourceGroupId\n            ? this._groups.get(sourceGroupId)?.value\n            : undefined;\n\n        if (sourceItemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(\n                    sourceGroup,\n                    destinationGroup,\n                    destinationTarget\n                );\n            }\n            return;\n        }\n\n        if (!destinationTarget || destinationTarget === 'center') {\n            const groupItem: IDockviewPanel | undefined =\n                sourceGroup?.model.removePanel(sourceItemId) ||\n                this.panels.find((panel) => panel.id === sourceItemId);\n\n            if (!groupItem) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n\n            if (sourceGroup?.model.size === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n\n            destinationGroup.model.openPanel(groupItem, {\n                index: destinationIndex,\n            });\n        } else {\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(\n                this.gridview.orientation,\n                referenceLocation,\n                destinationTarget\n            );\n\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n\n                const isFloating = this.floatingGroups.find(\n                    (x) => x.group === sourceGroup\n                );\n\n                if (!isFloating) {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n\n                    if (\n                        sequenceEquals(\n                            sourceParentLocation,\n                            targetParentLocation\n                        )\n                    ) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                    }\n                }\n\n                // source group will become empty so delete the group\n                const targetGroup = this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                });\n\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(\n                    destinationGroup.element\n                );\n                const location = getRelativeLocation(\n                    this.gridview.orientation,\n                    updatedReferenceLocation,\n                    destinationTarget\n                );\n                this.doAddGroup(targetGroup, location);\n            } else {\n                const groupItem: IDockviewPanel | undefined =\n                    sourceGroup?.model.removePanel(sourceItemId) ||\n                    this.panels.find((panel) => panel.id === sourceItemId);\n\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n\n                const dropLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    referenceLocation,\n                    destinationTarget\n                );\n\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n\n    private moveGroup(\n        sourceGroup: DockviewGroupPanel,\n        referenceGroup: DockviewGroupPanel,\n        target: Position\n    ): void {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) =>\n                    sourceGroup.model.removePanel(p.id)\n                );\n\n                if (sourceGroup?.model.size === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            } else {\n                const floatingGroup = this.floatingGroups.find(\n                    (x) => x.group === sourceGroup\n                );\n\n                if (floatingGroup) {\n                    floatingGroup.dispose();\n                } else {\n                    this.gridview.removeView(\n                        getGridLocation(sourceGroup.element)\n                    );\n                }\n\n                const referenceLocation = getGridLocation(\n                    referenceGroup.element\n                );\n                const dropLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    referenceLocation,\n                    target\n                );\n\n                this.gridview.addView(\n                    sourceGroup,\n                    Sizing.Distribute,\n                    dropLocation\n                );\n            }\n        }\n    }\n\n    doSetGroupActive(\n        group: DockviewGroupPanel | undefined,\n        skipFocus?: boolean\n    ): void {\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n\n        if (!isGroupAlreadyFocused && this._activeGroup?.activePanel) {\n            this._onDidActivePanelChange.fire(this._activeGroup?.activePanel);\n        }\n    }\n\n    createGroup(options?: GroupOptions): DockviewGroupPanel {\n        if (!options) {\n            options = {};\n        }\n\n        let id = options?.id;\n\n        if (id && this._groups.has(options.id!)) {\n            console.warn(\n                `Duplicate group id ${options?.id}. reassigning group id to avoid errors`\n            );\n            id = undefined;\n        }\n\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: <any>null }); // required to initialized .part and allow for correct disposal of group\n\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(\n                view.model.onTabDragStart((event) => {\n                    this._onWillDragPanel.fire(event);\n                }),\n                view.model.onGroupDragStart((event) => {\n                    this._onWillDragGroup.fire(event);\n                }),\n                view.model.onMove((event) => {\n                    const { groupId, itemId, target, index } = event;\n                    this.moveGroupOrPanel(view, groupId, itemId, target, index);\n                }),\n                view.model.onDidDrop((event) => {\n                    this._onDidDrop.fire({\n                        ...event,\n                        api: this._api,\n                        group: view,\n                    });\n                }),\n                view.model.onDidAddPanel((event) => {\n                    this._onDidAddPanel.fire(event.panel);\n                }),\n                view.model.onDidRemovePanel((event) => {\n                    this._onDidRemovePanel.fire(event.panel);\n                }),\n                view.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event.panel);\n                })\n            );\n\n            this._groups.set(view.id, { value: view, disposable });\n        }\n\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n\n        return view;\n    }\n\n    private createPanel(\n        options: AddPanelOptions,\n        group: DockviewGroupPanel\n    ): DockviewPanel {\n        const contentComponent = options.component;\n        const tabComponent =\n            options.tabComponent || this.options.defaultTabComponent;\n\n        const view = new DockviewPanelModel(\n            this,\n            options.id,\n            contentComponent,\n            tabComponent\n        );\n\n        const panel = new DockviewPanel(\n            options.id,\n            this,\n            this._api,\n            group,\n            view\n        );\n        panel.init({\n            title: options.title || options.id,\n            params: options?.params || {},\n        });\n\n        return panel;\n    }\n\n    private createGroupAtLocation(\n        location: number[] = [0]\n    ): DockviewGroupPanel {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n\n    private findGroup(panel: IDockviewPanel): DockviewGroupPanel | undefined {\n        return Array.from(this._groups.values()).find((group) =>\n            group.value.model.containsPanel(panel)\n        )?.value;\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { Direction } from '../gridview/baseComponentGridview';\nimport { IGridView } from '../gridview/gridview';\nimport {\n    IContentRenderer,\n    ITabRenderer,\n    WatermarkConstructor,\n    IWatermarkRenderer,\n    DockviewDropTargets,\n} from './types';\nimport { Parameters } from '../panel/types';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { ISplitviewStyles, Orientation } from '../splitview/splitview';\nimport { PanelTransfer } from '../dnd/dataTransfer';\nimport { IDisposable } from '../lifecycle';\nimport { Position } from '../dnd/droptarget';\nimport { IDockviewPanel } from './dockviewPanel';\nimport { FrameworkFactory } from '../panel/componentFactory';\nimport { DockviewGroupPanelApi } from '../api/dockviewGroupPanelApi';\n\nexport interface IHeaderActionsRenderer extends IDisposable {\n    readonly element: HTMLElement;\n    init(params: {\n        containerApi: DockviewApi;\n        api: DockviewGroupPanelApi;\n    }): void;\n}\n\nexport interface GroupPanelFrameworkComponentFactory {\n    content: FrameworkFactory<IContentRenderer>;\n    tab: FrameworkFactory<ITabRenderer>;\n    watermark: FrameworkFactory<IWatermarkRenderer>;\n}\n\nexport interface TabContextMenuEvent {\n    event: MouseEvent;\n    api: DockviewApi;\n    panel: IDockviewPanel;\n}\n\nexport interface DockviewRenderFunctions {\n    tabComponents?: {\n        [componentName: string]: {\n            new (id: string, component: string): ITabRenderer;\n        };\n    };\n    components?: {\n        [componentName: string]: {\n            new (id: string, component: string): IContentRenderer;\n        };\n    };\n    frameworkTabComponents?: {\n        [componentName: string]: any;\n    };\n    frameworkComponents?: {\n        [componentName: string]: any;\n    };\n}\n\nexport interface ViewFactoryData {\n    content: string;\n    tab?: string;\n}\n\nexport interface DockviewDndOverlayEvent {\n    nativeEvent: DragEvent;\n    target: DockviewDropTargets;\n    position: Position;\n    group?: DockviewGroupPanel;\n    getData: () => PanelTransfer | undefined;\n}\n\nexport interface DockviewComponentOptions extends DockviewRenderFunctions {\n    watermarkComponent?: WatermarkConstructor;\n    watermarkFrameworkComponent?: any;\n    frameworkComponentFactory?: GroupPanelFrameworkComponentFactory;\n    orientation?: Orientation;\n    styles?: ISplitviewStyles;\n    defaultTabComponent?: string;\n    showDndOverlay?: (event: DockviewDndOverlayEvent) => boolean;\n    createRightHeaderActionsElement?: (\n        group: DockviewGroupPanel\n    ) => IHeaderActionsRenderer;\n    createLeftHeaderActionsElement?: (\n        group: DockviewGroupPanel\n    ) => IHeaderActionsRenderer;\n    singleTabMode?: 'fullwidth' | 'default';\n    parentElement?: HTMLElement;\n    disableFloatingGroups?: boolean;\n}\n\nexport interface PanelOptions<P extends object = Parameters> {\n    component: string;\n    tabComponent?: string;\n    params?: P;\n    id: string;\n    title?: string;\n}\n\ntype RelativePanel = {\n    direction?: Direction;\n    referencePanel: string | IDockviewPanel;\n};\n\ntype RelativeGroup = {\n    direction?: Direction;\n    referenceGroup: string | DockviewGroupPanel;\n};\n\ntype AbsolutePosition = {\n    direction: Omit<Direction, 'within'>;\n};\n\nexport type AddPanelPositionOptions =\n    | RelativePanel\n    | RelativeGroup\n    | AbsolutePosition;\n\nexport function isPanelOptionsWithPanel(\n    data: AddPanelPositionOptions\n): data is RelativePanel {\n    if ((data as RelativePanel).referencePanel) {\n        return true;\n    }\n    return false;\n}\n\nexport function isPanelOptionsWithGroup(\n    data: AddPanelPositionOptions\n): data is RelativeGroup {\n    if ((data as RelativeGroup).referenceGroup) {\n        return true;\n    }\n    return false;\n}\n\ntype AddPanelFloatingGroupUnion = {\n    floating:\n        | {\n              height?: number;\n              width?: number;\n              x?: number;\n              y?: number;\n          }\n        | true;\n    position: never;\n};\n\ntype AddPanelPositionUnion = {\n    floating: false | never;\n    position: AddPanelPositionOptions;\n};\n\ntype AddPanelOptionsUnion = AddPanelFloatingGroupUnion | AddPanelPositionUnion;\n\nexport type AddPanelOptions<P extends object = Parameters> = Omit<\n    PanelOptions<P>,\n    'component' | 'tabComponent'\n> & {\n    component: string;\n    tabComponent?: string;\n} & Partial<AddPanelOptionsUnion>;\n\ntype AddGroupOptionsWithPanel = {\n    referencePanel: string | IDockviewPanel;\n    direction?: Omit<Direction, 'within'>;\n};\n\ntype AddGroupOptionsWithGroup = {\n    referenceGroup: string | DockviewGroupPanel;\n    direction?: Omit<Direction, 'within'>;\n};\n\nexport type AddGroupOptions =\n    | AddGroupOptionsWithGroup\n    | AddGroupOptionsWithPanel\n    | AbsolutePosition;\n\nexport function isGroupOptionsWithPanel(\n    data: AddGroupOptions\n): data is AddGroupOptionsWithPanel {\n    if ((data as AddGroupOptionsWithPanel).referencePanel) {\n        return true;\n    }\n    return false;\n}\n\nexport function isGroupOptionsWithGroup(\n    data: AddGroupOptions\n): data is AddGroupOptionsWithGroup {\n    if ((data as AddGroupOptionsWithGroup).referenceGroup) {\n        return true;\n    }\n    return false;\n}\n\nexport interface MovementOptions2 {\n    group?: IGridView;\n}\n\nexport interface MovementOptions extends MovementOptions2 {\n    includePanel?: boolean;\n    group?: DockviewGroupPanel;\n}\n","import {\n    getRelativeLocation,\n    SerializedGridObject,\n    getGridLocation,\n    SerializedGridview,\n} from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { IPanelDeserializer } from '../dockview/deserializer';\nimport { GridviewComponentOptions } from './options';\nimport {\n    BaseGrid,\n    Direction,\n    IBaseGrid,\n    IGridPanelView,\n    toTarget,\n} from './baseComponentGridview';\nimport {\n    GridviewPanel,\n    GridviewInitParameters,\n    GridPanelViewState,\n    IGridviewPanel,\n} from './gridviewPanel';\nimport { BaseComponentOptions, Parameters } from '../panel/types';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter, Event } from '../events';\nimport { Position } from '../dnd/droptarget';\n\nexport interface SerializedGridviewComponent {\n    grid: SerializedGridview<GridPanelViewState>;\n    activePanel?: string;\n}\n\nexport interface AddComponentOptions<T extends object = Parameters>\n    extends BaseComponentOptions<T> {\n    minimumWidth?: number;\n    maximumWidth?: number;\n    minimumHeight?: number;\n    maximumHeight?: number;\n    position?: {\n        direction: Direction;\n        referencePanel: string;\n    };\n    location?: number[];\n}\n\nexport interface IGridPanelComponentView extends IGridPanelView {\n    init: (params: GridviewInitParameters) => void;\n}\n\nexport type GridviewComponentUpdateOptions = Pick<\n    GridviewComponentOptions,\n    'orientation' | 'components' | 'frameworkComponents'\n>;\n\nexport interface IGridviewComponent extends IBaseGrid<GridviewPanel> {\n    readonly orientation: Orientation;\n    readonly onDidLayoutFromJSON: Event<void>;\n    updateOptions(options: Partial<GridviewComponentUpdateOptions>): void;\n    addPanel<T extends object = Parameters>(\n        options: AddComponentOptions<T>\n    ): IGridviewPanel;\n    removePanel(panel: IGridviewPanel, sizing?: Sizing): void;\n    focus(): void;\n    fromJSON(serializedGridview: SerializedGridviewComponent): void;\n    toJSON(): SerializedGridviewComponent;\n    movePanel(\n        panel: IGridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void;\n    setVisible(panel: IGridviewPanel, visible: boolean): void;\n    setActive(panel: IGridviewPanel): void;\n}\n\nexport class GridviewComponent\n    extends BaseGrid<GridviewPanel>\n    implements IGridviewComponent\n{\n    private _options: Exclude<GridviewComponentOptions, 'orientation'>;\n    private _deserializer: IPanelDeserializer | undefined;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    get orientation(): Orientation {\n        return this.gridview.orientation;\n    }\n\n    set orientation(value: Orientation) {\n        this.gridview.orientation = value;\n    }\n\n    get options(): GridviewComponentOptions {\n        return this._options;\n    }\n\n    get deserializer(): IPanelDeserializer | undefined {\n        return this._deserializer;\n    }\n\n    set deserializer(value: IPanelDeserializer | undefined) {\n        this._deserializer = value;\n    }\n\n    constructor(options: GridviewComponentOptions) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n\n        this._options = options;\n\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n\n    updateOptions(options: Partial<GridviewComponentUpdateOptions>): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation!;\n        }\n\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n\n    removePanel(panel: GridviewPanel): void {\n        this.removeGroup(panel);\n    }\n\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    public toJSON(): SerializedGridviewComponent {\n        const data = this.gridview.serialize() as {\n            height: number;\n            width: number;\n            orientation: Orientation;\n            root: SerializedGridObject<GridPanelViewState>;\n        };\n\n        return {\n            grid: data,\n            activePanel: this.activeGroup?.id,\n        };\n    }\n\n    setVisible(panel: GridviewPanel, visible: boolean): void {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n\n    setActive(panel: GridviewPanel): void {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n\n    focus(): void {\n        this.activeGroup?.focus();\n    }\n\n    public fromJSON(serializedGridview: SerializedGridviewComponent): void {\n        this.clear();\n\n        const { grid, activePanel } = serializedGridview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(\n                    data.id,\n                    data.component,\n                    this.options.components || {},\n                    this.options.frameworkComponents || {},\n                    this.options.frameworkComponentFactory\n                        ? {\n                              createComponent:\n                                  this.options.frameworkComponentFactory\n                                      .createComponent,\n                          }\n                        : undefined\n                );\n\n                queue.push(() =>\n                    view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    })\n                );\n\n                this._onDidAddGroup.fire(view);\n\n                this.registerPanel(view);\n\n                return view;\n            },\n        });\n\n        this.layout(width, height, true);\n\n        queue.forEach((f) => f());\n\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        const hasActiveGroup = this.activeGroup;\n\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n\n        this.gridview.clear();\n    }\n\n    movePanel(\n        panel: GridviewPanel,\n        options: { direction: Direction; reference: string; size?: number }\n    ): void {\n        let relativeLocation: number[];\n\n        const removedPanel = this.gridview.remove(panel) as GridviewPanel;\n\n        const referenceGroup = this._groups.get(options.reference)?.value;\n\n        if (!referenceGroup) {\n            throw new Error(\n                `reference group ${options.reference} does not exist`\n            );\n        }\n\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        } else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(\n                this.gridview.orientation,\n                location,\n                target\n            );\n        }\n\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n\n    public addPanel<T extends object = Parameters>(\n        options: AddComponentOptions<T>\n    ): IGridviewPanel {\n        let relativeLocation: number[] = options.location || [0];\n\n        if (options.position?.referencePanel) {\n            const referenceGroup = this._groups.get(\n                options.position.referencePanel\n            )?.value;\n\n            if (!referenceGroup) {\n                throw new Error(\n                    `reference group ${options.position.referencePanel} does not exist`\n                );\n            }\n\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            } else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(\n                    this.gridview.orientation,\n                    location,\n                    target\n                );\n            }\n        }\n\n        const view = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkComponentFactory\n                ? {\n                      createComponent:\n                          this.options.frameworkComponentFactory\n                              .createComponent,\n                  }\n                : undefined\n        );\n\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n\n        this.registerPanel(view);\n\n        this.doAddGroup(view, relativeLocation, options.size);\n\n        return view;\n    }\n\n    private registerPanel(panel: GridviewPanel): void {\n        const disposable = new CompositeDisposable(\n            panel.api.onDidFocusChange((event) => {\n                if (!event.isFocused) {\n                    return;\n                }\n                this._groups.forEach((groupItem) => {\n                    const group = groupItem.value;\n                    if (group !== panel) {\n                        group.setActive(false);\n                    } else {\n                        group.setActive(true);\n                    }\n                });\n            })\n        );\n\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n\n    public moveGroup(\n        referenceGroup: IGridPanelComponentView,\n        groupId: string,\n        target: Position\n    ): void {\n        const sourceGroup = this.getPanel(groupId);\n\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(\n            this.gridview.orientation,\n            referenceLocation,\n            target\n        );\n\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n\n            return;\n        }\n\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(\n            referenceGroup.element\n        );\n        const location = getRelativeLocation(\n            this.gridview.orientation,\n            updatedReferenceLocation,\n            target\n        );\n        this.doAddGroup(targetGroup, location);\n    }\n\n    removeGroup(group: GridviewPanel): void {\n        super.removeGroup(group);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\nimport {\n    IView,\n    LayoutPriority,\n    Orientation,\n    Sizing,\n    Splitview,\n} from './splitview';\nimport { SplitviewComponentOptions } from './options';\nimport { BaseComponentOptions, Parameters } from '../panel/types';\nimport { Emitter, Event } from '../events';\nimport { SplitviewPanel, ISplitviewPanel } from './splitviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n\nexport interface SerializedSplitviewPanelData {\n    id: string;\n    component: string;\n    minimumSize?: number;\n    maximumSize?: number;\n    params?: { [index: string]: any };\n}\n\nexport interface SerializedSplitviewPanel {\n    snap?: boolean;\n    priority?: LayoutPriority;\n    data: SerializedSplitviewPanelData;\n    size: number;\n}\n\nexport interface SerializedSplitview {\n    orientation: Orientation;\n    size: number;\n    activeView?: string;\n    views: SerializedSplitviewPanel[];\n}\n\nexport interface AddSplitviewComponentOptions<T extends Parameters = Parameters>\n    extends BaseComponentOptions<T> {\n    index?: number;\n    minimumSize?: number;\n    maximumSize?: number;\n}\n\nexport type SplitviewComponentUpdateOptions = Pick<\n    SplitviewComponentOptions,\n    'orientation' | 'components' | 'frameworkComponents'\n>;\n\nexport interface ISplitviewComponent extends IDisposable {\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly height: number;\n    readonly width: number;\n    readonly length: number;\n    readonly orientation: Orientation;\n    readonly onDidAddView: Event<IView>;\n    readonly onDidRemoveView: Event<IView>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    readonly panels: SplitviewPanel[];\n    updateOptions(options: Partial<SplitviewComponentUpdateOptions>): void;\n    addPanel<T extends object = Parameters>(\n        options: AddSplitviewComponentOptions<T>\n    ): ISplitviewPanel;\n    layout(width: number, height: number): void;\n    onDidLayoutChange: Event<void>;\n    toJSON(): SerializedSplitview;\n    fromJSON(serializedSplitview: SerializedSplitview): void;\n    focus(): void;\n    getPanel(id: string): ISplitviewPanel | undefined;\n    removePanel(panel: ISplitviewPanel, sizing?: Sizing): void;\n    setVisible(panel: ISplitviewPanel, visible: boolean): void;\n    movePanel(from: number, to: number): void;\n    clear(): void;\n}\n\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent\n    extends Resizable\n    implements ISplitviewComponent\n{\n    private _splitviewChangeDisposable = new MutableDisposable();\n    private _splitview!: Splitview;\n    private _activePanel: SplitviewPanel | undefined;\n    private _panels = new Map<string, IDisposable>();\n    private _options: SplitviewComponentOptions;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    private readonly _onDidAddView = new Emitter<IView>();\n    readonly onDidAddView = this._onDidAddView.event;\n\n    private readonly _onDidRemoveView = new Emitter<IView>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    private readonly _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange: Event<void> = this._onDidLayoutChange.event;\n\n    get panels(): SplitviewPanel[] {\n        return this.splitview.getViews();\n    }\n\n    get options(): SplitviewComponentOptions {\n        return this._options;\n    }\n\n    get length(): number {\n        return this._panels.size;\n    }\n\n    get orientation(): Orientation {\n        return this.splitview.orientation;\n    }\n\n    get splitview(): Splitview {\n        return this._splitview;\n    }\n\n    set splitview(value: Splitview) {\n        this._splitview = value;\n\n        this._splitviewChangeDisposable.value = new CompositeDisposable(\n            this._splitview.onDidSashEnd(() => {\n                this._onDidLayoutChange.fire(undefined);\n            }),\n            this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)),\n            this._splitview.onDidRemoveView((e) =>\n                this._onDidRemoveView.fire(e)\n            )\n        );\n    }\n\n    get minimumSize(): number {\n        return this.splitview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.splitview.maximumSize;\n    }\n\n    get height(): number {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n\n    get width(): number {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n\n    constructor(options: SplitviewComponentOptions) {\n        super(options.parentElement);\n\n        this._options = options;\n\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n\n        this.splitview = new Splitview(this.element, options);\n\n        this.addDisposables(\n            this._onDidAddView,\n            this._onDidLayoutfromJSON,\n            this._onDidRemoveView,\n            this._onDidLayoutChange\n        );\n    }\n\n    updateOptions(options: Partial<SplitviewComponentUpdateOptions>): void {\n        const hasOrientationChanged =\n            typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n\n        this._options = { ...this.options, ...options };\n\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation!;\n        }\n\n        this.splitview.layout(\n            this.splitview.size,\n            this.splitview.orthogonalSize\n        );\n    }\n\n    focus(): void {\n        this._activePanel?.focus();\n    }\n\n    movePanel(from: number, to: number): void {\n        this.splitview.moveView(from, to);\n    }\n\n    setVisible(panel: SplitviewPanel, visible: boolean): void {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n\n    setActive(view: SplitviewPanel, skipFocus?: boolean): void {\n        this._activePanel = view;\n\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n                v.api._onDidActiveChange.fire({ isActive: false });\n                if (!skipFocus) {\n                    v.focus();\n                }\n            });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n\n    removePanel(panel: SplitviewPanel, sizing?: Sizing): void {\n        const item = this._panels.get(panel.id);\n\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n\n        item.dispose();\n\n        this._panels.delete(panel.id);\n\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n\n    getPanel(id: string): SplitviewPanel | undefined {\n        return this.panels.find((view) => view.id === id);\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddSplitviewComponentOptions<T>\n    ): SplitviewPanel {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n\n        const view = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkWrapper\n                ? {\n                      createComponent:\n                          this.options.frameworkWrapper.createComponent,\n                  }\n                : undefined\n        );\n\n        view.orientation = this.splitview.orientation;\n\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n\n        const size: Sizing | number =\n            typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index =\n            typeof options.index === 'number' ? options.index : undefined;\n\n        this.splitview.addView(view, size, index);\n\n        this.doAddView(view);\n        this.setActive(view);\n\n        return view;\n    }\n\n    layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.splitview.orientation === Orientation.HORIZONTAL\n                ? [width, height]\n                : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n\n    private doAddView(view: SplitviewPanel): void {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n\n        this._panels.set(view.id, disposable);\n    }\n\n    toJSON(): SerializedSplitview {\n        const views: SerializedSplitviewPanel[] = this.splitview\n            .getViews<SplitviewPanel>()\n            .map((view, i) => {\n                const size = this.splitview.getViewSize(i);\n                return {\n                    size,\n                    data: view.toJSON(),\n                    snap: !!view.snap,\n                    priority: view.priority,\n                };\n            });\n\n        return {\n            views,\n            activeView: this._activePanel?.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n\n    fromJSON(serializedSplitview: SerializedSplitview): void {\n        this.clear();\n\n        const { views, orientation, size, activeView } = serializedSplitview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n\n                    const panel = createComponent(\n                        data.id,\n                        data.component,\n                        this.options.components || {},\n                        this.options.frameworkComponents || {},\n                        this.options.frameworkWrapper\n                            ? {\n                                  createComponent:\n                                      this.options.frameworkWrapper\n                                          .createComponent,\n                              }\n                            : undefined\n                    );\n\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n\n                    panel.orientation = orientation;\n\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n\n        this.layout(width, height);\n\n        queue.forEach((f) => f());\n\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n\n        this._panels.clear();\n\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n\n    dispose(): void {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n\n        this._panels.clear();\n\n        const views = this.splitview.getViews();\n\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n\n        for (const view of views) {\n            view.dispose();\n        }\n\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { PanelUpdateEvent } from '../panel/types';\nimport { IPaneHeaderPart, PanePanelInitParameter } from './paneviewPanel';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\n\nexport class DefaultHeader\n    extends CompositeDisposable\n    implements IPaneHeaderPart\n{\n    private readonly _expandedIcon = createExpandMoreButton();\n    private readonly _collapsedIcon = createChevronRightButton();\n    private readonly disposable = new MutableDisposable();\n    private readonly _element: HTMLElement;\n    private readonly _content: HTMLElement;\n    private readonly _expander: HTMLElement;\n    private apiRef: { api: PaneviewPanelApiImpl | null } = { api: null };\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor() {\n        super();\n\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n\n        this.addDisposables(\n            addDisposableListener(this._element, 'click', () => {\n                this.apiRef.api?.setExpanded(!this.apiRef.api.isExpanded);\n            })\n        );\n    }\n\n    init(params: PanePanelInitParameter & { api: PaneviewPanelApiImpl }): void {\n        this.apiRef.api = params.api;\n\n        this._content.textContent = params.title;\n\n        this.updateIcon();\n\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n\n    private updateIcon(): void {\n        const isExpanded = !!this.apiRef.api?.isExpanded;\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        } else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n\n    update(_params: PanelUpdateEvent): void {\n        //\n    }\n\n    dispose(): void {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter, Event } from '../events';\nimport {\n    CompositeDisposable,\n    IDisposable,\n    MutableDisposable,\n} from '../lifecycle';\nimport { LayoutPriority, Orientation, Sizing } from '../splitview/splitview';\nimport { PaneviewComponentOptions } from './options';\nimport { Paneview } from './paneview';\nimport {\n    IPaneBodyPart,\n    IPaneHeaderPart,\n    PaneviewPanel,\n    IPaneviewPanel,\n} from './paneviewPanel';\nimport {\n    DraggablePaneviewPanel,\n    PaneviewDropEvent,\n} from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { PaneTransfer } from '../dnd/dataTransfer';\nimport { Resizable } from '../resizable';\nimport { Parameters } from '../panel/types';\n\nconst nextLayoutId = sequentialNumberGenerator();\n\nexport interface PaneviewDndOverlayEvent {\n    nativeEvent: DragEvent;\n    panel: IPaneviewPanel;\n    getData: () => PaneTransfer | undefined;\n}\n\nexport interface SerializedPaneviewPanel {\n    snap?: boolean;\n    priority?: LayoutPriority;\n    minimumSize?: number;\n    maximumSize?: number;\n    data: {\n        id: string;\n        component: string;\n        title: string;\n        headerComponent?: string;\n        params?: { [index: string]: any };\n    };\n    size: number;\n    expanded?: boolean;\n}\n\nexport interface SerializedPaneview {\n    size: number;\n    views: SerializedPaneviewPanel[];\n}\n\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(\n        private readonly options: {\n            id: string;\n            component: string;\n            headerComponent: string | undefined;\n            body: IPaneBodyPart;\n            header: IPaneHeaderPart;\n            orientation: Orientation;\n            isExpanded: boolean;\n            disableDnd: boolean;\n            accessor: IPaneviewComponent;\n        }\n    ) {\n        super(\n            options.accessor,\n            options.id,\n            options.component,\n            options.headerComponent,\n            options.orientation,\n            options.isExpanded,\n            options.disableDnd\n        );\n    }\n\n    getBodyComponent() {\n        return this.options.body;\n    }\n\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\n\nexport interface AddPaneviewComponentOptions<T extends object = Parameters> {\n    id: string;\n    component: string;\n    headerComponent?: string;\n    params?: T;\n    minimumBodySize?: number;\n    maximumBodySize?: number;\n    isExpanded?: boolean;\n    title: string;\n    index?: number;\n    size?: number;\n}\n\nexport interface IPaneviewComponent extends IDisposable {\n    readonly id: string;\n    readonly width: number;\n    readonly height: number;\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly panels: IPaneviewPanel[];\n    readonly options: PaneviewComponentOptions;\n    readonly onDidAddView: Event<PaneviewPanel>;\n    readonly onDidRemoveView: Event<PaneviewPanel>;\n    readonly onDidDrop: Event<PaneviewDropEvent>;\n    readonly onDidLayoutChange: Event<void>;\n    readonly onDidLayoutFromJSON: Event<void>;\n    addPanel<T extends object = Parameters>(\n        options: AddPaneviewComponentOptions<T>\n    ): IPaneviewPanel;\n    layout(width: number, height: number): void;\n    toJSON(): SerializedPaneview;\n    fromJSON(serializedPaneview: SerializedPaneview): void;\n    focus(): void;\n    removePanel(panel: IPaneviewPanel): void;\n    getPanel(id: string): IPaneviewPanel | undefined;\n    movePanel(from: number, to: number): void;\n    updateOptions(options: Partial<PaneviewComponentOptions>): void;\n    clear(): void;\n}\n\nexport class PaneviewComponent extends Resizable implements IPaneviewComponent {\n    private readonly _id = nextLayoutId.next();\n    private _options: PaneviewComponentOptions;\n    private _disposable = new MutableDisposable();\n    private _viewDisposables = new Map<string, IDisposable>();\n    private _paneview!: Paneview;\n\n    private readonly _onDidLayoutfromJSON = new Emitter<void>();\n    readonly onDidLayoutFromJSON: Event<void> = this._onDidLayoutfromJSON.event;\n\n    private readonly _onDidLayoutChange = new Emitter<void>();\n    readonly onDidLayoutChange: Event<void> = this._onDidLayoutChange.event;\n\n    private readonly _onDidDrop = new Emitter<PaneviewDropEvent>();\n    readonly onDidDrop: Event<PaneviewDropEvent> = this._onDidDrop.event;\n\n    private readonly _onDidAddView = new Emitter<PaneviewPanel>();\n    readonly onDidAddView = this._onDidAddView.event;\n\n    private readonly _onDidRemoveView = new Emitter<PaneviewPanel>();\n    readonly onDidRemoveView = this._onDidRemoveView.event;\n\n    get id(): string {\n        return this._id;\n    }\n\n    get panels(): PaneviewPanel[] {\n        return this.paneview.getPanes();\n    }\n\n    set paneview(value: Paneview) {\n        this._paneview = value;\n\n        this._disposable.value = new CompositeDisposable(\n            this._paneview.onDidChange(() => {\n                this._onDidLayoutChange.fire(undefined);\n            }),\n            this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)),\n            this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e))\n        );\n    }\n\n    get paneview(): Paneview {\n        return this._paneview;\n    }\n\n    get minimumSize(): number {\n        return this.paneview.minimumSize;\n    }\n\n    get maximumSize(): number {\n        return this.paneview.maximumSize;\n    }\n\n    get height(): number {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n\n    get width(): number {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n\n    get options(): PaneviewComponentOptions {\n        return this._options;\n    }\n\n    constructor(options: PaneviewComponentOptions) {\n        super(options.parentElement);\n\n        this.addDisposables(\n            this._onDidLayoutChange,\n            this._onDidLayoutfromJSON,\n            this._onDidDrop,\n            this._onDidAddView,\n            this._onDidRemoveView\n        );\n\n        this._options = options;\n\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n\n        this.addDisposables(this._disposable);\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    updateOptions(options: Partial<PaneviewComponentOptions>): void {\n        this._options = { ...this.options, ...options };\n    }\n\n    addPanel<T extends object = Parameters>(\n        options: AddPaneviewComponentOptions<T>\n    ): IPaneviewPanel {\n        const body = createComponent(\n            options.id,\n            options.component,\n            this.options.components || {},\n            this.options.frameworkComponents || {},\n            this.options.frameworkWrapper\n                ? {\n                      createComponent:\n                          this.options.frameworkWrapper.body.createComponent,\n                  }\n                : undefined\n        );\n\n        let header: IPaneHeaderPart;\n\n        if (options.headerComponent) {\n            header = createComponent(\n                options.id,\n                options.headerComponent,\n                this.options.headerComponents || {},\n                this.options.headerframeworkComponents,\n                this.options.frameworkWrapper\n                    ? {\n                          createComponent:\n                              this.options.frameworkWrapper.header\n                                  .createComponent,\n                      }\n                    : undefined\n            );\n        } else {\n            header = new DefaultHeader();\n        }\n\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n\n        this.doAddPanel(view);\n\n        const size: Sizing | number =\n            typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index =\n            typeof options.index === 'number' ? options.index : undefined;\n\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n\n        this.paneview.addPane(view, size, index);\n\n        view.orientation = this.paneview.orientation;\n\n        return view;\n    }\n\n    removePanel(panel: PaneviewPanel): void {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n\n        this.doRemovePanel(panel);\n    }\n\n    movePanel(from: number, to: number): void {\n        this.paneview.moveView(from, to);\n    }\n\n    getPanel(id: string): PaneviewPanel | undefined {\n        return this.panels.find((view) => view.id === id);\n    }\n\n    layout(width: number, height: number): void {\n        const [size, orthogonalSize] =\n            this.paneview.orientation === Orientation.HORIZONTAL\n                ? [width, height]\n                : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n\n    toJSON(): SerializedPaneview {\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n                ? undefined\n                : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        const views: SerializedPaneviewPanel[] = this.paneview\n            .getPanes()\n            .map((view, i) => {\n                const size = this.paneview.getViewSize(i);\n                return {\n                    size,\n                    data: view.toJSON(),\n                    minimumSize: minimum(view.minimumBodySize),\n                    maximumSize: maximum(view.maximumBodySize),\n                    expanded: view.isExpanded(),\n                };\n            });\n\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n\n    fromJSON(serializedPaneview: SerializedPaneview): void {\n        this.clear();\n\n        const { views, size } = serializedPaneview;\n\n        const queue: Function[] = [];\n\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n\n                    const body = createComponent(\n                        data.id,\n                        data.component,\n                        this.options.components || {},\n                        this.options.frameworkComponents || {},\n                        this.options.frameworkWrapper\n                            ? {\n                                  createComponent:\n                                      this.options.frameworkWrapper.body\n                                          .createComponent,\n                              }\n                            : undefined\n                    );\n\n                    let header: IPaneHeaderPart;\n\n                    if (data.headerComponent) {\n                        header = createComponent(\n                            data.id,\n                            data.headerComponent,\n                            this.options.headerComponents || {},\n                            this.options.headerframeworkComponents || {},\n                            this.options.frameworkWrapper\n                                ? {\n                                      createComponent:\n                                          this.options.frameworkWrapper.header\n                                              .createComponent,\n                                  }\n                                : undefined\n                        );\n                    } else {\n                        header = new DefaultHeader();\n                    }\n\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n\n                    this.doAddPanel(panel);\n\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n\n        this.layout(width, height);\n\n        queue.forEach((f) => f());\n\n        this._onDidLayoutfromJSON.fire();\n    }\n\n    clear(): void {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n\n        this.paneview.dispose();\n    }\n\n    private doAddPanel(panel: PaneFramework): void {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n\n        this._viewDisposables.set(panel.id, disposable);\n    }\n\n    private doRemovePanel(panel: PaneviewPanel): void {\n        const disposable = this._viewDisposables.get(panel.id);\n\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n\n        this.paneview.dispose();\n    }\n}\n","import { ISerializableView, PanelViewInitParameters } from './options';\nimport {\n    BasePanelView,\n    BasePanelViewExported,\n} from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { LayoutPriority, Orientation } from './splitview';\nimport { FunctionOrValue } from '../types';\nimport { Emitter, Event } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n\nexport interface ISplitviewPanel\n    extends BasePanelViewExported<SplitviewPanelApiImpl> {\n    readonly priority: LayoutPriority | undefined;\n    readonly minimumSize: number;\n    readonly maximumSize: number;\n    readonly snap: boolean;\n    readonly orientation: Orientation;\n}\n\nexport abstract class SplitviewPanel\n    extends BasePanelView<SplitviewPanelApiImpl>\n    implements ISerializableView, ISplitviewPanel\n{\n    private _evaluatedMinimumSize = 0;\n    private _evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n\n    private _minimumSize: FunctionOrValue<number> = 0;\n    private _maximumSize: FunctionOrValue<number> = Number.POSITIVE_INFINITY;\n    private _priority?: LayoutPriority;\n    private _snap = false;\n\n    private _orientation?: Orientation;\n\n    private readonly _onDidChange = new Emitter<{\n        size?: number;\n        orthogonalSize?: number;\n    }>();\n    readonly onDidChange: Event<{ size?: number; orthogonalSize?: number }> =\n        this._onDidChange.event;\n\n    get priority(): LayoutPriority | undefined {\n        return this._priority;\n    }\n\n    set orientation(value: Orientation) {\n        this._orientation = value;\n    }\n\n    get orientation(): Orientation {\n        return this._orientation!;\n    }\n\n    get minimumSize(): number {\n        const size =\n            typeof this._minimumSize === 'function'\n                ? this._minimumSize()\n                : this._minimumSize;\n\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n\n        return size;\n    }\n\n    get maximumSize(): number {\n        const size =\n            typeof this._maximumSize === 'function'\n                ? this._maximumSize()\n                : this._maximumSize;\n\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n\n        return size;\n    }\n\n    get snap(): boolean {\n        return this._snap;\n    }\n\n    constructor(id: string, componentName: string) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n\n        this.api.initialize(this);\n\n        this.addDisposables(\n            this._onDidChange,\n            this.api.onVisibilityChange((event) => {\n                const { isVisible } = event;\n                const { accessor } = this._params as PanelViewInitParameters;\n                accessor.setVisible(this, isVisible);\n            }),\n            this.api.onActiveChange(() => {\n                const { accessor } = this._params as PanelViewInitParameters;\n                accessor.setActive(this);\n            }),\n            this.api.onDidConstraintsChangeInternal((event) => {\n                if (\n                    typeof event.minimumSize === 'number' ||\n                    typeof event.minimumSize === 'function'\n                ) {\n                    this._minimumSize = event.minimumSize;\n                }\n                if (\n                    typeof event.maximumSize === 'number' ||\n                    typeof event.maximumSize === 'function'\n                ) {\n                    this._maximumSize = event.maximumSize;\n                }\n                this.updateConstraints();\n            }),\n            this.api.onDidSizeChange((event) => {\n                this._onDidChange.fire({ size: event.size });\n            })\n        );\n    }\n\n    setVisible(isVisible: boolean): void {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n\n    setActive(isActive: boolean): void {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n\n    layout(size: number, orthogonalSize: number): void {\n        const [width, height] =\n            this.orientation === Orientation.HORIZONTAL\n                ? [size, orthogonalSize]\n                : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n\n    init(parameters: PanelViewInitParameters): void {\n        super.init(parameters);\n\n        this._priority = parameters.priority;\n\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n\n    toJSON() {\n        const maximum = (value: number) =>\n            value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n                ? undefined\n                : value;\n        const minimum = (value: number) => (value <= 0 ? undefined : value);\n\n        return {\n            ...super.toJSON(),\n            minimumSize: minimum(this.minimumSize),\n            maximumSize: maximum(this.maximumSize),\n        };\n    }\n\n    private updateConstraints(): void {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IFrameworkPart, IDockviewDisposable, Parameters } from 'dockview-core';\n\nexport interface ReactPortalStore {\n    addPortal: (portal: React.ReactPortal) => IDockviewDisposable;\n}\n\ninterface IPanelWrapperProps {\n    component: React.FunctionComponent<{ [key: string]: any }>;\n    componentProps: { [key: string]: any };\n}\n\ninterface IPanelWrapperRef {\n    update: (props: { [key: string]: any }) => void;\n}\n\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge: React.ForwardRefRenderFunction<\n    IPanelWrapperRef,\n    IPanelWrapperProps\n> = (props, ref) => {\n    const [_, triggerRender] = React.useState<number>();\n    const _props = React.useRef<object>(props.componentProps);\n\n    React.useImperativeHandle(\n        ref,\n        () => ({\n            update: (componentProps: object) => {\n                _props.current = { ..._props.current, ...componentProps };\n                /**\n                 * setting a arbitrary piece of state within this component will\n                 * trigger a re-render.\n                 * we use this rather than updating through a prop since we can\n                 * pass a ref into the vanilla-js world.\n                 */\n                triggerRender(Date.now());\n            },\n        }),\n        []\n    );\n\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\n\nexport const ReactPartContext = React.createContext<{}>({});\n\nexport class ReactPart<P extends object, C extends object = {}>\n    implements IFrameworkPart\n{\n    private _initialProps: Parameters = {};\n    private componentInstance?: IPanelWrapperRef;\n    private ref?: {\n        portal: React.ReactPortal;\n        disposable: IDockviewDisposable;\n    };\n    private disposed = false;\n\n    constructor(\n        private readonly parent: HTMLElement,\n        private readonly portalStore: ReactPortalStore,\n        private readonly component: React.FunctionComponent<P>,\n        private readonly parameters: P,\n        private readonly context?: C\n    ) {\n        this.createPortal();\n    }\n\n    public update(props: { [index: string]: any }) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = { ...this._initialProps, ...props };\n        } else {\n            this.componentInstance.update(props);\n        }\n    }\n\n    private createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error(\n                'Invalid Operation. dockview only supports React Functional Components.'\n            );\n        }\n\n        const bridgeComponent = React.createElement(\n            React.forwardRef(ReactComponentBridge),\n            {\n                component: this\n                    .component as unknown as React.FunctionComponent<{}>,\n                componentProps: this.parameters as unknown as {},\n                ref: (element: IPanelWrapperRef) => {\n                    this.componentInstance = element;\n\n                    if (Object.keys(this._initialProps).length > 0) {\n                        this.componentInstance.update(this._initialProps);\n                        this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                    }\n                },\n            }\n        );\n\n        const node = this.context\n            ? React.createElement(\n                  ReactPartContext.Provider,\n                  { value: this.context },\n                  bridgeComponent\n              )\n            : bridgeComponent;\n\n        const portal = ReactDOM.createPortal(\n            node,\n            this.parent,\n            uniquePortalKeyGenerator.next()\n        );\n\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n\n    public dispose() {\n        this.ref?.disposable.dispose();\n        this.disposed = true;\n    }\n}\n\ntype PortalLifecycleHook = () => [\n    React.ReactPortal[],\n    (portal: React.ReactPortal) => IDockviewDisposable\n];\n\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle: PortalLifecycleHook = () => {\n    const [portals, setPortals] = React.useState<React.ReactPortal[]>([]);\n\n    React.useDebugValue(`Portal count: ${portals.length}`);\n\n    const addPortal = React.useCallback((portal: React.ReactPortal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error(\n                        'invalid operation: resource already disposed'\n                    );\n                }\n                disposed = true;\n                setPortals((existingPortals) =>\n                    existingPortals.filter((p) => p !== portal)\n                );\n            },\n        };\n    }, []);\n\n    return [portals, addPortal];\n};\n\n// it does the job...\nexport function isReactElement(\n    element: any | React.ReactElement\n): element is React.ReactElement {\n    return element?.type;\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IDockviewPanelProps } from '../dockview/dockview';\nimport {\n    DockviewEmitter,\n    DockviewEvent,\n    PanelUpdateEvent,\n    IContentRenderer,\n    GroupPanelContentPartInitParameters,\n} from 'dockview-core';\n\nexport class ReactPanelContentPart implements IContentRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IDockviewPanelProps>;\n\n    private readonly _onDidFocus = new DockviewEmitter<void>();\n    readonly onDidFocus: DockviewEvent<void> = this._onDidFocus.event;\n\n    private readonly _onDidBlur = new DockviewEmitter<void>();\n    readonly onDidBlur: DockviewEvent<void> = this._onDidBlur.event;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IDockviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        // TODO\n    }\n\n    public init(parameters: GroupPanelContentPartInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent) {\n        this.part?.update(event.params);\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop\n    }\n\n    public dispose(): void {\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IGroupPanelBaseProps } from './dockview';\nimport {\n    PanelUpdateEvent,\n    ITabRenderer,\n    GroupPanelPartInitParameters,\n} from 'dockview-core';\n\nexport class ReactPanelHeaderPart implements ITabRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IGroupPanelBaseProps>;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IGroupPanelBaseProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        //noop\n    }\n\n    public init(parameters: GroupPanelPartInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this.part?.update(event.params);\n    }\n\n    public layout(_width: number, _height: number): void {\n        // noop - retrieval from api\n    }\n\n    public dispose(): void {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport {\n    PanelUpdateEvent,\n    DockviewGroupPanel,\n    GroupPanelPartInitParameters,\n    IWatermarkRenderer,\n    WatermarkRendererInitParameters,\n    DockviewApi,\n    IDockviewGroupPanel,\n} from 'dockview-core';\n\nexport interface IWatermarkPanelProps {\n    containerApi: DockviewApi;\n    group?: IDockviewGroupPanel;\n    close: () => void;\n}\n\nexport class ReactWatermarkPart implements IWatermarkRenderer {\n    private _element: HTMLElement;\n    private part?: ReactPart<IWatermarkPanelProps>;\n    private parameters: GroupPanelPartInitParameters | undefined;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IWatermarkPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    init(parameters: WatermarkRendererInitParameters): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                group: parameters.group,\n                containerApi: parameters.containerApi,\n                close: () => {\n                    if (parameters.group) {\n                        parameters.containerApi.removeGroup(parameters.group);\n                    }\n                },\n            }\n        );\n    }\n\n    focus(): void {\n        // noop\n    }\n\n    update(params: PanelUpdateEvent): void {\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n\n        this.part?.update({ params: this.parameters?.params || {} });\n    }\n\n    layout(_width: number, _height: number): void {\n        // noop - retrieval from api\n    }\n\n    updateParentGroup(\n        _group: DockviewGroupPanel,\n        _isPanelVisible: boolean\n    ): void {\n        // noop\n    }\n\n    dispose(): void {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport {\n    IDockviewPanel,\n    DockviewCompositeDisposable,\n    DockviewMutableDisposable,\n    DockviewApi,\n    DockviewGroupPanel,\n    DockviewGroupPanelApi,\n    PanelUpdateEvent,\n} from 'dockview-core';\n\nexport interface IDockviewHeaderActionsProps {\n    api: DockviewGroupPanelApi;\n    containerApi: DockviewApi;\n    panels: IDockviewPanel[];\n    activePanel: IDockviewPanel | undefined;\n    isGroupActive: boolean;\n    group: DockviewGroupPanel;\n}\n\nexport class ReactHeaderActionsRendererPart {\n    private mutableDisposable = new DockviewMutableDisposable();\n    private _element: HTMLElement;\n    private _part?: ReactPart<IDockviewHeaderActionsProps>;\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n    get part(): ReactPart<IDockviewHeaderActionsProps> | undefined {\n        return this._part;\n    }\n\n    get group(): DockviewGroupPanel {\n        return this._group;\n    }\n\n    constructor(\n        private readonly component: React.FunctionComponent<IDockviewHeaderActionsProps>,\n        private readonly reactPortalStore: ReactPortalStore,\n        private readonly _group: DockviewGroupPanel\n    ) {\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n\n    focus(): void {\n        // TODO\n    }\n\n    public init(parameters: {\n        containerApi: DockviewApi;\n        api: DockviewGroupPanelApi;\n    }): void {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(\n            this._group.model.onDidAddPanel(() => {\n                this.updatePanels();\n            }),\n            this._group.model.onDidRemovePanel(() => {\n                this.updatePanels();\n            }),\n            this._group.model.onDidActivePanelChange(() => {\n                this.updateActivePanel();\n            }),\n            parameters.api.onDidActiveChange(() => {\n                this.updateGroupActive();\n            })\n        );\n\n        this._part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                api: parameters.api,\n                containerApi: parameters.containerApi,\n                panels: this._group.model.panels,\n                activePanel: this._group.model.activePanel,\n                isGroupActive: this._group.api.isActive,\n                group: this._group,\n            }\n        );\n    }\n\n    public update(event: PanelUpdateEvent): void {\n        this._part?.update(event.params);\n    }\n\n    public dispose(): void {\n        this.mutableDisposable.dispose();\n        this._part?.dispose();\n    }\n\n    private updatePanels(): void {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n\n    private updateActivePanel(): void {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n\n    private updateGroupActive(): void {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport {\n    DockviewComponent,\n    DockviewDropEvent,\n    DockviewDndOverlayEvent,\n    GroupPanelFrameworkComponentFactory,\n    DockviewPanelApi,\n    DockviewApi,\n    IContentRenderer,\n    ITabRenderer,\n    DockviewGroupPanel,\n    IHeaderActionsRenderer,\n} from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\n\nimport { ReactPortalStore, usePortalsLifecycle } from '../react';\nimport { IWatermarkPanelProps, ReactWatermarkPart } from './reactWatermarkPart';\nimport { PanelCollection, PanelParameters } from '../types';\nimport {\n    IDockviewHeaderActionsProps,\n    ReactHeaderActionsRendererPart,\n} from './headerActionsRenderer';\n\nfunction createGroupControlElement(\n    component: React.FunctionComponent<IDockviewHeaderActionsProps> | undefined,\n    store: ReactPortalStore\n): ((groupPanel: DockviewGroupPanel) => IHeaderActionsRenderer) | undefined {\n    return component\n        ? (groupPanel: DockviewGroupPanel) => {\n              return new ReactHeaderActionsRendererPart(\n                  component,\n                  store,\n                  groupPanel\n              );\n          }\n        : undefined;\n}\n\nexport interface IGroupPanelBaseProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: DockviewPanelApi;\n    containerApi: DockviewApi;\n}\n\nexport type IDockviewPanelHeaderProps<\n    T extends { [index: string]: any } = any\n> = IGroupPanelBaseProps<T>;\n\nexport type IDockviewPanelProps<T extends { [index: string]: any } = any> =\n    IGroupPanelBaseProps<T>;\n\nexport interface DockviewReadyEvent {\n    api: DockviewApi;\n}\n\nexport interface IDockviewReactProps {\n    onReady: (event: DockviewReadyEvent) => void;\n    components: PanelCollection<IDockviewPanelProps>;\n    tabComponents?: PanelCollection<IDockviewPanelHeaderProps>;\n    watermarkComponent?: React.FunctionComponent<IWatermarkPanelProps>;\n    onDidDrop?: (event: DockviewDropEvent) => void;\n    showDndOverlay?: (event: DockviewDndOverlayEvent) => boolean;\n    hideBorders?: boolean;\n    className?: string;\n    disableAutoResizing?: boolean;\n    defaultTabComponent?: React.FunctionComponent<IDockviewPanelHeaderProps>;\n    rightHeaderActionsComponent?: React.FunctionComponent<IDockviewHeaderActionsProps>;\n    leftHeaderActionsComponent?: React.FunctionComponent<IDockviewHeaderActionsProps>;\n    singleTabMode?: 'fullwidth' | 'default';\n    disableFloatingGroups?: boolean;\n}\n\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\n\nexport const DockviewReact = React.forwardRef(\n    (props: IDockviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const dockviewRef = React.useRef<DockviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            if (!domRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const factory: GroupPanelFrameworkComponentFactory = {\n                content: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<IDockviewPanelProps>\n                    ): IContentRenderer => {\n                        return new ReactPanelContentPart(\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                tab: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<IDockviewPanelHeaderProps>\n                    ): ITabRenderer => {\n                        return new ReactPanelHeaderPart(\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                watermark: {\n                    createComponent: (\n                        _id: string,\n                        componentId: string,\n                        component: React.FunctionComponent<{}>\n                    ) => {\n                        return new ReactWatermarkPart(componentId, component, {\n                            addPortal,\n                        });\n                    },\n                },\n            };\n\n            const frameworkTabComponents = props.tabComponents || {};\n\n            if (props.defaultTabComponent) {\n                frameworkTabComponents[DEFAULT_REACT_TAB] =\n                    props.defaultTabComponent;\n            }\n\n            const dockview = new DockviewComponent({\n                parentElement: domRef.current,\n                frameworkComponentFactory: factory,\n                frameworkComponents: props.components,\n                frameworkTabComponents,\n                watermarkFrameworkComponent: props.watermarkComponent,\n                defaultTabComponent: props.defaultTabComponent\n                    ? DEFAULT_REACT_TAB\n                    : undefined,\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n                showDndOverlay: props.showDndOverlay,\n                createLeftHeaderActionsElement: createGroupControlElement(\n                    props.leftHeaderActionsComponent,\n                    { addPortal }\n                ),\n                createRightHeaderActionsElement: createGroupControlElement(\n                    props.rightHeaderActionsComponent,\n                    { addPortal }\n                ),\n                singleTabMode: props.singleTabMode,\n                disableFloatingGroups: props.disableFloatingGroups,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current;\n            dockview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new DockviewApi(dockview) });\n            }\n\n            dockviewRef.current = dockview;\n\n            return () => {\n                dockview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const disposable = dockviewRef.current.onDidDrop((event) => {\n                if (props.onDidDrop) {\n                    props.onDidDrop(event);\n                }\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.onDidDrop]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                watermarkFrameworkComponent: props.watermarkComponent,\n            });\n        }, [props.watermarkComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                showDndOverlay: props.showDndOverlay,\n            });\n        }, [props.showDndOverlay]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                frameworkTabComponents: props.tabComponents,\n            });\n        }, [props.tabComponents]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                disableFloatingGroups: props.disableFloatingGroups,\n            });\n        }, [props.disableFloatingGroups]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n\n            const frameworkTabComponents = props.tabComponents || {};\n\n            if (props.defaultTabComponent) {\n                frameworkTabComponents[DEFAULT_REACT_TAB] =\n                    props.defaultTabComponent;\n            }\n\n            dockviewRef.current.updateOptions({\n                defaultTabComponent: props.defaultTabComponent\n                    ? DEFAULT_REACT_TAB\n                    : undefined,\n                frameworkTabComponents,\n            });\n        }, [props.defaultTabComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                createRightHeaderActionsElement: createGroupControlElement(\n                    props.rightHeaderActionsComponent,\n                    { addPortal }\n                ),\n            });\n        }, [props.rightHeaderActionsComponent]);\n\n        React.useEffect(() => {\n            if (!dockviewRef.current) {\n                return;\n            }\n            dockviewRef.current.updateOptions({\n                createLeftHeaderActionsElement: createGroupControlElement(\n                    props.leftHeaderActionsComponent,\n                    { addPortal }\n                ),\n            });\n        }, [props.leftHeaderActionsComponent]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\n\nexport const CloseButton = () => (\n    <svg\n        height=\"11\"\n        width=\"11\"\n        viewBox=\"0 0 28 28\"\n        aria-hidden={'false'}\n        focusable={false}\n        className=\"dockview-svg\"\n    >\n        <path d=\"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\"></path>\n    </svg>\n);\n\nexport const ExpandMore = () => {\n    return (\n        <svg\n            width=\"11\"\n            height=\"11\"\n            viewBox=\"0 0 24 15\"\n            aria-hidden={'false'}\n            focusable={false}\n            className=\"dockview-svg\"\n        >\n            <path d=\"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" />\n        </svg>\n    );\n};\n","import { IDockviewPanelHeaderProps } from './dockview';\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\n\nexport type IDockviewDefaultTabProps = IDockviewPanelHeaderProps &\n    React.DOMAttributes<HTMLDivElement> & {\n        hideClose?: boolean;\n        closeActionOverride?: () => void;\n    };\n\nexport const DockviewDefaultTab: React.FunctionComponent<\n    IDockviewDefaultTabProps\n> = ({\n    api,\n    containerApi: _containerApi,\n    params: _params,\n    hideClose,\n    closeActionOverride,\n    ...rest\n}) => {\n    const onClose = React.useCallback(\n        (event: React.MouseEvent<HTMLSpanElement>) => {\n            event.preventDefault();\n\n            if (closeActionOverride) {\n                closeActionOverride();\n            } else {\n                api.close();\n            }\n        },\n        [api, closeActionOverride]\n    );\n\n    const onMouseDown = React.useCallback((e: React.MouseEvent) => {\n        e.preventDefault();\n    }, []);\n\n    const onClick = React.useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n\n            api.setActive();\n\n            if (rest.onClick) {\n                rest.onClick(event);\n            }\n        },\n        [api, rest.onClick]\n    );\n\n    return (\n        <div\n            data-testid=\"dockview-default-tab\"\n            {...rest}\n            onClick={onClick}\n            className=\"dockview-react-tab\"\n        >\n            <span className=\"dockview-react-tab-title\">{api.title}</span>\n            {!hideClose && (\n                <div\n                    className=\"dv-react-tab-close-btn\"\n                    onMouseDown={onMouseDown}\n                    onClick={onClose}\n                >\n                    <CloseButton />\n                </div>\n            )}\n        </div>\n    );\n};\n","import {\n    SplitviewApi,\n    PanelViewInitParameters,\n    SplitviewPanel,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { ISplitviewPanelProps } from './splitview';\n\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(\n        id: string,\n        component: string,\n        private readonly reactComponent: React.FunctionComponent<ISplitviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        super(id, component);\n    }\n\n    getComponent(): ReactPart<ISplitviewPanelProps> {\n        return new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.reactComponent,\n            {\n                params: this._params?.params || {},\n                api: this.api,\n                containerApi: new SplitviewApi(\n                    (this._params as PanelViewInitParameters).accessor\n                ),\n            }\n        );\n    }\n}\n","import * as React from 'react';\nimport {\n    SplitviewApi,\n    SplitviewPanelApi,\n    ISplitviewComponent,\n    SplitviewComponent,\n    Orientation,\n} from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanelCollection, PanelParameters } from '../types';\nimport { ReactPanelView } from './view';\n\nexport interface SplitviewReadyEvent {\n    api: SplitviewApi;\n}\n\nexport interface ISplitviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: SplitviewPanelApi;\n    containerApi: SplitviewApi;\n}\n\nexport interface ISplitviewReactProps {\n    orientation?: Orientation;\n    onReady: (event: SplitviewReadyEvent) => void;\n    components: PanelCollection<ISplitviewPanelProps>;\n    proportionalLayout?: boolean;\n    hideBorders?: boolean;\n    className?: string;\n    disableAutoResizing?: boolean;\n}\n\nexport const SplitviewReact = React.forwardRef(\n    (props: ISplitviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const splitviewRef = React.useRef<ISplitviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            const splitview = new SplitviewComponent({\n                parentElement: domRef.current!,\n                orientation: props.orientation || Orientation.HORIZONTAL,\n                frameworkComponents: props.components,\n                frameworkWrapper: {\n                    createComponent: (\n                        id: string,\n                        componentId,\n                        component: any\n                    ) => {\n                        return new ReactPanelView(id, componentId, component, {\n                            addPortal,\n                        });\n                    },\n                },\n                proportionalLayout:\n                    typeof props.proportionalLayout === 'boolean'\n                        ? props.proportionalLayout\n                        : true,\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current!;\n            splitview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new SplitviewApi(splitview) });\n            }\n\n            splitviewRef.current = splitview;\n\n            return () => {\n                splitview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!splitviewRef.current) {\n                return;\n            }\n            splitviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nSplitviewReact.displayName = 'SplitviewComponent';\n","import {\n    GridviewApi,\n    GridviewPanel,\n    GridviewInitParameters,\n    IFrameworkPart,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IGridviewPanelProps } from './gridview';\n\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(\n        id: string,\n        component: string,\n        private readonly reactComponent: React.FunctionComponent<IGridviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        super(id, component);\n    }\n\n    getComponent(): IFrameworkPart {\n        return new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.reactComponent,\n            {\n                params: this._params?.params || {},\n                api: this.api,\n                containerApi: new GridviewApi(\n                    (this._params as GridviewInitParameters).accessor\n                ),\n            }\n        );\n    }\n}\n","import * as React from 'react';\nimport {\n    GridviewComponent,\n    IGridviewComponent,\n    GridviewPanelApi,\n    Orientation,\n    GridviewApi,\n} from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { PanelCollection, PanelParameters } from '../types';\n\nexport interface GridviewReadyEvent {\n    api: GridviewApi;\n}\n\nexport interface IGridviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: GridviewPanelApi;\n    containerApi: GridviewApi;\n}\n\nexport interface IGridviewReactProps {\n    orientation?: Orientation;\n    onReady: (event: GridviewReadyEvent) => void;\n    components: PanelCollection<IGridviewPanelProps>;\n    hideBorders?: boolean;\n    className?: string;\n    proportionalLayout?: boolean;\n    disableAutoResizing?: boolean;\n}\n\nexport const GridviewReact = React.forwardRef(\n    (props: IGridviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const gridviewRef = React.useRef<IGridviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            if (!domRef.current) {\n                return () => {\n                    // noop\n                };\n            }\n\n            const gridview = new GridviewComponent({\n                parentElement: domRef.current,\n                proportionalLayout:\n                    typeof props.proportionalLayout === 'boolean'\n                        ? props.proportionalLayout\n                        : true,\n                orientation: props.orientation || Orientation.HORIZONTAL,\n                frameworkComponents: props.components,\n                frameworkComponentFactory: {\n                    createComponent: (id: string, componentId, component) => {\n                        return new ReactGridPanelView(\n                            id,\n                            componentId,\n                            component,\n                            {\n                                addPortal,\n                            }\n                        );\n                    },\n                },\n                styles: props.hideBorders\n                    ? { separatorBorder: 'transparent' }\n                    : undefined,\n            });\n\n            const { clientWidth, clientHeight } = domRef.current;\n            gridview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api: new GridviewApi(gridview) });\n            }\n\n            gridviewRef.current = gridview;\n\n            return () => {\n                gridview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!gridviewRef.current) {\n                return;\n            }\n            gridviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nGridviewReact.displayName = 'GridviewComponent';\n","import * as React from 'react';\nimport {\n    PanelUpdateEvent,\n    IPaneBodyPart,\n    PanePanelComponentInitParameter,\n} from 'dockview-core';\nimport { ReactPart, ReactPortalStore } from '../react';\nimport { IPaneviewPanelProps } from './paneview';\n\nexport class PanePanelSection implements IPaneBodyPart {\n    private _element: HTMLElement;\n    private part?: ReactPart<IPaneviewPanelProps>;\n\n    get element() {\n        return this._element;\n    }\n\n    constructor(\n        public readonly id: string,\n        private readonly component: React.FunctionComponent<IPaneviewPanelProps>,\n        private readonly reactPortalStore: ReactPortalStore\n    ) {\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n\n    public init(parameters: PanePanelComponentInitParameter): void {\n        this.part = new ReactPart(\n            this.element,\n            this.reactPortalStore,\n            this.component,\n            {\n                params: parameters.params,\n                api: parameters.api,\n                title: parameters.title,\n                containerApi: parameters.containerApi,\n            }\n        );\n    }\n\n    public toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n\n    public update(params: PanelUpdateEvent) {\n        this.part?.update(params.params);\n    }\n\n    public dispose() {\n        this.part?.dispose();\n    }\n}\n","import * as React from 'react';\nimport {\n    PaneviewPanelApi,\n    PaneviewComponent,\n    IPaneviewComponent,\n    PaneviewDndOverlayEvent,\n    PaneviewApi,\n    PaneviewDropEvent,\n} from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nimport { PanelCollection, PanelParameters } from '../types';\n\nexport interface PaneviewReadyEvent {\n    api: PaneviewApi;\n}\n\nexport interface IPaneviewPanelProps<T extends { [index: string]: any } = any>\n    extends PanelParameters<T> {\n    api: PaneviewPanelApi;\n    containerApi: PaneviewApi;\n    title: string;\n}\n\nexport interface IPaneviewReactProps {\n    onReady: (event: PaneviewReadyEvent) => void;\n    components: PanelCollection<IPaneviewPanelProps>;\n    headerComponents?: PanelCollection<IPaneviewPanelProps>;\n    className?: string;\n    disableAutoResizing?: boolean;\n    disableDnd?: boolean;\n    showDndOverlay?: (event: PaneviewDndOverlayEvent) => boolean;\n    onDidDrop?(event: PaneviewDropEvent): void;\n}\n\nexport const PaneviewReact = React.forwardRef(\n    (props: IPaneviewReactProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const domRef = React.useRef<HTMLDivElement>(null);\n        const paneviewRef = React.useRef<IPaneviewComponent>();\n        const [portals, addPortal] = usePortalsLifecycle();\n\n        React.useImperativeHandle(ref, () => domRef.current!, []);\n\n        React.useEffect(() => {\n            const createComponent = (\n                id: string,\n                _componentId: string,\n                component: any\n            ) =>\n                new PanePanelSection(id, component, {\n                    addPortal,\n                });\n\n            const paneview = new PaneviewComponent({\n                parentElement: domRef.current!,\n                frameworkComponents: props.components,\n                components: {},\n                headerComponents: {},\n                disableDnd: props.disableDnd,\n                headerframeworkComponents: props.headerComponents,\n                frameworkWrapper: {\n                    header: {\n                        createComponent,\n                    },\n                    body: {\n                        createComponent,\n                    },\n                },\n                showDndOverlay: props.showDndOverlay,\n            });\n\n            const api = new PaneviewApi(paneview);\n\n            const { clientWidth, clientHeight } = domRef.current!;\n            paneview.layout(clientWidth, clientHeight);\n\n            if (props.onReady) {\n                props.onReady({ api });\n            }\n\n            paneviewRef.current = paneview;\n\n            return () => {\n                paneview.dispose();\n            };\n        }, []);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                frameworkComponents: props.components,\n            });\n        }, [props.components]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                headerframeworkComponents: props.headerComponents,\n            });\n        }, [props.headerComponents]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return () => {\n                    //\n                };\n            }\n\n            const paneview = paneviewRef.current;\n\n            const disposable = paneview.onDidDrop((event) => {\n                if (props.onDidDrop) {\n                    props.onDidDrop({\n                        ...event,\n                        api: new PaneviewApi(paneview),\n                    });\n                }\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.onDidDrop]);\n\n        React.useEffect(() => {\n            if (!paneviewRef.current) {\n                return;\n            }\n            paneviewRef.current.updateOptions({\n                showDndOverlay: props.showDndOverlay,\n            });\n        }, [props.showDndOverlay]);\n\n        return (\n            <div\n                className={props.className}\n                style={{ height: '100%', width: '100%' }}\n                ref={domRef}\n            >\n                {portals}\n            </div>\n        );\n    }\n);\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: { id: string }) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            <ThemePicker />\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton id={sandboxId} />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heroBanner\":\"heroBanner_qdFl\",\"buttons\":\"buttons_AeoN\"};","// extracted by mini-css-extract-plugin\nexport default {\"features\":\"features_t9lD\",\"featureSvg\":\"featureSvg_GfXr\"};","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\n\ntype FeatureItem = {\n    title: string;\n    Svg: React.ComponentType<React.ComponentProps<'svg'>>;\n    description: JSX.Element;\n};\n\nconst FeatureList: FeatureItem[] = [\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_grid_3.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Serializable Layouts\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Add and remove panels using the provided api or use the\n                        serialziation methods to persist layouts.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Customizable Theme\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Adjust a number of provided CSS Properties for a simple\n                        change or target specific classes for a more customized\n                        approach.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Choose Your Control\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Choose from a simple splitview, gridview, collapsable\n                        panes or a full docking solution. Combine multiple for\n                        complex layouts.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_grid_4.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Rich Feature Control\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Customize header features to add additional icons and\n                        more as well as custom tab rendering.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Floating Group Support\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Built-in support for floating groups with a supporting\n                        api for progmatic control.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">Drag And Drop</h3>\n                    <p className=\"feature-banner-content\">\n                        Drag and Drop tab to position your layout as well as\n                        interacting with external drag events.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n    {\n        title: '',\n        Svg: require('@site/static/img/dockview_splash_2.svg').default,\n        description: (\n            <>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">Zero Dependencies</h3>\n                    <p className=\"feature-banner-content\">\n                        Zero dependencies, that's all.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        Code Quality and Transparency\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        All of the code is run through Sonarcloud Code Analysis,\n                        which along with the source code and high test coverage\n                        can be viewed from the Github page.\n                    </p>\n                </div>\n                <div className=\"feature-banner\">\n                    <h3 className=\"feature-banner-header\">\n                        React or Vanilla TypeScript\n                    </h3>\n                    <p className=\"feature-banner-content\">\n                        Exposes native support for both ReactJS components and\n                        Vanilla TypeScript.\n                    </p>\n                </div>\n            </>\n        ),\n    },\n];\n\nfunction Feature({ title, Svg, description }: FeatureItem) {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                margin: 'auto',\n                justifyContent: 'center',\n            }}\n            className=\"dockview-feature\"\n        >\n            <Svg className={styles.featureSvg} role=\"img\" />\n            <div style={{ maxWidth: '400px', padding: '0px 20px' }}>\n                <h3>{title}</h3>\n                {description}\n            </div>\n        </div>\n    );\n}\n\nexport default function HomepageFeatures(): JSX.Element {\n    return (\n        <section className={styles.features}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {FeatureList.map((props, idx) => (\n                        <Feature key={idx} {...props} />\n                    ))}\n                </div>\n            </div>\n        </section>\n    );\n}\n","import * as React from 'react';\n\nexport const BrowserHeader = () => (\n    <div\n        style={{\n            height: '30px',\n            borderBottom: '1px solid #BABABA',\n            backgroundColor: '#DCDCDC',\n            borderTopLeftRadius: '15px',\n            borderTopRightRadius: '15px',\n            padding: '0px 15px',\n            display: 'flex',\n            alignItems: 'center',\n        }}\n    >\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#FD605E',\n                marginRight: 7,\n            }}\n        />\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#FBBC3F',\n                marginRight: 7,\n            }}\n        />\n        <div\n            style={{\n                height: '14px',\n                width: '14px',\n                borderRadius: '100%',\n                backgroundColor: '#34C942',\n                marginRight: 7,\n            }}\n        />\n    </div>\n);\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import {\n    DockviewDefaultTab,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelHeaderProps,\n    IDockviewPanelProps,\n    IDockviewHeaderActionsProps,\n} from 'dockview';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { v4 } from 'uuid';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst headerComponents = {\n    default: (props: IDockviewPanelHeaderProps) => {\n        const onContextMenu = (event: React.MouseEvent) => {\n            event.preventDefault();\n            alert('context menu');\n        };\n        return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n    },\n};\n\nconst Popover = (props: {\n    children: React.ReactNode;\n    position?: { x: number; y: number };\n    close: () => void;\n}) => {\n    const uuid = React.useMemo(() => v4(), []);\n\n    React.useEffect(() => {\n        const listener = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                props.close();\n            }\n        };\n        const listener2 = (event: MouseEvent) => {\n            let target = event.target;\n\n            while (target) {\n                if (target instanceof HTMLElement) {\n                    if (target.classList.contains(uuid)) {\n                        return;\n                    } else {\n                        target = target.parentElement;\n                    }\n                } else {\n                    target = null;\n                }\n            }\n\n            props.close();\n        };\n        window.addEventListener('keypress', listener);\n        window.addEventListener('mousedown', listener2);\n\n        return () => {\n            window.removeEventListener('keypress', listener);\n            window.removeEventListener('mousedown', listener2);\n        };\n    }, [props.close, uuid]);\n\n    if (!props.position) {\n        return null;\n    }\n\n    return ReactDOM.createPortal(\n        <div\n            className={uuid}\n            style={{\n                position: 'absolute',\n                top: props.position.y,\n                left: props.position.x,\n                background: 'white',\n                border: '1px solid black',\n                zIndex: 99,\n                padding: '10px',\n            }}\n        >\n            {props.children}\n        </div>,\n        document.body\n    );\n};\n\nconst Icon = (props: {\n    icon: string;\n    onClick?: (event: React.MouseEvent) => void;\n}) => {\n    return (\n        <div className=\"action\" onClick={props.onClick}>\n            <span\n                style={{ fontSize: 'inherit' }}\n                className=\"material-symbols-outlined\"\n            >\n                {props.icon}\n            </span>\n        </div>\n    );\n};\n\nconst Button = () => {\n    const [position, setPosition] = React.useState<\n        { x: number; y: number } | undefined\n    >(undefined);\n\n    const close = () => setPosition(undefined);\n\n    const onClick = (event: React.MouseEvent) => {\n        setPosition({ x: event.pageX, y: event.pageY });\n    };\n\n    return (\n        <>\n            <Icon icon=\"more_vert\" onClick={onClick} />\n            {position && (\n                <Popover position={position} close={close}>\n                    <div>hello</div>\n                </Popover>\n            )}\n        </>\n    );\n};\n\nconst groupControlsComponents = {\n    panel_1: () => {\n        return <Icon icon=\"file_download\" />;\n    },\n};\n\nconst RightControls = (props: IDockviewHeaderActionsProps) => {\n    const Component = React.useMemo(() => {\n        if (!props.isGroupActive || !props.activePanel) {\n            return null;\n        }\n\n        return groupControlsComponents[props.activePanel.id];\n    }, [props.isGroupActive, props.activePanel]);\n\n    return (\n        <div\n            className=\"group-control\"\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 8px',\n                height: '100%',\n                color: 'var(--dv-activegroup-visiblepanel-tab-color)',\n            }}\n        >\n            {props.isGroupActive && <Icon icon=\"star\" />}\n            {Component && <Component />}\n            <Button />\n        </div>\n    );\n};\n\nlet counter = 0;\n\nconst LeftControls = (props: IDockviewHeaderActionsProps) => {\n    const onClick = () => {\n        props.containerApi.addPanel({\n            id: `id_${Date.now().toString()}`,\n            component: 'default',\n            title: `Tab ${counter++}`,\n            position: {\n                referenceGroup: props.group,\n            },\n        });\n    };\n\n    return (\n        <div\n            className=\"group-control\"\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 8px',\n                height: '100%',\n                color: 'var(--dv-activegroup-visiblepanel-tab-color)',\n            }}\n        >\n            <Icon onClick={onClick} icon=\"add\" />\n        </div>\n    );\n};\n\nconst DockviewDemo = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            title: 'Panel 6',\n            position: { referencePanel: 'panel_4', direction: 'below' },\n        });\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            title: 'Panel 7',\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            title: 'Panel 8',\n            position: { referencePanel: 'panel_7', direction: 'within' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_9',\n            component: 'default',\n            title: 'Panel 9',\n            floating: { width: 450, height: 250 },\n        });\n\n        event.api.addPanel({\n            id: 'panel_10',\n            component: 'default',\n            title: 'Panel 10',\n            position: { referencePanel: 'panel_9' },\n        });\n\n        event.api.getPanel('panel_1')!.api.setActive();\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            defaultTabComponent={headerComponents.default}\n            rightHeaderActionsComponent={RightControls}\n            leftHeaderActionsComponent={LeftControls}\n            onReady={onReady}\n            className={props.theme || 'dockview-theme-abyss'}\n        />\n    );\n};\n\nexport default DockviewDemo;\n","import {\n    GridviewReact,\n    GridviewReadyEvent,\n    IGridviewPanelProps,\n    IPaneviewPanelProps,\n    PaneviewReact,\n    PaneviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst paneComponents = {\n    default: (props: IPaneviewPanelProps) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n    panes: (props: IGridviewPanelProps) => {\n        const onReady = (event: PaneviewReadyEvent) => {\n            event.api.addPanel({\n                id: 'pane_1',\n                component: 'default',\n                title: 'Pane 1',\n                isExpanded: false,\n            });\n\n            event.api.addPanel({\n                id: 'pane_2',\n                component: 'default',\n                title: 'Pane 2',\n                isExpanded: true,\n            });\n\n            event.api.addPanel({\n                id: 'pane_3',\n                component: 'default',\n                title: 'Pane 3',\n                isExpanded: true,\n            });\n\n            event.api.addPanel({\n                id: 'pane_4',\n                component: 'default',\n                title: 'Pane 4',\n                isExpanded: false,\n            });\n        };\n\n        return <PaneviewReact onReady={onReady} components={paneComponents} />;\n    },\n};\n\nconst DockviewDemo2 = (props: { theme?: string }) => {\n    const onReady = (event: GridviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panes',\n            component: 'panes',\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            position: { referencePanel: 'panes', direction: 'right' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: { referencePanel: 'panel_1', direction: 'below' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: { referencePanel: 'panel_2', direction: 'below' },\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n    };\n\n    return (\n        <GridviewReact\n            onReady={onReady}\n            components={components}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default DockviewDemo2;\n","import useBaseUrl from '@docusaurus/useBaseUrl';\nimport HomepageFeatures from '.';\nimport { BrowserHeader } from '../ui/browserHeader';\nimport { MultiFrameworkContainer } from '../ui/container';\nimport * as React from 'react';\nimport DockviewDemo from '@site/sandboxes/demo-dockview/src/app';\nimport DockviewDemo2 from '@site/sandboxes/dockview-app/src/app';\n\nexport const Introduction = () => {\n    return (\n        <>\n            <HomepageFeatures />\n            <div\n                id=\"live-demo\"\n                style={{\n                    height: '30px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '1.5em',\n                    fontWeight: 'bold',\n                }}\n            >\n                <img src={useBaseUrl('/img/dockview_logo.svg')} height={30} />\n                <span style={{ paddingLeft: '8px' }}>Dockview Live Demos</span>\n            </div>\n            <div style={{ padding: '20px' }}>\n                <BrowserHeader />\n                <MultiFrameworkContainer\n                    height={500}\n                    sandboxId=\"demo-dockview\"\n                    react={DockviewDemo}\n                />\n            </div>\n            <div style={{ padding: '20px' }}>\n                <BrowserHeader />\n                <MultiFrameworkContainer\n                    height={500}\n                    react={DockviewDemo2}\n                    sandboxId=\"dockview-app\"\n                />\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport Layout from '@theme/Layout';\nimport Link from '@docusaurus/Link';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport styles from './index.module.css';\nimport HomepageFeatures from '@site/src/components/HomepageFeatures';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport DockviewDemo from '@site/sandboxes/demo-dockview/src/app';\nimport DockviewDemo2 from '@site/sandboxes/dockview-app/src/app';\nimport { MultiFrameworkContainer } from '../components/ui/container';\nimport { BrowserHeader } from '../components/ui/browserHeader';\nimport './index.scss';\nimport { Introduction } from '../components/HomepageFeatures/introduction';\n\nfunction HomepageHeader() {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <header className={clsx('hero hero--primary', styles.heroBanner)}>\n            <div className=\"container\">\n                <h1 className=\"hero__title\">{siteConfig.title}</h1>\n                <p className=\"hero__subtitle\">{siteConfig.tagline}</p>\n                <div className={styles.buttons}>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={useBaseUrl('docs/')}\n                    >\n                        Get Started\n                    </Link>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nfunction HomepageHeader2() {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <header className={clsx('hero hero--primary', styles.heroBanner)}>\n            <div className=\"container homepage\">\n                <img src={useBaseUrl('/img/dockview_logo.svg')} />\n                <h1 className=\"hero__title\">{siteConfig.title}</h1>\n                {/* <div className=\"badge-container\">\n                            <img src=\"https://badge.fury.io/js/dockview.svg\" />\n                            <img src=\"https://github.com/mathuo/dockview/workflows/CI/badge.svg\" />\n                            <img src=\"https://sonarcloud.io/api/project_badges/measure?project=mathuo_dockview&metric=coverage\" />\n                            <img src=\"https://sonarcloud.io/api/project_badges/measure?project=mathuo_dockview&metric=alert_status\" />\n                        </div> */}\n                <p className=\"hero__subtitle\">{siteConfig.tagline}</p>\n                <div className={styles.buttons}>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={useBaseUrl('docs/')}\n                    >\n                        Get Started\n                    </Link>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to={'#live-demo'}\n                    >\n                        Live Demo\n                    </Link>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default function Home(): JSX.Element {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <Layout\n            title={`${siteConfig.tagline}`}\n            description={`${siteConfig.description}`}\n        >\n            <HomepageHeader2 />\n            <main className=\"container\">\n                <Introduction />\n            </main>\n        </Layout>\n    );\n}\n"],"names":["_rect","_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","_path14","_path15","_path16","_path17","_rect2","_rect3","_rect4","_rect5","_rect6","_rect7","_rect8","_rect9","_rect10","_rect11","_rect12","_rect13","_rect14","_rect15","_rect16","_path18","_path19","_path20","_path21","_path22","_path23","_rect17","_rect18","_path24","_path25","_path26","_path27","_rect19","_rect20","_path28","_path29","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","width","height","viewBox","fill","xmlns","id","rx","d","x","y","fillOpacity","stroke","fillRule","clipRule","strokeDasharray","_circle","_circle2","_circle3","_circle4","_circle5","_circle6","_circle7","_circle8","_circle9","_g","_path30","_path31","_rect21","_path32","_path33","_path34","cx","cy","r","transform","opacity","_rect22","_rect23","BrowserOnly","children","fallback","useIsBrowser","React","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","_len","Array","_key","listener","disposables","map","child","dispose","forEach","Stacktrace","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","options","_listeners","_disposed","event","_event","replay","_last","create","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","from","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onWillDragGroup","onWillDragPanel","activePanel","activeGroup","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","_acceptedTargetZonesSet","Set","acceptedTargetZones","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","setState","stopPropagation","nativeEvent","setTargetZones","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","_b","overlayModel","_d","_c","translate","overlayType","isPercentage","activationSize","maybeNumber","_f","_e","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","focusTracker","_width","_height","closePanel","DockviewDropTargets","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","defaultPrevented","dataTransfer","effectAllowed","items","TabDragHandler","accessor","Tab","_onChanged","onChanged","_onDropped","draggable","dragHandler","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","shiftKey","isFloating","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","tab","selectedIndex","findIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","contentContainer","_isFloating","dropTarget","groupPanel","_onDidFloatingStateChange","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","Resizable","entry","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","DockviewGroupPanelApiImpl","_group","onDidFloatingStateChange","moveTo","moveGroupOrPanel","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_api","_visible","isOneGroup","bringElementToFront","Overlay","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","minimumInViewportWidth","yOffset","minimumInViewportHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","floatingGroups","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","orthogonalize","createGroup","removeEmptyGroup","skipRemoveGroup","overlayLeft","overlayTop","querySelector","floatingGroupPanel","t","createGroupAtLocation","hasOrientationChanged","floating","includePanel","collection","floats","floatingGroup","grid","isArray","createGroupFromSerializedState","serializedFloatingGroups","serializedFloatingGroup","hasActiveGroup","hasActivePanel","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","_splitviewChangeDisposable","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","onReady","CloseButton","focusable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","__rest","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","url","ThemePicker","alignItems","href","fontWeight","paddingRight","Spinner","Container","injectVanillaJS","sandboxId","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","theme","setTheme","localStorage","getItem","setItem","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","defaultValue","useLocalStorageItem","typescript","background","zIndex","justifyContent","react","margin","cursor","border","MultiFrameworkContainer","FeatureList","Svg","require","description","Feature","flexWrap","featureSvg","role","maxWidth","HomepageFeatures","features","idx","BrowserHeader","borderBottom","borderTopLeftRadius","borderTopRightRadius","randomUUID","crypto","getRandomValues","rnds8","Uint8Array","rng","byteToHex","unsafeStringify","toLowerCase","buf","rnds","random","default","onContextMenu","alert","Popover","uuid","v4","listener2","Icon","icon","Button","setPosition","pageX","pageY","groupControlsComponents","panel_1","RightControls","counter","LeftControls","paneComponents","panes","Introduction","paddingLeft","DockviewDemo","DockviewDemo2","HomepageHeader2","siteConfig","useDocusaurusContext","clsx","heroBanner","tagline","buttons","Link","Home","Layout"],"sourceRoot":""}