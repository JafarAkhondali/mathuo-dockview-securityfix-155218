{"version":3,"file":"assets/js/6875c492.b974c0d1.js","mappings":"6KASe,SAASA,EAAkBC,GACxC,MAAM,SAACC,GAAYD,GACb,aAACE,EAAY,SAAEC,GAAYF,EACjC,OACEG,EAAAA,EAAAA,MAAA,OACEC,UAAU,iBACV,cAAYC,EAAAA,EAAAA,GAAU,CACpBC,GAAI,oCACJC,QAAS,4BACTC,YAAa,2CACZC,SAAA,CACFR,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,UAAWX,EACXY,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,oCACHE,YAAY,0EAAyEC,SAAC,oBAM7FP,IACCQ,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,UAAWV,EACXW,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,oCACHE,YAAY,sEAAqEC,SAAC,kBAItFM,QAAM,MAKhB,C,4ECtCe,SAASC,EAAaC,GAGjC,IAHkC,MACpCC,EACAC,UAAWC,EAAwBC,EAAAA,GACpCJ,EACC,OACEP,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,CAAAb,SACGS,EAAMK,KAAIC,IAAA,IAAEC,QAASC,GAAgBF,EAAA,OACpCd,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CAEfF,QAASC,EAAgBjB,UACzBC,EAAAA,EAAAA,KAACU,EAAqB,CAAAX,UACpBC,EAAAA,EAAAA,KAACgB,EAAe,OAHbA,EAAgB1B,SAASY,UAKb,KAI3B,C,yLCaA,SAASgB,EAA0BC,GACjC,MAAMC,EAjBR,WACE,MAAM,cAACC,IAAiBC,EAAAA,EAAAA,KACxB,OAAQC,GACNF,EACEE,GACA5B,EAAAA,EAAAA,GACE,CACEC,GAAI,0BACJE,YACE,2MACFD,QAAS,0BAEX,CAAC0B,UAGT,CAE0BC,GACxB,OAAO7B,EAAAA,EAAAA,GACL,CACEC,GAAI,sBACJE,YAAa,uCACbD,QAAS,oCAEX,CAAC4B,OAAQL,EAAgBD,EAAII,OAAQG,QAASP,EAAIQ,OAEtD,CACA,SAASC,EAAyBrB,GAAS,IAAR,IAACY,GAAIZ,EACtC,MAAMJ,EAAQe,EAA0BC,GACxC,OACE1B,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAb,SAAA,EACEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,CAAC1B,MAAOA,KACrBH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAACX,IAAI,sBAG1B,CACA,SAASY,EAAwBjB,GAAuC,IAAtC,IAACK,EAAG,MAAEX,EAAK,QAAEwB,EAAO,aAAEC,GAAanB,EACnE,MAAMX,EAAQe,EAA0BC,GACxC,OACE1B,EAAAA,EAAAA,MAACyC,EAAAA,EAAU,CAACF,QAASA,EAAQjC,SAAA,CAC1BoB,EAAIgB,WAAYnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,KAC1B3C,EAAAA,EAAAA,MAAA,UAAQC,UAAU,oBAAmBK,SAAA,EACnCC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACC,GAAG,KAAIvC,SAAEI,KAClBH,EAAAA,EAAAA,KAACuC,EAAAA,EAAI,CAACC,KAAMrB,EAAIsB,YAAY1C,UAC1BC,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,0BACHE,YAAY,oDAAmDC,SAAC,wBAKtEC,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACE,MAAOA,KACtBR,EAAAA,EAAAA,KAACZ,EAAAA,EAAiB,CAACE,SAAU2C,MAGnC,CACe,SAASS,EAAkBrD,GACxC,OACEI,EAAAA,EAAAA,MAACkD,EAAAA,GAAqB,CACpBjD,WAAWkD,EAAAA,EAAAA,GACTC,EAAAA,EAAgBC,QAAQC,UACxBF,EAAAA,EAAgBG,KAAKC,qBACrBlD,SAAA,EACFC,EAAAA,EAAAA,KAAC4B,EAAyB,IAAKvC,KAC/BW,EAAAA,EAAAA,KAAC+B,EAAwB,IAAK1C,MAGpC,C,mFC/EO,SAAS6D,IACd,OACElD,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,8BACHE,YAAY,oCAAmCC,SAC/C,iBAGN,CAEO,SAASoD,IACd,OACEnD,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,gCACHE,YAAY,sCAAqCC,SACjD,+GAIN,CAEO,SAASqD,IACd,OACEpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAI,CAAAtD,UACHC,EAAAA,EAAAA,KAAA,QAAMsD,KAAK,SAASvC,QAAQ,uBAGlC,C,wBCvBA,SAASwC,EAAchD,GAAe,IAAd,UAACb,GAAUa,EACjC,OACEP,EAAAA,EAAAA,KAACwD,EAAAA,EAAU,CACTC,KAAK,UACLtD,OAAOH,EAAAA,EAAAA,KAACkD,EAAmB,IAC3BxD,WAAWkD,EAAAA,EAAAA,GAAKlD,EAAWmD,EAAAA,EAAgBa,OAAOC,gBAAgB5D,UAClEC,EAAAA,EAAAA,KAACmD,EAAqB,KAG5B,CACe,SAASf,EAAS/C,GAC/B,OACEI,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAb,SAAA,EAMEC,EAAAA,EAAAA,KAACoD,EAAgB,KACjBpD,EAAAA,EAAAA,KAACuD,EAAc,IAAKlE,MAG1B,C,6LCrCA,MAAMuE,GAEC,MAAMC,UAAsBD,EAC/BE,WAAAA,CAAYC,EAAQC,EAASC,GACzBC,QACAC,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,CACnB,EAEG,MAAMG,UAAqBR,EAC9BE,WAAAA,CAAYC,EAAQM,GAChBH,QACAC,KAAKJ,OAASA,EACdI,KAAKE,OAASA,CAClB,EAKG,MAAMC,EACTR,WAAAA,GACI,CAEJ,kBAAOS,GACH,OAAOD,EAAuBE,QAClC,CACAC,OAAAA,CAAQC,GACJ,OAAOA,GAASA,IAAUP,KAAKO,KACnC,CACAC,SAAAA,CAAUD,GACFP,KAAKM,QAAQC,KACbP,KAAKO,WAAQE,EACbT,KAAKU,UAAOD,EAEpB,CACAE,OAAAA,CAAQJ,GACJ,GAAIP,KAAKM,QAAQC,GACb,OAAOP,KAAKU,IAGpB,CACAE,OAAAA,CAAQF,EAAMH,GACNA,IACAP,KAAKU,KAAOA,EACZV,KAAKO,MAAQA,EAErB,EAGG,SAASM,IACZ,MAAMC,EAAgBX,EAAuBC,cAE7C,GADqBU,EAAcR,QAAQZ,EAAcqB,WAIzD,OAAOD,EAAcH,QAAQjB,EAAcqB,WAAW,EAC1D,CACO,SAASC,IACZ,MAAMC,EAAed,EAAuBC,cAE5C,GADqBa,EAAaX,QAAQL,EAAac,WAIvD,OAAOE,EAAaN,QAAQV,EAAac,WAAW,EACxD,CCjEO,IAAIG,ECAAC,EFiDXhB,EAAuBE,SAAW,IAAIF,EChDtC,SAAWe,GACPA,EAAME,IAAM,WAAkB,IAAD,IAAAC,EAAAC,UAAAC,OAAb3F,EAAQ,IAAA4F,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAR7F,EAAQ6F,GAAAH,UAAAG,GACpB,OAAQC,IACJ,MAAMC,EAAc/F,EAASc,KAAKkF,GAAUA,EAAMF,KAClD,MAAO,CACHG,QAASA,KACLF,EAAYG,SAASC,IACjBA,EAAEF,SAAS,GACb,EAET,CAET,CACH,CAbD,CAaGX,IAAUA,EAAQ,CAAC,IACf,MAAMc,EACTrC,WAAAA,GACIK,KAAKiC,mBAAoB,CAC7B,CACA,oBAAIC,GACA,OAAOlC,KAAKiC,iBAChB,CACAE,cAAAA,GACInC,KAAKiC,mBAAoB,CAC7B,EAmBJ,MAAMG,EACF,aAAOC,GACH,IAAIC,EACJ,OAAO,IAAIF,EAAwC,QAA5BE,GAAK,IAAIC,OAAQC,aAA0B,IAAPF,EAAgBA,EAAK,GACpF,CACA3C,WAAAA,CAAY8C,GACRzC,KAAKyC,MAAQA,CACjB,CACAC,KAAAA,GACIC,QAAQC,KAAK,uBAAwB5C,KAAKyC,MAC9C,EAEJ,MAAMI,EACFlD,WAAAA,CAAYmD,EAAUC,GAClB/C,KAAK8C,SAAWA,EAChB9C,KAAK+C,WAAaA,CACtB,EAGG,MAAMC,EACT,+BAAOC,CAAyBC,GACxBA,IAAcF,EAAQG,iBACtBH,EAAQI,oBAAoBC,QAEhCL,EAAQG,gBAAkBD,CAC9B,CACA,SAAIT,GACA,OAAOzC,KAAKsD,KAChB,CACA3D,WAAAA,CAAY4D,GACRvD,KAAKuD,QAAUA,EACfvD,KAAKwD,WAAa,GAClBxD,KAAKyD,WAAY,CACrB,CACA,SAAIC,GA4BA,OA3BK1D,KAAK2D,SACN3D,KAAK2D,OAAUb,IACX,IAAIR,GACyB,QAAvBA,EAAKtC,KAAKuD,eAA4B,IAAPjB,OAAgB,EAASA,EAAGsB,cAA0BnD,IAAfT,KAAKsD,OAC7ER,EAAS9C,KAAKsD,OAElB,MAAM5B,EAAW,IAAImB,EAASC,EAAUE,EAAQG,gBAAkBf,EAAWC,cAAW5B,GAExF,OADAT,KAAKwD,WAAWK,KAAKnC,GACd,CACHG,QAASA,KACL,MAAMiC,EAAQ9D,KAAKwD,WAAWO,QAAQrC,GAClCoC,GAAS,EACT9D,KAAKwD,WAAWQ,OAAOF,EAAO,GAEzBd,EAAQG,eAIb,EAGX,EAEDH,EAAQG,iBACRH,EAAQI,oBAAoBa,IAAIjE,KAAK2D,OAAQvB,EAAWC,WAGzDrC,KAAK2D,MAChB,CACAO,IAAAA,CAAKC,GACDnE,KAAKsD,MAAQa,EACb,IAAK,MAAMzC,KAAY1B,KAAKwD,WACxB9B,EAASoB,SAASqB,EAE1B,CACAtC,OAAAA,GACS7B,KAAKyD,YACNzD,KAAKyD,WAAY,EACbzD,KAAKwD,WAAWjC,OAAS,IACrByB,EAAQG,iBACRiB,gBAAe,KACX,IAAI9B,EAEJ,IAAK,MAAMZ,KAAY1B,KAAKwD,WACxBb,QAAQC,KAAK,uBAAuD,QAA9BN,EAAKZ,EAASqB,kBAA+B,IAAPT,OAAgB,EAASA,EAAGI,QAC5G,IAGR1C,KAAKwD,WAAa,IAElBR,EAAQG,iBAAmBnD,KAAK2D,QAChCX,EAAQI,oBAAoBiB,OAAOrE,KAAK2D,QAGpD,EAIG,SAASW,EAA4BC,EAASjF,EAAMoC,EAAU6B,GAEjE,OADAgB,EAAQC,iBAAiBlF,EAAMoC,EAAU6B,GAClC,CACH1B,QAASA,KACL0C,EAAQE,oBAAoBnF,EAAMoC,EAAU6B,EAAQ,EAGhE,CACO,SAASmB,EAAsBH,EAASjF,EAAMoC,EAAU6B,GAE3D,OADAgB,EAAQC,iBAAiBlF,EAAMoC,EAAU6B,GAClC,CACH1B,QAASA,KACL0C,EAAQE,oBAAoBnF,EAAMoC,EAAU6B,EAAQ,EAGhE,CAjBAP,EAAQG,iBAAkB,EAC1BH,EAAQI,oBAAsB,IA7G9B,MACIzD,WAAAA,GACIK,KAAK2E,OAAS,IAAIC,GACtB,CACA,QAAIC,GACA,OAAO7E,KAAK2E,OAAOE,IACvB,CACAZ,GAAAA,CAAIP,EAAOX,GACP/C,KAAK2E,OAAOG,IAAIpB,EAAOX,EAC3B,CACAsB,OAAOX,GACH1D,KAAK2E,OAAON,OAAOX,EACvB,CACAL,KAAAA,GACIrD,KAAK2E,OAAOtB,OAChB,GAyHG,MAAM0B,EACTpF,WAAAA,GACIK,KAAKgF,SAAW,IAAIhC,EACpBhD,KAAKiF,kBAAoB,EACzBjF,KAAKkF,SAAU,EACflF,KAAKmF,QAAWhB,IAIZ,MAAMiB,EAAqCpF,KAAKiF,kBAChD,OAAOjF,KAAKgF,SAAStB,OAAM,KAQnB1D,KAAKiF,kBAAoBG,GACzBjB,GACJ,GACF,CAEV,CACAD,IAAAA,GACIlE,KAAKiF,oBACDjF,KAAKkF,UAGTlF,KAAKkF,SAAU,EACfd,gBAAe,KACXpE,KAAKkF,SAAU,EACflF,KAAKgF,SAASd,MAAM,IAE5B,CACArC,OAAAA,GACI7B,KAAKgF,SAASnD,SAClB,GCtMJ,SAAWV,GACPA,EAAWkE,KAAO,CACdxD,QAASA,QAWbV,EAAWmE,KAPX,SAAcC,GACV,MAAO,CACH1D,QAASA,KACL0D,GAAM,EAGlB,CAEH,CAdD,CAcGpE,IAAeA,EAAa,CAAC,IACzB,MAAMqE,EACT,cAAIC,GACA,OAAOzF,KAAK0F,WAChB,CACA/F,WAAAA,GACIK,KAAK0F,aAAc,EAAM,QAAArE,EAAAC,UAAAC,OADdoE,EAAI,IAAAnE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJkE,EAAIlE,GAAAH,UAAAG,GAEfzB,KAAK4F,aAAeD,CACxB,CACAE,cAAAA,GAAyB,IAAD,IAAAC,EAAAxE,UAAAC,OAANoE,EAAI,IAAAnE,MAAAsE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,GAAAzE,UAAAyE,GAClBJ,EAAK7D,SAASkE,GAAQhG,KAAK4F,aAAa/B,KAAKmC,IACjD,CACAnE,OAAAA,GACQ7B,KAAK0F,cAGT1F,KAAK0F,aAAc,EACnB1F,KAAK4F,aAAa9D,SAASkE,GAAQA,EAAInE,YACvC7B,KAAK4F,aAAe,GACxB,EAEG,MAAMK,EACTtG,WAAAA,GACIK,KAAKkG,YAAc/E,EAAWkE,IAClC,CACA,SAAI5C,CAAM0D,GACFnG,KAAKkG,aACLlG,KAAKkG,YAAYrE,UAErB7B,KAAKkG,YAAcC,CACvB,CACAtE,OAAAA,GACQ7B,KAAKkG,cACLlG,KAAKkG,YAAYrE,UACjB7B,KAAKkG,YAAc/E,EAAWkE,KAEtC,ECjDG,SAASe,EAAmB7B,EAAS8B,GACxC,MAAMC,EAAW,IAAIC,gBAAgBC,IAMjCC,uBAAsB,KAClB,MAAMC,EAAaF,EAAQ,GAC3BH,EAAGK,EAAW,GAChB,IAGN,OADAJ,EAASK,QAAQpC,GACV,CACH1C,QAASA,KACLyE,EAASM,UAAUrC,GACnB+B,EAASO,YAAY,EAGjC,CACO,MAAMC,EAAgB,SAACvC,GAAyB,IAAD,IAAAlD,EAAAC,UAAAC,OAAZwF,EAAO,IAAAvF,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPsF,EAAOtF,EAAA,GAAAH,UAAAG,GAC7C,IAAK,MAAMuF,KAAaD,EAChBxC,EAAQ0C,UAAUC,SAASF,IAC3BzC,EAAQ0C,UAAUE,OAAOH,EAGrC,EACaI,EAAa,SAAC7C,GAAyB,IAAD,IAAAuB,EAAAxE,UAAAC,OAAZwF,EAAO,IAAAvF,MAAAsE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPgB,EAAOhB,EAAA,GAAAzE,UAAAyE,GAC1C,IAAK,MAAMiB,KAAaD,EACfxC,EAAQ0C,UAAUC,SAASF,IAC5BzC,EAAQ0C,UAAUhD,IAAI+C,EAGlC,EACaK,EAAcA,CAAC9C,EAAShJ,EAAW+L,KAC5C,MAAMC,EAAWhD,EAAQ0C,UAAUC,SAAS3L,GACxC+L,IAAcC,GACdhD,EAAQ0C,UAAUhD,IAAI1I,IAErB+L,GAAaC,GACdhD,EAAQ0C,UAAUE,OAAO5L,EAC7B,EAEG,SAASiM,EAAWC,EAAWC,GAClC,KAAOD,GAAW,CACd,GAAIA,IAAcC,EACd,OAAO,EAEXD,EAAYA,EAAUE,UAC1B,CACA,OAAO,CACX,CACO,SAASC,EAAqB5K,GACjC,OAAOwE,MAAMT,UAAU8G,MAAMC,KAAKC,SAASH,qBAAqB5K,GAAM,EAC1E,CACO,SAASgL,EAAWzD,GACvB,OAAO,IAAI0D,EAAa1D,EAC5B,CAIA,MAAM0D,UAAqBzC,EACvB7F,WAAAA,CAAY4E,GACRxE,QACAC,KAAKkI,YAAc,IAAIlF,EACvBhD,KAAKmI,WAAanI,KAAKkI,YAAYxE,MACnC1D,KAAKoI,WAAa,IAAIpF,EACtBhD,KAAKqI,UAAYrI,KAAKoI,WAAW1E,MACjC1D,KAAK6F,eAAe7F,KAAKkI,YAAalI,KAAKoI,YAC3C,IAAIE,EAAWd,EAAWO,SAASQ,cAAehE,GAC9CiE,GAAe,EACnB,MAAMC,EAAUA,KACZD,GAAe,EACVF,IACDA,GAAW,EACXtI,KAAKkI,YAAYhE,OACrB,EAEEwE,EAASA,KACPJ,IACAE,GAAe,EACfG,OAAOC,YAAW,KACVJ,IACAA,GAAe,EACfF,GAAW,EACXtI,KAAKoI,WAAWlE,OACpB,GACD,GACP,EAEJlE,KAAK6I,qBAAuB,KACIrB,EAAWO,SAASQ,cAAehE,KACnC+D,IACpBA,EACAI,IAGAD,IAER,EAEAlE,aAAmBuE,aACnB9I,KAAK6F,eAAenB,EAAsBH,EAAS,QAASkE,GAAS,IACrEzI,KAAK6F,eAAenB,EAAsBH,EAAS,OAAQmE,GAAQ,MAGnE1I,KAAK6F,eAAevB,EAA4BC,EAAS,QAASkE,GAAS,IAC3EzI,KAAK6F,eAAevB,EAA4BC,EAAS,OAAQmE,GAAQ,IAEjF,CACAK,YAAAA,GACI/I,KAAK6I,sBACT,EAGJ,MAAMG,EAA4B,yBAM3B,SAASC,EAAsBvF,GAClC,OAAOA,EAAMsF,EACjB,CA2BO,SAASE,EAAuBC,GACnC,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,OAAEC,GAAWJ,EAAQK,wBAC7C,MAAO,CACHJ,KAAMA,EAAOT,OAAOc,QACpBJ,IAAKA,EAAMV,OAAOe,QAClBJ,MAAOA,EACPC,OAAQA,EAEhB,CAwBO,SAASI,IACZ,MAAMC,EAAU,IACThC,EAAqB,aACrBA,EAAqB,YAEtBiC,EAAW,IAAIC,QACrB,IAAK,MAAMC,KAAUH,EACjBC,EAAS/E,IAAIiF,EAAQA,EAAOC,MAAMC,eAClCF,EAAOC,MAAMC,cAAgB,OAEjC,MAAO,CACHC,QAASA,KACL,IAAI5H,EACJ,IAAK,MAAMyH,KAAUH,EACjBG,EAAOC,MAAMC,cAAgD,QAA/B3H,EAAKuH,EAASM,IAAIJ,UAA4B,IAAPzH,EAAgBA,EAAK,OAE9FsH,EAAQ5F,OAAO,EAAG4F,EAAQrI,OAAO,EAG7C,CAoBO,MAAM6I,EACTzK,WAAAA,CAAY4E,GACRvE,KAAKuE,QAAUA,EACfvE,KAAKqK,YAAc,EACvB,CACAC,aAAAA,CAAcC,GACV,IAAK,MAAMhP,KAAayE,KAAKqK,YACzBhD,EAAYrH,KAAKuE,QAAShJ,GAAW,GAEzCyE,KAAKqK,YAAcE,EACdC,MAAM,KACNC,QAAQC,GAAMA,EAAEC,OAAOpJ,OAAS,IACrC,IAAK,MAAMhG,KAAayE,KAAKqK,YACzBhD,EAAYrH,KAAKuE,QAAShJ,GAAW,EAE7C,EC9OG,SAASqP,EAAKC,GACjB,GAAmB,IAAfA,EAAItJ,OACJ,MAAM,IAAIgB,MAAM,qBAEpB,MAAO,CAACsI,EAAIhD,MAAM,EAAGgD,EAAItJ,OAAS,GAAIsJ,EAAIA,EAAItJ,OAAS,GAC3D,CAIO,SAASuJ,EAAeC,EAAMC,GACjC,GAAID,EAAKxJ,SAAWyJ,EAAKzJ,OACrB,OAAO,EAEX,IAAK,IAAI0J,EAAI,EAAGA,EAAIF,EAAKxJ,OAAQ0J,IAC7B,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,CACX,CAIO,SAASC,EAAYL,EAAKpI,GAC7B,MAAMqB,EAAQ+G,EAAI9G,QAAQtB,GACtBqB,GAAS,IACT+G,EAAI7G,OAAOF,EAAO,GAClB+G,EAAIM,QAAQ1I,GAEpB,CAIO,SAAS2I,EAAUP,EAAKpI,GAC3B,MAAMqB,EAAQ+G,EAAI9G,QAAQtB,GACtBqB,GAAS,IACT+G,EAAI7G,OAAOF,EAAO,GAClB+G,EAAIhH,KAAKpB,GAEjB,CAUO,SAAS0E,EAAOkE,EAAO5I,GAC1B,MAAMqB,EAAQuH,EAAMC,WAAWC,GAAMA,IAAM9I,IAC3C,OAAIqB,GAAS,IACTuH,EAAMrH,OAAOF,EAAO,IACb,EAGf,CCxDO,MAAM0H,EAAQA,CAAC/I,EAAOgJ,EAAKC,IAC1BD,EAAMC,EAKCD,EAEJE,KAAKF,IAAIC,EAAKC,KAAKD,IAAIjJ,EAAOgJ,IAE5BG,EAA4BA,KACrC,IAAInJ,EAAQ,EACZ,MAAO,CAAEoJ,KAAMA,KAAOpJ,KAASqJ,WAAY,EAElCC,EAAQA,CAACzG,EAAM0G,KACxB,MAAMC,EAAS,GAKf,GAJkB,iBAAPD,IACPA,EAAK1G,EACLA,EAAO,GAEPA,GAAQ0G,EACR,IAAK,IAAIf,EAAI3F,EAAM2F,EAAIe,EAAIf,IACvBgB,EAAOpI,KAAKoH,QAIhB,IAAK,IAAIA,EAAI3F,EAAM2F,EAAIe,EAAIf,IACvBgB,EAAOpI,KAAKoH,GAGpB,OAAOgB,CAAM,EC7BV,MAAMC,EACT,QAAIrH,CAAKA,GACL7E,KAAKmM,MAAQtH,CACjB,CACA,QAAIA,GACA,OAAO7E,KAAKmM,KAChB,CACA,qBAAIC,GACA,OAAOpM,KAAKqM,kBAChB,CACA,WAAIC,GACA,YAA0C,IAA5BtM,KAAKqM,kBACvB,CACA,eAAIE,GACA,OAAOvM,KAAKsM,QAAUtM,KAAKwM,KAAKD,YAAc,CAClD,CACA,mBAAIE,GACA,OAAOzM,KAAKwM,KAAKD,WACrB,CACA,eAAIG,GACA,OAAO1M,KAAKsM,QAAUtM,KAAKwM,KAAKE,YAAc,CAClD,CACA,mBAAIC,GACA,OAAO3M,KAAKwM,KAAKE,WACrB,CACA,YAAIE,GACA,OAAO5M,KAAKwM,KAAKI,QACrB,CACA,QAAIC,GACA,QAAS7M,KAAKwM,KAAKK,IACvB,CACA,WAAIC,CAAQA,GACR9M,KAAK+M,UAAU/C,MAAMC,cAAgB6C,EAAU,GAAK,MACxD,CACAnN,WAAAA,CAAYoN,EAAWP,EAAM3H,EAAMsB,GAC/BnG,KAAK+M,UAAYA,EACjB/M,KAAKwM,KAAOA,EACZxM,KAAKmG,WAAaA,EAClBnG,KAAKqM,wBAAqB5L,EACN,iBAAToE,GACP7E,KAAKmM,MAAQtH,EACb7E,KAAKqM,wBAAqB5L,EAC1BsM,EAAU9F,UAAUhD,IAAI,aAGxBjE,KAAKmM,MAAQ,EACbnM,KAAKqM,mBAAqBxH,EAAKuH,kBAEvC,CACAY,UAAAA,CAAWV,EAASzH,GAChB,IAAIvC,EACAgK,IAAYtM,KAAKsM,UAGjBA,GACAtM,KAAK6E,KAAO2G,EAAyC,QAAlClJ,EAAKtC,KAAKqM,0BAAuC,IAAP/J,EAAgBA,EAAK,EAAGtC,KAAKyM,gBAAiBzM,KAAK2M,iBAChH3M,KAAKqM,wBAAqB5L,IAG1BT,KAAKqM,mBACe,iBAATxH,EAAoBA,EAAO7E,KAAK6E,KAC3C7E,KAAK6E,KAAO,GAEhB7E,KAAK+M,UAAU9F,UAAUgG,OAAO,UAAWX,GACvCtM,KAAKwM,KAAKQ,YACVhN,KAAKwM,KAAKQ,WAAWV,GAE7B,CACAzK,OAAAA,GAEI,OADA7B,KAAKmG,WAAWtE,UACT7B,KAAKwM,IAChB,EC/DG,IAAIU,EAKAC,EAOAC,EAMAC,GAjBX,SAAWH,GACPA,EAAwB,WAAI,aAC5BA,EAAsB,SAAI,UAC7B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,SACzC,CALD,CAKGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAOC,WAAa,CAAEhO,KAAM,cAI5B+N,EAAOE,MAHP,SAAezJ,GACX,MAAO,CAAExE,KAAM,QAASwE,QAC5B,EAKAuJ,EAAOG,UAHP,SAAmBpB,GACf,MAAO,CAAE9M,KAAM,YAAa8M,oBAChC,CAEH,CAVD,CAUGiB,IAAWA,EAAS,CAAC,IACjB,MAAMI,EACT,eAAIC,GACA,OAAO1N,KAAK2N,YAChB,CACA,QAAI9I,GACA,OAAO7E,KAAKmM,KAChB,CACA,QAAItH,CAAKpC,GACLzC,KAAKmM,MAAQ1J,CACjB,CACA,kBAAImL,GACA,OAAO5N,KAAK6N,eAChB,CACA,kBAAID,CAAenL,GACfzC,KAAK6N,gBAAkBpL,CAC3B,CACA,UAAIlB,GACA,OAAOvB,KAAK8N,UAAUvM,MAC1B,CACA,eAAIwM,GACA,OAAO/N,KAAKgO,aAAe,IAAIhO,KAAKgO,mBAAgBvN,CACxD,CACA,eAAIwN,GACA,OAAOjO,KAAKkO,YAChB,CACA,eAAID,CAAYxL,GACZzC,KAAKkO,aAAezL,EACpB,MAAM0L,EAAMnO,KAAK6E,KACjB7E,KAAK6E,KAAO7E,KAAK4N,eACjB5N,KAAK4N,eAAiBO,EACtBrH,EAAc9G,KAAKuE,QAAS,aAAc,YAC1CvE,KAAKuE,QAAQ0C,UAAUhD,IAAIjE,KAAKiO,aAAef,EAAYkB,WACrD,aACA,WACV,CACA,eAAI7B,GACA,OAAOvM,KAAK8N,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAKhC,aAAa,EACpE,CACA,eAAIG,GACA,OAAuB,IAAhB1M,KAAKuB,OACNiN,OAAOC,kBACPzO,KAAK8N,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAK7B,aAAa,EACnE,CACA,wBAAIgC,GACA,OAAO1O,KAAK2O,qBAChB,CACA,wBAAID,CAAqBA,GACjB1O,KAAK2O,wBAA0BD,IAGnC1O,KAAK2O,sBAAwBD,EAC7B1O,KAAK4O,uBACT,CACA,sBAAIC,GACA,OAAO7O,KAAK8O,mBAChB,CACA,sBAAID,CAAmBA,GACf7O,KAAK8O,sBAAwBD,IAGjC7O,KAAK8O,oBAAsBD,EAC3B7O,KAAK4O,uBACT,CACA,YAAIG,GACA,OAAO/O,KAAKgP,SAChB,CACA,YAAID,CAAStM,GACTzC,KAAKgP,UAAYvM,EACjB4E,EAAYrH,KAAKuE,QAAS,wBAAyB9B,EACvD,CACA,UAAIwM,GACA,OAAOjP,KAAKkP,OAChB,CACA,UAAID,CAAOxM,GACPzC,KAAKkP,QAAUzM,CACnB,CACA9C,WAAAA,CAAYoN,EAAWxJ,GAAU,IACzBjB,EADwB6M,EAAA,KAE5BnP,KAAK+M,UAAYA,EACjB/M,KAAK8N,UAAY,GACjB9N,KAAKoP,OAAS,GACdpP,KAAKmM,MAAQ,EACbnM,KAAK6N,gBAAkB,EACvB7N,KAAK2N,aAAe,EACpB3N,KAAKgO,kBAAevN,EACpBT,KAAK2O,uBAAwB,EAC7B3O,KAAK8O,qBAAsB,EAC3B9O,KAAKgP,WAAY,EACjBhP,KAAKkP,QAAU,EACflP,KAAKqP,cAAgB,IAAIrM,EACzBhD,KAAKsP,aAAetP,KAAKqP,cAAc3L,MACvC1D,KAAKuP,cAAgB,IAAIvM,EACzBhD,KAAKwP,aAAexP,KAAKuP,cAAc7L,MACvC1D,KAAKyP,iBAAmB,IAAIzM,EAC5BhD,KAAK0P,gBAAkB1P,KAAKyP,iBAAiB/L,MAC7C1D,KAAK2P,OAAS,SAAC7L,EAAO8L,EAAOC,EAA2CC,EAAoBC,EAAqBC,EAA6CC,EAA6CC,EAAYC,GACnN,QAD8B,IAALN,IAAAA,EAAQV,EAAKrB,UAAUpR,KAAK0T,GAAMA,EAAEvL,aAAgE,IAAhBmL,IAAAA,EAAmBxB,OAAO6B,wBAAmC,IAAhBJ,IAAAA,EAAmBzB,OAAOC,mBAChL3K,EAAQ,GAAKA,EAAQqL,EAAKrB,UAAUvM,OACpC,OAAO,EAEX,MAAM+O,EAAYvE,EAAMjI,GAAQ,GAC1ByM,EAAcxE,EAAMjI,EAAQ,EAAGqL,EAAKrB,UAAUvM,QAEpD,GAAIwO,EACA,IAAK,MAAM9E,KAAK8E,EACZ7E,EAAYoF,EAAWrF,GACvBC,EAAYqF,EAAatF,GAGjC,GAAI6E,EACA,IAAK,MAAM7E,KAAK6E,EACZ1E,EAAUkF,EAAWrF,GACrBG,EAAUmF,EAAatF,GAI/B,MAAMuF,EAAUF,EAAU5T,KAAKuO,GAAMkE,EAAKrB,UAAU7C,KAC9CwF,EAAUH,EAAU5T,KAAKuO,GAAM4E,EAAM5E,KAErCyF,EAAYH,EAAY7T,KAAKuO,GAAMkE,EAAKrB,UAAU7C,KAClD0F,EAAYJ,EAAY7T,KAAKuO,GAAM4E,EAAM5E,KAEzC2F,EAAaN,EAAUjC,QAAO,CAACwC,EAAG5F,IAAM4F,EAAI1B,EAAKrB,UAAU7C,GAAGsB,YAAcsD,EAAM5E,IAAI,GACtF6F,EAAaR,EAAUjC,QAAO,CAACwC,EAAG5F,IAAM4F,EAAI1B,EAAKrB,UAAU7C,GAAGyB,YAAcmD,EAAM5E,IAAI,GAEtF8F,EAAsC,IAAvBR,EAAYhP,OAC3BiN,OAAOC,kBACP8B,EAAYlC,QAAO,CAACwC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKrB,UAAU7C,GAAGsB,aAAa,GAC3EyE,EAAsC,IAAvBT,EAAYhP,OAC3BiN,OAAO6B,kBACPE,EAAYlC,QAAO,CAACwC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKrB,UAAU7C,GAAGyB,aAAa,GAE3EuE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAExC,IAAIK,GAAU,EACd,GAAIjB,EAAY,CACZ,MAAMkB,EAAWjC,EAAKrB,UAAUoC,EAAWpM,OACrCwI,EAAUsD,GAASM,EAAWmB,WACpCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASpE,WAAWV,EAAS4D,EAAWrL,KAC5C,CACA,IAAKsM,GAAWhB,EAAW,CACvB,MAAMiB,EAAWjC,EAAKrB,UAAUqC,EAAUrM,OACpCwI,EAAUsD,EAAQO,EAAUkB,WAClCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASpE,WAAWV,EAAS6D,EAAUtL,KAC3C,CACA,GAAIsM,EACA,OAAOhC,EAAKQ,OAAO7L,EAAO8L,EAAOC,EAAOC,EAAoBC,EAAqBC,EAAkBC,GAIvG,IAAIqB,EAAc,EAEdC,EAHmB/F,EAAMoE,EAAOqB,EAAUC,GAI9C,IAAK,IAAIjG,EAAI,EAAGA,EAAIuF,EAAQjP,OAAQ0J,IAAK,CACrC,MAAMsD,EAAOiC,EAAQvF,GACfpG,EAAO2G,EAAMiF,EAAQxF,GAAKsG,EAAShD,EAAKhC,YAAagC,EAAK7B,aAC1D8E,EAAY3M,EAAO4L,EAAQxF,GACjCqG,GAAeE,EACfD,GAAWC,EACXjD,EAAK1J,KAAOA,CAChB,CAEA,IAAI4M,EAAYH,EAChB,IAAK,IAAIrG,EAAI,EAAGA,EAAIyF,EAAUnP,OAAQ0J,IAAK,CACvC,MAAMsD,EAAOmC,EAAUzF,GACjBpG,EAAO2G,EAAMmF,EAAU1F,GAAKwG,EAAWlD,EAAKhC,YAAagC,EAAK7B,aAEpE+E,GADkB5M,EAAO8L,EAAU1F,GAEnCsD,EAAK1J,KAAOA,CAChB,CAEA,OAAO+K,CACX,EACA5P,KAAKkO,aAAe3K,EAAQ0K,YAC5BjO,KAAKuE,QAAUvE,KAAK0R,kBACpB1R,KAAKiP,OAAmC,QAAzB3M,EAAKiB,EAAQ0L,cAA2B,IAAP3M,EAAgBA,EAAK,EACrEtC,KAAK2R,wBAC8BlR,IAA/B8C,EAAQoO,sBAEApO,EAAQoO,mBACpB3R,KAAK4R,cAAgB5R,KAAK6R,sBAC1B7R,KAAK8R,cAAgB9R,KAAK+R,sBAC1B/R,KAAKuE,QAAQyN,YAAYhS,KAAK8R,eAC9B9R,KAAKuE,QAAQyN,YAAYhS,KAAK4R,eAC9B5R,KAAK+M,UAAUiF,YAAYhS,KAAKuE,SAChCvE,KAAKgK,MAAMzG,EAAQ0O,QAEf1O,EAAQ2O,aACRlS,KAAKmM,MAAQ5I,EAAQ2O,WAAWrN,KAChCtB,EAAQ2O,WAAWC,MAAMrQ,SAAQ,CAACsQ,EAAgBtO,KAC9C,MAAMuO,OAAoC5R,IAA3B2R,EAAe9F,SAC1B8F,EAAe9F,QACb8F,EAAevN,KACf,CACEvF,KAAM,YACN8M,kBAAmBgG,EAAevN,MAEpC2H,EAAO4F,EAAe5F,KAC5BxM,KAAKsS,QAAQ9F,EAAM6F,EAAQvO,GAAO,EAEjC,IAGL9D,KAAK2N,aAAe3N,KAAK8N,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChE7E,KAAKuS,kBAEb,CACAvI,KAAAA,CAAMiI,GAC+E,iBAA5EA,aAAuC,EAASA,EAAOO,kBACxD1L,EAAc9G,KAAKuE,QAAS,oBAC5BvE,KAAKuE,QAAQyF,MAAMyI,eAAe,2BAGlCrL,EAAWpH,KAAKuE,QAAS,qBACrB0N,aAAuC,EAASA,EAAOO,kBACvDxS,KAAKuE,QAAQyF,MAAM0I,YAAY,wBAAyBT,EAAOO,iBAG3E,CACAG,aAAAA,CAAc7O,GACV,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,OACrC,MAAM,IAAIgB,MAAM,uBAGpB,OADiBvC,KAAK8N,UAAUhK,GAChBwI,OACpB,CACAsG,cAAAA,CAAe9O,EAAOwI,GAClB,GAAIxI,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,OACrC,MAAM,IAAIgB,MAAM,uBAEpB,MAAMsQ,EAAW7S,KAAK8N,UAAUhK,GAChC+O,EAAS7F,WAAWV,EAASuG,EAAShO,MACtC7E,KAAK8S,qBAAqBhP,GAC1B9D,KAAK+S,cACL/S,KAAKuS,iBACT,CACAS,WAAAA,CAAYlP,GACR,OAAIA,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,QAC7B,EAELvB,KAAK8N,UAAUhK,GAAOe,IACjC,CACAoO,UAAAA,CAAWnP,EAAOe,GACd,GAAIf,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,OACrC,OAEJ,MAAM2R,EAAUnH,EAAM/L,KAAK8N,UAAUvM,QAAQkJ,QAAQQ,GAAMA,IAAMnH,IAC3DgM,EAAqB,IACpBoD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAe+F,MACvErP,GAEEiM,EAAsBmD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAegG,OAC1F7E,EAAOvO,KAAK8N,UAAUhK,GAC5Be,EAAO8G,KAAK0H,MAAMxO,GAClBA,EAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAaZ,KAAKF,IAAI8C,EAAK7B,YAAa1M,KAAKmM,QACrEoC,EAAK1J,KAAOA,EACZ7E,KAAKsT,SAASxD,EAAoBC,EACtC,CACAwD,QAAAA,GACI,OAAOvT,KAAK8N,UAAUpR,KAAK0T,GAAMA,EAAE5D,MACvC,CACAgH,WAAAA,CAAYjF,EAAM1J,GACd,MAAMf,EAAQ9D,KAAK8N,UAAU/J,QAAQwK,GACrC,GAAIzK,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,OACrC,OAEJsD,EAAuB,iBAATA,EAAoBA,EAAO0J,EAAK1J,KAC9CA,EAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAagC,EAAK7B,aAC1C6B,EAAK1J,KAAOA,EACZ,MAAMqO,EAAUnH,EAAM/L,KAAK8N,UAAUvM,QAAQkJ,QAAQQ,GAAMA,IAAMnH,IAC3DgM,EAAqB,IACpBoD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAe+F,MACvErP,GAEEiM,EAAsBmD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAegG,OAKhGpT,KAAKsT,SAAS,IAAIxD,EAAoBhM,GAAQiM,EAClD,CACAuC,OAAAA,CAAQ9F,EAAM3H,EAA+Bf,EAA+B2P,QAA1D,IAAJ5O,IAAAA,EAAO,CAAEvF,KAAM,oBAAqB,IAALwE,IAAAA,EAAQ9D,KAAK8N,UAAUvM,QAChE,MAAMwL,EAAYhF,SAAS2L,cAAc,OAGzC,IAAIC,EAFJ5G,EAAUxR,UAAY,OACtBwR,EAAUiF,YAAYxF,EAAKjI,SAGvBoP,EADgB,iBAAT9O,EACIA,EAEQ,UAAdA,EAAKvF,KACCU,KAAKgT,YAAYnO,EAAKf,OAAS,EAEvB,cAAde,EAAKvF,KACC,CAAE8M,kBAAmBvH,EAAKuH,mBAG1BI,EAAKD,YAEpB,MAAMpG,EAAaqG,EAAKgH,aAAaI,GAAY5T,KAAKwT,YAAYX,EAAUe,EAAQ/O,QAC9EgO,EAAW,IAAI3G,EAASa,EAAWP,EAAMmH,EAAU,CACrD9R,QAASA,KACLsE,EAAWtE,UACX7B,KAAK4R,cAAciC,YAAY9G,EAAU,IAUjD,GAPIjJ,IAAU9D,KAAK8N,UAAUvM,OACzBvB,KAAK4R,cAAcI,YAAYjF,GAG/B/M,KAAK4R,cAAckC,aAAa/G,EAAW/M,KAAK4R,cAAchW,SAAS2S,KAAKzK,IAEhF9D,KAAK8N,UAAU9J,OAAOF,EAAO,EAAG+O,GAC5B7S,KAAK8N,UAAUvM,OAAS,EAAG,CAE3B,MAAMwS,EAAOhM,SAAS2L,cAAc,OACpCK,EAAKxY,UAAY,OACjB,MAAMyY,EAAkBtQ,IACpB,IAAK,MAAM6K,KAAQvO,KAAK8N,UACpBS,EAAKzB,SAAU,EAEnB,MAAMlD,EAAUD,IACVsK,EAAQjU,KAAKkO,eAAiBhB,EAAYkB,WAC1C1K,EAAMwQ,QACNxQ,EAAMyQ,QACNC,EHrUf,SAAoB/I,EAAOgJ,GAC9B,IAAK,IAAIpJ,EAAI,EAAGA,EAAII,EAAM9J,OAAQ0J,IAE9B,GAAIoJ,EADYhJ,EAAMJ,IAElB,OAAOA,EAGf,OAAQ,CACZ,CG6TkCqJ,CAAWtU,KAAKoP,QAASmF,GAAMA,EAAExH,YAAcgH,IAE3DlE,EAAQ7P,KAAK8N,UAAUpR,KAAK0T,GAAMA,EAAEvL,OAE1C,IAAIqL,EACAC,EACJ,MAAMG,EAAYvE,EAAMqI,GAAY,GAC9B7D,EAAcxE,EAAMqI,EAAY,EAAGpU,KAAK8N,UAAUvM,QAClDqP,EAAaN,EAAUjC,QAAO,CAACC,EAAGrD,IAAMqD,GAAKtO,KAAK8N,UAAU7C,GAAGsB,YAAcsD,EAAM5E,KAAK,GACxF6F,EAAaR,EAAUjC,QAAO,CAACC,EAAGrD,IAAMqD,GAAKtO,KAAK8N,UAAU7C,GAAG0B,gBAAkBkD,EAAM5E,KAAK,GAC5F8F,EAAsC,IAAvBR,EAAYhP,OAC3BiN,OAAOC,kBACP8B,EAAYlC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BuB,EAAM5E,GAAKjL,KAAK8N,UAAU7C,GAAGsB,cAAc,GAC9CyE,EAAsC,IAAvBT,EAAYhP,OAC3BiN,OAAO6B,kBACPE,EAAYlC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BuB,EAAM5E,GACHjL,KAAK8N,UAAU7C,GAAG0B,kBAAkB,GAC1CsE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAClC0D,EAAkBxU,KAAKyU,mBAAmBnE,GAC1CoE,EAAiB1U,KAAKyU,mBAAmBlE,GAC/C,GAA+B,iBAApBiE,EAA8B,CACrC,MAAMG,EAAkB3U,KAAK8N,UAAU0G,GACjCI,EAAWjJ,KAAKkJ,MAAMF,EAAgBlI,gBAAkB,GAC9DyD,EAAa,CACTpM,MAAO0Q,EACPnD,WAAYsD,EAAgBrI,QACtB2E,EAAW2D,EACX3D,EAAW2D,EACjB/P,KAAM8P,EAAgB9P,KAE9B,CACA,GAA8B,iBAAnB6P,EAA6B,CACpC,MAAMC,EAAkB3U,KAAK8N,UAAU4G,GACjCE,EAAWjJ,KAAKkJ,MAAMF,EAAgBlI,gBAAkB,GAC9D0D,EAAY,CACRrM,MAAO4Q,EACPrD,WAAYsD,EAAgBrI,QACtB4E,EAAW0D,EACX1D,EAAW0D,EACjB/P,KAAM8P,EAAgB9P,KAE9B,CACA,MAAMiQ,EAAiBpR,IACnB,MAGMkM,GAHU5P,KAAKkO,eAAiBhB,EAAYkB,WAC5C1K,EAAMwQ,QACNxQ,EAAMyQ,SACYF,EACxBjU,KAAK2P,OAAOyE,EAAWxE,EAAOC,OAAOpP,OAAWA,EAAWwQ,EAAUC,EAAUhB,EAAYC,GAC3FnQ,KAAK8S,uBACL9S,KAAK+S,aAAa,EAEhBgC,EAAMA,KACR,IAAK,MAAMxG,KAAQvO,KAAK8N,UACpBS,EAAKzB,SAAU,EAEnBlD,EAAQM,UACRlK,KAAKuS,kBACLxK,SAAStD,oBAAoB,cAAeqQ,GAC5C/M,SAAStD,oBAAoB,YAAasQ,GAC1ChN,SAAStD,oBAAoB,gBAAiBsQ,GAC9C/U,KAAKqP,cAAcnL,UAAKzD,EAAU,EAEtCsH,SAASvD,iBAAiB,cAAesQ,GACzC/M,SAASvD,iBAAiB,YAAauQ,GACvChN,SAASvD,iBAAiB,gBAAiBuQ,EAAI,EAEnDhB,EAAKvP,iBAAiB,cAAewP,GACrC,MAAMgB,EAAW,CACbjI,UAAWgH,EACX5N,WAAYA,KACR4N,EAAKtP,oBAAoB,cAAeuP,GACxChU,KAAK8R,cAAc+B,YAAYE,EAAK,GAG5C/T,KAAK8R,cAAcE,YAAY+B,GAC/B/T,KAAKoP,OAAOvL,KAAKmR,EACrB,CACKvB,GACDzT,KAAKsT,SAAS,CAACxP,IAEd2P,GACe,iBAAT5O,GACO,eAAdA,EAAKvF,MACLU,KAAKiV,sBAETjV,KAAKuP,cAAcrL,KAAKsI,EAC5B,CACAyI,mBAAAA,GACI,MAAMC,EAAoB,GAC1B,IAAIC,EAAe,EACnB,IAAK,MAAM5G,KAAQvO,KAAK8N,UAChBS,EAAK7B,YAAc6B,EAAKhC,YAAc,IACtC2I,EAAkBrR,KAAK0K,GACvB4G,GAAgB5G,EAAK1J,MAG7B,MAAMA,EAAO8G,KAAKkJ,MAAMM,EAAeD,EAAkB3T,QACzD,IAAK,MAAMgN,KAAQ2G,EACf3G,EAAK1J,KAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAagC,EAAK7B,aAEnD,MAAMwG,EAAUnH,EAAM/L,KAAK8N,UAAUvM,QAC/BuO,EAAqBoD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAe+F,MACzFpD,EAAsBmD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAegG,OAChGpT,KAAKsT,SAASxD,EAAoBC,EACtC,CACAqF,UAAAA,CAAWtR,EAAOuO,EAAQoB,QAAU,IAAVA,IAAAA,GAAa,GAEnC,MAAMZ,EAAW7S,KAAK8N,UAAU9J,OAAOF,EAAO,GAAG,GAGjD,GAFA+O,EAAShR,UAEL7B,KAAK8N,UAAUvM,QAAU,EAAG,CAC5B,MAAM6S,EAAYzI,KAAKD,IAAI5H,EAAQ,EAAG,GACrB9D,KAAKoP,OAAOpL,OAAOoQ,EAAW,GAAG,GACzCjO,YACb,CAQA,OAPKsN,GACDzT,KAAKsT,WAELjB,GAA0B,eAAhBA,EAAO/S,MACjBU,KAAKiV,sBAETjV,KAAKyP,iBAAiBvL,KAAK2O,EAASrG,MAC7BqG,EAASrG,IACpB,CACA6I,wBAAAA,CAAyBvR,GACrB,GAAIA,EAAQ,GAAKA,GAAS9D,KAAK8N,UAAUvM,OACrC,MAAM,IAAIgB,MAAM,uBAGpB,OADiBvC,KAAK8N,UAAUhK,GAChBsI,iBACpB,CACAkJ,QAAAA,CAAShQ,EAAM0G,GACX,MAAMI,EAAoBpM,KAAKqV,yBAAyB/P,GAClD+M,OAAsC,IAAtBjG,EAChBpM,KAAKgT,YAAY1N,GACjB+H,EAAOG,UAAUpB,GACjBI,EAAOxM,KAAKoV,WAAW9P,OAAM7E,GAAW,GAC9CT,KAAKsS,QAAQ9F,EAAM6F,EAAQrG,EAC/B,CACAuJ,MAAAA,CAAO1Q,EAAM+I,GACT,MAAM4H,EAAe7J,KAAKD,IAAI1L,KAAK6E,KAAM7E,KAAK2N,cAG9C,GAFA3N,KAAK6E,KAAOA,EACZ7E,KAAK4N,eAAiBA,EACjB5N,KAAK+N,YAML,CACD,IAAI0H,EAAQ,EACZ,IAAK,IAAIxK,EAAI,EAAGA,EAAIjL,KAAK8N,UAAUvM,OAAQ0J,IAAK,CAC5C,MAAMsD,EAAOvO,KAAK8N,UAAU7C,GACtByK,EAAa1V,KAAK+N,YAAY9C,GACV,iBAAfyK,EACPD,GAASC,EAGT7Q,GAAQ0J,EAAK1J,IAErB,CACA,IAAK,IAAIoG,EAAI,EAAGA,EAAIjL,KAAK8N,UAAUvM,OAAQ0J,IAAK,CAC5C,MAAMsD,EAAOvO,KAAK8N,UAAU7C,GACtByK,EAAa1V,KAAK+N,YAAY9C,GACV,iBAAfyK,GAA2BD,EAAQ,IAC1ClH,EAAK1J,KAAO2G,EAAMG,KAAK0H,MAAOqC,EAAa7Q,EAAQ4Q,GAAQlH,EAAKhC,YAAagC,EAAK7B,aAE1F,CACJ,KAzBuB,CACnB,MAAMwG,EAAUnH,EAAM/L,KAAK8N,UAAUvM,QAC/BuO,EAAqBoD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAe+F,MACzFpD,EAAsBmD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAegG,OAChGpT,KAAK2P,OAAO3P,KAAK8N,UAAUvM,OAAS,EAAGsD,EAAO2Q,OAAc/U,EAAWqP,EAAoBC,EAC/F,CAqBA/P,KAAK8S,uBACL9S,KAAK+S,aACT,CACAO,QAAAA,CAASxD,EAAoBC,GACzB,MAAMrC,EAAc1N,KAAK8N,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChE7E,KAAK2P,OAAO3P,KAAK8N,UAAUvM,OAAS,EAAGvB,KAAKmM,MAAQuB,OAAajN,EAAWqP,EAAoBC,GAChG/P,KAAK8S,uBACL9S,KAAK+S,cACL/S,KAAKuS,iBACT,CACAO,oBAAAA,CAAqB6C,GACjB,MAAMjI,EAAc1N,KAAK8N,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChE,IAAI+Q,EAAa5V,KAAK6E,KAAO6I,EAC7B,MAAMwF,EAAUnH,EAAM/L,KAAK8N,UAAUvM,OAAS,GAAI,GAC5CuO,EAAqBoD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAe+F,MACzFpD,EAAsBmD,EAAQzI,QAAQQ,GAAMjL,KAAK8N,UAAU7C,GAAG2B,WAAaQ,EAAegG,OAChG,IAAK,MAAMtP,KAASiM,EAChB7E,EAAYgI,EAASpP,GAEzB,IAAK,MAAMA,KAASgM,EAChB1E,EAAU8H,EAASpP,GAES,iBAArB6R,GACPvK,EAAU8H,EAASyC,GAEvB,IAAK,IAAI1K,EAAI,EAAkB,IAAf2K,GAAoB3K,EAAIiI,EAAQ3R,OAAQ0J,IAAK,CACzD,MAAMsD,EAAOvO,KAAK8N,UAAUoF,EAAQjI,IAC9BpG,EAAO2G,EAAM+C,EAAK1J,KAAO+Q,EAAYrH,EAAKhC,YAAagC,EAAK7B,aAElEkJ,GADkB/Q,EAAO0J,EAAK1J,KAE9B0J,EAAK1J,KAAOA,CAChB,CACJ,CACA0N,eAAAA,GACQvS,KAAK2R,oBAAsB3R,KAAK2N,aAAe,IAC/C3N,KAAKgO,aAAehO,KAAK8N,UAAUpR,KAAKuO,GAAMA,EAAEqB,QAAUrB,EAAEpG,KAAO7E,KAAK2N,kBAAelN,IAE/F,CAUAsS,WAAAA,GAGI,GAFA/S,KAAK2N,aAAe3N,KAAK8N,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChE7E,KAAK4O,uBACyB,IAA1B5O,KAAK8N,UAAUvM,OACf,OAEJ,MAAMsU,EAAmB7V,KAAK8N,UAAUrD,QAAQQ,GAAMA,EAAEqB,UAClDwJ,EAAYnK,KAAKD,IAAI,EAAGmK,EAAiBtU,OAAS,GAClDwU,EAAqB/V,KAAKiP,OAAS6G,EAAanK,KAAKD,IAAI,EAAGmK,EAAiBtU,QACnF,IAAIyU,EAAkB,EACtB,MAAMC,EAAkB,GAElBC,EAA2BlW,KAAK8N,UAAUO,QAAO,CAACxD,EAAKgI,EAAU5H,KACnE,MAAMkL,EAAOtD,EAASvG,QAAU,EAAI,EAOpC,OANU,IAANrB,EACAJ,EAAIhH,KAAKsS,GAGTtL,EAAIhH,KAAKgH,EAAII,EAAI,GAAKkL,GAEnBtL,CAAG,GACX,IAEH7K,KAAK8N,UAAUhM,SAAQ,CAAC0K,EAAMvB,KAC1B+K,GAAmBhW,KAAK8N,UAAU7C,GAAGpG,KACrCoR,EAAgBpS,KAAKmS,GACrB,MAAMnR,EAAO2H,EAAKF,QAAUE,EAAK3H,KAAOkR,EAAoB,EACtDK,EAA8BzK,KAAKD,IAAI,EAAGwK,EAAyBjL,GAAK,GACxEoL,EAAe,IAANpL,GAA2C,IAAhCmL,EACpB,EACAH,EAAgBhL,EAAI,GACjBmL,EAA8BN,EAAaC,EACpD,GAAI9K,EAAIjL,KAAK8N,UAAUvM,OAAS,EAAG,CAE/B,MAAMqS,EAAUpH,EAAKF,QACf+J,EAASxR,EAAOyR,EAAgBtW,KAAKiP,OAAS,EAC9CoH,EACFrW,KAAKkO,eAAiBhB,EAAYkB,aAClCpO,KAAKoP,OAAOnE,GAAG8B,UAAU/C,MAAMZ,KAAQ,GAAEwK,MACzC5T,KAAKoP,OAAOnE,GAAG8B,UAAU/C,MAAMX,IAAO,OAEtCrJ,KAAKkO,eAAiBhB,EAAYqJ,WAClCvW,KAAKoP,OAAOnE,GAAG8B,UAAU/C,MAAMZ,KAAQ,MACvCpJ,KAAKoP,OAAOnE,GAAG8B,UAAU/C,MAAMX,IAAO,GAAEuK,MAEhD,CAEI5T,KAAKkO,eAAiBhB,EAAYkB,aAClC5B,EAAKO,UAAU/C,MAAMV,MAAS,GAAEzE,MAChC2H,EAAKO,UAAU/C,MAAMZ,KAAQ,GAAEiN,MAC/B7J,EAAKO,UAAU/C,MAAMX,IAAM,GAC3BmD,EAAKO,UAAU/C,MAAMT,OAAS,IAE9BvJ,KAAKkO,eAAiBhB,EAAYqJ,WAClC/J,EAAKO,UAAU/C,MAAMT,OAAU,GAAE1E,MACjC2H,EAAKO,UAAU/C,MAAMX,IAAO,GAAEgN,MAC9B7J,EAAKO,UAAU/C,MAAMV,MAAQ,GAC7BkD,EAAKO,UAAU/C,MAAMZ,KAAO,IAEhCoD,EAAKA,KAAK+I,OAAO/I,EAAK3H,KAAOkR,EAAmB/V,KAAK6N,gBAAgB,GAE7E,CACA4G,kBAAAA,CAAmBvB,GAEf,IAAK,MAAMpP,KAASoP,EAAS,CACzB,MAAML,EAAW7S,KAAK8N,UAAUhK,GAChC,GAAK+O,EAASvG,SAGVuG,EAAShG,KACT,OAAO/I,CAEf,CAEA,IAAK,MAAMA,KAASoP,EAAS,CACzB,MAAML,EAAW7S,KAAK8N,UAAUhK,GAChC,GAAI+O,EAASvG,SACTuG,EAASnG,YAAcmG,EAAStG,YAAc,EAC9C,OAEJ,IAAKsG,EAASvG,SAAWuG,EAAShG,KAC9B,OAAO/I,CAEf,CAEJ,CACA8K,oBAAAA,GACI,IAAI4H,GAAW,EACf,MAAMC,EAAgBzW,KAAK8N,UAAUpR,KAAKuO,GAAOuL,EAAWvL,EAAEpG,KAAOoG,EAAEsB,YAAc,GAAKiK,IAC1FA,GAAW,EACX,MAAME,EAAc1W,KAAK8N,UAAUpR,KAAKuO,GAAOuL,EAAWvL,EAAEyB,YAAczB,EAAEpG,KAAO,GAAK2R,IAClFG,EAAe,IAAI3W,KAAK8N,WAAW8I,UACzCJ,GAAW,EACX,MAAMK,EAAcF,EACfja,KAAKuO,GAAOuL,EAAWvL,EAAEpG,KAAOoG,EAAEsB,YAAc,GAAKiK,IACrDI,UACLJ,GAAW,EACX,MAAMM,EAAYH,EACbja,KAAKuO,GAAOuL,EAAWvL,EAAEyB,YAAczB,EAAEpG,KAAO,GAAK2R,IACrDI,UACL,IAAIG,EAAW,EACf,IAAK,IAAIjT,EAAQ,EAAGA,EAAQ9D,KAAKoP,OAAO7N,OAAQuC,IAAS,CACrD,MAAMiQ,EAAO/T,KAAKoP,OAAOtL,GAEzBiT,GADiB/W,KAAK8N,UAAUhK,GACXe,KACrB,MAAM4G,IAAQgL,EAAc3S,IAAUgT,EAAUhT,EAAQ,IAClD4H,IAAQgL,EAAY5S,IAAU+S,EAAY/S,EAAQ,IACxD,GAAI2H,GAAOC,EAAK,CACZ,MAAM4E,EAAYvE,EAAMjI,GAAQ,GAC1ByM,EAAcxE,EAAMjI,EAAQ,EAAG9D,KAAK8N,UAAUvM,QAC9CiT,EAAkBxU,KAAKyU,mBAAmBnE,GAC1CoE,EAAiB1U,KAAKyU,mBAAmBlE,GACzCyG,EAA2C,iBAApBxC,IACxBxU,KAAK8N,UAAU0G,GAAiBlI,QAC/B2K,EAAyC,iBAAnBvC,IACvB1U,KAAK8N,UAAU4G,GAAgBpI,QAChC0K,GACAH,EAAY/S,KACXiT,EAAW,GAAK/W,KAAK0O,sBACtB1O,KAAKkX,WAAWnD,EAAM5G,EAAUgK,SAE3BF,GACLR,EAAc3S,KACbiT,EAAW/W,KAAK2N,cAAgB3N,KAAK6O,oBACtC7O,KAAKkX,WAAWnD,EAAM5G,EAAUiK,SAGhCpX,KAAKkX,WAAWnD,EAAM5G,EAAUkK,SAExC,MACS5L,IAAQC,EACb1L,KAAKkX,WAAWnD,EAAM5G,EAAUgK,UAE1B1L,GAAOC,EACb1L,KAAKkX,WAAWnD,EAAM5G,EAAUiK,SAGhCpX,KAAKkX,WAAWnD,EAAM5G,EAAUmK,QAExC,CACJ,CACAJ,UAAAA,CAAWnD,EAAMwD,GACblQ,EAAY0M,EAAKhH,UAAW,WAAYwK,IAAUpK,EAAUkK,UAC5DhQ,EAAY0M,EAAKhH,UAAW,UAAWwK,IAAUpK,EAAUmK,SAC3DjQ,EAAY0M,EAAKhH,UAAW,UAAWwK,IAAUpK,EAAUiK,SAC3D/P,EAAY0M,EAAKhH,UAAW,UAAWwK,IAAUpK,EAAUgK,QAC/D,CACAtF,mBAAAA,GACI,MAAMtN,EAAUwD,SAAS2L,cAAc,OAEvC,OADAnP,EAAQhJ,UAAY,iBACbgJ,CACX,CACAwN,mBAAAA,GACI,MAAMxN,EAAUwD,SAAS2L,cAAc,OAEvC,OADAnP,EAAQhJ,UAAY,iBACbgJ,CACX,CACAmN,eAAAA,GACI,MAAMnN,EAAUwD,SAAS2L,cAAc,OACjC8D,EAAuBxX,KAAKkO,eAAiBhB,EAAYkB,WACzD,aACA,WAEN,OADA7J,EAAQhJ,UAAa,wBAAuBic,IACrCjT,CACX,CACA1C,OAAAA,GACI7B,KAAKqP,cAAcxN,UACnB7B,KAAKuP,cAAc1N,UACnB7B,KAAKyP,iBAAiB5N,UACtB,IAAK,IAAIoJ,EAAI,EAAGA,EAAIjL,KAAKuE,QAAQ3I,SAAS2F,OAAQ0J,IAC9C,GAAIjL,KAAKuE,QAAQ3I,SAAS2S,KAAKtD,KAAOjL,KAAKuE,QAAS,CAChDvE,KAAKuE,QAAQsP,YAAY7T,KAAKuE,SAC9B,KACJ,CAEJ,IAAK,MAAMsO,KAAY7S,KAAK8N,UACxB+E,EAAShR,UAEb7B,KAAKuE,QAAQ4C,QACjB,ECvvBG,MAAMsQ,UAAiBjS,EAC1B,gBAAIgK,GACA,OAAOxP,KAAK0X,UAAUlI,YAC1B,CACA,mBAAIE,GACA,OAAO1P,KAAK0X,UAAUhI,eAC1B,CACA,eAAInD,GACA,OAAOvM,KAAK0X,UAAUnL,WAC1B,CACA,eAAIG,GACA,OAAO1M,KAAK0X,UAAUhL,WAC1B,CACA,eAAIuB,GACA,OAAOjO,KAAK0X,UAAUzJ,WAC1B,CACA,QAAIpJ,GACA,OAAO7E,KAAK0X,UAAU7S,IAC1B,CACA,kBAAI+I,GACA,OAAO5N,KAAK0X,UAAU9J,cAC1B,CACAjO,WAAAA,CAAYoN,EAAWxJ,GACnB,IAAIjB,EACJvC,QACAC,KAAK2X,UAAY,GACjB3X,KAAK4X,eAAgB,EACrB5X,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAKkO,aAA8C,QAA9B5L,EAAKiB,EAAQ0K,mBAAgC,IAAP3L,EAAgBA,EAAK4K,EAAYqJ,SAC5FvW,KAAKuE,QAAUwD,SAAS2L,cAAc,OACtC1T,KAAKuE,QAAQhJ,UAAY,iBACzBwR,EAAUiF,YAAYhS,KAAKuE,SAC3BvE,KAAK0X,UAAY,IAAIjK,EAAUzN,KAAKuE,QAAS,CACzC0J,YAAajO,KAAKkO,aAClByD,oBAAoB,EACpBO,WAAY3O,EAAQ2O,aAIxBlS,KAAK8X,WAAWhW,SAASiW,IACrB,MAAM5R,EAAa,IAAIX,EAAoBuS,EAAKC,2BAA0B,KACtEhY,KAAKiY,iBACLjY,KAAK6X,aAAa3T,UAAKzD,EAAU,KAE/ByX,EAAW,CACbH,OACA5R,WAAY,CACRtE,QAASA,KACLsE,EAAWtE,SAAS,IAIhC7B,KAAK2X,UAAU9T,KAAKqU,GACpBH,EAAKnK,eAAiB5N,KAAK0X,UAAU9J,cAAc,IAEvD5N,KAAK6F,eAAe7F,KAAK6X,aAAc7X,KAAK0X,UAAUpI,cAAa,KAC/DtP,KAAK6X,aAAa3T,UAAKzD,EAAU,IACjCT,KAAK0X,UAAUlI,cAAa,KAC5BxP,KAAK6X,aAAa3T,MAAM,IACxBlE,KAAK0X,UAAUhI,iBAAgB,KAC/B1P,KAAK6X,aAAa3T,MAAM,IAEhC,CACA0O,cAAAA,CAAe9O,EAAOwI,GAClBtM,KAAK0X,UAAU9E,eAAe9O,EAAOwI,EACzC,CACA6L,OAAAA,CAAQJ,EAAMlT,EAAMf,EAA+B2P,QAA1B,IAAL3P,IAAAA,EAAQ9D,KAAK0X,UAAUnW,aAAkB,IAAVkS,IAAAA,GAAa,GAC5D,MAAMtN,EAAa4R,EAAKC,2BAA0B,KAC9ChY,KAAKiY,iBACLjY,KAAK6X,aAAa3T,UAAKzD,EAAU,IAE/ByX,EAAW,CACbH,OACA5R,WAAY,CACRtE,QAASA,KACLsE,EAAWtE,SAAS,IAIhC7B,KAAK2X,UAAU3T,OAAOF,EAAO,EAAGoU,GAChCH,EAAKnK,eAAiB5N,KAAK0X,UAAU9J,eACrC5N,KAAK0X,UAAUpF,QAAQyF,EAAMlT,EAAMf,EAAO2P,EAC9C,CACAT,WAAAA,CAAYlP,GACR,OAAO9D,KAAK0X,UAAU1E,YAAYlP,EACtC,CACAgU,QAAAA,GACI,OAAO9X,KAAK0X,UAAUnE,UAC1B,CACA6E,UAAAA,CAAWtU,EAAOP,QAAO,IAAPA,IAAAA,EAAU,CAAE8U,aAAa,IACvC,MAAMH,EAAWlY,KAAK2X,UAAU3T,OAAOF,EAAO,GAAG,GAMjD,OALA9D,KAAK0X,UAAUtC,WAAWtR,GACrBP,EAAQ8U,cACTH,EAAS/R,WAAWtE,UACpBqW,EAASH,KAAKlW,WAEXqW,CACX,CACA5C,QAAAA,CAAShQ,EAAM0G,GACX,GAAI1G,IAAS0G,EACT,OAEJ,MAAMQ,EAAOxM,KAAKoY,WAAW9S,EAAM,CAAE+S,aAAa,IAClDrY,KAAK4X,eAAgB,EACrB,IACI5X,KAAKmY,QAAQ3L,EAAKuL,KAAMvL,EAAKuL,KAAKlT,KAAMmH,GAAI,EAChD,CAAC,QAEGhM,KAAK4X,eAAgB,CACzB,CACJ,CACArC,MAAAA,CAAO1Q,EAAM+I,GACT5N,KAAK0X,UAAUnC,OAAO1Q,EAAM+I,EAChC,CACAqK,cAAAA,GACQjY,KAAK4X,gBAGL5X,KAAKsY,iBACLC,aAAavY,KAAKsY,gBAClBtY,KAAKsY,oBAAiB7X,GAE1B2G,EAAWpH,KAAKuE,QAAS,YACzBvE,KAAKsY,eAAiB1P,YAAW,KAC7B5I,KAAKsY,oBAAiB7X,EACtBqG,EAAc9G,KAAKuE,QAAS,WAAW,GACxC,KACP,CACA1C,OAAAA,GACI9B,MAAM8B,UACF7B,KAAKsY,iBACLC,aAAavY,KAAKsY,gBAClBtY,KAAKsY,oBAAiB7X,GAE1BT,KAAK2X,UAAU7V,SAASoW,IACpBA,EAAS/R,WAAWtE,UACpBqW,EAASH,KAAKlW,SAAS,IAE3B7B,KAAK2X,UAAY,GACjB3X,KAAK0X,UAAU7V,UACf7B,KAAKuE,QAAQ4C,QACjB,EC5IG,MAAMqR,EACT,gBAAIC,GACA,OAAOzY,KAAKwM,KAAKiM,YACrB,CACA,gBAAIC,GACA,OAAO1Y,KAAKwM,KAAKkM,YACrB,CACA,iBAAIC,GACA,OAAO3Y,KAAKwM,KAAKmM,aACrB,CACA,iBAAIC,GACA,OAAO5Y,KAAKwM,KAAKoM,aACrB,CACA,YAAIhM,GACA,OAAO5M,KAAKwM,KAAKI,QACrB,CACA,QAAIC,GACA,OAAO7M,KAAKwM,KAAKK,IACrB,CACA,eAAIN,GACA,OAAOvM,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK2Y,cACL3Y,KAAKyY,YACf,CACA,eAAI/L,GACA,OAAO1M,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK4Y,cACL5Y,KAAK0Y,YACf,CACA,yBAAIG,GACA,OAAO7Y,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAKyY,aACLzY,KAAK2Y,aACf,CACA,yBAAIG,GACA,OAAO9Y,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK0Y,aACL1Y,KAAK4Y,aACf,CACA,kBAAIhL,GACA,OAAO5N,KAAK6N,eAChB,CACA,QAAIhJ,GACA,OAAO7E,KAAKmM,KAChB,CACA,WAAI5H,GACA,OAAOvE,KAAKwM,KAAKjI,OACrB,CACA,SAAI+E,GACA,OAAOtJ,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK4N,eACL5N,KAAK6E,IACf,CACA,UAAI0E,GACA,OAAOvJ,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK6E,KACL7E,KAAK4N,cACf,CACAjO,WAAAA,CAAY6M,EAAMyB,EAAaL,EAAgB/I,QAAI,IAAJA,IAAAA,EAAO,GAClD7E,KAAKwM,KAAOA,EACZxM,KAAKiO,YAAcA,EACnBjO,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAK6N,gBAAkBD,EACvB5N,KAAKmM,MAAQtH,EACb7E,KAAKkG,YAAclG,KAAKwM,KAAKgH,aAAa9P,IAClCA,EACA1D,KAAK6X,aAAa3T,KAAK,CACnBW,KAAM7E,KAAKiO,cAAgBf,EAAYqJ,SACjC7S,EAAM4F,MACN5F,EAAM6F,OACZqE,eAAgB5N,KAAKiO,cAAgBf,EAAYqJ,SAC3C7S,EAAM6F,OACN7F,EAAM4F,QAIhBtJ,KAAK6X,aAAa3T,KAAK,CAAC,EAC5B,GAER,CACA8I,UAAAA,CAAWV,GACHtM,KAAKwM,KAAKQ,YACVhN,KAAKwM,KAAKQ,WAAWV,EAE7B,CACAiJ,MAAAA,CAAO1Q,EAAM+I,GACT5N,KAAKmM,MAAQtH,EACb7E,KAAK6N,gBAAkBD,EACvB5N,KAAKwM,KAAK+I,OAAOvV,KAAKsJ,MAAOtJ,KAAKuJ,OACtC,CACA1H,OAAAA,GACI7B,KAAK6X,aAAahW,UAClB7B,KAAKkG,YAAYrE,SACrB,EC5FG,MAAMkX,UAAmBvT,EAC5B,SAAI8D,GACA,OAAOtJ,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK6E,KACL7E,KAAK4N,cACf,CACA,UAAIrE,GACA,OAAOvJ,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK4N,eACL5N,KAAK6E,IACf,CACA,eAAI0H,GACA,OAAgC,IAAzBvM,KAAKpE,SAAS2F,OACf,EACAoK,KAAKD,OAAO1L,KAAKpE,SAASc,KAAI,CAACsc,EAAGlV,IAAU9D,KAAK0X,UAAU/E,cAAc7O,GACrEkV,EAAEH,sBACF,IACd,CACA,eAAInM,GACA,OAAOf,KAAKF,OAAOzL,KAAKpE,SAASc,KAAI,CAACsc,EAAGlV,IAAU9D,KAAK0X,UAAU/E,cAAc7O,GAC1EkV,EAAEF,sBACFtK,OAAOC,oBACjB,CACA,yBAAIoK,GACA,OAAO7Y,KAAK0X,UAAUnL,WAC1B,CACA,yBAAIuM,GACA,OAAO9Y,KAAK0X,UAAUhL,WAC1B,CACA,kBAAIkB,GACA,OAAO5N,KAAK6N,eAChB,CACA,QAAIhJ,GACA,OAAO7E,KAAKmM,KAChB,CACA,gBAAIsM,GACA,OAAOzY,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK6Y,sBACL7Y,KAAKuM,WACf,CACA,iBAAIoM,GACA,OAAO3Y,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAKuM,YACLvM,KAAK6Y,qBACf,CACA,gBAAIH,GACA,OAAO1Y,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK8Y,sBACL9Y,KAAK0M,WACf,CACA,iBAAIkM,GACA,OAAO5Y,KAAKiO,cAAgBf,EAAYkB,WAClCpO,KAAK0M,YACL1M,KAAK8Y,qBACf,CACA,YAAIlM,GACA,GAA6B,IAAzB5M,KAAKpE,SAAS2F,OACd,OAAO6L,EAAe6L,OAE1B,MAAMC,EAAalZ,KAAKpE,SAASc,KAAKsc,QAA4B,IAAfA,EAAEpM,SAC/CQ,EAAe6L,OACfD,EAAEpM,WACR,OAAIsM,EAAWC,MAAMC,GAAMA,IAAMhM,EAAegG,OACrChG,EAAegG,KAEjB8F,EAAWC,MAAMC,GAAMA,IAAMhM,EAAe+F,MAC1C/F,EAAe+F,IAEnB/F,EAAe6L,MAC1B,CACA,YAAIlK,GACA,OAAO/O,KAAK0X,UAAU3I,QAC1B,CACA,YAAIA,CAAStM,GACTzC,KAAK0X,UAAU3I,SAAWtM,CAC9B,CACA,UAAIwM,GACA,OAAOjP,KAAK0X,UAAUzI,MAC1B,CACA,UAAIA,CAAOxM,GACPzC,KAAK0X,UAAUzI,OAASxM,EACxBzC,KAAKpE,SAASkG,SAASF,IACfA,aAAiBmX,IACjBnX,EAAMqN,OAASxM,EACnB,GAER,CACA9C,WAAAA,CAAYsO,EAAa0D,EAAoBM,EAAQpN,EAAM+I,EAAgBmB,EAAUE,EAAQoK,GAezF,GAdAtZ,QACAC,KAAKiO,YAAcA,EACnBjO,KAAK2R,mBAAqBA,EAC1B3R,KAAKiS,OAASA,EACdjS,KAAKsZ,oBAAsBnY,EAAWkE,KACtCrF,KAAKpE,SAAW,GAChBoE,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAKuZ,uBAAyB,IAAIvW,EAClChD,KAAKwZ,sBAAwBxZ,KAAKuZ,uBAAuB7V,MACzD1D,KAAK6N,gBAAkBD,EACvB5N,KAAKmM,MAAQtH,EACb7E,KAAKuE,QAAUwD,SAAS2L,cAAc,OACtC1T,KAAKuE,QAAQhJ,UAAY,cACpB8d,EASA,CACD,MAAMnH,EAAa,CACfC,MAAOkH,EAAiB3c,KAAK+c,IAClB,CACHjN,KAAMiN,EAAgBC,KACtB7U,KAAM4U,EAAgBC,KAAK7U,KAC3ByH,UAASmN,EAAgBC,gBAAgBlB,QACT/X,IAA5BgZ,EAAgBnN,UACdmN,EAAgBnN,YAI9BzH,KAAM7E,KAAK4N,gBAEf5N,KAAKpE,SAAWyd,EAAiB3c,KAAKsc,GAAMA,EAAEU,OAC9C1Z,KAAK0X,UAAY,IAAIjK,EAAUzN,KAAKuE,QAAS,CACzC0J,YAAajO,KAAKiO,YAClBiE,aACAP,qBACAM,SACAhD,UAER,MA9BIjP,KAAK0X,UAAY,IAAIjK,EAAUzN,KAAKuE,QAAS,CACzC0J,YAAajO,KAAKiO,YAClB0D,qBACAM,SACAhD,WAEJjP,KAAK0X,UAAUnC,OAAOvV,KAAK6E,KAAM7E,KAAK4N,gBAyB1C5N,KAAK+O,SAAWA,EAChB/O,KAAK6F,eAAe7F,KAAK6X,aAAc7X,KAAKuZ,uBAAwBvZ,KAAK0X,UAAUpI,cAAa,KAC5FtP,KAAK6X,aAAa3T,KAAK,CAAC,EAAE,KAE9BlE,KAAK2Z,qBACT,CACA3M,UAAAA,CAAW4M,GACP,CAEJC,cAAAA,CAAe/V,GACX,GAAIA,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAK0X,UAAU/E,cAAc7O,EACxC,CACAgW,eAAAA,CAAgBhW,EAAOwI,GACnB,GAAIxI,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,GAAIvC,KAAK0X,UAAU/E,cAAc7O,KAAWwI,EACxC,OAEJ,MAAMyN,EAAuD,IAA/B/Z,KAAK0X,UAAUhK,YAC7C1N,KAAK0X,UAAU9E,eAAe9O,EAAOwI,GAErC,MAAM0N,EAAsD,IAA/Bha,KAAK0X,UAAUhK,aAGvCpB,GAAWyN,IACVzN,GAAW0N,IACbha,KAAKuZ,uBAAuBrV,KAAK,CAAEoI,WAE3C,CACA2N,SAAAA,CAAU3U,EAAM0G,GACZ,GAAI1G,IAAS0G,EACT,OAEJ,GAAI1G,EAAO,GAAKA,GAAQtF,KAAKpE,SAAS2F,OAClC,MAAM,IAAIgB,MAAM,sBAEhB+C,EAAO0G,GACPA,IAEJhM,KAAK0X,UAAUpC,SAAShQ,EAAM0G,GAC9B,MAAMpK,EAAQ5B,KAAKka,aAAa5U,GAChCtF,KAAKma,UAAUvY,EAAOoK,EAC1B,CACAoO,YAAAA,CAAatW,GACT,GAAIA,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAK0X,UAAU1E,YAAYlP,EACtC,CACAuW,WAAAA,CAAYvW,EAAOe,GACf,GAAIf,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAEpBvC,KAAK0X,UAAUzE,WAAWnP,EAAOe,EACrC,CACA0Q,MAAAA,CAAO1Q,EAAM+I,GACT5N,KAAKmM,MAAQyB,EACb5N,KAAK6N,gBAAkBhJ,EACvB7E,KAAK0X,UAAUnC,OAAO3H,EAAgB/I,EAC1C,CACAyV,QAAAA,CAASZ,EAAM7U,EAAMf,EAAO2P,GACxB,GAAI3P,EAAQ,GAAKA,EAAQ9D,KAAKpE,SAAS2F,OACnC,MAAM,IAAIgB,MAAM,iBAEpBvC,KAAK0X,UAAUpF,QAAQoH,EAAM7U,EAAMf,EAAO2P,GAC1CzT,KAAKma,UAAUT,EAAM5V,EACzB,CACAyW,yBAAAA,CAA0BzW,GACtB,GAAIA,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAEpB,OAAOvC,KAAK0X,UAAUrC,yBAAyBvR,EACnD,CACA+P,WAAAA,CAAY/P,EAAOuO,GACf,GAAIvO,EAAQ,GAAKA,GAAS9D,KAAKpE,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,iBAGpB,OADAvC,KAAK0X,UAAUtC,WAAWtR,EAAOuO,GAC1BrS,KAAKka,aAAapW,EAC7B,CACAqW,SAAAA,CAAUT,EAAM5V,GACZ9D,KAAKpE,SAASoI,OAAOF,EAAO,EAAG4V,GAC/B1Z,KAAK2Z,qBACT,CACAO,YAAAA,CAAapW,GACT,MAAOlC,GAAS5B,KAAKpE,SAASoI,OAAOF,EAAO,GAE5C,OADA9D,KAAK2Z,sBACE/X,CACX,CACA+X,mBAAAA,GACI3Z,KAAKsZ,oBAAoBzX,UACzB7B,KAAKsZ,oBAAsB,IAAI9T,EAAoBtE,EAAME,OAAOpB,KAAKpE,SAASc,KAAKsc,GAAMA,EAAExF,cAAxCtS,EAAuDiD,IAKtGnE,KAAK6X,aAAa3T,KAAK,CAAEW,KAAMV,EAAEyJ,gBAAiB,OAC/C5N,KAAKpE,SAASc,KAAI,CAACsc,EAAG/N,IACrB+N,aAAaD,EACNC,EAAEQ,uBAAsBpd,IAAkB,IAAjB,QAAEkQ,GAASlQ,EACvC4D,KAAK8Z,gBAAgB7O,EAAGqB,EAAQ,IAGjCnL,EAAWkE,OAE1B,CACAxD,OAAAA,GACI7B,KAAKsZ,oBAAoBzX,UACzB7B,KAAK0X,UAAU7V,UACf7B,KAAKpE,SAASkG,SAASF,GAAUA,EAAMC,YACvC9B,MAAM8B,SACV,ECvPJ,SAAS2Y,EAASC,EAAcC,GAC5B,GAAID,aAAwBjC,EACxB,OAAOiC,EAEX,GAAIA,aAAwB1B,EACxB,OAAOyB,EAASC,EAAa7e,SAAS8e,EAAOD,EAAa7e,SAAS2F,OAAS,EAAI,GAAImZ,GAExF,MAAM,IAAInY,MAAM,eACpB,CACA,SAASoY,EAASjB,EAAM7U,EAAM+I,GAC1B,GAAI8L,aAAgBX,EAAY,CAC5B,MAAM9M,EAAS,IAAI8M,EAAW6B,GAAWlB,EAAKzL,aAAcyL,EAAK/H,mBAAoB+H,EAAKzH,OAAQpN,EAAM+I,EAAgB8L,EAAK3K,SAAU2K,EAAKzK,QAC5I,IAAI4L,EAAY,EAChB,IAAK,IAAI5P,EAAIyO,EAAK9d,SAAS2F,OAAS,EAAG0J,GAAK,EAAGA,IAAK,CAChD,MAAMrJ,EAAQ8X,EAAK9d,SAASqP,GACtB6P,EAAYlZ,aAAiBmX,EAAanX,EAAMgM,eAAiBhM,EAAMiD,KAC7E,IAAI+O,EAAwB,IAAd8F,EAAK7U,KACb,EACA8G,KAAK0H,MAAOxO,EAAOiW,EAAapB,EAAK7U,MAC3CgW,GAAajH,EAEH,IAAN3I,IACA2I,GAAW/O,EAAOgW,GAEtB5O,EAAOqO,SAASK,EAAS/Y,EAAOgM,EAAgBgG,GAAUA,EAAS,GAAG,EAC1E,CACA,OAAO3H,CACX,CAEI,OAAO,IAAIuM,EAASkB,EAAKlN,KAAMoO,GAAWlB,EAAKzL,aAAcL,EAErE,CAoBO,SAASmN,EAAgBxW,GAC5B,MAAMyW,EAAgBzW,EAAQyW,cAC9B,IAAKA,EACD,MAAM,IAAIzY,MAAM,wBAEpB,GAAI,gBAAgB0Y,KAAKD,EAAczf,WACnC,MAAO,GAEX,MAAMuI,EA3BH,SAAuBS,GAC1B,MAAMyW,EAAgBzW,EAAQyW,cAC9B,IAAKA,EACD,MAAM,IAAIzY,MAAM,wBAEpB,IAAI2Y,EAAKF,EAAcG,kBACnBrX,EAAQ,EACZ,KAAOoX,IAAO3W,GAAW2W,IAAOF,EAAcI,kBAAoBF,GAC9DA,EAAKA,EAAGG,mBACRvX,IAEJ,OAAOA,CACX,CAekBwX,CAAcN,GAE5B,MAAO,IAAID,EADMC,EAAcA,cAAcA,cAAcA,eACrBlX,EAC1C,CACO,SAASyX,EAAoBC,EAAiBC,EAAUC,GAC3D,MAAMzN,EAoBH,SAAgCuN,EAAiBC,GACpD,OAAOA,EAASla,OAAS,GAAM,EACzBqZ,GAAWY,GACXA,CACV,CAxBwBG,CAAuBH,EAAiBC,GACtDG,EAcH,SAAiCF,GACpC,MAAqB,QAAdA,GAAqC,WAAdA,EACxBxO,EAAYqJ,SACZrJ,EAAYkB,UACtB,CAlBiCyN,CAAwBH,GACrD,GAAIzN,IAAgB2N,EAAsB,CACtC,MAAOE,EAAMC,GAAUnR,EAAK6Q,GAC5B,IAAI3X,EAAQiY,EAIZ,MAHkB,UAAdL,GAAuC,WAAdA,IACzB5X,GAAS,GAEN,IAAIgY,EAAMhY,EACrB,CACK,CACD,MAAMA,EAAsB,UAAd4X,GAAuC,WAAdA,EAAyB,EAAI,EACpE,MAAO,IAAID,EAAU3X,EACzB,CACJ,CAWO,MAAM8W,GAAc3M,GAAgBA,IAAgBf,EAAYkB,WACjElB,EAAYqJ,SACZrJ,EAAYkB,WAIlB,MAAM4N,GAAsBA,CAACtC,EAAMzL,KAC/B,MAAMpJ,EAAOoJ,IAAgBf,EAAYqJ,SAAWmD,EAAKuC,IAAI3S,MAAQoQ,EAAKuC,IAAI1S,OAC9E,OALG,SAA0BmQ,GAC7B,QAASA,EAAK9d,QAClB,CAGSsgB,CAAiBxC,GAWf,CACHpa,KAAM,SACNoB,KAAMgZ,EAAK9d,SAASc,KAAKsc,GAAMgD,GAAoBhD,EAAG4B,GAAW3M,MACjEpJ,QAbsC,iBAA3B6U,EAAKtN,kBACL,CACH9M,KAAM,OACNoB,KAAMgZ,EAAKlN,KAAK2P,SAChBtX,KAAM6U,EAAKtN,kBACXE,SAAS,GAGV,CAAEhN,KAAM,OAAQoB,KAAMgZ,EAAKlN,KAAK2P,SAAUtX,OAMpD,EAEE,MAAMuX,GACT,UAAI7a,GACA,OAAOvB,KAAKqc,MAAQrc,KAAKqc,MAAMzgB,SAAS2F,OAAS,CACrD,CACA,eAAI0M,GACA,OAAOjO,KAAKsc,KAAKrO,WACrB,CACA,eAAIA,CAAYA,GACZ,GAAIjO,KAAKsc,KAAKrO,cAAgBA,EAC1B,OAEJ,MAAM,KAAEpJ,EAAI,eAAE+I,GAAmB5N,KAAKsc,KACtCtc,KAAKsc,KAAO3B,EAAS3a,KAAKsc,KAAM1O,EAAgB/I,GAChD7E,KAAKsc,KAAK/G,OAAO1Q,EAAM+I,EAC3B,CACA,SAAItE,GACA,OAAOtJ,KAAKsc,KAAKhT,KACrB,CACA,UAAIC,GACA,OAAOvJ,KAAKsc,KAAK/S,MACrB,CACA,gBAAIkP,GACA,OAAOzY,KAAKsc,KAAK7D,YACrB,CACA,iBAAIE,GACA,OAAO3Y,KAAKsc,KAAK3D,aACrB,CACA,gBAAID,GACA,OAAO1Y,KAAKsc,KAAK1D,aACrB,CACA,iBAAIA,GACA,OAAO5Y,KAAKsc,KAAK1D,aACrB,CACA,UAAI2D,GACA,OAAOvc,KAAKwc,OAChB,CACA,UAAID,CAAO9Z,GACPzC,KAAKwc,QAAU/Z,EACf,MAAMga,EAAS,CAACzc,KAAKsc,MAMrB,KAAOG,EAAOlb,OAAS,GAAG,CACtB,MAAMmY,EAAO+C,EAAOC,MAChBhD,aAAgBX,IAChBW,EAAK3K,SAAWtM,EAChBga,EAAO5Y,QAAQ6V,EAAK9d,UAE5B,CACJ,CACA,UAAIqT,GACA,OAAOjP,KAAKkP,OAChB,CACA,UAAID,CAAOxM,GACPzC,KAAKkP,QAAUzM,EACfzC,KAAKsc,KAAKrN,OAASxM,CACvB,CACAka,aAAAA,GACI,IAAIra,EACJ,OAAsC,QAA9BA,EAAKtC,KAAK4c,sBAAmC,IAAPta,OAAgB,EAASA,EAAGua,KAAKrQ,IACnF,CACAsQ,gBAAAA,GACI,YAA+Brc,IAAxBT,KAAK4c,cAChB,CACAG,YAAAA,CAAavQ,GACT,IAAIlK,EACJ,MAAMmZ,EAAWV,EAAgBvO,EAAKjI,UAC/BsM,EAAG6I,GAAQ1Z,KAAKgd,QAAQvB,GAC/B,KAAM/B,aAAgBlB,GAClB,OAEJ,IAAoC,QAA9BlW,EAAKtC,KAAK4c,sBAAmC,IAAPta,OAAgB,EAASA,EAAGua,QAAUnD,EAC9E,OAEA1Z,KAAK8c,oBACL9c,KAAKid,oBAET,MAAMC,EAAmB,IACzB,SAASC,EAAgBC,EAAQC,GAC7B,IAAK,IAAIpS,EAAI,EAAGA,EAAImS,EAAOxhB,SAAS2F,OAAQ0J,IAAK,CAC7C,MAAMrJ,EAAQwb,EAAOxhB,SAASqP,GAC1BrJ,aAAiB4W,EACb5W,IAAUyb,IACND,EAAOvD,eAAe5O,GACtBmS,EAAOtD,gBAAgB7O,GAAG,GAG1BiS,EAAiBrZ,KAAKjC,IAK9Bub,EAAgBvb,EAAOyb,EAE/B,CACJ,CACAF,CAAgBnd,KAAKsc,KAAM5C,GAC3B1Z,KAAK4c,eAAiB,CAAEC,KAAMnD,EAAMwD,oBACpCld,KAAKsd,0BAA0BpZ,MACnC,CACA+Y,iBAAAA,GACI,IAAKjd,KAAK4c,eACN,OAEJ,MAAMM,EAAmBld,KAAK4c,eAAeM,kBAC7C,SAASK,EAAwBH,GAC7B,IAAK,IAAItZ,EAAQsZ,EAAOxhB,SAAS2F,OAAS,EAAGuC,GAAS,EAAGA,IAAS,CAC9D,MAAMlC,EAAQwb,EAAOxhB,SAASkI,GAC1BlC,aAAiB4W,EACZ0E,EAAiBM,SAAS5b,IAC3Bwb,EAAOtD,gBAAgBhW,GAAO,GAIlCyZ,EAAwB3b,EAEhC,CACJ,CACA2b,CAAwBvd,KAAKsc,MAC7Btc,KAAK4c,oBAAiBnc,EACtBT,KAAKsd,0BAA0BpZ,MACnC,CACAuZ,SAAAA,GACQzd,KAAK8c,oBAKL9c,KAAKid,oBAGT,MAAO,CACHX,KAFSN,GAAoBhc,KAAK0d,UAAW1d,KAAKiO,aAGlD3E,MAAOtJ,KAAKsJ,MACZC,OAAQvJ,KAAKuJ,OACb0E,YAAajO,KAAKiO,YAE1B,CACApM,OAAAA,GACI7B,KAAKmG,WAAWtE,UAChB7B,KAAK6X,aAAahW,UAClB7B,KAAKsd,0BAA0Bzb,UAC/B7B,KAAK2d,2BAA2B9b,UAChC7B,KAAKsc,KAAKza,UACV7B,KAAK4c,oBAAiBnc,EACtBT,KAAKuE,QAAQ4C,QACjB,CACA9D,KAAAA,GACI,MAAM4K,EAAcjO,KAAKsc,KAAKrO,YAC9BjO,KAAKsc,KAAO,IAAIvD,EAAW9K,EAAajO,KAAK2R,mBAAoB3R,KAAKiS,OAAQjS,KAAKsc,KAAKzX,KAAM7E,KAAKsc,KAAK1O,eAAgB5N,KAAKuc,OAAQvc,KAAKiP,OAC9I,CACA2O,WAAAA,CAAYC,EAAMC,GACd,MAAM7P,EAAc4P,EAAK5P,YACnB1E,EAAS0E,IAAgBf,EAAYqJ,SAAWsH,EAAKtU,OAASsU,EAAKvU,MACzEtJ,KAAK+d,aAAaF,EAAKvB,KAAMrO,EAAa6P,EAAcvU,EAC5D,CACAwU,YAAAA,CAAazB,EAAMrO,EAAa6P,EAAclQ,GAC1C5N,KAAKsc,KAAOtc,KAAKge,iBAAiB1B,EAAMrO,EAAa6P,EAAclQ,EACvE,CACAoQ,gBAAAA,CAAiBtE,EAAMzL,EAAa6P,EAAclQ,GAC9C,IAAItL,EACJ,IAAI2J,EACJ,GAAkB,WAAdyN,EAAKpa,KAAmB,CACxB,MACM1D,EADqB8d,EAAKhZ,KACIhE,KAAKuhB,IAC9B,CACHvE,KAAM1Z,KAAKge,iBAAiBC,EAAiBrD,GAAW3M,GAAc6P,EAAcpE,EAAK7U,MACzFyH,QAAS2R,EAAgB3R,YAGjCL,EAAS,IAAI8M,EAAW9K,EAAajO,KAAK2R,mBAAoB3R,KAAKiS,OAAQyH,EAAK7U,KAChF+I,EACA5N,KAAKuc,OAAQvc,KAAKiP,OAAQrT,EAC9B,KACK,CACD,MAAM4Q,EAAOsR,EAAaI,SAASxE,GACP,kBAAjBA,EAAKpN,UACe,QAA1BhK,EAAKkK,EAAKQ,kBAA+B,IAAP1K,GAAyBA,EAAGwF,KAAK0E,EAAMkN,EAAKpN,UAEnFL,EAAS,IAAIuM,EAAShM,EAAMyB,EAAaL,EAAgB8L,EAAK7U,KAClE,CACA,OAAOoH,CACX,CACA,QAAIqQ,GACA,OAAOtc,KAAKqc,KAChB,CACA,QAAIC,CAAKA,GACL,MAAM6B,EAAUne,KAAKqc,MACjB8B,IACAA,EAAQtc,UACR7B,KAAK4c,oBAAiBnc,EACtBT,KAAKuE,QAAQsP,YAAYsK,EAAQ5Z,UAErCvE,KAAKqc,MAAQC,EACbtc,KAAKuE,QAAQyN,YAAYhS,KAAKqc,MAAM9X,SACpCvE,KAAKmG,WAAW1D,MAAQzC,KAAKqc,MAAM7I,aAAarP,IAC5CnE,KAAK6X,aAAa3T,KAAKC,EAAE,GAEjC,CAKAia,+BAAAA,GACI,IAAKpe,KAAKqc,MACN,OAEJ,MAAM8B,EAAUne,KAAKsc,KAGrB,GAFA6B,EAAQ5Z,QAAQ4C,SAChBnH,KAAKqc,MAAQ,IAAItD,EAAW6B,GAAWuD,EAAQlQ,aAAcjO,KAAK2R,mBAAoB3R,KAAKiS,OAAQjS,KAAKsc,KAAK1O,eAAgB5N,KAAKsc,KAAKzX,KAAM7E,KAAKuc,OAAQvc,KAAKiP,QAC/H,IAA5BkP,EAAQviB,SAAS2F,aAGhB,GAAgC,IAA5B4c,EAAQviB,SAAS2F,OAAc,CAEpC,MAAM8c,EAAiBF,EAAQviB,SAAS,GAC1BuiB,EAAQtK,YAAY,GAC5BhS,UACNsc,EAAQtc,UACR7B,KAAKqc,MAAM/B,SAOXK,EAAS0D,EAAgBA,EAAezQ,eAAgByQ,EAAexZ,MAAOwI,EAAOC,WAAY,EACrG,MAEItN,KAAKqc,MAAM/B,SAAS6D,EAAS9Q,EAAOC,WAAY,GAEpDtN,KAAKuE,QAAQyN,YAAYhS,KAAKqc,MAAM9X,SACpCvE,KAAKmG,WAAW1D,MAAQzC,KAAKqc,MAAM7I,aAAarP,IAC5CnE,KAAK6X,aAAa3T,KAAKC,EAAE,GAEjC,CACA0H,IAAAA,CAAK4P,GACD,OAAOzb,KAAKse,gBAAgB7C,EAChC,CACAjF,QAAAA,CAASiF,GACL,OAAOzb,KAAKse,gBAAgB7C,GAAU,EAC1C,CACAiC,OAAAA,CAAQjC,GACJ,MAAM/B,EAAO+B,EAAWzb,KAAKgd,QAAQvB,GAAU,GAAKzb,KAAKsc,KACzD,OAAOtc,KAAKue,UAAU7E,EAAM1Z,KAAKiO,YACrC,CACAsQ,SAAAA,CAAU7E,EAAMzL,EAAa7B,GACzB,MAAM6P,EAAM,CAAE1S,OAAQmQ,EAAKnQ,OAAQD,MAAOoQ,EAAKpQ,OAC/C,GAAIoQ,aAAgBlB,EAChB,MAAO,CAAEyD,MAAKzP,KAAMkN,EAAKlN,KAAMJ,qBAEnC,MAAMxQ,EAAW,GACjB,IAAK,IAAIqP,EAAI,EAAGA,EAAIyO,EAAK9d,SAAS2F,OAAQ0J,IAAK,CAC3C,MAAMrJ,EAAQ8X,EAAK9d,SAASqP,GACtBuT,EAAwB9E,EAAKa,0BAA0BtP,GAC7DrP,EAASiI,KAAK7D,KAAKue,UAAU3c,EAAOgZ,GAAW3M,GAAcuQ,GACjE,CACA,MAAO,CAAEvC,MAAKrgB,WAClB,CACA0iB,eAAAA,CAAgB7C,EAAU7E,QAAO,IAAPA,IAAAA,GAAU,GAChC,MAAO6H,EAAM/E,GAAQ1Z,KAAKgd,QAAQvB,GAClC,KAAM/B,aAAgBlB,GAClB,MAAM,IAAIjW,MAAM,oBAEpB,IAAK,IAAI0I,EAAIwT,EAAKld,OAAS,EAAG0J,GAAK,EAAGA,IAAK,CACvC,MAAMyT,EAAID,EAAKxT,GACT0T,EAAIlD,EAASxQ,IAAM,EAIzB,GAHkC2L,EAC5B+H,EAAI,GAAK,EACTA,EAAI,EAAID,EAAE9iB,SAAS2F,OAErB,OAAOiZ,EAASkE,EAAE9iB,SAASgb,EAAU+H,EAAI,EAAIA,EAAI,GAAI/H,EAE7D,CACA,OAAO4D,EAASxa,KAAKsc,KAAM1F,EAC/B,CACAjX,WAAAA,CAAYgS,EAAoBM,EAAQhE,EAAasO,EAAQtN,GACzDjP,KAAK2R,mBAAqBA,EAC1B3R,KAAKiS,OAASA,EACdjS,KAAKwc,SAAU,EACfxc,KAAKkP,QAAU,EACflP,KAAK4c,oBAAiBnc,EACtBT,KAAKmG,WAAa,IAAIF,EACtBjG,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAK2d,2BAA6B,IAAI3a,EACtChD,KAAK4e,0BAA4B5e,KAAK2d,2BAA2Bja,MACjE1D,KAAKsd,0BAA4B,IAAIta,EACrChD,KAAK6e,yBAA2B7e,KAAKsd,0BAA0B5Z,MAC/D1D,KAAKuE,QAAUwD,SAAS2L,cAAc,OACtC1T,KAAKuE,QAAQhJ,UAAY,YACzByE,KAAKwc,QAAUD,SAAuCA,EACtDvc,KAAKkP,QAAUD,QAAuCA,EAAS,EAC/DjP,KAAKsc,KAAO,IAAIvD,EAAW9K,EAAa0D,EAAoBM,EAAQ,EAAG,EAAGjS,KAAKuc,OAAQvc,KAAKiP,OAChG,CACA0D,aAAAA,CAAc8I,GACV,MAAOK,EAAMhY,GAAS8G,EAAK6Q,IACpB,CAAE2B,GAAUpd,KAAKgd,QAAQlB,GAChC,KAAMsB,aAAkBrE,GACpB,MAAM,IAAIxW,MAAM,yBAEpB,OAAO6a,EAAOvD,eAAe/V,EACjC,CACA8O,cAAAA,CAAe6I,EAAUnP,GACjBtM,KAAK8c,oBACL9c,KAAKid,oBAET,MAAOnB,EAAMhY,GAAS8G,EAAK6Q,IACpB,CAAE2B,GAAUpd,KAAKgd,QAAQlB,GAChC,KAAMsB,aAAkBrE,GACpB,MAAM,IAAIxW,MAAM,yBAEpBvC,KAAK2d,2BAA2BzZ,OAChCkZ,EAAOtD,gBAAgBhW,EAAOwI,EAClC,CACAgJ,QAAAA,CAASwJ,EAAgBxZ,EAAM0G,GACvBhM,KAAK8c,oBACL9c,KAAKid,oBAET,MAAO,CAAEG,GAAUpd,KAAKgd,QAAQ8B,GAChC,KAAM1B,aAAkBrE,GACpB,MAAM,IAAIxW,MAAM,oBAEpB6a,EAAOnD,UAAU3U,EAAM0G,EAC3B,CACAsG,OAAAA,CAAQ9F,EAAM3H,EAAM4W,GACZzb,KAAK8c,oBACL9c,KAAKid,oBAET,MAAOnB,EAAMhY,GAAS8G,EAAK6Q,IACpBsD,EAAc3B,GAAUpd,KAAKgd,QAAQlB,GAC5C,GAAIsB,aAAkBrE,EAAY,CAC9B,MAAMW,EAAO,IAAIlB,EAAShM,EAAMoO,GAAWwC,EAAOnP,aAAcmP,EAAOxP,gBACvEwP,EAAO9C,SAASZ,EAAM7U,EAAMf,EAChC,KACK,CACD,MAAOkb,KAAgBnO,GAAK,IAAIkO,GAAcnI,WACvCqI,KAAgBC,GAAM,IAAIpD,GAAMlF,UACvC,IAAIuI,EAAiB,EACrB,MAAMC,EAA8BJ,EAAYzE,0BAA0B0E,GAC/B,iBAAhCG,IACPD,EAAiB9R,EAAOG,UAAU4R,IAExBJ,EAAYnL,YAAYoL,GAChCpd,UACN,MAAMwd,EAAY,IAAItG,EAAWqE,EAAOnP,YAAajO,KAAK2R,mBAAoB3R,KAAKiS,OAAQmL,EAAOvY,KAAMuY,EAAOxP,eAAgB5N,KAAKuc,OAAQvc,KAAKiP,QACjJ+P,EAAY1E,SAAS+E,EAAWjC,EAAOvY,KAAMoa,GAC7C,MAAMK,EAAa,IAAI9G,EAAS4E,EAAO5Q,KAAMwS,EAAY/Q,YAAamP,EAAOvY,MAC7Ewa,EAAU/E,SAASgF,EAAYH,EAAgB,GAC3B,iBAATta,GAAmC,UAAdA,EAAKvF,OACjCuF,EAAO,CAAEvF,KAAM,QAASwE,MAAO,IAEnC,MAAM4V,EAAO,IAAIlB,EAAShM,EAAMwS,EAAY/Q,YAAamP,EAAOvY,MAChEwa,EAAU/E,SAASZ,EAAM7U,EAAMf,EACnC,CACJ,CACAqD,MAAAA,CAAOqF,EAAM6F,GACT,MAAMoJ,EAAWV,EAAgBvO,EAAKjI,SACtC,OAAOvE,KAAKoV,WAAWqG,EAAUpJ,EACrC,CACA+C,UAAAA,CAAWqG,EAAUpJ,GACbrS,KAAK8c,oBACL9c,KAAKid,oBAET,MAAOnB,EAAMhY,GAAS8G,EAAK6Q,IACpBsD,EAAc3B,GAAUpd,KAAKgd,QAAQlB,GAC5C,KAAMsB,aAAkBrE,GACpB,MAAM,IAAIxW,MAAM,oBAEpB,MAAMgd,EAAenC,EAAOxhB,SAASkI,GACrC,KAAMyb,aAAwB/G,GAC1B,MAAM,IAAIjW,MAAM,oBAIpB,GAFA6a,EAAOvJ,YAAY/P,EAAOuO,GAC1BkN,EAAa1d,UACkB,IAA3Bub,EAAOxhB,SAAS2F,OAChB,OAAOge,EAAa/S,KAOxB,MAAMgT,EAAUpC,EAAOxhB,SAAS,GAChC,GAA4B,IAAxBmjB,EAAaxd,OAEb,OAAIie,aAAmBhH,IAOvB4E,EAAOvJ,YAAY,EAAGxB,GAEtBrS,KAAKsc,KAAOkD,GAPDD,EAAa/S,KAW5B,MAAOwS,KAAgBnO,GAAK,IAAIkO,GAAcnI,WACvCqI,KAAgBC,GAAM,IAAIpD,GAAMlF,UACjC6I,EAAmBrC,EAAOvD,eAAe,GAE/CuD,EAAOvJ,YAAY,EAAGxB,GAEtB,MAAMxC,EAAQmP,EAAYpjB,SAASc,KAAI,CAACyP,EAAOlB,IAAM+T,EAAY5E,aAAanP,KAI9E,GADA+T,EAAYnL,YAAYoL,EAAa5M,GAAQxQ,UACzC2d,aAAmBzG,EAAY,CAE/BlJ,EAAM7L,OAAOib,EAAa,KAAMO,EAAQ5jB,SAASc,KAAKsc,GAAMA,EAAEnU,QAE9D,IAAK,IAAIoG,EAAI,EAAGA,EAAIuU,EAAQ5jB,SAAS2F,OAAQ0J,IAAK,CAC9C,MAAMrJ,EAAQ4d,EAAQ5jB,SAASqP,GAC/B+T,EAAY1E,SAAS1Y,EAAOA,EAAMiD,KAAMoa,EAAchU,EAC1D,CAMA,KAAOuU,EAAQ5jB,SAAS2F,OAAS,GAC7Bie,EAAQ3L,YAAY,EAE5B,KACK,CAED,MAAMyL,EAAa,IAAI9G,EAASgH,EAAQhT,KAAMoO,GAAW4E,EAAQvR,aAAcuR,EAAQ3a,MACjF6a,EAAgBD,EAChBD,EAAQ5R,eACRP,EAAOG,UAAUgS,EAAQ5R,gBAC/BoR,EAAY1E,SAASgF,EAAYI,EAAeT,EACpD,CAEAO,EAAQ3d,UAER,IAAK,IAAIoJ,EAAI,EAAGA,EAAI4E,EAAMtO,OAAQ0J,IAC9B+T,EAAY3E,YAAYpP,EAAG4E,EAAM5E,IAErC,OAAOsU,EAAa/S,IACxB,CACA+I,MAAAA,CAAOjM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkB5N,KAAKsc,KAAKrO,cAAgBf,EAAYkB,WAC/D,CAAC7E,EAAQD,GACT,CAACA,EAAOC,GACdvJ,KAAKsc,KAAK/G,OAAO1Q,EAAM+I,EAC3B,CACAoP,OAAAA,CAAQvB,EAAU/B,EAAkB+E,GAChC,QADkB,IAAJ/E,IAAAA,EAAO1Z,KAAKsc,WAAU,IAAJmC,IAAAA,EAAO,IACf,IAApBhD,EAASla,OACT,MAAO,CAACkd,EAAM/E,GAElB,KAAMA,aAAgBX,GAClB,MAAM,IAAIxW,MAAM,oBAEpB,MAAOuB,KAAUgY,GAAQL,EACzB,GAAI3X,EAAQ,GAAKA,GAAS4V,EAAK9d,SAAS2F,OACpC,MAAM,IAAIgB,MAAM,oBAEpB,MAAMX,EAAQ8X,EAAK9d,SAASkI,GAE5B,OADA2a,EAAK5a,KAAK6V,GACH1Z,KAAKgd,QAAQlB,EAAMla,EAAO6c,EACrC,EC1kBG,MAAMkB,WAAkBna,EAC3B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACA,mBAAIC,GACA,OAAO7f,KAAK8f,gBAChB,CACA,mBAAID,CAAgBpd,GAChBzC,KAAK8f,iBAAmBrd,CAC5B,CACA9C,WAAAA,CAAYqb,EAAe6E,QAAe,IAAfA,IAAAA,GAAkB,GACzC9f,QACAC,KAAK8f,iBAAmBD,EACxB7f,KAAK4f,SAAW5E,EAChBhb,KAAK6F,eAAeO,EAAmBpG,KAAK4f,UAAWG,IACnD,GAAI/f,KAAKyF,WAKL,OAEJ,GAAIzF,KAAK6f,gBACL,OAEJ,IAAK7f,KAAK4f,SAASI,aAaf,OAEJ,IT2HL,SAAsBzb,GACzB,IAAI0b,EAAiB1b,EACrB,KAAO0b,aAAuD,EAASA,EAAetY,YAAY,CAC9F,GAAIsY,EAAetY,aAAeI,SAC9B,OAAO,EAIPkY,EAFKA,EAAetY,sBAAsBuY,iBAEzBD,EAAetY,WAAWwY,KAG1BF,EAAetY,UAExC,CACA,OAAO,CACX,CS1IiByY,CAAapgB,KAAK4f,UAMnB,OAEJ,MAAM,MAAEtW,EAAK,OAAEC,GAAWwW,EAAMM,YAChCrgB,KAAKuV,OAAOjM,EAAOC,EAAO,IAElC,EC9CJ,MAAM+W,GAAe1U,IACd,SAAS2U,GAAS7E,GACrB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SAEX,QACI,MAAO,SAEnB,CACO,MAAM8E,WAAiBb,GAC1B,MAAIlkB,GACA,OAAOuE,KAAKygB,GAChB,CACA,QAAI5b,GACA,OAAO7E,KAAK0gB,QAAQ7b,IACxB,CACA,UAAI8b,GACA,OAAOnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UAAUlkB,KAAKmU,GAAMA,EAAEpO,OAC1D,CACA,SAAI6G,GACA,OAAOtJ,KAAK6gB,SAASvX,KACzB,CACA,UAAIC,GACA,OAAOvJ,KAAK6gB,SAAStX,MACzB,CACA,iBAAIoP,GACA,OAAO3Y,KAAK6gB,SAASlI,aACzB,CACA,iBAAIC,GACA,OAAO5Y,KAAK6gB,SAASjI,aACzB,CACA,gBAAIH,GACA,OAAOzY,KAAK6gB,SAASpI,YACzB,CACA,gBAAIC,GACA,OAAO1Y,KAAK6gB,SAASnI,YACzB,CACA,eAAIoI,GACA,OAAO9gB,KAAK+gB,YAChB,CACA,UAAIxE,GACA,OAAOvc,KAAK6gB,SAAStE,MACzB,CACA,UAAIA,CAAO9Z,GACPzC,KAAK6gB,SAAStE,OAAS9Z,CAC3B,CACA9C,WAAAA,CAAYqb,EAAezX,GACvB,IAAIjB,EACJvC,MAAMgI,SAAS2L,cAAc,OAAQnQ,EAAQyd,qBAC7ChhB,KAAKygB,IAAMH,GAAazU,OACxB7L,KAAK0gB,QAAU,IAAI9b,IACnB5E,KAAKihB,aAAe,IAAIje,EACxBhD,KAAKkhB,YAAclhB,KAAKihB,aAAavd,MACrC1D,KAAKmhB,UAAY,IAAIne,EACrBhD,KAAKohB,SAAWphB,KAAKmhB,UAAUzd,MAC/B1D,KAAKqhB,mBAAqB,IAAIre,EAC9BhD,KAAKshB,kBAAoBthB,KAAKqhB,mBAAmB3d,MACjD1D,KAAKuhB,yBAA2B,IAAIxc,EACpC/E,KAAKwhB,kBAAoBxhB,KAAKuhB,yBAAyBpc,QACvDnF,KAAKyhB,yCAA2C,IAAI1c,EACpD/E,KAAK0hB,wCAA0C1hB,KAAKyhB,yCAAyCtc,QAC7FnF,KAAKuE,QAAQyF,MAAMT,OAAS,OAC5BvJ,KAAKuE,QAAQyF,MAAMV,MAAQ,OAC3BtJ,KAAKqK,YAAc,IAAID,EAAWpK,KAAKuE,SACvCvE,KAAKqK,YAAYC,cAA2C,QAA5BhI,EAAKiB,EAAQhI,iBAA8B,IAAP+G,EAAgBA,EAAK,IACzF0Y,EAAchJ,YAAYhS,KAAKuE,SAC/BvE,KAAK6gB,SAAW,IAAIzE,KAAW7Y,EAAQoO,mBAAoBpO,EAAQ0O,OAAQ1O,EAAQ0K,YAAa1K,EAAQgZ,OAAQhZ,EAAQ0L,QACxHjP,KAAK6gB,SAAStE,SAAWhZ,EAAQgZ,OACjCvc,KAAKuE,QAAQyN,YAAYhS,KAAK6gB,SAAStc,SACvCvE,KAAKuV,OAAO,EAAG,GAAG,GAClBvV,KAAK6F,eAAe7F,KAAK6gB,SAASjC,2BAA0B,IAAM5e,KAAKyhB,yCAAyCvd,SAASlE,KAAK0hB,yCAAwC,KAClK1hB,KAAKuV,OAAOvV,KAAKsJ,MAAOtJ,KAAKuJ,QAAQ,EAAK,IAC1CpI,EAAWmE,MAAK,KAChB,IAAIhD,EACkC,QAArCA,EAAKtC,KAAKuE,QAAQyW,qBAAkC,IAAP1Y,GAAyBA,EAAGuR,YAAY7T,KAAKuE,QAAQ,IACnGvE,KAAK6gB,SAASrN,aAAY,KAC1BxT,KAAKuhB,yBAAyBrd,MAAM,IACpChD,EAAME,IAAIpB,KAAKohB,SAAUphB,KAAKkhB,YAAalhB,KAAKshB,kBAAhDpgB,EAAmE,KACnElB,KAAKuhB,yBAAyBrd,MAAM,IACpClE,KAAKuhB,yBACb,CACAvU,UAAAA,CAAW2U,EAAOrV,GACdtM,KAAK6gB,SAASjO,eAAemI,EAAgB4G,EAAMpd,SAAU+H,GAC7DtM,KAAKuhB,yBAAyBrd,MAClC,CACA0d,SAAAA,CAAUD,GACN,OAAO3hB,KAAK6gB,SAASlO,cAAcoI,EAAgB4G,EAAMpd,SAC7D,CACAsd,aAAAA,CAActe,GACV,IAAIjB,EAAIwf,EAAIC,EAAIC,EACLze,EAAQoO,mBAGfpO,EAAQ0K,cACRjO,KAAK6gB,SAAS5S,YAAc1K,EAAQ0K,aAKpC,oBAAqB1K,IACrBvD,KAAK6f,gBAAyD,QAAtCvd,EAAKiB,EAAQyd,2BAAwC,IAAP1e,GAAgBA,GAEtF,WAAYiB,IACZvD,KAAKuc,OAAmC,QAAzBuF,EAAKve,EAAQgZ,cAA2B,IAAPuF,GAAgBA,GAEhE,WAAYve,IACZvD,KAAK6gB,SAAS5R,OAAmC,QAAzB8S,EAAKxe,EAAQ0L,cAA2B,IAAP8S,EAAgBA,EAAK,GAE9E,cAAexe,GACfvD,KAAKqK,YAAYC,cAA2C,QAA5B0X,EAAKze,EAAQhI,iBAA8B,IAAPymB,EAAgBA,EAAK,GAEjG,CACAC,aAAAA,CAAcN,GACV3hB,KAAK6gB,SAAS9D,aAAa4E,GAC3B3hB,KAAKkiB,iBAAiBP,EAC1B,CACAQ,gBAAAA,CAAiBR,GACb,OAAO3hB,KAAK6gB,SAASlE,kBAAoBgF,CAC7C,CACAS,kBAAAA,GACIpiB,KAAK6gB,SAAS5D,mBAClB,CACAoF,iBAAAA,GACI,OAAOriB,KAAK6gB,SAAS/D,kBACzB,CACA,6BAAIwF,GACA,OAAOtiB,KAAK6gB,SAAShC,wBACzB,CACA0D,UAAAA,CAAWC,EAAO/G,EAAgB5W,QAAR,IAAR4W,IAAAA,EAAW,CAAC,IAC1Bzb,KAAK6gB,SAASvO,QAAQkQ,EAAO3d,QAAmCA,EAAOwI,EAAOC,WAAYmO,GAC1Fzb,KAAKmhB,UAAUjd,KAAKse,EACxB,CACAC,aAAAA,CAAcD,EAAOjf,GACjB,IAAKvD,KAAK0gB,QAAQgC,IAAIF,EAAM/mB,IACxB,MAAM,IAAI8G,MAAM,qBAEpB,MAAMgM,EAAOvO,KAAK0gB,QAAQvW,IAAIqY,EAAM/mB,IAC9B+Q,EAAOxM,KAAK6gB,SAAS1Z,OAAOqb,EAAOnV,EAAOC,YAOhD,GANIiB,KAAUhL,aAAyC,EAASA,EAAQ8U,eACpE9J,EAAKpI,WAAWtE,UAChB0M,EAAK9L,MAAMZ,UACX7B,KAAK0gB,QAAQrc,OAAOme,EAAM/mB,IAC1BuE,KAAKihB,aAAa/c,KAAKse,MAErBjf,aAAyC,EAASA,EAAQof,aAAe3iB,KAAK+gB,eAAiByB,EAAO,CACxG,MAAM7B,EAASnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UACvC5gB,KAAKkiB,iBAAiBvB,EAAOpf,OAAS,EAAIof,EAAO,GAAGle,WAAQhC,EAChE,CACA,OAAO+L,CACX,CACAoW,QAAAA,CAASnnB,GACL,IAAI6G,EACJ,OAAuC,QAA/BA,EAAKtC,KAAK0gB,QAAQvW,IAAI1O,UAAwB,IAAP6G,OAAgB,EAASA,EAAGG,KAC/E,CACAyf,gBAAAA,CAAiBM,GACTxiB,KAAK+gB,eAAiByB,IAGtBxiB,KAAK+gB,cACL/gB,KAAK+gB,aAAa8B,WAAU,GAE5BL,GACAA,EAAMK,WAAU,GAEpB7iB,KAAK+gB,aAAeyB,EACpBxiB,KAAKqhB,mBAAmBnd,KAAKse,GACjC,CACAM,WAAAA,CAAYN,GACRxiB,KAAKyiB,cAAcD,EACvB,CACAO,UAAAA,CAAWxf,GACP,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQif,MAAO,CAChB,IAAKxiB,KAAK8gB,YACN,OAEJvd,EAAQif,MAAQxiB,KAAK8gB,WACzB,CACA,MAAMrF,EAAWV,EAAgBxX,EAAQif,MAAMje,SACzCsH,EAA+C,QAAvCvJ,EAAKtC,KAAK6gB,SAAShV,KAAK4P,UAA8B,IAAPnZ,OAAgB,EAASA,EAAGkK,KACzFxM,KAAKkiB,iBAAiBrW,EAC1B,CACAmX,cAAAA,CAAezf,GACX,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQif,MAAO,CAChB,IAAKxiB,KAAK8gB,YACN,OAEJvd,EAAQif,MAAQxiB,KAAK8gB,WACzB,CACA,MAAMrF,EAAWV,EAAgBxX,EAAQif,MAAMje,SACzCsH,EAAmD,QAA3CvJ,EAAKtC,KAAK6gB,SAASrK,SAASiF,UAA8B,IAAPnZ,OAAgB,EAASA,EAAGkK,KAC7FxM,KAAKkiB,iBAAiBrW,EAC1B,CACA0J,MAAAA,CAAOjM,EAAOC,EAAQ0Z,IACAA,GAAe3Z,IAAUtJ,KAAKsJ,OAASC,IAAWvJ,KAAKuJ,UAIzEvJ,KAAK6gB,SAAStc,QAAQyF,MAAMT,OAAU,GAAEA,MACxCvJ,KAAK6gB,SAAStc,QAAQyF,MAAMV,MAAS,GAAEA,MACvCtJ,KAAK6gB,SAAStL,OAAOjM,EAAOC,GAChC,CACA1H,OAAAA,GACI7B,KAAKqhB,mBAAmBxf,UACxB7B,KAAKmhB,UAAUtf,UACf7B,KAAKihB,aAAapf,UAClB,IAAK,MAAM2gB,KAASxiB,KAAK2gB,OACrB6B,EAAM3gB,UAEV7B,KAAK6gB,SAAShf,UACd9B,MAAM8B,SACV,ECvOG,MAAMqhB,GAIT,eAAI3W,GACA,OAAOvM,KAAK1D,UAAUiQ,WAC1B,CAIA,eAAIG,GACA,OAAO1M,KAAK1D,UAAUoQ,WAC1B,CAIA,SAAIpD,GACA,OAAOtJ,KAAK1D,UAAUgN,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAK1D,UAAUiN,MAC1B,CAIA,UAAIhI,GACA,OAAOvB,KAAK1D,UAAUiF,MAC1B,CAIA,eAAI0M,GACA,OAAOjO,KAAK1D,UAAU2R,WAC1B,CAIA,UAAIkV,GACA,OAAOnjB,KAAK1D,UAAU6mB,MAC1B,CAIA,uBAAIC,GACA,OAAOpjB,KAAK1D,UAAU8mB,mBAC1B,CAKA,qBAAI5B,GACA,OAAOxhB,KAAK1D,UAAUklB,iBAC1B,CAIA,gBAAIhS,GACA,OAAOxP,KAAK1D,UAAUkT,YAC1B,CAIA,mBAAIE,GACA,OAAO1P,KAAK1D,UAAUoT,eAC1B,CACA/P,WAAAA,CAAYrD,GACR0D,KAAK1D,UAAYA,CACrB,CAKA+mB,WAAAA,CAAY1B,EAAOtP,GACfrS,KAAK1D,UAAU+mB,YAAY1B,EAAOtP,EACtC,CAIAiR,KAAAA,GACItjB,KAAK1D,UAAUgnB,OACnB,CAIAV,QAAAA,CAASnnB,GACL,OAAOuE,KAAK1D,UAAUsmB,SAASnnB,EACnC,CAIA8Z,MAAAA,CAAOjM,EAAOC,GACV,OAAOvJ,KAAK1D,UAAUiZ,OAAOjM,EAAOC,EACxC,CAIAga,QAAAA,CAAShgB,GACL,OAAOvD,KAAK1D,UAAUinB,SAAShgB,EACnC,CAIAigB,SAAAA,CAAUle,EAAM0G,GACZhM,KAAK1D,UAAUknB,UAAUle,EAAM0G,EACnC,CAIAkS,QAAAA,CAASxd,GACLV,KAAK1D,UAAU4hB,SAASxd,EAC5B,CAEAyb,MAAAA,GACI,OAAOnc,KAAK1D,UAAU6f,QAC1B,CAIA9Y,KAAAA,GACIrD,KAAK1D,UAAU+G,OACnB,CAIAwe,aAAAA,CAActe,GACVvD,KAAK1D,UAAUulB,cAActe,EACjC,CAIA1B,OAAAA,GACI7B,KAAK1D,UAAUuF,SACnB,EAEG,MAAM4hB,GAIT,eAAIlX,GACA,OAAOvM,KAAK1D,UAAUiQ,WAC1B,CAIA,eAAIG,GACA,OAAO1M,KAAK1D,UAAUoQ,WAC1B,CAIA,SAAIpD,GACA,OAAOtJ,KAAK1D,UAAUgN,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAK1D,UAAUiN,MAC1B,CAIA,UAAI4Z,GACA,OAAOnjB,KAAK1D,UAAU6mB,MAC1B,CAIA,qBAAI3B,GACA,OAAOxhB,KAAK1D,UAAUklB,iBAC1B,CAIA,uBAAI4B,GACA,OAAOpjB,KAAK1D,UAAU8mB,mBAC1B,CAIA,gBAAI5T,GACA,OAAOxP,KAAK1D,UAAUkT,YAC1B,CAIA,mBAAIE,GACA,OAAO1P,KAAK1D,UAAUoT,eAC1B,CAIA,aAAIgU,GACA,MAAMC,EAAU,IAAI3gB,EACdmD,EAAanG,KAAK1D,UAAUonB,WAAWvf,IACzCwf,EAAQzf,KAAK0f,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG1f,GAAI,CAAE2f,IAAK9jB,OAAQ,IAMpE,OAJA2jB,EAAQ9hB,QAAU,KACdsE,EAAWtE,UACX8hB,EAAQ9hB,SAAS,EAEd8hB,EAAQjgB,KACnB,CACA/D,WAAAA,CAAYrD,GACR0D,KAAK1D,UAAYA,CACrB,CAIA+mB,WAAAA,CAAY1B,GACR3hB,KAAK1D,UAAU+mB,YAAY1B,EAC/B,CAIAiB,QAAAA,CAASnnB,GACL,OAAOuE,KAAK1D,UAAUsmB,SAASnnB,EACnC,CAIA+nB,SAAAA,CAAUle,EAAM0G,GACZhM,KAAK1D,UAAUknB,UAAUle,EAAM0G,EACnC,CAIAsX,KAAAA,GACItjB,KAAK1D,UAAUgnB,OACnB,CAIA/N,MAAAA,CAAOjM,EAAOC,GACVvJ,KAAK1D,UAAUiZ,OAAOjM,EAAOC,EACjC,CAIAga,QAAAA,CAAShgB,GACL,OAAOvD,KAAK1D,UAAUinB,SAAShgB,EACnC,CAIA2a,QAAAA,CAASxd,GACLV,KAAK1D,UAAU4hB,SAASxd,EAC5B,CAIAyb,MAAAA,GACI,OAAOnc,KAAK1D,UAAU6f,QAC1B,CAIA9Y,KAAAA,GACIrD,KAAK1D,UAAU+G,OACnB,CAIAwe,aAAAA,CAActe,GACVvD,KAAK1D,UAAUulB,cAActe,EACjC,CAIA1B,OAAAA,GACI7B,KAAK1D,UAAUuF,SACnB,EAEG,MAAMkiB,GAIT,SAAIza,GACA,OAAOtJ,KAAK1D,UAAUgN,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAK1D,UAAUiN,MAC1B,CAIA,iBAAIoP,GACA,OAAO3Y,KAAK1D,UAAUqc,aAC1B,CAIA,iBAAIC,GACA,OAAO5Y,KAAK1D,UAAUsc,aAC1B,CAIA,gBAAIH,GACA,OAAOzY,KAAK1D,UAAUmc,YAC1B,CAIA,gBAAIC,GACA,OAAO1Y,KAAK1D,UAAUoc,YAC1B,CAIA,qBAAI8I,GACA,OAAOxhB,KAAK1D,UAAUklB,iBAC1B,CAIA,iBAAIwC,GACA,OAAOhkB,KAAK1D,UAAU2nB,aAC1B,CAIA,oBAAIC,GACA,OAAOlkB,KAAK1D,UAAU6nB,gBAC1B,CAIA,0BAAIC,GACA,OAAOpkB,KAAK1D,UAAU+nB,sBAC1B,CAIA,uBAAIjB,GACA,OAAOpjB,KAAK1D,UAAU8mB,mBAC1B,CAIA,UAAID,GACA,OAAOnjB,KAAK1D,UAAUqkB,MAC1B,CAIA,eAAI1S,GACA,OAAOjO,KAAK1D,UAAU2R,WAC1B,CACA,eAAIA,CAAYxL,GACZzC,KAAK1D,UAAUulB,cAAc,CAAE5T,YAAaxL,GAChD,CACA9C,WAAAA,CAAYrD,GACR0D,KAAK1D,UAAYA,CACrB,CAIAgnB,KAAAA,GACItjB,KAAK1D,UAAUgnB,OACnB,CAIA/N,MAAAA,CAAOjM,EAAOC,EAAQ+a,QAAK,IAALA,IAAAA,GAAQ,GAC1BtkB,KAAK1D,UAAUiZ,OAAOjM,EAAOC,EAAQ+a,EACzC,CAIAf,QAAAA,CAAShgB,GACL,OAAOvD,KAAK1D,UAAUinB,SAAShgB,EACnC,CAIA8f,WAAAA,CAAY1B,EAAOtP,GACfrS,KAAK1D,UAAU+mB,YAAY1B,EAAOtP,EACtC,CAIAmR,SAAAA,CAAU7B,EAAOpe,GACbvD,KAAK1D,UAAUknB,UAAU7B,EAAOpe,EACpC,CAIAqf,QAAAA,CAASnnB,GACL,OAAOuE,KAAK1D,UAAUsmB,SAASnnB,EACnC,CAIAyiB,QAAAA,CAASxd,GACL,OAAOV,KAAK1D,UAAU4hB,SAASxd,EACnC,CAIAyb,MAAAA,GACI,OAAOnc,KAAK1D,UAAU6f,QAC1B,CAIA9Y,KAAAA,GACIrD,KAAK1D,UAAU+G,OACnB,CACAwe,aAAAA,CAActe,GACVvD,KAAK1D,UAAUulB,cAActe,EACjC,CAIA1B,OAAAA,GACI7B,KAAK1D,UAAUuF,SACnB,EAEG,MAAM0iB,GAIT,MAAI9oB,GACA,OAAOuE,KAAK1D,UAAUb,EAC1B,CAIA,SAAI6N,GACA,OAAOtJ,KAAK1D,UAAUgN,KAC1B,CAIA,UAAIC,GACA,OAAOvJ,KAAK1D,UAAUiN,MAC1B,CAIA,iBAAIoP,GACA,OAAO3Y,KAAK1D,UAAUqc,aAC1B,CAIA,iBAAIC,GACA,OAAO5Y,KAAK1D,UAAUsc,aAC1B,CAIA,gBAAIH,GACA,OAAOzY,KAAK1D,UAAUmc,YAC1B,CAIA,gBAAIC,GACA,OAAO1Y,KAAK1D,UAAUoc,YAC1B,CAIA,QAAI7T,GACA,OAAO7E,KAAK1D,UAAUuI,IAC1B,CAIA,eAAI2f,GACA,OAAOxkB,KAAK1D,UAAUkoB,WAC1B,CACA,OAAIC,GACA,OAAOzkB,KAAK1D,UAAUmoB,GAC1B,CAIA,0BAAIJ,GACA,OAAOrkB,KAAK1D,UAAU+nB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOjkB,KAAK1D,UAAU2nB,aAC1B,CAIA,oBAAIE,GACA,OAAOnkB,KAAK1D,UAAU6nB,gBAC1B,CAIA,0BAAIC,GACA,OAAOpkB,KAAK1D,UAAU8nB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOhkB,KAAK1D,UAAU0nB,aAC1B,CAIA,oBAAIE,GACA,OAAOlkB,KAAK1D,UAAU4nB,gBAC1B,CACA,kBAAIQ,GACA,OAAO1kB,KAAK1D,UAAUooB,cAC1B,CAIA,uBAAItB,GACA,OAAOpjB,KAAK1D,UAAU8mB,mBAC1B,CAIA,qBAAI5B,GACA,OAAOxhB,KAAK1D,UAAUklB,iBAC1B,CAIA,aAAIkC,GACA,OAAO1jB,KAAK1D,UAAUonB,SAC1B,CAOA,cAAIiB,GACA,OAAO3kB,KAAK1D,UAAUqoB,UAC1B,CAOA,qBAAIC,GACA,OAAO5kB,KAAK1D,UAAUsoB,iBAC1B,CAOA,mBAAIC,GACA,OAAO7kB,KAAK1D,UAAUuoB,eAC1B,CAMA,mBAAIC,GACA,OAAO9kB,KAAK1D,UAAUwoB,eAC1B,CACA,4BAAIC,GACA,OAAO/kB,KAAK1D,UAAUyoB,wBAC1B,CAIA,UAAI5B,GACA,OAAOnjB,KAAK1D,UAAU6mB,MAC1B,CAIA,UAAIxC,GACA,OAAO3gB,KAAK1D,UAAUqkB,MAC1B,CAIA,eAAIqE,GACA,OAAOhlB,KAAK1D,UAAU0oB,WAC1B,CAIA,eAAIlE,GACA,OAAO9gB,KAAK1D,UAAUwkB,WAC1B,CACAnhB,WAAAA,CAAYrD,GACR0D,KAAK1D,UAAYA,CACrB,CAIAgnB,KAAAA,GACItjB,KAAK1D,UAAUgnB,OACnB,CAIAV,QAAAA,CAASnnB,GACL,OAAOuE,KAAK1D,UAAU2oB,cAAcxpB,EACxC,CAIA8Z,MAAAA,CAAOjM,EAAOC,EAAQ+a,QAAK,IAALA,IAAAA,GAAQ,GAC1BtkB,KAAK1D,UAAUiZ,OAAOjM,EAAOC,EAAQ+a,EACzC,CAIAf,QAAAA,CAAShgB,GACL,OAAOvD,KAAK1D,UAAUinB,SAAShgB,EACnC,CAIA8f,WAAAA,CAAY1B,GACR3hB,KAAK1D,UAAU+mB,YAAY1B,EAC/B,CAIAuD,QAAAA,CAAS3hB,GACL,OAAOvD,KAAK1D,UAAU4oB,SAAS3hB,EACnC,CAIA4hB,cAAAA,GACI,OAAOnlB,KAAK1D,UAAU6oB,gBAC1B,CAIArC,WAAAA,CAAYN,GACRxiB,KAAK1D,UAAUwmB,YAAYN,EAC/B,CAIA4C,QAAAA,CAAS3pB,GACL,OAAOuE,KAAK1D,UAAUsmB,SAASnnB,EACnC,CAIA4pB,gBAAAA,CAAiB9W,EAAMhL,GACnB,OAAOvD,KAAK1D,UAAU+oB,iBAAiB9W,EAAMhL,EACjD,CAIA2a,QAAAA,CAASxd,GACLV,KAAK1D,UAAU4hB,SAASxd,EAC5B,CAIAyb,MAAAA,GACI,OAAOnc,KAAK1D,UAAU6f,QAC1B,CAIA9Y,KAAAA,GACIrD,KAAK1D,UAAU+G,OACnB,CAIA0f,UAAAA,CAAWxf,GACPvD,KAAK1D,UAAUymB,WAAWxf,EAC9B,CAIAyf,cAAAA,CAAezf,GACXvD,KAAK1D,UAAU0mB,eAAezf,EAClC,CACA0e,aAAAA,CAAcN,GACV3hB,KAAK1D,UAAU2lB,cAAcN,EAAMa,MACvC,CACAH,iBAAAA,GACI,OAAOriB,KAAK1D,UAAU+lB,mBAC1B,CACAD,kBAAAA,GACIpiB,KAAK1D,UAAU8lB,oBACnB,CACA,6BAAIE,GACA,OAAOtiB,KAAK1D,UAAUgmB,yBAC1B,CAIAgD,cAAAA,CAAe/W,EAAMhL,GACjB,OAAOvD,KAAK1D,UAAUgpB,eAAe/W,EAAMhL,EAC/C,CACAgiB,MAAAA,CAAOd,GACHzkB,KAAK1D,UAAUulB,cAAc,CAAE4C,OACnC,CACA5C,aAAAA,CAActe,GACVvD,KAAK1D,UAAUulB,cAActe,EACjC,CAIA1B,OAAAA,GACI7B,KAAK1D,UAAUuF,SACnB,ECltBG,MAAM2jB,WAAoBhgB,EAC7B7F,WAAAA,CAAYub,GACRnb,QACAC,KAAKkb,GAAKA,EACVlb,KAAKylB,eAAiB,IAAIxf,EAC1BjG,KAAK0lB,wBAA0B,IAAIzf,EACnCjG,KAAK2lB,aAAe,IAAI3iB,EACxBhD,KAAK4lB,YAAc5lB,KAAK2lB,aAAajiB,MACrC1D,KAAK6F,eAAe7F,KAAK2lB,aAAc3lB,KAAKylB,eAAgBzlB,KAAK0lB,yBACjE1lB,KAAK6lB,WACT,CACAC,WAAAA,CAAYniB,GACR,OAAO,CACX,CACAkiB,SAAAA,GACI7lB,KAAK6F,eAAe7F,KAAK2lB,aAAcjhB,EAAsB1E,KAAKkb,GAAI,aAAcxX,IAChF,GAAIA,EAAMxB,kBAAoBlC,KAAK8lB,YAAYpiB,GAE3C,YADAA,EAAMvB,iBAGV,MAAMyH,EAAUD,IAUhB,GATA3J,KAAK0lB,wBAAwBjjB,MAAQ,CACjCZ,QAASA,KACL+H,EAAQM,SAAS,GAGzBlK,KAAKkb,GAAGjU,UAAUhD,IAAI,cACtB2E,YAAW,IAAM5I,KAAKkb,GAAGjU,UAAUE,OAAO,eAAe,GACzDnH,KAAKylB,eAAehjB,MAAQzC,KAAKW,QAAQ+C,GACzC1D,KAAK2lB,aAAazhB,KAAKR,GACnBA,EAAMqiB,aAAc,CACpBriB,EAAMqiB,aAAaC,cAAgB,OACnBtiB,EAAMqiB,aAAa1pB,MAAMkF,OAAS,GAW9CmC,EAAMqiB,aAAanlB,QAAQ,aAAc,mCAEjD,KACA8D,EAAsB1E,KAAKkb,GAAI,WAAW,KAC1Clb,KAAK0lB,wBAAwB7jB,UAC7B7B,KAAKylB,eAAe5jB,SAAS,IAErC,ECnDG,MAAMokB,WAA4BzgB,EACrC7F,WAAAA,CAAY4E,EAAS2hB,GACjBnmB,QACAC,KAAKuE,QAAUA,EACfvE,KAAKkmB,UAAYA,EACjBlmB,KAAKmmB,OAAS,KACdnmB,KAAKomB,mBACT,CACAC,WAAAA,CAAYliB,GACRnE,KAAKmmB,OAAShiB,EAAEgiB,OAChBnmB,KAAKkmB,UAAUG,YAAYliB,EAC/B,CACAmiB,UAAAA,CAAWniB,GACPA,EAAEhC,iBACEnC,KAAKkmB,UAAUI,YACftmB,KAAKkmB,UAAUI,WAAWniB,EAElC,CACAoiB,WAAAA,CAAYpiB,GACJnE,KAAKmmB,SAAWhiB,EAAEgiB,SAClBnmB,KAAKmmB,OAAS,KACdnmB,KAAKkmB,UAAUK,YAAYpiB,GAEnC,CACAqiB,SAAAA,CAAUriB,GACNnE,KAAKmmB,OAAS,KACdnmB,KAAKkmB,UAAUM,UAAUriB,EAC7B,CACAsiB,MAAAA,CAAOtiB,GACHnE,KAAKkmB,UAAUO,OAAOtiB,EAC1B,CACAiiB,iBAAAA,GACIpmB,KAAK6F,eAAenB,EAAsB1E,KAAKuE,QAAS,aAAcJ,IAClEnE,KAAKqmB,YAAYliB,EAAE,IACpB,IACHnE,KAAK6F,eAAenB,EAAsB1E,KAAKuE,QAAS,YAAaJ,IACjEnE,KAAKsmB,WAAWniB,EAAE,IACnB,IACHnE,KAAK6F,eAAenB,EAAsB1E,KAAKuE,QAAS,aAAcJ,IAClEnE,KAAKumB,YAAYpiB,EAAE,KAEvBnE,KAAK6F,eAAenB,EAAsB1E,KAAKuE,QAAS,WAAYJ,IAChEnE,KAAKwmB,UAAUriB,EAAE,KAErBnE,KAAK6F,eAAenB,EAAsB1E,KAAKuE,QAAS,QAASJ,IAC7DnE,KAAKymB,OAAOtiB,EAAE,IAEtB,EC5CG,MAAMuiB,WAA6B1kB,EACtC,eAAI2kB,GACA,OAAO3mB,KAAKuD,QAAQojB,WACxB,CACA,YAAI5P,GACA,OAAO/W,KAAKuD,QAAQwT,QACxB,CACApX,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,CACnB,EAEG,SAASqjB,GAAoBlL,GAChC,OAAQA,GACJ,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAInZ,MAAO,sBAAqBmZ,MAElD,CACO,SAASmL,GAAoB9P,GAChC,OAAQA,GACJ,IAAK,MACD,MAAO,QACX,IAAK,SACD,MAAO,QACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAIxU,MAAO,qBAAoBwU,MAEjD,CACA,MAAM+P,GAA0B,CAC5BrkB,MAAO,GACPnD,KAAM,cAEJynB,GAAe,CACjBtkB,MAAO,GACPnD,KAAM,cAIH,MAAM0nB,WAAmBxhB,EAC5B,SAAI+R,GACA,OAAOvX,KAAKinB,MAChB,CACAtnB,WAAAA,CAAY4E,EAAShB,GACjBxD,QACAC,KAAKuE,QAAUA,EACfvE,KAAKuD,QAAUA,EACfvD,KAAKknB,QAAU,IAAIlkB,EACnBhD,KAAKymB,OAASzmB,KAAKknB,QAAQxjB,MAC3B1D,KAAKmnB,mBAAqB,IAAInkB,EAC9BhD,KAAK4kB,kBAAoB5kB,KAAKmnB,mBAAmBzjB,MAEjD1D,KAAKonB,wBAA0B,IAAIC,IAAIrnB,KAAKuD,QAAQ+jB,qBACpDtnB,KAAKunB,IAAM,IAAItB,GAAoBjmB,KAAKuE,QAAS,CAC7C8hB,YAAaA,KAAe,EAC5BC,WAAaniB,IACT,GAA0C,IAAtCnE,KAAKonB,wBAAwBviB,KAE7B,YADA7E,KAAKwnB,mBAGT,MAAMle,EAAQtJ,KAAKuE,QAAQkjB,YACrBle,EAASvJ,KAAKuE,QAAQmjB,aAC5B,GAAc,IAAVpe,GAA0B,IAAXC,EACf,OAEJ,MAAMoe,EAAOxjB,EAAEyjB,cAAcpe,wBACvB4G,EAAIjM,EAAE+P,QAAUyT,EAAKve,KACrBye,EAAI1jB,EAAEgQ,QAAUwT,EAAKte,IACrBye,EAAW9nB,KAAK+nB,kBAAkB/nB,KAAKonB,wBAAyBhX,EAAGyX,EAAGve,EAAOC,GAMnF,GAAIvJ,KAAKgoB,cAAc7jB,IAAmB,OAAb2jB,EAGzB,YADA9nB,KAAKwnB,mBAGT,IAAKxnB,KAAKuD,QAAQ0kB,kBAAkB9jB,EAAG2jB,GAEnC,YADA9nB,KAAKwnB,mBAGT,MAAMU,EAAuB,IAAIxB,GAAqB,CAClDC,YAAaxiB,EACb4S,SAAU+Q,IAMd9nB,KAAKmnB,mBAAmBjjB,KAAKgkB,GACzBA,EAAqBhmB,iBACrBlC,KAAKwnB,oBAGTxnB,KAAKmoB,WAAWhkB,GACXnE,KAAKooB,gBACNpoB,KAAKooB,cAAgBrgB,SAAS2L,cAAc,OAC5C1T,KAAKooB,cAAc7sB,UAAY,uBAC/ByE,KAAKqoB,eAAiBtgB,SAAS2L,cAAc,OAC7C1T,KAAKqoB,eAAe9sB,UAAY,wBAChCyE,KAAKinB,OAAS,SACdjnB,KAAKooB,cAAcpW,YAAYhS,KAAKqoB,gBACpCroB,KAAKuE,QAAQ0C,UAAUhD,IAAI,eAC3BjE,KAAKuE,QAAQ+jB,OAAOtoB,KAAKooB,gBAE7BpoB,KAAKuoB,cAAcT,EAAUxe,EAAOC,GACpCvJ,KAAKinB,OAASa,EAAQ,EAE1BvB,YAAaA,KACTvmB,KAAKwnB,kBAAkB,EAE3BhB,UAAWA,KACPxmB,KAAKwnB,kBAAkB,EAE3Bf,OAAStiB,IACLA,EAAEhC,iBACF,MAAMoV,EAAQvX,KAAKinB,OACnBjnB,KAAKwnB,mBACDjQ,IAGApT,EAAEqkB,kBACFxoB,KAAKknB,QAAQhjB,KAAK,CAAE6S,SAAUQ,EAAOoP,YAAaxiB,IACtD,IAGRnE,KAAK6F,eAAe7F,KAAKknB,QAASlnB,KAAKmnB,mBAAoBnnB,KAAKunB,IACpE,CACAkB,cAAAA,CAAenB,GACXtnB,KAAKonB,wBAA0B,IAAIC,IAAIC,EAC3C,CACAoB,eAAAA,CAAgBC,GACZ3oB,KAAKuD,QAAQqlB,aAAeD,CAChC,CACA9mB,OAAAA,GACI7B,KAAKwnB,mBACLznB,MAAM8B,SACV,CAIAsmB,UAAAA,CAAWzkB,GACPA,EAAMsjB,GAAW6B,gBAAiB,CACtC,CAIAb,aAAAA,CAActkB,GACV,MAAMjB,EAAQiB,EAAMsjB,GAAW6B,eAC/B,MAAwB,kBAAVpmB,GAAuBA,CACzC,CACA8lB,aAAAA,CAAcT,EAAUxe,EAAOC,GAC3B,IAAIjH,EAAIwf,EACR,IAAK9hB,KAAKqoB,eACN,OAEJ,MAAMS,EAAWxf,EAzHI,IA0Hfyf,EAAWxf,EAzHK,IA0HhByf,EAAsB,SAAblB,EACTmB,EAAuB,UAAbnB,EACVoB,EAAqB,QAAbpB,EACRqB,EAAwB,WAAbrB,EACXsB,GAAcN,GAAYG,EAC1BI,GAAaP,GAAYE,EACzBM,GAAYP,GAAYG,EACxBK,GAAeR,GAAYI,EACjC,IAAItkB,EAAO,EACX,MAAM2kB,EAAuG,QAAxF1H,EAA0C,QAApCxf,EAAKtC,KAAKuD,QAAQqlB,oBAAiC,IAAPtmB,OAAgB,EAASA,EAAGuC,YAAyB,IAAPid,EAAgBA,EAAKiF,GACjH,eAArByC,EAAYlqB,KACZuF,EAAO2G,EAAMge,EAAY/mB,MAAO,EAAG,KAAO,MAGtC2mB,GAAcC,KACdxkB,EAAO2G,EAAM,EAAGge,EAAY/mB,MAAO6G,GAASA,IAE5CggB,GAAYC,KACZ1kB,EAAO2G,EAAM,EAAGge,EAAY/mB,MAAO8G,GAAUA,IAGrD,MAAM0S,EAAM,CAAE5S,IAAK,MAAOD,KAAM,MAAOE,MAAO,OAAQC,OAAQ,QAoB1D6f,GACAnN,EAAI7S,KAAU,KAAO,EAAIvE,GAAb,IACZoX,EAAI3S,MAAW,IAAMzE,EAAR,KAERwkB,EACLpN,EAAI3S,MAAW,IAAMzE,EAAR,IAERykB,EACLrN,EAAI1S,OAAY,IAAM1E,EAAR,IAET0kB,IACLtN,EAAI5S,IAAS,KAAO,EAAIxE,GAAb,IACXoX,EAAI1S,OAAY,IAAM1E,EAAR,KAElB7E,KAAKqoB,eAAere,MAAMX,IAAM4S,EAAI5S,IACpCrJ,KAAKqoB,eAAere,MAAMZ,KAAO6S,EAAI7S,KACrCpJ,KAAKqoB,eAAere,MAAMV,MAAQ2S,EAAI3S,MACtCtJ,KAAKqoB,eAAere,MAAMT,OAAS0S,EAAI1S,OACvClC,EAAYrH,KAAKqoB,eAAgB,gCAAiCU,GAClE1hB,EAAYrH,KAAKqoB,eAAgB,kCAAmCS,GACpEzhB,EAAYrH,KAAKqoB,eAAgB,sBAAuBW,GACxD3hB,EAAYrH,KAAKqoB,eAAgB,uBAAwBY,GACzD5hB,EAAYrH,KAAKqoB,eAAgB,qBAAsBa,GACvD7hB,EAAYrH,KAAKqoB,eAAgB,wBAAyBc,GAC1D9hB,EAAYrH,KAAKqoB,eAAgB,wBAAsC,WAAbP,EAC9D,CACAC,iBAAAA,CAAkB0B,EAAarZ,EAAGyX,EAAGve,EAAOC,GACxC,IAAIjH,EAAIwf,EACR,MAAM4H,EAA2H,QAAlG5H,EAA0C,QAApCxf,EAAKtC,KAAKuD,QAAQqlB,oBAAiC,IAAPtmB,OAAgB,EAASA,EAAGqnB,sBAAmC,IAAP7H,EAAgBA,EAAKgF,GAE9J,MADoD,eAA/B4C,EAAsBpqB,KAiB5C,SAAuCmqB,EAAarZ,EAAGyX,EAAGve,EAAOC,EAAQqgB,GAC5E,MAAMC,EAAM,IAAMzZ,EAAK9G,EACjBwgB,EAAM,IAAMjC,EAAKte,EACvB,GAAIkgB,EAAY/G,IAAI,SAAWmH,EAAKD,EAChC,MAAO,OAEX,GAAIH,EAAY/G,IAAI,UAAYmH,EAAK,IAAMD,EACvC,MAAO,QAEX,GAAIH,EAAY/G,IAAI,QAAUoH,EAAKF,EAC/B,MAAO,MAEX,GAAIH,EAAY/G,IAAI,WAAaoH,EAAK,IAAMF,EACxC,MAAO,SAEX,IAAKH,EAAY/G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlCmBqH,CAA8BN,EAAarZ,EAAGyX,EAAGve,EAAOC,EAAQmgB,EAAsBjnB,OAmClG,SAAmCgnB,EAAarZ,EAAGyX,EAAGve,EAAOC,EAAQqgB,GACxE,GAAIH,EAAY/G,IAAI,SAAWtS,EAAIwZ,EAC/B,MAAO,OAEX,GAAIH,EAAY/G,IAAI,UAAYtS,EAAI9G,EAAQsgB,EACxC,MAAO,QAEX,GAAIH,EAAY/G,IAAI,QAAUmF,EAAI+B,EAC9B,MAAO,MAEX,GAAIH,EAAY/G,IAAI,WAAamF,EAAIte,EAASqgB,EAC1C,MAAO,SAEX,IAAKH,EAAY/G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlDesH,CAA0BP,EAAarZ,EAAGyX,EAAGve,EAAOC,EAAQmgB,EAAsBjnB,MAC7F,CACA+kB,gBAAAA,GACQxnB,KAAKooB,gBACLpoB,KAAKinB,YAASxmB,EACdT,KAAKuE,QAAQsP,YAAY7T,KAAKooB,eAC9BpoB,KAAKooB,mBAAgB3nB,EACrBT,KAAKqoB,oBAAiB5nB,EACtBT,KAAKuE,QAAQ0C,UAAUE,OAAO,eAEtC,EAEJ6f,GAAW6B,cAAgB,wCCxQpB,MAAMoB,WAAuBjoB,EAChCrC,WAAAA,GACII,OACJ,EAKG,MAAMmqB,WAAqB1kB,EAC9B,aAAI2kB,GACA,OAAOnqB,KAAKoqB,UAChB,CACA,YAAIC,GACA,OAAOrqB,KAAKsqB,SAChB,CACA,aAAI1I,GACA,OAAO5hB,KAAKuqB,UAChB,CACA,SAAIjhB,GACA,OAAOtJ,KAAKwqB,MAChB,CACA,UAAIjhB,GACA,OAAOvJ,KAAKyqB,OAChB,CACA9qB,WAAAA,CAAYlE,EAAIa,GACZyD,QACAC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAKoqB,YAAa,EAClBpqB,KAAKsqB,WAAY,EACjBtqB,KAAKuqB,YAAa,EAClBvqB,KAAKwqB,OAAS,EACdxqB,KAAKyqB,QAAU,EACfzqB,KAAK0qB,YAAc,CAAC,EACpB1qB,KAAK2qB,uBAAyB,IAAI1kB,EAClCjG,KAAK4qB,sBAAwB,IAAI5nB,EACjChD,KAAK6qB,sBAAwB7qB,KAAK4qB,sBAAsBlnB,MACxD1D,KAAK8qB,kBAAoB,IAAI9nB,EAC7BhD,KAAK+qB,iBAAmB/qB,KAAK8qB,kBAAkBpnB,MAE/C1D,KAAKgrB,aAAe,IAAIhoB,EACxBhD,KAAKirB,YAAcjrB,KAAKgrB,aAAatnB,MAErC1D,KAAKuZ,uBAAyB,IAAIvW,EAClChD,KAAKwZ,sBAAwBxZ,KAAKuZ,uBAAuB7V,MACzD1D,KAAKkrB,wBAA0B,IAAIloB,EACnChD,KAAKmrB,uBAAyBnrB,KAAKkrB,wBAAwBxnB,MAC3D1D,KAAKqhB,mBAAqB,IAAIre,EAC9BhD,KAAKshB,kBAAoBthB,KAAKqhB,mBAAmB3d,MACjD1D,KAAKorB,gBAAkB,IAAIpoB,EAC3BhD,KAAKqrB,eAAiBrrB,KAAKorB,gBAAgB1nB,MAC3C1D,KAAKsrB,uBAAyB,IAAItoB,EAClChD,KAAKurB,sBAAwBvrB,KAAKsrB,uBAAuB5nB,MACzD1D,KAAK6F,eAAe7F,KAAK+qB,kBAAkBrnB,IACvC1D,KAAKoqB,WAAa1mB,EAAMymB,SAAS,IACjCnqB,KAAKshB,mBAAmB5d,IACxB1D,KAAKsqB,UAAY5mB,EAAM2mB,QAAQ,IAC/BrqB,KAAKwZ,uBAAuB9V,IAC5B1D,KAAKuqB,WAAa7mB,EAAMke,SAAS,IACjC5hB,KAAK6qB,uBAAuBnnB,IAC5B1D,KAAKwqB,OAAS9mB,EAAM4F,MACpBtJ,KAAKyqB,QAAU/mB,EAAM6F,MAAM,IAC3BvJ,KAAK2qB,uBAAwB3qB,KAAK4qB,sBAAuB5qB,KAAK8qB,kBAAmB9qB,KAAKuZ,uBAAwBvZ,KAAKqhB,mBAAoBrhB,KAAKgrB,aAAchrB,KAAKorB,gBAAiBprB,KAAKgrB,aAAchrB,KAAKkrB,wBAAyBlrB,KAAKsrB,uBAC9O,CACAE,aAAAA,GACI,OAAOxrB,KAAK0qB,WAChB,CACAe,UAAAA,CAAW9J,GACP3hB,KAAK2qB,uBAAuBloB,MAAQzC,KAAKsrB,uBAAuB5nB,OAAOgoB,IACnE1rB,KAAK0qB,YAAcgB,EACnB/J,EAAMgK,OAAO,CACTC,OAAQF,GACV,GAEV,CACA1e,UAAAA,CAAW4U,GACP5hB,KAAKkrB,wBAAwBhnB,KAAK,CAAE0d,aACxC,CACAiB,SAAAA,GACI7iB,KAAKorB,gBAAgBlnB,MACzB,CACA2nB,gBAAAA,CAAiBH,GACb1rB,KAAKsrB,uBAAuBpnB,KAAKwnB,EACrC,ECnFG,MAAMI,WAA8B5B,GAEvCvqB,WAAAA,CAAYlE,EAAIa,GACZyD,MAAMtE,EAAIa,GACV0D,KAAK+rB,gCAAkC,IAAI/oB,EAC3ChD,KAAKgsB,+BAAiChsB,KAAK+rB,gCAAgCroB,MAE3E1D,KAAKisB,wBAA0B,IAAIjpB,EAAQ,CACvCY,QAAQ,IAEZ5D,KAAKksB,uBAAyBlsB,KAAKisB,wBAAwBvoB,MAE3D1D,KAAKmsB,iBAAmB,IAAInpB,EAC5BhD,KAAKosB,gBAAkBpsB,KAAKmsB,iBAAiBzoB,MAC7C1D,KAAK6F,eAAe7F,KAAK+rB,gCAAiC/rB,KAAKisB,wBAAyBjsB,KAAKmsB,iBACjG,CACAE,cAAAA,CAAe5pB,GACXzC,KAAK+rB,gCAAgC7nB,KAAKzB,EAC9C,CACA6pB,OAAAA,CAAQ5oB,GACJ1D,KAAKmsB,iBAAiBjoB,KAAKR,EAC/B,ECrBG,MAAM6oB,WAA6BT,GACtC,QAAI/T,CAAKA,GACL/X,KAAKwsB,MAAQzU,CACjB,CACApY,WAAAA,CAAYlE,EAAIa,GACZyD,MAAMtE,EAAIa,GACV0D,KAAKysB,sBAAwB,IAAIzpB,EAAQ,CACrCY,QAAQ,IAEZ5D,KAAK0sB,qBAAuB1sB,KAAKysB,sBAAsB/oB,MACvD1D,KAAK2sB,cAAgB,IAAI3pB,EAAQ,CAAC,GAClChD,KAAK4sB,aAAe5sB,KAAK2sB,cAAcjpB,MACvC1D,KAAK6sB,cAAgB,IAAI7pB,EAAQ,CAAC,GAClChD,KAAK8sB,aAAe9sB,KAAK6sB,cAAcnpB,MACvC1D,KAAK6F,eAAe7F,KAAKysB,sBAAuBzsB,KAAK2sB,cAAe3sB,KAAK6sB,cAC7E,CACAE,WAAAA,CAAYC,GACR,IAAI1qB,EACkB,QAArBA,EAAKtC,KAAKwsB,aAA0B,IAAPlqB,GAAyBA,EAAGyqB,YAAYC,EAC1E,CACA,cAAIA,GACA,IAAI1qB,EACJ,SAAgC,QAArBA,EAAKtC,KAAKwsB,aAA0B,IAAPlqB,OAAgB,EAASA,EAAG0qB,aACxE,ECtBG,MAAMC,WAAsBznB,EAC/B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACA,SAAItW,GACA,OAAOtJ,KAAKwqB,MAChB,CACA,UAAIjhB,GACA,OAAOvJ,KAAKyqB,OAChB,CACA,UAAImB,GACA,IAAItpB,EACJ,OAA+B,QAAvBA,EAAKtC,KAAKktB,eAA4B,IAAP5qB,OAAgB,EAASA,EAAGspB,MACvE,CACAjsB,WAAAA,CAAYlE,EAAIa,EAAWwnB,GACvB/jB,QACAC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAK8jB,IAAMA,EACX9jB,KAAKyqB,QAAU,EACfzqB,KAAKwqB,OAAS,EACdxqB,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASuN,UAAY,EAC1BntB,KAAK4f,SAAS5V,MAAMojB,QAAU,OAC9BptB,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,OAC5BtJ,KAAK4f,SAAS5V,MAAMqjB,SAAW,SAC/B,MAAMC,EAAetlB,EAAWhI,KAAK4f,UACrC5f,KAAK6F,eAAe7F,KAAK8jB,IAAKwJ,EAAanlB,YAAW,KAClDnI,KAAK8jB,IAAIgH,kBAAkB5mB,KAAK,CAAEimB,WAAW,GAAO,IACpDmD,EAAajlB,WAAU,KACvBrI,KAAK8jB,IAAIgH,kBAAkB5mB,KAAK,CAAEimB,WAAW,GAAQ,IACrDmD,EACR,CACAhK,KAAAA,GACI,MAAM5f,EAAQ,IAAIumB,GAClBjqB,KAAK8jB,IAAIkH,aAAa9mB,KAAKR,GACvBA,EAAMxB,kBAGVlC,KAAK4f,SAAS0D,OAClB,CACA/N,MAAAA,CAAOjM,EAAOC,GACVvJ,KAAKwqB,OAASlhB,EACdtJ,KAAKyqB,QAAUlhB,EACfvJ,KAAK8jB,IAAI8G,sBAAsB1mB,KAAK,CAAEoF,QAAOC,WACzCvJ,KAAKutB,MACDvtB,KAAKktB,SACLltB,KAAKutB,KAAK5B,OAAO3rB,KAAKktB,QAAQtB,OAG1C,CACA4B,IAAAA,CAAK9B,GACD1rB,KAAKktB,QAAUxB,EACf1rB,KAAKutB,KAAOvtB,KAAKytB,cACrB,CACA9B,MAAAA,CAAOjoB,GACH,IAAIpB,EAAIwf,EAER9hB,KAAKktB,QAAUtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAKktB,SAAU,CAAEtB,OAAQhI,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA2B,QAAvBvhB,EAAKtC,KAAKktB,eAA4B,IAAP5qB,OAAgB,EAASA,EAAGspB,QAASloB,EAAMkoB,UAKnL,IAAK,MAAM8B,KAAO9J,OAAO+J,KAAKjqB,EAAMkoB,aACNnrB,IAAtBiD,EAAMkoB,OAAO8B,WACN1tB,KAAKktB,QAAQtB,OAAO8B,GAId,QAApB5L,EAAK9hB,KAAKutB,YAAyB,IAAPzL,GAAyBA,EAAG6J,OAAO,CAAEC,OAAQ5rB,KAAKktB,QAAQtB,QAC3F,CACAzP,MAAAA,GACI,IAAI7Z,EAAIwf,EACR,MAAM8J,EAAuF,QAA7E9J,EAA6B,QAAvBxf,EAAKtC,KAAKktB,eAA4B,IAAP5qB,OAAgB,EAASA,EAAGspB,cAA2B,IAAP9J,EAAgBA,EAAK,CAAC,EAC3H,MAAO,CACHrmB,GAAIuE,KAAKvE,GACTa,UAAW0D,KAAK1D,UAChBsvB,OAAQhI,OAAO+J,KAAK/B,GAAQrqB,OAAS,EAAIqqB,OAASnrB,EAE1D,CACAoB,OAAAA,GACI,IAAIS,EACJtC,KAAK8jB,IAAIjiB,UACY,QAApBS,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGT,UACzD9B,MAAM8B,SACV,ECpFG,MAAM+rB,WAAsBX,GAC/B,eAAIhf,CAAYxL,GACZzC,KAAKkO,aAAezL,CACxB,CACA,eAAIwL,GACA,OAAOjO,KAAKkO,YAChB,CACA,eAAI3B,GAIA,OAHmBvM,KAAK6tB,YACP7tB,KAAKgtB,aACahtB,KAAK8tB,iBAAmB,EAE/D,CACA,eAAIphB,GAIA,OAHmB1M,KAAK6tB,YACP7tB,KAAKgtB,aACahtB,KAAK+tB,iBAAmB,EAE/D,CACA,QAAIlpB,GACA,OAAO7E,KAAKmM,KAChB,CACA,kBAAIyB,GACA,OAAO5N,KAAK6N,eAChB,CACA,kBAAID,CAAe/I,GACf7E,KAAK6N,gBAAkBhJ,CAC3B,CACA,mBAAImpB,GACA,OAAOhuB,KAAK8tB,gBAChB,CACA,mBAAIE,CAAgBvrB,GAChBzC,KAAK8tB,iBAAoC,iBAAVrrB,EAAqBA,EAAQ,CAChE,CACA,mBAAIwrB,GACA,OAAOjuB,KAAK+tB,gBAChB,CACA,mBAAIE,CAAgBxrB,GAChBzC,KAAK+tB,iBACgB,iBAAVtrB,EAAqBA,EAAQ+L,OAAOC,iBACnD,CACA,iBAAIyf,GACA,OAAOluB,KAAKmuB,cAChB,CACA,iBAAID,CAAczrB,GACdzC,KAAKmuB,eAAiB1rB,EACtBzC,KAAKouB,OAAOpkB,MAAMqkB,QAAU5rB,EAAQ,GAAK,MAC7C,CACA9C,WAAAA,CAAYlE,EAAIa,EAAWgyB,EAAiBrgB,EAAa+e,EAAYuB,GACjExuB,MAAMtE,EAAIa,EAAW,IAAIiwB,GAAqB9wB,EAAIa,IAClD0D,KAAKsuB,gBAAkBA,EACvBtuB,KAAKwuB,2BAA6B,IAAIxrB,EAAQ,CAAEY,QAAQ,IACxD5D,KAAKgY,0BAA4BhY,KAAKwuB,2BAA2B9qB,MACjE1D,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAK6tB,WAAa,GAClB7tB,KAAK6N,gBAAkB,EACvB7N,KAAKmM,MAAQ,EACbnM,KAAK8tB,iBAAmB,IACxB9tB,KAAK+tB,iBAAmBvf,OAAOC,kBAC/BzO,KAAKyuB,aAAc,EACnBzuB,KAAK0uB,aAAe,EACpB1uB,KAAK8jB,IAAI/L,KAAO/X,KAChBA,KAAK8jB,IAAI2H,WAAWzrB,MACpBA,KAAKyuB,YAAczB,EACnBhtB,KAAKmuB,eAAiBI,EACtBvuB,KAAKwuB,2BAA2BtqB,KAAKlE,KAAKgtB,cAC1ChtB,KAAKkO,aAAeD,EACpBjO,KAAKuE,QAAQ0C,UAAUhD,IAAI,QAC3BjE,KAAK6F,eAAe7F,KAAK8jB,IAAIqH,wBAAwBznB,IACjD,MAAM,UAAEke,GAAcle,GAChB,SAAEirB,GAAa3uB,KAAKktB,QAC1ByB,EAAS3hB,WAAWhN,KAAM4hB,EAAU,IACpC5hB,KAAK8jB,IAAIsI,iBAAiB1oB,IAC1B1D,KAAK6X,aAAa3T,KAAK,CAAEW,KAAMnB,EAAMmB,MAAO,IAC5CH,EAAsB1E,KAAKuE,QAAS,cAAeqqB,IACnD5uB,KAAK8jB,IAAI6I,cAAczoB,KAAK0qB,EAAG,IAC/BlqB,EAAsB1E,KAAKuE,QAAS,cAAeqqB,IACnD5uB,KAAK8jB,IAAI+I,cAAc3oB,KAAK0qB,EAAG,KAEnC5uB,KAAK6F,eAAe7F,KAAKwuB,2BAA4BxuB,KAAKgY,2BAA2B6W,IACjF7uB,KAAK8jB,IAAI2I,sBAAsBvoB,KAAK,CAChC8oB,WAAY6B,GACd,IACF7uB,KAAK8jB,IAAIiH,kBAAkB5mB,IACtBnE,KAAKouB,SAGNjqB,EAAEgmB,UACF/iB,EAAWpH,KAAKouB,OAAQ,WAGxBtnB,EAAc9G,KAAKouB,OAAQ,WAC/B,KAEJpuB,KAAK8uB,YACT,CACA9hB,UAAAA,CAAW4U,GACP5hB,KAAK8jB,IAAIvK,uBAAuBrV,KAAK,CAAE0d,aAC3C,CACAiB,SAAAA,CAAUwH,GACNrqB,KAAK8jB,IAAIzC,mBAAmBnd,KAAK,CAAEmmB,YACvC,CACA2C,UAAAA,GACI,OAAOhtB,KAAKyuB,WAChB,CACA1B,WAAAA,CAAYgC,GACJ/uB,KAAKyuB,cAAgBM,IAGzB/uB,KAAKyuB,YAAcM,EACfA,GACI/uB,KAAKsY,gBACLC,aAAavY,KAAKsY,gBAElBtY,KAAKgvB,MACLhvB,KAAKuE,QAAQyN,YAAYhS,KAAKgvB,OAIlChvB,KAAKsY,eAAiB1P,YAAW,KAC7B,IAAItG,EACiB,QAApBA,EAAKtC,KAAKgvB,YAAyB,IAAP1sB,GAAyBA,EAAG6E,QAAQ,GAClE,KAEPnH,KAAK6X,aAAa3T,KAAK6qB,EAAW,CAAElqB,KAAM7E,KAAKsJ,OAAU,CAAC,GAC1DtJ,KAAKwuB,2BAA2BtqB,KAAK6qB,GACzC,CACAxZ,MAAAA,CAAO1Q,EAAM+I,GACT5N,KAAKmM,MAAQtH,EACb7E,KAAK6N,gBAAkBD,EACvB,MAAOtE,EAAOC,GAAUvJ,KAAKiO,cAAgBf,EAAYkB,WACnD,CAACvJ,EAAM+I,GACP,CAACA,EAAgB/I,GACnB7E,KAAKgtB,eACLhtB,KAAK0uB,aAAeplB,GAExBvJ,MAAMwV,OAAOjM,EAAOC,EACxB,CACAikB,IAAAA,CAAK9B,GACD,IAAIppB,EAAIwf,EACR/hB,MAAMytB,KAAK9B,GAC+B,iBAA/BA,EAAWsC,kBAClBhuB,KAAKguB,gBAAkBtC,EAAWsC,iBAEI,iBAA/BtC,EAAWuC,kBAClBjuB,KAAKiuB,gBAAkBvC,EAAWuC,iBAEtCjuB,KAAKivB,SAAWjvB,KAAKkvB,mBACrBlvB,KAAKmvB,WAAanvB,KAAKovB,qBACvBpvB,KAAKivB,SAASzB,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG6H,GAAa,CAAE5H,IAAK9jB,KAAK8jB,OAC5E9jB,KAAKmvB,WAAW3B,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG6H,GAAa,CAAE5H,IAAK9jB,KAAK8jB,OACzD,QAApBxhB,EAAKtC,KAAKgvB,YAAyB,IAAP1sB,GAAyBA,EAAGgmB,OAAOtoB,KAAKivB,SAAS1qB,SACvD,QAAtBud,EAAK9hB,KAAKouB,cAA2B,IAAPtM,GAAyBA,EAAGwG,OAAOtoB,KAAKmvB,WAAW5qB,SAC7C,kBAA1BmnB,EAAWsB,YAClBhtB,KAAK+sB,YAAYrB,EAAWsB,WAEpC,CACA7Q,MAAAA,GACI,MAAMyP,EAAS5rB,KAAKktB,QACpB,OAAOtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG9jB,MAAMoc,UAAW,CAAEmS,gBAAiBtuB,KAAKsuB,gBAAiBtyB,MAAO4vB,EAAO5vB,OACnH,CACA8yB,UAAAA,GACI9uB,KAAKouB,OAASrmB,SAAS2L,cAAc,OACrC1T,KAAKouB,OAAOjB,SAAW,EACvBntB,KAAKouB,OAAO7yB,UAAY,cACxByE,KAAKouB,OAAOpkB,MAAMT,OAAU,GAAEvJ,KAAK6tB,eACnC7tB,KAAKouB,OAAOpkB,MAAMqlB,WAAc,GAAErvB,KAAK6tB,eACvC7tB,KAAKouB,OAAOpkB,MAAMslB,UAAa,GAAEtvB,KAAK6tB,eACtC7tB,KAAKouB,OAAOpkB,MAAMulB,UAAa,GAAEvvB,KAAK6tB,eACtC7tB,KAAKuE,QAAQyN,YAAYhS,KAAKouB,QAC9BpuB,KAAKgvB,KAAOjnB,SAAS2L,cAAc,OACnC1T,KAAKgvB,KAAKzzB,UAAY,YACtByE,KAAKuE,QAAQyN,YAAYhS,KAAKgvB,KAClC,CAEAvB,YAAAA,GACI,MAAO,CACH9B,OAASC,IACL,IAAItpB,EAAIwf,EACiB,QAAxBxf,EAAKtC,KAAKivB,gBAA6B,IAAP3sB,GAAyBA,EAAGqpB,OAAO,CAAEC,WAC3C,QAA1B9J,EAAK9hB,KAAKmvB,kBAA+B,IAAPrN,GAAyBA,EAAG6J,OAAO,CAAEC,UAAS,EAErF/pB,QAASA,KACL,IAAIS,EAAIwf,EACiB,QAAxBxf,EAAKtC,KAAKivB,gBAA6B,IAAP3sB,GAAyBA,EAAGT,UAClC,QAA1BigB,EAAK9hB,KAAKmvB,kBAA+B,IAAPrN,GAAyBA,EAAGjgB,SAAS,EAGpF,EC5LG,MAAM2tB,WAA+B5B,GACxCjuB,WAAAA,CAAYgvB,EAAUlzB,EAAIa,EAAWgyB,EAAiBrgB,EAAa+e,EAAYyC,GAC3E1vB,MAAMtE,EAAIa,EAAWgyB,EAAiBrgB,EAAa+e,GAAY,GAC/DhtB,KAAK2uB,SAAWA,EAChB3uB,KAAK0vB,WAAa,IAAI1sB,EACtBhD,KAAK0jB,UAAY1jB,KAAK0vB,WAAWhsB,MAC5B+rB,GACDzvB,KAAK2vB,kBAEb,CACAA,gBAAAA,GACI,IAAK3vB,KAAKouB,OACN,OAEJ,MAAM3yB,EAAKuE,KAAKvE,GACVm0B,EAAa5vB,KAAK2uB,SAASlzB,GACjCuE,KAAKouB,OAAOyB,WAAY,EACxB7vB,KAAK8vB,QAAU,IAAK,cAA8BtK,GAC9C7kB,OAAAA,GAEI,OADAR,EAAuBC,cAAcQ,QAAQ,CAAC,IAAIX,EAAa2vB,EAAYn0B,IAAMwE,EAAac,WACvF,CACHc,QAASA,KACL1B,EAAuBC,cAAcI,UAAUP,EAAac,UAAU,EAGlF,GACDf,KAAKouB,QACRpuB,KAAKmmB,OAAS,IAAIa,GAAWhnB,KAAKuE,QAAS,CACvC+iB,oBAAqB,CAAC,MAAO,UAC7BsB,aAAc,CACVe,eAAgB,CAAErqB,KAAM,aAAcmD,MAAO,KAEjDwlB,kBAAoBvkB,IAChB,MAAMhD,EAAOM,IACb,SAAIN,GACIA,EAAKR,SAAWF,KAAKvE,IACrBiF,EAAKd,SAAWI,KAAK2uB,SAASlzB,OAIlCuE,KAAK2uB,SAASprB,QAAQwsB,gBACf/vB,KAAK2uB,SAASprB,QAAQwsB,eAAe,CACxCpJ,YAAajjB,EACb/C,QAASK,EACT2gB,MAAO3hB,MAGH,IAGpBA,KAAK6F,eAAe7F,KAAK0vB,WAAY1vB,KAAK8vB,QAAS9vB,KAAKmmB,OAAQnmB,KAAKmmB,OAAOM,QAAQ/iB,IAChF1D,KAAKymB,OAAO/iB,EAAM,IAE1B,CACA+iB,MAAAA,CAAO/iB,GACH,MAAMhD,EAAOM,IACb,IAAKN,GAAQA,EAAKd,SAAWI,KAAK2uB,SAASlzB,GAIvC,YADAuE,KAAK0vB,WAAWxrB,KAAK0f,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGngB,GAAQ,CAAEie,MAAO3hB,KAAM8jB,IAAK,IAAIL,GAAYzjB,KAAK2uB,UAAWhuB,QAASK,KAG9H,MAAMgvB,EAAehwB,KAAKktB,QACrB8C,aACClwB,EAAUY,EAAKR,OACf+vB,EAAgBD,EAAapN,SAAS9iB,GAC5C,IAAKmwB,EAGD,YADAjwB,KAAK0vB,WAAWxrB,KAAK0f,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGngB,GAAQ,CAAEie,MAAO3hB,KAAMW,QAASK,EAAa8iB,IAAK,IAAIL,GAAYzjB,KAAK2uB,aAGhI,MAAMuB,EAAYF,EAAa7M,OACzBgN,EAAYD,EAAUnsB,QAAQksB,GACpC,IAAIG,EAAUJ,EAAa7M,OAAOpf,QAAQ/D,MACnB,SAAnB0D,EAAMqT,UAA0C,QAAnBrT,EAAMqT,WACnCqZ,EAAUzkB,KAAKD,IAAI,EAAG0kB,EAAU,IAEb,UAAnB1sB,EAAMqT,UAA2C,WAAnBrT,EAAMqT,WAChCoZ,EAAYC,GACZA,IAEJA,EAAUzkB,KAAKF,IAAIykB,EAAU3uB,OAAS,EAAG6uB,IAE7CJ,EAAaxM,UAAU2M,EAAWC,EACtC,ECrFG,MAAMC,WAAyB7qB,EAClC,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYgvB,EAAUnM,GAClBziB,QACAC,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAKmG,WAAa,IAAIF,EACtBjG,KAAKkI,YAAc,IAAIlF,EACvBhD,KAAKmI,WAAanI,KAAKkI,YAAYxE,MACnC1D,KAAKoI,WAAa,IAAIpF,EACtBhD,KAAKqI,UAAYrI,KAAKoI,WAAW1E,MACjC1D,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,oBAC1ByE,KAAK4f,SAASuN,UAAY,EAC1BntB,KAAK6F,eAAe7F,KAAKkI,YAAalI,KAAKoI,YAC3CpI,KAAKswB,WAAa,IAAItJ,GAAWhnB,KAAKuE,QAAS,CAC3C+iB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDW,kBAAmBA,CAACvkB,EAAOqT,KACvB,GAA0B,mBAAtB/W,KAAKwiB,MAAMjG,QACVvc,KAAKwiB,MAAMjG,QAAuB,WAAbxF,EACtB,OAAO,EAEX,MAAMrW,EAAOG,IACb,IAAKH,GACDgD,EAAM6sB,UACuB,aAA7BvwB,KAAKwiB,MAAM/G,SAASnc,KACpB,OAAO,EAEX,GAAIoB,GAAQA,EAAKd,SAAWI,KAAK2uB,SAASlzB,GAAI,CAC1C,GAAIiF,EAAKb,UAAYG,KAAKwiB,MAAM/mB,GAAI,CAChC,GAAiB,WAAbsb,EAEA,OAAO,EAEX,GAAqB,OAAjBrW,EAAKZ,QAEL,OAAO,CAEf,CAGA,QAF4E,IAA7BE,KAAKwiB,MAAMW,OAAO5hB,QAC7Db,EAAKb,UAAYG,KAAKwiB,MAAM/mB,GAEpC,CACA,OAAOuE,KAAKwiB,MAAMyF,kBAAkBvkB,EAAOqT,EAAU,UAAU,IAGvE/W,KAAK6F,eAAe7F,KAAKswB,WAC7B,CACAE,IAAAA,GACIxwB,KAAKuE,QAAQyF,MAAMqkB,QAAU,EACjC,CACAoC,IAAAA,GACIzwB,KAAKuE,QAAQyF,MAAMqkB,QAAU,MACjC,CACAqC,WAAAA,CAAY/O,EAAOpe,QAAO,IAAPA,IAAAA,EAAU,CAAEotB,UAAU,IACrC,MAAMC,EAAWrtB,EAAQotB,UACpB3wB,KAAK2hB,OAAS3hB,KAAKwiB,MAAMqO,cAAc7wB,KAAK2hB,OASjD,IAAI5U,EACJ,OATI/M,KAAK2hB,OACL3hB,KAAK2hB,MAAMnV,KAAK5P,QAAQ2H,QAAQyW,gBAAkBhb,KAAK4f,UAIvD5f,KAAK4f,SAAS/L,YAAY7T,KAAK2hB,MAAMnV,KAAK5P,QAAQ2H,SAEtDvE,KAAK2hB,MAAQA,EAELA,EAAMmC,IAAIgN,UACd,IAAK,kBACD9wB,KAAKwiB,MAAMuO,gBAAgBC,QAAQrP,GAC/B3hB,KAAK2hB,OACDiP,GACA5wB,KAAK4f,SAAS5N,YAAYhS,KAAK2hB,MAAMnV,KAAK5P,QAAQ2H,SAG1DwI,EAAY/M,KAAK4f,SACjB,MACJ,IAAK,SACG+B,EAAMnV,KAAK5P,QAAQ2H,QAAQyW,gBAAkBhb,KAAK4f,UAClD5f,KAAK4f,SAAS/L,YAAY8N,EAAMnV,KAAK5P,QAAQ2H,SAEjDwI,EAAY/M,KAAKwiB,MAAMuO,gBAAgBE,OAAO,CAC1CtP,QACAuP,mBAAoBlxB,OAIhC,GAAI4wB,EAAU,CACV,MAAMtD,EAAetlB,EAAW+E,GAC1B5G,EAAa,IAAIX,EACvBW,EAAWN,eAAeynB,EAAcA,EAAanlB,YAAW,IAAMnI,KAAKkI,YAAYhE,SAASopB,EAAajlB,WAAU,IAAMrI,KAAKoI,WAAWlE,UAC7IlE,KAAKmG,WAAW1D,MAAQ0D,CAC5B,CACJ,CACAgrB,SAAAA,CAAUxP,GACF3hB,KAAK2hB,QAAUA,GAGnB3hB,KAAK0wB,YAAY/O,EACrB,CACApM,MAAAA,CAAOiV,EAAQC,GACX,CAEJ2G,UAAAA,GACI,IAAI9uB,EACAtC,KAAK2hB,OAC2B,oBAA5B3hB,KAAK2hB,MAAMmC,IAAIgN,WAC0C,QAAxDxuB,EAAKtC,KAAK2hB,MAAMnV,KAAK5P,QAAQ2H,QAAQyW,qBAAkC,IAAP1Y,GAAyBA,EAAGuR,YAAY7T,KAAK2hB,MAAMnV,KAAK5P,QAAQ2H,UAGzIvE,KAAK2hB,WAAQlhB,CACjB,CACAoB,OAAAA,GACI7B,KAAKmG,WAAWtE,UAChB9B,MAAM8B,SACV,ECnHJ,MAAMwvB,WAAuB7L,GACzB7lB,WAAAA,CAAY4E,EAASoqB,EAAUnM,EAAOb,GAClC5hB,MAAMwE,GACNvE,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAK2hB,MAAQA,EACb3hB,KAAKc,cAAgBX,EAAuBC,aAChD,CACAO,OAAAA,CAAQ+C,GAEJ,OADA1D,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK2uB,SAASlzB,GAAIuE,KAAKwiB,MAAM/mB,GAAIuE,KAAK2hB,MAAMlmB,KAAMiE,EAAcqB,WACvG,CACHc,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EAEG,MAAMuwB,WAAY9rB,EACrB,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYgiB,EAAOgN,EAAUnM,GACzBziB,QACAC,KAAK2hB,MAAQA,EACb3hB,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAKpD,aAAU6D,EACfT,KAAKuxB,WAAa,IAAIvuB,EACtBhD,KAAKwxB,UAAYxxB,KAAKuxB,WAAW7tB,MACjC1D,KAAKyxB,WAAa,IAAIzuB,EACtBhD,KAAKymB,OAASzmB,KAAKyxB,WAAW/tB,MAC9B1D,KAAK2lB,aAAe,IAAI3iB,EACxBhD,KAAK4lB,YAAc5lB,KAAK2lB,aAAajiB,MACrC1D,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,MAC1ByE,KAAK4f,SAASuN,SAAW,EACzBntB,KAAK4f,SAASiQ,WAAY,EAC1BxoB,EAAYrH,KAAKuE,QAAS,gBAAgB,GAC1C,MAAMmtB,EAAc,IAAIL,GAAerxB,KAAK4f,SAAU5f,KAAK2uB,SAAU3uB,KAAKwiB,MAAOxiB,KAAK2hB,OACtF3hB,KAAKswB,WAAa,IAAItJ,GAAWhnB,KAAK4f,SAAU,CAC5C0H,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACvkB,EAAOqT,KACvB,GAAI/W,KAAKwiB,MAAMjG,OACX,OAAO,EAEX,MAAM7b,EAAOG,IACb,OAAIH,GAAQV,KAAK2uB,SAASlzB,KAAOiF,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKwiB,MAAM/mB,KAIzBuE,KAAK2hB,MAAMlmB,KAAOiF,EAAKZ,QAE3BE,KAAKwiB,MAAMmG,MAAMV,kBAAkBvkB,EAAOqT,EAAU,MAAM,IAGzE/W,KAAK4kB,kBAAoB5kB,KAAKswB,WAAW1L,kBACzC5kB,KAAK6F,eAAe7F,KAAKuxB,WAAYvxB,KAAKyxB,WAAYzxB,KAAK2lB,aAAc+L,EAAY9L,aAAaliB,IAC9F1D,KAAK2lB,aAAazhB,KAAKR,EAAM,IAC7BguB,EAAahtB,EAAsB1E,KAAK4f,SAAU,eAAgBlc,IAC9DA,EAAMxB,kBAGVlC,KAAKuxB,WAAWrtB,KAAKR,EAAM,IAC3B1D,KAAKswB,WAAW7J,QAAQ/iB,IACxB1D,KAAKyxB,WAAWvtB,KAAKR,EAAM,IAC3B1D,KAAKswB,WACb,CACAzN,SAAAA,CAAUwH,GACNhjB,EAAYrH,KAAKuE,QAAS,aAAc8lB,GACxChjB,EAAYrH,KAAKuE,QAAS,gBAAiB8lB,EAC/C,CACAsH,UAAAA,CAAWpE,GACHvtB,KAAKpD,SACLoD,KAAK4f,SAAS/L,YAAY7T,KAAKpD,QAAQ2H,SAE3CvE,KAAKpD,QAAU2wB,EACfvtB,KAAK4f,SAAS5N,YAAYhS,KAAKpD,QAAQ2H,QAC3C,CACA1C,OAAAA,GACI9B,MAAM8B,SACV,ECnFG,MAAM+vB,WAAyBpM,GAClC7lB,WAAAA,CAAY4E,EAASoqB,EAAUnM,GAC3BziB,MAAMwE,GACNvE,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAKc,cAAgBX,EAAuBC,cAC5CJ,KAAK6F,eAAenB,EAAsBH,EAAS,eAAgBJ,IAC3DA,EAAEosB,WAMkBpsB,EvBsG1B6E,IAA6B,EuBrG3B,IACD,GACP,CACA8c,WAAAA,CAAYniB,GACR,MAAqC,aAAjC3D,KAAKwiB,MAAMsB,IAAIrI,SAASnc,OAAwBqE,EAAO4sB,QAI/D,CACA5vB,OAAAA,CAAQkxB,GACJ,MAAM9L,EAAe8L,EAAU9L,aAC/B/lB,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK2uB,SAASlzB,GAAIuE,KAAKwiB,MAAM/mB,GAAI,OAAQiE,EAAcqB,WACrG,MAAMiJ,EAAQrB,OAAOmpB,iBAAiB9xB,KAAKkb,IACrC6W,EAAU/nB,EAAMgoB,iBAAiB,sDACjCC,EAAQjoB,EAAMgoB,iBAAiB,2CACrC,GAAIjM,EAAc,CACd,MAAMmM,EAAenqB,SAAS2L,cAAc,OAC5Cwe,EAAaloB,MAAMmoB,gBAAkBJ,EACrCG,EAAaloB,MAAMioB,MAAQA,EAC3BC,EAAaloB,MAAMooB,QAAU,UAC7BF,EAAaloB,MAAMT,OAAS,OAC5B2oB,EAAaloB,MAAMqoB,SAAW,OAC9BH,EAAaloB,MAAMqlB,WAAa,OAChC6C,EAAaloB,MAAMsoB,aAAe,OAClCJ,EAAaloB,MAAM+M,SAAW,WAC9Bmb,EAAaK,YAAe,oBAAmBvyB,KAAKwiB,MAAM3d,QC3C/D,SAAuBkhB,EAAcmM,GAExC9qB,EAAW8qB,EAAc,cACzBnqB,SAASinB,KAAKhd,YAAYkgB,GAC1BnM,EAAayM,aAAaN,EAAc,EAAG,GAC3CtpB,YAAW,KACP9B,EAAcorB,EAAc,cAC5BA,EAAa/qB,QAAQ,GACtB,EACP,CDmCYsrB,CAAc1M,EAAcmM,EAChC,CACA,MAAO,CACHrwB,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EE9CG,MAAM2xB,WAAsBltB,EAC/B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYgvB,EAAUnM,GAClBziB,QACAC,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAKknB,QAAU,IAAIlkB,EACnBhD,KAAKymB,OAASzmB,KAAKknB,QAAQxjB,MAC3B1D,KAAK2lB,aAAe,IAAI3iB,EACxBhD,KAAK4lB,YAAc5lB,KAAK2lB,aAAajiB,MACrC1D,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,iBAC1ByE,KAAK4f,SAASuN,SAAW,EACzBntB,KAAK4f,SAASiQ,WAAY,EAC1B7vB,KAAK6F,eAAe7F,KAAKknB,QAASlnB,KAAK2lB,aAAcjhB,EAAsB1E,KAAK4f,SAAU,eAAe,KACrG5f,KAAK2uB,SAASzM,iBAAiBliB,KAAKwiB,MAAM,KAE9C,MAAMsN,EAAU,IAAI8B,GAAiB5xB,KAAK4f,SAAU+O,EAAUnM,GAC9DxiB,KAAK2yB,WAAa,IAAI3L,GAAWhnB,KAAK4f,SAAU,CAC5C0H,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACvkB,EAAOqT,KACvB,IAAIzU,EACJ,MAAM5B,EAAOG,IACb,OAAIH,GAAQV,KAAK2uB,SAASlzB,KAAOiF,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKwiB,MAAM/mB,MAKW,QAAlC6G,GxBhCRuI,EwBgCkB7K,KAAKwiB,MAAMW,QxB/BnC5hB,OAAS,EAAIsJ,EAAIA,EAAItJ,OAAS,QAAKd,SwB+B4B,IAAP6B,OAAgB,EAASA,EAAG7G,MAAQiF,EAAKZ,QAEzF0iB,EAAMmG,MAAMV,kBAAkBvkB,EAAOqT,EAAU,gBxBlC/D,IAAclM,CwBkCgE,IAG7E7K,KAAK4kB,kBAAoB5kB,KAAK2yB,WAAW/N,kBACzC5kB,KAAK6F,eAAeiqB,EAASA,EAAQlK,aAAaliB,IAC9C1D,KAAK2lB,aAAazhB,KAAKR,EAAM,IAC7B1D,KAAK2yB,WAAWlM,QAAQ/iB,IACxB1D,KAAKknB,QAAQhjB,KAAKR,EAAM,IACxB1D,KAAK2yB,WACb,EC1CG,MAAMC,WAAsBptB,EAC/B,UAAI2d,GACA,OAAOnjB,KAAK6yB,KAAKn2B,KAAKmU,GAAMA,EAAEpO,MAAMkf,MAAMlmB,IAC9C,CACA,QAAIoJ,GACA,OAAO7E,KAAK6yB,KAAKtxB,MACrB,CACA,UAAIuxB,GACA,OAAO9yB,KAAK+yB,OAChB,CACA,UAAID,CAAOrwB,GACPzC,KAAK+yB,QAAUtwB,EACfzC,KAAKuE,QAAQyF,MAAMqkB,QAAU5rB,EAAQ,OAAS,EAClD,CACA+tB,IAAAA,GACSxwB,KAAK8yB,SACN9yB,KAAKuE,QAAQyF,MAAMqkB,QAAU,GAErC,CACAoC,IAAAA,GACIzwB,KAAK4f,SAAS5V,MAAMqkB,QAAU,MAClC,CACA2E,sBAAAA,CAAuBzuB,GACfvE,KAAKizB,eAAiB1uB,IAGtBvE,KAAKizB,eACLjzB,KAAKizB,aAAa9rB,SAClBnH,KAAKizB,kBAAexyB,GAEpB8D,IACAvE,KAAKkzB,sBAAsBlhB,YAAYzN,GACvCvE,KAAKizB,aAAe1uB,GAE5B,CACA4uB,qBAAAA,CAAsB5uB,GACdvE,KAAKozB,cAAgB7uB,IAGrBvE,KAAKozB,cACLpzB,KAAKozB,YAAYjsB,SACjBnH,KAAKozB,iBAAc3yB,GAEnB8D,IACAvE,KAAKqzB,qBAAqBrhB,YAAYzN,GACtCvE,KAAKozB,YAAc7uB,GAE3B,CACA+uB,uBAAAA,CAAwB/uB,GAChBvE,KAAKuzB,aAAehvB,IAGpBvE,KAAKuzB,aACLvzB,KAAKuzB,WAAWpsB,SAChBnH,KAAKuzB,gBAAa9yB,GAElB8D,IACAvE,KAAKwzB,oBAAoBxhB,YAAYzN,GACrCvE,KAAKuzB,WAAahvB,GAE1B,CACA,WAAIA,GACA,OAAOvE,KAAK4f,QAChB,CACAyK,QAAAA,CAASoJ,GACL,OAAQzzB,KAAK0zB,eAAiB,GAC1B1zB,KAAK6yB,KAAK7yB,KAAK0zB,eAAejxB,QAAUgxB,CAChD,CACA1vB,OAAAA,CAAQtI,GACJ,OAAOuE,KAAK6yB,KAAKvnB,WAAWmoB,GAAQA,EAAIhxB,MAAMkf,MAAMlmB,KAAOA,GAC/D,CACAkE,WAAAA,CAAYgvB,EAAUnM,GAClBziB,QACAC,KAAK2uB,SAAWA,EAChB3uB,KAAKwiB,MAAQA,EACbxiB,KAAK6yB,KAAO,GACZ7yB,KAAK0zB,eAAiB,EACtB1zB,KAAK+yB,SAAU,EACf/yB,KAAKknB,QAAU,IAAIlkB,EACnBhD,KAAKymB,OAASzmB,KAAKknB,QAAQxjB,MAC3B1D,KAAK2zB,gBAAkB,IAAI3wB,EAC3BhD,KAAK4zB,eAAiB5zB,KAAK2zB,gBAAgBjwB,MAC3C1D,KAAK6zB,kBAAoB,IAAI7wB,EAC7BhD,KAAK8zB,iBAAmB9zB,KAAK6zB,kBAAkBnwB,MAC/C1D,KAAKmnB,mBAAqB,IAAInkB,EAC9BhD,KAAK4kB,kBAAoB5kB,KAAKmnB,mBAAmBzjB,MACjD1D,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,6BAC1B8L,EAAYrH,KAAK4f,SAAU,2BAAoE,cAAxC5f,KAAK2uB,SAASprB,QAAQwwB,eAC7E/zB,KAAKkzB,sBAAwBnrB,SAAS2L,cAAc,OACpD1T,KAAKkzB,sBAAsB33B,UAAY,0BACvCyE,KAAKqzB,qBAAuBtrB,SAAS2L,cAAc,OACnD1T,KAAKqzB,qBAAqB93B,UAAY,yBACtCyE,KAAKwzB,oBAAsBzrB,SAAS2L,cAAc,OAClD1T,KAAKwzB,oBAAoBj4B,UAAY,wBACrCyE,KAAKg0B,aAAejsB,SAAS2L,cAAc,OAC3C1T,KAAKg0B,aAAaz4B,UAAY,iBAC9ByE,KAAKi0B,cAAgB,IAAIvB,GAAc1yB,KAAK2uB,SAAU3uB,KAAKwiB,OAC3DxiB,KAAK4f,SAAS5N,YAAYhS,KAAKwzB,qBAC/BxzB,KAAK4f,SAAS5N,YAAYhS,KAAKg0B,cAC/Bh0B,KAAK4f,SAAS5N,YAAYhS,KAAKqzB,sBAC/BrzB,KAAK4f,SAAS5N,YAAYhS,KAAKi0B,cAAc1vB,SAC7CvE,KAAK4f,SAAS5N,YAAYhS,KAAKkzB,uBAC/BlzB,KAAK6F,eAAe7F,KAAK2uB,SAAS3K,eAAe7f,IACzCA,EAAE2f,IAAItB,QAAUxiB,KAAKwiB,OACrBnb,EAAYrH,KAAK4f,SAAU,gBAA+B,IAAd5f,KAAK6E,KACrD,IACA7E,KAAK2uB,SAASzK,kBAAkB/f,IAC5BA,EAAE2f,IAAItB,QAAUxiB,KAAKwiB,OACrBnb,EAAYrH,KAAK4f,SAAU,gBAA+B,IAAd5f,KAAK6E,KACrD,IACA7E,KAAKmnB,mBAAoBnnB,KAAKknB,QAASlnB,KAAK2zB,gBAAiB3zB,KAAK6zB,kBAAmB7zB,KAAKi0B,cAAej0B,KAAKi0B,cAAcrO,aAAaliB,IACzI1D,KAAK6zB,kBAAkB3vB,KAAK,CACxByiB,YAAajjB,EACb8e,MAAOxiB,KAAKwiB,OACd,IACFxiB,KAAKi0B,cAAcxN,QAAQ/iB,IAC3B1D,KAAKknB,QAAQhjB,KAAK,CACdR,MAAOA,EAAMijB,YACb7iB,MAAO9D,KAAK6yB,KAAKtxB,QACnB,IACFvB,KAAKi0B,cAAcrP,mBAAmBlhB,IACtC1D,KAAKmnB,mBAAmBjjB,KAAK,IAAIgwB,GAA6BxwB,EAAO,CACjEywB,KAAM,eACNxS,MAAO3hB,KAAKwiB,MAAMwC,YAClBlB,IAAK9jB,KAAK2uB,SAAS7K,IACnBtB,MAAOxiB,KAAKwiB,MACZ7hB,QAASE,IACV,IACH6D,EAAsB1E,KAAKi0B,cAAc1vB,QAAS,eAAgBb,IAElE,IADiC1D,KAAK2uB,SAASprB,QAAQ6wB,uBAEnD1wB,EAAM6sB,UAC2B,aAAjCvwB,KAAKwiB,MAAMsB,IAAIrI,SAASnc,KAAqB,CAC7CoE,EAAMvB,iBACN,MAAM,IAAEkH,EAAG,KAAED,GAASpJ,KAAKuE,QAAQiF,yBAC3BH,IAAKgrB,EAASjrB,KAAMkrB,GAAat0B,KAAK2uB,SAASpqB,QAAQiF,wBAC/DxJ,KAAK2uB,SAAStJ,iBAAiBrlB,KAAKwiB,MAAO,CACvCpS,EAAGhH,EAAOkrB,EAAW,GACrBzM,EAAGxe,EAAMgrB,EAAU,GACnBE,YAAY,GAEpB,KACA7vB,EAAsB1E,KAAKg0B,aAAc,eAAgBtwB,IACzD,GAAIA,EAAMxB,iBACN,OAEiC,IAAjBwB,EAAM8wB,QAEtBx0B,KAAK2uB,SAASzM,iBAAiBliB,KAAKwiB,MACxC,IAER,CACAK,SAAAA,CAAU4R,GACN,CAEJC,MAAAA,CAAOjB,EAAK3vB,GACR,QADa,IAALA,IAAAA,EAAQ9D,KAAK6yB,KAAKtxB,QACtBuC,EAAQ,GAAKA,EAAQ9D,KAAK6yB,KAAKtxB,OAC/B,MAAM,IAAIgB,MAAM,oBAEpBvC,KAAKg0B,aAAalgB,aAAa2f,EAAIhxB,MAAM8B,QAASvE,KAAKg0B,aAAap4B,SAASkI,IAC7E9D,KAAK6yB,KAAO,IACL7yB,KAAK6yB,KAAKhrB,MAAM,EAAG/D,GACtB2vB,KACGzzB,KAAK6yB,KAAKhrB,MAAM/D,IAEnB9D,KAAK0zB,cAAgB,IACrB1zB,KAAK0zB,cAAgB5vB,EAE7B,CACAO,OAAO5I,GACH,MAAMqI,EAAQ9D,KAAK6yB,KAAKvnB,WAAWmoB,GAAQA,EAAIhxB,MAAMkf,MAAMlmB,KAAOA,IAC5Dk5B,EAAc30B,KAAK6yB,KAAK7uB,OAAOF,EAAO,GAAG,IACzC,MAAErB,EAAK,WAAE0D,GAAewuB,EAC9BxuB,EAAWtE,UACXY,EAAMZ,UACNY,EAAM8B,QAAQ4C,QAClB,CACAytB,cAAAA,CAAejT,GACX3hB,KAAK6yB,KAAK/wB,SAAS2xB,IACf,MAAMoB,EAAgBlT,EAAMlmB,KAAOg4B,EAAIhxB,MAAMkf,MAAMlmB,GACnDg4B,EAAIhxB,MAAMogB,UAAUgS,EAAc,GAE1C,CACA1D,SAAAA,CAAUxP,EAAO7d,GACb,IAAIxB,EACJ,QAFkB,IAALwB,IAAAA,EAAQ9D,KAAK6yB,KAAKtxB,QAE3BvB,KAAK6yB,KAAKiC,MAAMrB,GAAQA,EAAIhxB,MAAMkf,MAAMlmB,KAAOkmB,EAAMlmB,KACrD,OAEJ,MAAMg4B,EAAM,IAAInC,GAAI3P,EAAO3hB,KAAK2uB,SAAU3uB,KAAKwiB,OAC/C,KAA4B,QAArBlgB,EAAKqf,EAAMnV,YAAyB,IAAPlK,OAAgB,EAASA,EAAGmxB,KAC5D,MAAM,IAAIlxB,MAAM,4BAEpBkxB,EAAI9B,WAAWhQ,EAAMnV,KAAKinB,KAC1B,MAAMttB,EAAa,IAAIX,EAAoBiuB,EAAI7N,aAAaliB,IACxD1D,KAAK2zB,gBAAgBzvB,KAAK,CAAEyiB,YAAajjB,EAAOie,SAAQ,IACxD8R,EAAIjC,WAAW9tB,IACf,MAAMqxB,GAA2B/0B,KAAK2uB,SAASprB,QAAQ6wB,sBACjDY,EAA0D,aAAjCh1B,KAAKwiB,MAAMsB,IAAIrI,SAASnc,MACrC,IAAdU,KAAK6E,KACT,GAAIkwB,IACCC,GACDtxB,EAAM6sB,SAAU,CAChB7sB,EAAMvB,iBACN,MAAMwf,EAAQ3hB,KAAK2uB,SAAS1J,cAAcwO,EAAI9R,MAAMlmB,KAC9C,IAAE4N,EAAG,KAAED,GAASqqB,EAAIlvB,QAAQiF,yBAC1BH,IAAKgrB,EAASjrB,KAAMkrB,GAAat0B,KAAK2uB,SAASpqB,QAAQiF,wBAM/D,YALAxJ,KAAK2uB,SAAStJ,iBAAiB1D,EAAO,CAClCvR,EAAGhH,EAAOkrB,EACVzM,EAAGxe,EAAMgrB,EACTE,YAAY,GAGpB,CACqC,IAAjB7wB,EAAM8wB,SACN9wB,EAAMxB,kBAGtBlC,KAAKwiB,MAAMwC,cAAgBrD,GAC3B3hB,KAAKwiB,MAAMmG,MAAMwI,UAAUxP,EAC/B,IACA8R,EAAIhN,QAAQ/iB,IACZ1D,KAAKknB,QAAQhjB,KAAK,CACdR,MAAOA,EAAMijB,YACb7iB,MAAO9D,KAAK6yB,KAAKvnB,WAAW8E,GAAMA,EAAE3N,QAAUgxB,KAChD,IACFA,EAAI7O,mBAAmBlhB,IACvB1D,KAAKmnB,mBAAmBjjB,KAAK,IAAIgwB,GAA6BxwB,EAAO,CACjEywB,KAAM,MACNxS,MAAO3hB,KAAKwiB,MAAMwC,YAClBlB,IAAK9jB,KAAK2uB,SAAS7K,IACnBtB,MAAOxiB,KAAKwiB,MACZ7hB,QAASE,IACV,KAED4B,EAAQ,CAAEA,MAAOgxB,EAAKttB,cAC5BnG,KAAK00B,OAAOjyB,EAAOqB,EACvB,CACAstB,UAAAA,CAAWzP,GACP3hB,KAAKqE,OAAOsd,EAAMlmB,GACtB,CACAoG,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAM,MAAEY,EAAK,WAAE0D,KAAgBnG,KAAK6yB,KACrC1sB,EAAWtE,UACXY,EAAMZ,UAEV7B,KAAK6yB,KAAO,EAChB,EC/PG,MAAMoC,GACT,cAAIC,GACA,OAAOl1B,KAAKm1B,WAChB,CACAx1B,WAAAA,CAAYgnB,EAAaR,EAAQpP,EAAUpW,EAAS6hB,GAChDxiB,KAAK2mB,YAAcA,EACnB3mB,KAAKmmB,OAASA,EACdnmB,KAAK+W,SAAWA,EAChB/W,KAAKW,QAAUA,EACfX,KAAKwiB,MAAQA,EACbxiB,KAAKm1B,aAAc,CACvB,CACAC,MAAAA,GACIp1B,KAAKm1B,aAAc,CACvB,EAEG,MAAME,GAAgB,MAKzB,MAAMC,EAAa,CACftU,yBAAqBvgB,EACrB80B,iBAAa90B,EACbszB,mBAAetzB,EACf2zB,2BAAuB3zB,EACvB+0B,yBAAqB/0B,EACrBg1B,eAAWh1B,EACXi1B,qBAAiBj1B,EACjBk1B,WAAOl1B,EACPm1B,sBAAkBn1B,EAClB8b,YAAQ9b,EACRgvB,gBAAYhvB,EACZgkB,SAAKhkB,EACLlF,eAAWkF,GAEf,OAAOmjB,OAAO+J,KAAK2H,EACtB,EArB4B,GCRtB,MAAMO,WAA6B7zB,EACtC,eAAI2kB,GACA,OAAO3mB,KAAKuD,QAAQojB,WACxB,CACA,YAAI5P,GACA,OAAO/W,KAAKuD,QAAQwT,QACxB,CACA,SAAI4K,GACA,OAAO3hB,KAAKuD,QAAQoe,KACxB,CACA,SAAIa,GACA,OAAOxiB,KAAKuD,QAAQif,KACxB,CACA,OAAIsB,GACA,OAAO9jB,KAAKuD,QAAQugB,GACxB,CACAnkB,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,CACnB,CACA5C,OAAAA,GACI,OAAOX,KAAKuD,QAAQ5C,SACxB,EAEG,MAAMm1B,WAA8BD,GACvC,QAAI1B,GACA,OAAOn0B,KAAK+1B,KAChB,CACAp2B,WAAAA,CAAY4D,GACRxD,MAAMwD,GACNvD,KAAK+1B,MAAQxyB,EAAQ4wB,IACzB,EAEG,MAAMD,GACT,QAAIC,GACA,OAAOn0B,KAAKuD,QAAQ4wB,IACxB,CACA,eAAIxN,GACA,OAAO3mB,KAAK0D,MAAMijB,WACtB,CACA,YAAI5P,GACA,OAAO/W,KAAK0D,MAAMqT,QACtB,CACA,oBAAI7U,GACA,OAAOlC,KAAK0D,MAAMxB,gBACtB,CACA,SAAIyf,GACA,OAAO3hB,KAAKuD,QAAQoe,KACxB,CACA,OAAImC,GACA,OAAO9jB,KAAKuD,QAAQugB,GACxB,CACA,SAAItB,GACA,OAAOxiB,KAAKuD,QAAQif,KACxB,CACArgB,cAAAA,GACInC,KAAK0D,MAAMvB,gBACf,CACAxB,OAAAA,GACI,OAAOX,KAAKuD,QAAQ5C,SACxB,CACAhB,WAAAA,CAAY+D,EAAOH,GACfvD,KAAK0D,MAAQA,EACb1D,KAAKuD,QAAUA,CACnB,EAEG,MAAMyyB,WAAgCxwB,EACzC,WAAIjB,GACA,MAAM,IAAIhC,MAAM,gBACpB,CACA,eAAIyiB,GACA,OAAOhlB,KAAKi2B,YAChB,CACA,UAAI1Z,GACA,OAAOvc,KAAKwc,OAChB,CACA,UAAID,CAAO9Z,GACPzC,KAAKwc,QAAU/Z,EACf4E,EAAYrH,KAAK+M,UAAW,mBAA8B,mBAAVtK,GAA8BA,EAClF,CACA,YAAI4nB,GACA,OAAOrqB,KAAKy0B,cAChB,CACA,UAAItR,GACA,OAAOnjB,KAAKk2B,OAChB,CACA,QAAIrxB,GACA,OAAO7E,KAAKk2B,QAAQ30B,MACxB,CACA,WAAI40B,GACA,OAA+B,IAAxBn2B,KAAKk2B,QAAQ30B,MACxB,CACA,gBAAI60B,GACA,SAAUp2B,KAAKq2B,YAAar2B,KAAK+M,UAAU7F,SAASlH,KAAKq2B,UAAU9xB,SACvE,CACA,UAAI6pB,GACA,OAAOpuB,KAAKs2B,aAChB,CACA,oBAAIC,GACA,QAAKxuB,SAASQ,eAGPf,EAAWO,SAASQ,cAAevI,KAAKw2B,iBAAiBjyB,QACpE,CACA,YAAIkX,GACA,OAAOzb,KAAKy2B,SAChB,CACA,YAAIhb,CAAShZ,GAIT,OAHAzC,KAAKy2B,UAAYh0B,EACjB4E,EAAYrH,KAAK+M,UAAW,yBAAyB,GACrD1F,EAAYrH,KAAK+M,UAAW,uBAAuB,GAC3CtK,EAAMnD,MACV,IAAK,OACDU,KAAKw2B,iBAAiBlG,WAAW7H,eAAe,CAC5C,MACA,SACA,OACA,QACA,WAEJ,MACJ,IAAK,WACDzoB,KAAKw2B,iBAAiBlG,WAAW7H,eAAe,CAAC,WACjDzoB,KAAKw2B,iBAAiBlG,WAAW7H,eAAehmB,EAC1C,CAAC,UACD,CAAC,MAAO,SAAU,OAAQ,QAAS,WACzC4E,EAAYrH,KAAK+M,UAAW,yBAAyB,GACrD,MACJ,IAAK,SACD/M,KAAKw2B,iBAAiBlG,WAAW7H,eAAe,CAAC,WACjDphB,EAAYrH,KAAK+M,UAAW,uBAAuB,GAG3D/M,KAAK02B,WAAW5S,IAAI6S,qBAAqBzyB,KAAK,CAC1CuX,SAAUzb,KAAKyb,UAEvB,CACA9b,WAAAA,CAAYoN,EAAW4hB,EAAUlzB,EAAI8H,EAASmzB,GAC1C,IAAIp0B,EACJvC,QACAC,KAAK+M,UAAYA,EACjB/M,KAAK2uB,SAAWA,EAChB3uB,KAAKvE,GAAKA,EACVuE,KAAKuD,QAAUA,EACfvD,KAAK02B,WAAaA,EAClB12B,KAAKy0B,gBAAiB,EACtBz0B,KAAKwc,SAAU,EACfxc,KAAKy2B,UAAY,CAAEn3B,KAAM,QACzBU,KAAK42B,iBAAmB,GACxB52B,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAKwqB,OAAS,EACdxqB,KAAKyqB,QAAU,EACfzqB,KAAKk2B,QAAU,GACfl2B,KAAK62B,kBAAoB,IAAIjyB,IAC7B5E,KAAK82B,QAAU,IAAI9zB,EACnBhD,KAAK+2B,OAAS/2B,KAAK82B,QAAQpzB,MAC3B1D,KAAK0vB,WAAa,IAAI1sB,EACtBhD,KAAK0jB,UAAY1jB,KAAK0vB,WAAWhsB,MACjC1D,KAAKg3B,YAAc,IAAIh0B,EACvBhD,KAAK2kB,WAAa3kB,KAAKg3B,YAAYtzB,MACnC1D,KAAKmnB,mBAAqB,IAAInkB,EAC9BhD,KAAK4kB,kBAAoB5kB,KAAKmnB,mBAAmBzjB,MACjD1D,KAAK2zB,gBAAkB,IAAI3wB,EAC3BhD,KAAK4zB,eAAiB5zB,KAAK2zB,gBAAgBjwB,MAC3C1D,KAAK6zB,kBAAoB,IAAI7wB,EAC7BhD,KAAK8zB,iBAAmB9zB,KAAK6zB,kBAAkBnwB,MAC/C1D,KAAKi3B,eAAiB,IAAIj0B,EAC1BhD,KAAKgkB,cAAgBhkB,KAAKi3B,eAAevzB,MACzC1D,KAAKk3B,uBAAyB,IAAIl0B,EAClChD,KAAKm3B,sBAAwBn3B,KAAKk3B,uBAAuBxzB,MACzD1D,KAAKo3B,4BAA8B,IAAIp0B,EACvChD,KAAKq3B,2BAA6Br3B,KAAKo3B,4BAA4B1zB,MACnE1D,KAAKs3B,kBAAoB,IAAIt0B,EAC7BhD,KAAKkkB,iBAAmBlkB,KAAKs3B,kBAAkB5zB,MAC/C1D,KAAKu3B,wBAA0B,IAAIv0B,EACnChD,KAAKokB,uBAAyBpkB,KAAKu3B,wBAAwB7zB,MAC3D1D,KAAKw3B,0BAA4B,IAAIx0B,EACrChD,KAAK+kB,yBAA2B/kB,KAAKw3B,0BAA0B9zB,MAC/D1D,KAAKy3B,0BAA4B,KACjCpwB,EAAYrH,KAAK+M,UAAW,aAAa,GACzC/M,KAAK03B,KAAO,IAAInT,GAAYvkB,KAAK2uB,UACjC3uB,KAAKs2B,cAAgB,IAAI1D,GAAc5yB,KAAK2uB,SAAU3uB,KAAK02B,YAC3D12B,KAAKw2B,iBAAmB,IAAInG,GAAiBrwB,KAAK2uB,SAAU3uB,MAC5D+M,EAAUub,OAAOtoB,KAAKs2B,cAAc/xB,QAASvE,KAAKw2B,iBAAiBjyB,SACnEvE,KAAKouB,OAAO0E,SAAWvvB,EAAQo0B,WAC/B33B,KAAKuc,OAAmC,QAAzBja,EAAKiB,EAAQgZ,cAA2B,IAAPja,GAAgBA,EAChEtC,KAAK6F,eAAe7F,KAAK2zB,gBAAiB3zB,KAAK6zB,kBAAmB7zB,KAAKmnB,mBAAoBnnB,KAAKs2B,cAAc1C,gBAAgBlwB,IAC1H1D,KAAK2zB,gBAAgBzvB,KAAKR,EAAM,IAChC1D,KAAKs2B,cAAcxC,kBAAkBpwB,IACrC1D,KAAK6zB,kBAAkB3vB,KAAKR,EAAM,IAClC1D,KAAKs2B,cAAc7P,QAAQ/iB,IAC3B1D,KAAK43B,gBAAgB,SAAUl0B,EAAMA,MAAO,SAAUA,EAAMI,MAAM,IAClE9D,KAAKw2B,iBAAiBruB,YAAW,KACjCnI,KAAK2uB,SAASzM,iBAAiBliB,KAAK02B,WAAW,IAC/C12B,KAAKw2B,iBAAiBnuB,WAAU,SAEhCrI,KAAKw2B,iBAAiBlG,WAAW7J,QAAQ/iB,IACzC1D,KAAK43B,gBAAgB,UAAWl0B,EAAMijB,YAAajjB,EAAMqT,SAAS,IAClE/W,KAAKs2B,cAAc1R,mBAAmBlhB,IACtC1D,KAAKmnB,mBAAmBjjB,KAAKR,EAAM,IACnC1D,KAAKw2B,iBAAiBlG,WAAW1L,mBAAmBlhB,IACpD1D,KAAKmnB,mBAAmBjjB,KAAK,IAAIgwB,GAA6BxwB,EAAO,CACjEywB,KAAM,UACNxS,MAAO3hB,KAAKglB,YACZlB,IAAK9jB,KAAK03B,KACVlV,MAAOxiB,KAAK02B,WACZ/1B,QAASE,IACV,IACHb,KAAK82B,QAAS92B,KAAK6X,aAAc7X,KAAK0vB,WAAY1vB,KAAKg3B,YAAah3B,KAAKi3B,eAAgBj3B,KAAKs3B,kBAAmBt3B,KAAKu3B,wBAAyBv3B,KAAKw3B,0BAC5J,CACAK,YAAAA,GACI73B,KAAKw2B,iBAAiBjyB,QAAQ+e,OAClC,CACA,mBAAIyN,CAAgBtuB,GAChBzC,KAAKmjB,OAAOrhB,SAAS6f,IACjB3hB,KAAK+wB,gBAAgBC,QAAQrP,EAAM,IAEvC3hB,KAAKy3B,0BAA4Bh1B,EACjCzC,KAAKmjB,OAAOrhB,SAAS6f,IACjB3hB,KAAK83B,SAASnW,EAAM,GAE5B,CACA,mBAAIoP,GACA,IAAIzuB,EACJ,OAAkD,QAAzCA,EAAKtC,KAAKy3B,iCAA8C,IAAPn1B,EAAgBA,EAAKtC,KAAK2uB,SAASoJ,sBACjG,CACAtM,UAAAA,GACQzrB,KAAKuD,QAAQ4f,QACbnjB,KAAKuD,QAAQ4f,OAAOrhB,SAAS6f,IACzB3hB,KAAKg4B,WAAWrW,EAAM,IAG1B3hB,KAAKuD,QAAQyhB,aACbhlB,KAAKmxB,UAAUnxB,KAAKuD,QAAQyhB,aAIhChlB,KAAK6iB,UAAU7iB,KAAKqqB,UAAU,GAC9BrqB,KAAKi4B,kBACDj4B,KAAK2uB,SAASprB,QAAQ20B,mCACtBl4B,KAAKm4B,oBACDn4B,KAAK2uB,SAASprB,QAAQ20B,iCAAiCl4B,KAAK02B,YAChE12B,KAAK6F,eAAe7F,KAAKm4B,qBACzBn4B,KAAKm4B,oBAAoB3K,KAAK,CAC1BwC,aAAchwB,KAAK03B,KACnB5T,IAAK9jB,KAAK02B,WAAW5S,IACrBtB,MAAOxiB,KAAK02B,aAEhB12B,KAAKs2B,cAActD,uBAAuBhzB,KAAKm4B,oBAAoB5zB,UAEnEvE,KAAK2uB,SAASprB,QAAQ60B,kCACtBp4B,KAAKq4B,mBACDr4B,KAAK2uB,SAASprB,QAAQ60B,gCAAgCp4B,KAAK02B,YAC/D12B,KAAK6F,eAAe7F,KAAKq4B,oBACzBr4B,KAAKq4B,mBAAmB7K,KAAK,CACzBwC,aAAchwB,KAAK03B,KACnB5T,IAAK9jB,KAAK02B,WAAW5S,IACrBtB,MAAOxiB,KAAK02B,aAEhB12B,KAAKs2B,cAAcnD,sBAAsBnzB,KAAKq4B,mBAAmB9zB,UAEjEvE,KAAK2uB,SAASprB,QAAQ+0B,oCACtBt4B,KAAKu4B,qBACDv4B,KAAK2uB,SAASprB,QAAQ+0B,kCAAkCt4B,KAAK02B,YACjE12B,KAAK6F,eAAe7F,KAAKu4B,sBACzBv4B,KAAKu4B,qBAAqB/K,KAAK,CAC3BwC,aAAchwB,KAAK03B,KACnB5T,IAAK9jB,KAAK02B,WAAW5S,IACrBtB,MAAOxiB,KAAK02B,aAEhB12B,KAAKs2B,cAAchD,wBAAwBtzB,KAAKu4B,qBAAqBh0B,SAE7E,CACAuzB,QAAAA,CAASnW,GACL3hB,KAAKw2B,iBAAiB9F,YAAY/O,EAAO,CAAEgP,UAAU,GACzD,CACA5sB,OAAAA,CAAQ4d,GACJ,OAAO3hB,KAAKs2B,cAAcvyB,QAAQ4d,EAAMlmB,GAC5C,CACA0gB,MAAAA,GACI,IAAI7Z,EACJ,MAAM2J,EAAS,CACXkG,MAAOnS,KAAKs2B,cAAcnT,OAC1BqV,WAAyC,QAA5Bl2B,EAAKtC,KAAKi2B,oBAAiC,IAAP3zB,OAAgB,EAASA,EAAG7G,GAC7EA,GAAIuE,KAAKvE,IAQb,OANoB,IAAhBuE,KAAKuc,SACLtQ,EAAOsQ,OAASvc,KAAKuc,QAErBvc,KAAKouB,OAAO0E,SACZ7mB,EAAO0rB,YAAa,GAEjB1rB,CACX,CACA8W,UAAAA,CAAWxf,GACFA,IACDA,EAAU,CAAC,GAEVA,EAAQoe,QACTpe,EAAQoe,MAAQ3hB,KAAKglB,aAEzB,MAAMlhB,EAAQP,EAAQoe,MAAQ3hB,KAAKmjB,OAAOpf,QAAQR,EAAQoe,QAAU,EACpE,IAAI8W,EACJ,GAAI30B,EAAQ9D,KAAKmjB,OAAO5hB,OAAS,EAC7Bk3B,EAAkB30B,EAAQ,MAEzB,IAAKP,EAAQm1B,aAId,OAHAD,EAAkB,CAItB,CACAz4B,KAAKmxB,UAAUnxB,KAAKmjB,OAAOsV,GAC/B,CACAzV,cAAAA,CAAezf,GAOX,GANKA,IACDA,EAAU,CAAC,GAEVA,EAAQoe,QACTpe,EAAQoe,MAAQ3hB,KAAKglB,cAEpBzhB,EAAQoe,MACT,OAEJ,MAAM7d,EAAQ9D,KAAKmjB,OAAOpf,QAAQR,EAAQoe,OAC1C,IAAI8W,EACJ,GAAI30B,EAAQ,EACR20B,EAAkB30B,EAAQ,MAEzB,IAAKP,EAAQm1B,aAId,OAHAD,EAAkBz4B,KAAKmjB,OAAO5hB,OAAS,CAI3C,CACAvB,KAAKmxB,UAAUnxB,KAAKmjB,OAAOsV,GAC/B,CACAE,aAAAA,CAAchX,GACV,OAAO3hB,KAAKmjB,OAAO3F,SAASmE,EAChC,CACA6L,IAAAA,CAAKN,GACD,CAEJvB,MAAAA,CAAOuB,GACH,CAEJ5J,KAAAA,GACI,IAAIhhB,EACyB,QAA5BA,EAAKtC,KAAKi2B,oBAAiC,IAAP3zB,GAAyBA,EAAGghB,OACrE,CACA6N,SAAAA,CAAUxP,EAAOpe,QAAO,IAAPA,IAAAA,EAAU,CAAC,IAOK,iBAAlBA,EAAQO,OACfP,EAAQO,MAAQ9D,KAAKmjB,OAAO5hB,UAC5BgC,EAAQO,MAAQ9D,KAAKmjB,OAAO5hB,QAEhC,MAAMq3B,IAAkBr1B,EAAQq1B,cAEhCjX,EAAMkX,kBAAkB74B,KAAK02B,WAAY,CACrCkC,cAAer1B,EAAQq1B,gBAE3B54B,KAAKg4B,WAAWrW,EAAOpe,EAAQO,MAAO,CAClC80B,cAAeA,IAEf54B,KAAKi2B,eAAiBtU,GAIrBiX,GACD54B,KAAK84B,iBAAiBnX,GAErBpe,EAAQw1B,oBACT/4B,KAAK2uB,SAASzM,iBAAiBliB,KAAK02B,YAEnCnzB,EAAQq1B,eACT54B,KAAKi4B,mBAVLj4B,KAAKw2B,iBAAiB9F,YAAY/O,EAAO,CAAEgP,UAAU,GAY7D,CACAtN,WAAAA,CAAY2V,EAAez1B,QAAO,IAAPA,IAAAA,EAAU,CACjCq1B,eAAe,IAEf,MAAMn9B,EAA8B,iBAAlBu9B,EACZA,EACAA,EAAcv9B,GACdw9B,EAAgBj5B,KAAKk2B,QAAQpB,MAAMnT,GAAUA,EAAMlmB,KAAOA,IAChE,IAAKw9B,EACD,MAAM,IAAI12B,MAAM,qBAEpB,OAAOvC,KAAKk5B,aAAaD,EAAe11B,EAC5C,CACA41B,cAAAA,GACI,GAAIn5B,KAAKmjB,OAAO5hB,OAAS,EAAG,CAExB,MAAM63B,EAAc,IAAIp5B,KAAKmjB,QAC7B,IAAK,MAAMxB,KAASyX,EAChBp5B,KAAKq5B,QAAQ1X,EAErB,MAEI3hB,KAAK2uB,SAAS7L,YAAY9iB,KAAK02B,WAEvC,CACAtF,UAAAA,CAAWzP,GACP3hB,KAAKq5B,QAAQ1X,EACjB,CACA0X,OAAAA,CAAQ1X,GACJ3hB,KAAK2uB,SAAStL,YAAY1B,EAC9B,CACAkP,aAAAA,CAAclP,GACV,OAAO3hB,KAAKi2B,eAAiBtU,CACjC,CACA2X,aAAAA,CAAc/0B,GACVvE,KAAKs2B,cAActD,uBAAuBzuB,EAC9C,CACAse,SAAAA,CAAU0W,EAAejV,QAAK,IAALA,IAAAA,GAAQ,IACxBA,GAAStkB,KAAKqqB,WAAakP,KAGhCv5B,KAAKy0B,eAAiB8E,EACtBlyB,EAAYrH,KAAK+M,UAAW,eAAgBwsB,GAC5ClyB,EAAYrH,KAAK+M,UAAW,kBAAmBwsB,GAC/Cv5B,KAAKs2B,cAAczT,UAAU7iB,KAAKqqB,WAC7BrqB,KAAKi2B,cAAgBj2B,KAAKmjB,OAAO5hB,OAAS,GAC3CvB,KAAK84B,iBAAiB94B,KAAKmjB,OAAO,IAEtCnjB,KAAKi4B,kBACT,CACA1iB,MAAAA,CAAOjM,EAAOC,GACV,IAAIjH,EACJtC,KAAKwqB,OAASlhB,EACdtJ,KAAKyqB,QAAUlhB,EACfvJ,KAAKw2B,iBAAiBjhB,OAAOvV,KAAKwqB,OAAQxqB,KAAKyqB,UACd,QAA5BnoB,EAAKtC,KAAKi2B,oBAAiC,IAAP3zB,OAAgB,EAASA,EAAGiT,SACjEvV,KAAKi2B,aAAa1gB,OAAOvV,KAAKwqB,OAAQxqB,KAAKyqB,QAEnD,CACAyO,YAAAA,CAAavX,EAAOpe,GAChB,MAAMsxB,EAAgB70B,KAAKi2B,eAAiBtU,EAE5C,GADA3hB,KAAKw5B,cAAc7X,GACfkT,GAAiB70B,KAAKmjB,OAAO5hB,OAAS,EAAG,CACzC,MAAMk4B,EAAYz5B,KAAK42B,iBAAiB,GACxC52B,KAAKmxB,UAAUsI,EAAW,CACtBb,cAAer1B,EAAQq1B,cACvBG,mBAAoBx1B,EAAQm2B,oBAEpC,CAOA,OANI15B,KAAKi2B,cAAuC,IAAvBj2B,KAAKmjB,OAAO5hB,QACjCvB,KAAK84B,sBAAiBr4B,GAErB8C,EAAQq1B,eACT54B,KAAKi4B,kBAEFtW,CACX,CACA6X,aAAAA,CAAc7X,GACV,MAAM7d,EAAQ9D,KAAKmjB,OAAOpf,QAAQ4d,GAMlC,GALI3hB,KAAKi2B,eAAiBtU,GACtB3hB,KAAKw2B,iBAAiBpF,aAE1BpxB,KAAKs2B,cAAcjyB,OAAOsd,EAAMlmB,IAChCuE,KAAKk2B,QAAQlyB,OAAOF,EAAO,GACvB9D,KAAK42B,iBAAiBpZ,SAASmE,GAAQ,CACvC,MAAM7d,EAAQ9D,KAAK42B,iBAAiB7yB,QAAQ4d,GAC5C3hB,KAAK42B,iBAAiB5yB,OAAOF,EAAO,EACxC,CACA,MAAMqC,EAAanG,KAAK62B,kBAAkB1sB,IAAIwX,EAAMlmB,IAChD0K,IACAA,EAAWtE,UACX7B,KAAK62B,kBAAkBxyB,OAAOsd,EAAMlmB,KAExCuE,KAAKs3B,kBAAkBpzB,KAAK,CAAEyd,SAClC,CACAqW,UAAAA,CAAWrW,EAAO7d,EAA4BP,QAAvB,IAALO,IAAAA,EAAQ9D,KAAKmjB,OAAO5hB,aAAe,IAAPgC,IAAAA,EAAU,CAAEq1B,eAAe,IACrE,MACMe,EADgB35B,KAAKk2B,QAAQnyB,QAAQ4d,IACD,EAC1C3hB,KAAKs2B,cAAc9F,OACnBxwB,KAAKw2B,iBAAiBhG,OACtBxwB,KAAKs2B,cAAcnF,UAAUxP,EAAO7d,GAC/BP,EAAQq1B,eACT54B,KAAKw2B,iBAAiBrF,UAAUxP,GAEhCgY,IAIJ35B,KAAK45B,UAAUjY,GACf3hB,KAAKmjB,OAAOnf,OAAOF,EAAO,EAAG6d,GAC7B3hB,KAAK62B,kBAAkB/xB,IAAI6c,EAAMlmB,GAAI,IAAI+J,EAAoBmc,EAAMmC,IAAI+V,kBAAkBn2B,GAAU1D,KAAKk3B,uBAAuBhzB,KAAKR,KAASie,EAAMmC,IAAIyH,uBAAuB7nB,GAAU1D,KAAKo3B,4BAA4BlzB,KAAKR,OAC9N1D,KAAKi3B,eAAe/yB,KAAK,CAAEyd,UAC/B,CACAmX,gBAAAA,CAAiBnX,GACT3hB,KAAKi2B,eAAiBtU,IAG1B3hB,KAAKi2B,aAAetU,EAChBA,IACA3hB,KAAKs2B,cAAc1B,eAAejT,GAClCA,EAAMpM,OAAOvV,KAAKwqB,OAAQxqB,KAAKyqB,SAC/BzqB,KAAK45B,UAAUjY,GACf3hB,KAAKu3B,wBAAwBrzB,KAAK,CAC9Byd,WAGZ,CACAiY,SAAAA,CAAUjY,GACF3hB,KAAK42B,iBAAiBpZ,SAASmE,IAC/B3hB,KAAK42B,iBAAiB5yB,OAAOhE,KAAK42B,iBAAiB7yB,QAAQ4d,GAAQ,GAEvE3hB,KAAK42B,iBAAmB,CAACjV,KAAU3hB,KAAK42B,iBAC5C,CACAqB,eAAAA,GACI,IAAI31B,EAAIwf,EAGR,GAFAza,EAAYrH,KAAK+M,UAAW,QAAS/M,KAAKm2B,SAC1Cn2B,KAAKmjB,OAAOrhB,SAAS6f,GAAUA,EAAMmY,cACjC95B,KAAKm2B,UAAYn2B,KAAKq2B,UAAW,CACjC,MAAMA,EAAYr2B,KAAK2uB,SAASoL,2BAChC1D,EAAU7I,KAAK,CACXwC,aAAchwB,KAAK03B,KACnBlV,MAAOxiB,KAAK02B,aAEhB12B,KAAKq2B,UAAYA,EACjB3xB,EAAsB1E,KAAKq2B,UAAU9xB,QAAS,eAAe,KACpDvE,KAAKqqB,UACNrqB,KAAK2uB,SAASzM,iBAAiBliB,KAAK02B,WACxC,IAEJ12B,KAAKs2B,cAAc7F,OACnBzwB,KAAKw2B,iBAAiBjyB,QAAQyN,YAAYhS,KAAKq2B,UAAU9xB,QAC7D,EACKvE,KAAKm2B,SAAWn2B,KAAKq2B,YACtBr2B,KAAKq2B,UAAU9xB,QAAQ4C,SACkB,QAAxC2a,GAAMxf,EAAKtC,KAAKq2B,WAAWx0B,eAA4B,IAAPigB,GAAyBA,EAAGha,KAAKxF,GAClFtC,KAAKq2B,eAAY51B,EACjBT,KAAKs2B,cAAc9F,OAE3B,CACAvI,iBAAAA,CAAkBvkB,EAAOqT,EAAUoP,GAC/B,MAAM6T,EAAa,IAAI/E,GAA+BvxB,EAAOyiB,EAAQpP,EAAUlW,EAAcb,KAAK2uB,SAAS/L,SAAS5iB,KAAKvE,KAEzH,OADAuE,KAAKw3B,0BAA0BtzB,KAAK81B,GAC7BA,EAAW9E,UACtB,CACA0C,eAAAA,CAAgBt4B,EAAMoE,EAAOqT,EAAUjT,GACnC,GAAoB,mBAAhB9D,KAAKuc,OACL,OAUJ,MAAMoF,EAAyB,iBAAV7d,EAAqB9D,KAAKmjB,OAAOrf,QAASrD,EACzDw5B,EAAgB,IAAInE,GAAsB,CAC5CnP,YAAajjB,EACbqT,WACA4K,QACAhhB,QAASA,IAAME,IACfszB,KAdJ,WACI,OAAQ70B,GACJ,IAAK,SACD,MAAwB,iBAAVwE,EAAqB,MAAQ,eAC/C,IAAK,UACD,MAAO,UAEnB,CAOUo2B,GACN1X,MAAOxiB,KAAK02B,WACZ5S,IAAK9jB,KAAK03B,OAGd,GADA13B,KAAKg3B,YAAY9yB,KAAK+1B,GAClBA,EAAc/3B,iBACd,OAEJ,MAAMxB,EAAOG,IACb,GAAIH,GAAQA,EAAKd,SAAWI,KAAK2uB,SAASlzB,GAAI,CAC1C,GAAqB,OAAjBiF,EAAKZ,QAAkB,CAEvB,MAAM,QAAED,GAAYa,EAMpB,YALAV,KAAK82B,QAAQ5yB,KAAK,CACdiiB,OAAQpP,EACRlX,QAASA,EACTiE,SAGR,CAEA,IADoE,IAA9C9D,KAAKs2B,cAAcvyB,QAAQrD,EAAKZ,UACL,IAA5BE,KAAKs2B,cAAczxB,KACpC,OAEJ,MAAM,QAAEhF,EAAO,QAAEC,GAAYY,EAE7B,GADoBV,KAAKvE,KAAOoE,IACZkX,EAAU,CAE1B,GADiB/W,KAAKs2B,cAAcvyB,QAAQjE,KAC3BgE,EACb,MAER,CACA9D,KAAK82B,QAAQ5yB,KAAK,CACdiiB,OAAQpP,EACRlX,QAASa,EAAKb,QACds6B,OAAQz5B,EAAKZ,QACbgE,SAER,MAEI9D,KAAK0vB,WAAWxrB,KAAK,IAAI2xB,GAAqB,CAC1ClP,YAAajjB,EACbqT,WACA4K,QACAhhB,QAASA,IAAME,IACf2hB,MAAOxiB,KAAK02B,WACZ5S,IAAK9jB,KAAK03B,OAGtB,CACA71B,OAAAA,GACI,IAAIS,EAAIwf,EAAIC,EACZhiB,MAAM8B,UACoB,QAAzBS,EAAKtC,KAAKq2B,iBAA8B,IAAP/zB,GAAyBA,EAAGiC,QAAQ4C,SACW,QAAhF4a,EAA+B,QAAzBD,EAAK9hB,KAAKq2B,iBAA8B,IAAPvU,OAAgB,EAASA,EAAGjgB,eAA4B,IAAPkgB,GAAyBA,EAAGja,KAAKga,GAC1H9hB,KAAKq2B,eAAY51B,EACjB,IAAK,MAAMkhB,KAAS3hB,KAAKmjB,OACrBxB,EAAM9f,UAEV7B,KAAKs2B,cAAcz0B,UACnB7B,KAAKw2B,iBAAiB30B,SAC1B,ECxnBG,MAAMu4B,WAA6BlQ,GACtCvqB,WAAAA,CAAYlE,EAAIa,EAAWqlB,GACvB5hB,MAAMtE,EAAIa,GACV0D,KAAK+rB,gCAAkC,IAAI/oB,EAC3ChD,KAAKgsB,+BAAiChsB,KAAK+rB,gCAAgCroB,MAC3E1D,KAAKisB,wBAA0B,IAAIjpB,EACnChD,KAAKksB,uBAAyBlsB,KAAKisB,wBAAwBvoB,MAC3D1D,KAAKmsB,iBAAmB,IAAInpB,EAC5BhD,KAAKosB,gBAAkBpsB,KAAKmsB,iBAAiBzoB,MAC7C1D,KAAK6F,eAAe7F,KAAK+rB,gCAAiC/rB,KAAKisB,wBAAyBjsB,KAAKmsB,kBACzFxK,GACA3hB,KAAKyrB,WAAW9J,EAExB,CACA0K,cAAAA,CAAe5pB,GACXzC,KAAK+rB,gCAAgC7nB,KAAKzB,EAC9C,CACA6pB,OAAAA,CAAQ5oB,GACJ1D,KAAKmsB,iBAAiBjoB,KAAKR,EAC/B,EClBG,MAAM22B,WAAsBpN,GAC/B,YAAIrgB,GACA,OAAO5M,KAAKs6B,SAChB,CACA,QAAIztB,GACA,OAAO7M,KAAKu6B,KAChB,CACA,gBAAI9hB,GACA,MAAMnP,EAAsC,mBAAvBtJ,KAAKw6B,cACpBx6B,KAAKw6B,gBACLx6B,KAAKw6B,cAKX,OAJIlxB,IAAUtJ,KAAKy6B,yBACfz6B,KAAKy6B,uBAAyBnxB,EAC9BtJ,KAAK06B,qBAEFpxB,CACX,CACA,iBAAIqP,GACA,MAAMpP,EAAwC,mBAAxBvJ,KAAK26B,eACrB36B,KAAK26B,iBACL36B,KAAK26B,eAKX,OAJIpxB,IAAWvJ,KAAK46B,0BAChB56B,KAAK46B,wBAA0BrxB,EAC/BvJ,KAAK06B,qBAEFnxB,CACX,CACA,iBAAIqP,GACA,MAAMrP,EAAwC,mBAAxBvJ,KAAK66B,eACrB76B,KAAK66B,iBACL76B,KAAK66B,eAKX,OAJItxB,IAAWvJ,KAAK86B,0BAChB96B,KAAK86B,wBAA0BvxB,EAC/BvJ,KAAK06B,qBAEFnxB,CACX,CACA,gBAAImP,GACA,MAAMpP,EAAsC,mBAAvBtJ,KAAK+6B,cACpB/6B,KAAK+6B,gBACL/6B,KAAK+6B,cAKX,OAJIzxB,IAAUtJ,KAAKg7B,yBACfh7B,KAAKg7B,uBAAyB1xB,EAC9BtJ,KAAK06B,qBAEFpxB,CACX,CACA,YAAI+gB,GACA,OAAOrqB,KAAK8jB,IAAIuG,QACpB,CACA,aAAIzI,GACA,OAAO5hB,KAAK8jB,IAAIlC,SACpB,CACAjiB,WAAAA,CAAYlE,EAAIa,EAAWiH,EAASugB,GAChC/jB,MAAMtE,EAAIa,EAAWwnB,QAAiCA,EAAM,IAAIsW,GAAqB3+B,EAAIa,IACzF0D,KAAKy6B,uBAAyB,EAC9Bz6B,KAAKg7B,uBAAyBxsB,OAAOysB,iBACrCj7B,KAAK46B,wBAA0B,EAC/B56B,KAAK86B,wBAA0BtsB,OAAOysB,iBACtCj7B,KAAKw6B,cAAgB,EACrBx6B,KAAK26B,eAAiB,EACtB36B,KAAK+6B,cAAgBvsB,OAAOysB,iBAC5Bj7B,KAAK66B,eAAiBrsB,OAAOysB,iBAC7Bj7B,KAAKu6B,OAAQ,EACbv6B,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACmD,iBAA5EH,aAAyC,EAASA,EAAQkV,gBAClEzY,KAAKw6B,cAAgBj3B,EAAQkV,cAEuD,iBAA5ElV,aAAyC,EAASA,EAAQmV,gBAClE1Y,KAAK+6B,cAAgBx3B,EAAQmV,cAEwD,iBAA7EnV,aAAyC,EAASA,EAAQoV,iBAClE3Y,KAAK26B,eAAiBp3B,EAAQoV,eAEuD,iBAA7EpV,aAAyC,EAASA,EAAQqV,iBAClE5Y,KAAK66B,eAAiBt3B,EAAQqV,eAElC5Y,KAAK8jB,IAAI2H,WAAWzrB,MACpBA,KAAK6F,eAAe7F,KAAK8jB,IAAIqH,wBAAwBznB,IACjD,MAAM,UAAEke,GAAcle,GAChB,SAAEirB,GAAa3uB,KAAKktB,QAC1ByB,EAAS3hB,WAAWhN,KAAM4hB,EAAU,IACpC5hB,KAAK8jB,IAAIuH,gBAAe,KACxB,MAAM,SAAEsD,GAAa3uB,KAAKktB,QAC1ByB,EAASzM,iBAAiBliB,KAAK,IAC/BA,KAAK8jB,IAAIkI,gCAAgCtoB,IACP,iBAAvBA,EAAM+U,cACiB,mBAAvB/U,EAAM+U,eACbzY,KAAKw6B,cAAgB92B,EAAM+U,cAEI,iBAAxB/U,EAAMiV,eACkB,mBAAxBjV,EAAMiV,gBACb3Y,KAAK26B,eAAiBj3B,EAAMiV,eAEE,iBAAvBjV,EAAMgV,cACiB,mBAAvBhV,EAAMgV,eACb1Y,KAAK+6B,cAAgBr3B,EAAMgV,cAEI,iBAAxBhV,EAAMkV,eACkB,mBAAxBlV,EAAMkV,gBACb5Y,KAAK66B,eAAiBn3B,EAAMkV,cAChC,IACA5Y,KAAK8jB,IAAIsI,iBAAiB1oB,IAC1B1D,KAAK6X,aAAa3T,KAAK,CACnBqF,OAAQ7F,EAAM6F,OACdD,MAAO5F,EAAM4F,OACf,IACFtJ,KAAK6X,aACb,CACA7K,UAAAA,CAAW4U,GACP5hB,KAAK8jB,IAAIvK,uBAAuBrV,KAAK,CAAE0d,aAC3C,CACAiB,SAAAA,CAAUwH,GACNrqB,KAAK8jB,IAAIzC,mBAAmBnd,KAAK,CAAEmmB,YACvC,CACAmD,IAAAA,CAAK9B,GACGA,EAAW9S,gBACX5Y,KAAK66B,eAAiBnP,EAAW9S,eAEjC8S,EAAW/S,gBACX3Y,KAAK26B,eAAiBjP,EAAW/S,eAEjC+S,EAAWhT,eACX1Y,KAAK+6B,cAAgBrP,EAAWhT,cAEhCgT,EAAWjT,eACXzY,KAAKw6B,cAAgB9O,EAAWjT,cAEpCzY,KAAKs6B,UAAY5O,EAAW9e,SAC5B5M,KAAKu6B,QAAU7O,EAAW7e,KAC1B9M,MAAMytB,KAAK9B,GACyB,kBAAzBA,EAAW9J,WAClB5hB,KAAKgN,WAAW0e,EAAW9J,UAEnC,CACA8Y,iBAAAA,GACI16B,KAAK8jB,IAAImI,wBAAwB/nB,KAAK,CAClCuU,aAAczY,KAAKy6B,uBACnB/hB,aAAc1Y,KAAKg7B,uBACnBriB,cAAe3Y,KAAK46B,wBACpBhiB,cAAe5Y,KAAK86B,yBAE5B,CACA3e,MAAAA,GACI,MAAM5E,EAAQxX,MAAMoc,SACd+e,EAAWz4B,GAAUA,IAAU+L,OAAOysB,sBAAmBx6B,EAAYgC,EACrE04B,EAAW14B,GAAWA,GAAS,OAAIhC,EAAYgC,EACrD,OAAOmhB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtM,GAAQ,CAAEoB,cAAewiB,EAAQn7B,KAAK2Y,eAAgBC,cAAesiB,EAAQl7B,KAAK4Y,eAAgBH,aAAc0iB,EAAQn7B,KAAKyY,cAAeC,aAAcwiB,EAAQl7B,KAAK0Y,cAAe7L,KAAM7M,KAAK6M,KAAMD,SAAU5M,KAAK4M,UACjQ,ECpJJ,MAAMwuB,GAA0B,sDACzB,MAAMC,WAAkCjB,GAC3C,YAAI3e,GACA,IAAKzb,KAAKs7B,OACN,MAAM,IAAI/4B,MAAM64B,IAEpB,OAAOp7B,KAAKs7B,OAAO3S,MAAMlN,QAC7B,CACA9b,WAAAA,CAAYlE,EAAIkzB,GACZ5uB,MAAMtE,EAAI,qBACVuE,KAAK2uB,SAAWA,EAChB3uB,KAAKu7B,mBAAqB,IAAIt1B,EAC9BjG,KAAK22B,qBAAuB,IAAI3zB,EAChChD,KAAKw7B,oBAAsBx7B,KAAK22B,qBAAqBjzB,MACrD1D,KAAKu3B,wBAA0B,IAAIv0B,EACnChD,KAAKokB,uBAAyBpkB,KAAKu3B,wBAAwB7zB,MAC3D1D,KAAK6F,eAAe7F,KAAK22B,qBAAsB32B,KAAKu3B,wBAAyBv3B,KAAKu7B,mBACtF,CACAE,KAAAA,GACI,GAAKz7B,KAAKs7B,OAGV,OAAOt7B,KAAK2uB,SAAS7L,YAAY9iB,KAAKs7B,OAC1C,CACAI,SAAAA,GACI,MAA8B,WAAvB17B,KAAKyb,SAASnc,KACfU,KAAKyb,SAASigB,YACd/yB,MACV,CACAgzB,MAAAA,CAAOp4B,GACH,IAAIjB,EAAIwf,EAAIC,EACZ,IAAK/hB,KAAKs7B,OACN,MAAM,IAAI/4B,MAAM64B,IAEpB,MAAM5Y,EAAiC,QAAxBlgB,EAAKiB,EAAQif,aAA0B,IAAPlgB,EAAgBA,EAAKtC,KAAK2uB,SAASzJ,SAAS,CACvFxJ,UAAWmL,GAAgD,QAA3B/E,EAAKve,EAAQwT,gBAA6B,IAAP+K,EAAgBA,EAAK,SACxF8W,eAAe,IAEnB54B,KAAK2uB,SAASiN,iBAAiB,CAC3Bt2B,KAAM,CAAEzF,QAASG,KAAKs7B,OAAO7/B,IAC7BuQ,GAAI,CACAwW,QACAzL,SAAUxT,EAAQif,OACgB,QAA3BT,EAAKxe,EAAQwT,gBAA6B,IAAPgL,EAAgBA,EACpD,WAGlB,CACA8Z,QAAAA,GACI,IAAK77B,KAAKs7B,OACN,MAAM,IAAI/4B,MAAM64B,IAEO,SAAvBp7B,KAAKyb,SAASnc,MAIlBU,KAAK2uB,SAAS1M,cAAcjiB,KAAKs7B,OACrC,CACAQ,WAAAA,GACI,IAAK97B,KAAKs7B,OACN,MAAM,IAAI/4B,MAAM64B,IAEpB,OAAOp7B,KAAK2uB,SAASxM,iBAAiBniB,KAAKs7B,OAC/C,CACAS,aAAAA,GACI,IAAK/7B,KAAKs7B,OACN,MAAM,IAAI/4B,MAAM64B,IAEhBp7B,KAAK87B,eACL97B,KAAK2uB,SAASvM,oBAEtB,CACAqJ,UAAAA,CAAWjJ,GAQPxiB,KAAKs7B,OAAS9Y,EACdpe,gBAAe,KACXpE,KAAKu7B,mBAAmB94B,MACpBzC,KAAKs7B,OAAO3S,MAAMvE,wBAAwB1gB,IACtC1D,KAAKu3B,wBAAwBrzB,KAAKR,EAAM,GAC1C,GAEd,ECtFG,MAAMs4B,WAA2B3B,GACpC,gBAAI5hB,GACA,IAAInW,EACJ,MAAM25B,EAAsD,QAA3B35B,EAAKtC,KAAKglB,mBAAgC,IAAP1iB,OAAgB,EAASA,EAAGmW,aAChG,MAA0C,iBAA5BwjB,EACRA,EAP6B,GASvC,CACA,iBAAItjB,GACA,IAAIrW,EACJ,MAAM45B,EAAuD,QAA3B55B,EAAKtC,KAAKglB,mBAAgC,IAAP1iB,OAAgB,EAASA,EAAGqW,cACjG,MAA2C,iBAA7BujB,EACRA,EAb8B,GAexC,CACA,gBAAIxjB,GACA,IAAIpW,EACJ,MAAM65B,EAAsD,QAA3B75B,EAAKtC,KAAKglB,mBAAgC,IAAP1iB,OAAgB,EAASA,EAAGoW,aAChG,MAA0C,iBAA5ByjB,EACRA,EACA3tB,OAAOysB,gBACjB,CACA,iBAAIriB,GACA,IAAItW,EACJ,MAAM85B,EAAuD,QAA3B95B,EAAKtC,KAAKglB,mBAAgC,IAAP1iB,OAAgB,EAASA,EAAGsW,cACjG,MAA2C,iBAA7BwjB,EACRA,EACA5tB,OAAOysB,gBACjB,CACA,UAAI9X,GACA,OAAOnjB,KAAKq8B,OAAOlZ,MACvB,CACA,eAAI6B,GACA,OAAOhlB,KAAKq8B,OAAOrX,WACvB,CACA,QAAIngB,GACA,OAAO7E,KAAKq8B,OAAOx3B,IACvB,CACA,SAAI8jB,GACA,OAAO3oB,KAAKq8B,MAChB,CACA,UAAI9f,GACA,OAAOvc,KAAKq8B,OAAO9f,MACvB,CACA,UAAIA,CAAO9Z,GACPzC,KAAKq8B,OAAO9f,OAAS9Z,CACzB,CACA,UAAI2rB,GACA,OAAOpuB,KAAKq8B,OAAOjO,MACvB,CACAzuB,WAAAA,CAAYgvB,EAAUlzB,EAAI8H,GACtB,IAAIjB,EAAIwf,EAAIC,EAAIC,EAAIsa,EAAIC,EACxBx8B,MAAMtE,EAAI,oBAAqB,CAC3Bkd,cAA2G,QAA3FmJ,EAAoC,QAA9Bxf,EAAKiB,EAAQi5B,mBAAgC,IAAPl6B,OAAgB,EAASA,EAAGqW,qBAAkC,IAAPmJ,EAAgBA,EAtDnG,IAuDhCrJ,aAA0G,QAA3FuJ,EAAoC,QAA9BD,EAAKxe,EAAQi5B,mBAAgC,IAAPza,OAAgB,EAASA,EAAGnJ,qBAAkC,IAAPoJ,EAAgBA,EAxDnG,IAyD/BpJ,cAA8C,QAA9B0jB,EAAK/4B,EAAQi5B,mBAAgC,IAAPF,OAAgB,EAASA,EAAG1jB,cAClFF,aAA6C,QAA9B6jB,EAAKh5B,EAAQi5B,mBAAgC,IAAPD,OAAgB,EAASA,EAAG7jB,cAClF,IAAI2iB,GAA0B5/B,EAAIkzB,IACrC3uB,KAAK8jB,IAAI2H,WAAWzrB,MACpBA,KAAKq8B,OAAS,IAAIrG,GAAwBh2B,KAAKuE,QAASoqB,EAAUlzB,EAAI8H,EAASvD,KACnF,CACAsjB,KAAAA,GACStjB,KAAK8jB,IAAIuG,UACVrqB,KAAK8jB,IAAIjB,YAEb9iB,MAAMujB,OACV,CACAmI,UAAAA,GACIzrB,KAAKq8B,OAAO5Q,YAChB,CACA5I,SAAAA,CAAUwH,GACNtqB,MAAM8iB,UAAUwH,GAChBrqB,KAAK2oB,MAAM9F,UAAUwH,EACzB,CACA9U,MAAAA,CAAOjM,EAAOC,GACVxJ,MAAMwV,OAAOjM,EAAOC,GACpBvJ,KAAK2oB,MAAMpT,OAAOjM,EAAOC,EAC7B,CACAkkB,YAAAA,GACI,OAAOztB,KAAKq8B,MAChB,CACAlgB,MAAAA,GACI,OAAOnc,KAAK2oB,MAAMxM,QACtB,ECrFG,MAAMsgB,WAA6BrC,GACtC,YAAI3e,GACA,OAAOzb,KAAKwiB,MAAMsB,IAAIrI,QAC1B,CACA,SAAIzf,GACA,OAAOgE,KAAK2hB,MAAM3lB,KACtB,CACA,iBAAIu9B,GACA,OAAOv5B,KAAKwiB,MAAM6H,QACtB,CACA,YAAIyG,GACA,OAAO9wB,KAAK2hB,MAAMmP,QACtB,CACA,SAAItO,CAAM/f,GACN,MAAMi6B,EAAW18B,KAAKs7B,OAClBt7B,KAAKs7B,SAAW74B,IAChBzC,KAAKs7B,OAAS74B,EACdzC,KAAK28B,kBAAkBz4B,KAAK,CAAC,GAC7BlE,KAAK48B,yBAAyBF,GAC9B18B,KAAK22B,qBAAqBzyB,KAAK,CAC3BuX,SAAUzb,KAAKwiB,MAAMsB,IAAIrI,WAGrC,CACA,SAAI+G,GACA,OAAOxiB,KAAKs7B,MAChB,CACA,gBAAIuB,GACA,OAAO78B,KAAK88B,aAChB,CACAn9B,WAAAA,CAAYgiB,EAAOa,EAAOmM,EAAUryB,EAAWugC,GAC3C98B,MAAM4hB,EAAMlmB,GAAIa,GAChB0D,KAAK2hB,MAAQA,EACb3hB,KAAK2uB,SAAWA,EAChB3uB,KAAK+8B,kBAAoB,IAAI/5B,EAC7BhD,KAAK65B,iBAAmB75B,KAAK+8B,kBAAkBr5B,MAC/C1D,KAAKg9B,wBAA0B,IAAIh6B,EACnChD,KAAKqkB,uBAAyBrkB,KAAKg9B,wBAAwBt5B,MAC3D1D,KAAK28B,kBAAoB,IAAI35B,EAC7BhD,KAAKi9B,iBAAmBj9B,KAAK28B,kBAAkBj5B,MAC/C1D,KAAKk9B,qBAAuB,IAAIl6B,EAChChD,KAAKm9B,oBAAsBn9B,KAAKk9B,qBAAqBx5B,MACrD1D,KAAK22B,qBAAuB,IAAI3zB,EAChChD,KAAKw7B,oBAAsBx7B,KAAK22B,qBAAqBjzB,MACrD1D,KAAKo9B,sBAAwB,IAAIn3B,EACjCjG,KAAK88B,cAAgBD,EACrB78B,KAAKyrB,WAAW9J,GAChB3hB,KAAKs7B,OAAS9Y,EACdxiB,KAAK48B,2BACL58B,KAAK6F,eAAe7F,KAAKo9B,sBAAuBp9B,KAAKk9B,qBAAsBl9B,KAAK+8B,kBAAmB/8B,KAAK28B,kBAAmB38B,KAAKg9B,wBAAyBh9B,KAAK22B,qBAClK,CACA+E,SAAAA,GACI,OAAO17B,KAAKwiB,MAAMsB,IAAI4X,WAC1B,CACAC,MAAAA,CAAOp4B,GACH,IAAIjB,EACJtC,KAAK2uB,SAASiN,iBAAiB,CAC3Bt2B,KAAM,CAAEzF,QAASG,KAAKs7B,OAAO7/B,GAAIqE,QAASE,KAAK2hB,MAAMlmB,IACrDuQ,GAAI,CACAwW,MAAOjf,EAAQif,MACfzL,SAAsC,QAA3BzU,EAAKiB,EAAQwT,gBAA6B,IAAPzU,EAAgBA,EAAK,SACnEwB,MAAOP,EAAQO,QAG3B,CACAu5B,QAAAA,CAASrhC,GACLgE,KAAK2hB,MAAM0b,SAASrhC,EACxB,CACAshC,WAAAA,CAAYxM,GACR9wB,KAAK2hB,MAAM2b,YAAYxM,EAC3B,CACA2K,KAAAA,GACIz7B,KAAKwiB,MAAMmG,MAAMyI,WAAWpxB,KAAK2hB,MACrC,CACAka,QAAAA,GACI77B,KAAKwiB,MAAMsB,IAAI+X,UACnB,CACAC,WAAAA,GACI,OAAO97B,KAAKwiB,MAAMsB,IAAIgY,aAC1B,CACAC,aAAAA,GACI/7B,KAAKwiB,MAAMsB,IAAIiY,eACnB,CACAa,wBAAAA,CAAyBW,GACrB,IAAIj7B,EACJ,IAAIk7B,EAAoH,QAA/Fl7B,EAAKi7B,aAAqD,EAASA,EAAclT,gBAA6B,IAAP/nB,GAAgBA,EAChJtC,KAAKo9B,sBAAsB36B,MAAQ,IAAI+C,EAAoBxF,KAAKwiB,MAAMsB,IAAItK,uBAAuB9V,IAC7F,MAAM+5B,GAAmB/5B,EAAMke,WAAa5hB,KAAK4hB,UAC3C8b,EAAmBh6B,EAAMke,YAAc5hB,KAAK4hB,UAC5CiT,EAAgB70B,KAAKwiB,MAAMmG,MAAMkI,cAAc7wB,KAAK2hB,QACtD8b,GAAoBC,GAAoB7I,IACxC70B,KAAKuZ,uBAAuBrV,KAAKR,EACrC,IACA1D,KAAKwiB,MAAMsB,IAAI0X,qBAAqB93B,IAChC1D,KAAKwiB,QAAUxiB,KAAK2hB,MAAMa,OAG9BxiB,KAAK22B,qBAAqBzyB,KAAKR,EAAM,IACrC1D,KAAKwiB,MAAMsB,IAAIxC,mBAAkB,KAC7BthB,KAAKwiB,QAAUxiB,KAAK2hB,MAAMa,OAG1Bgb,IAAsBx9B,KAAKu5B,gBAC3BiE,EAAoBx9B,KAAKu5B,cACzBv5B,KAAKg9B,wBAAwB94B,KAAK,CAC9BmmB,SAAUrqB,KAAKu5B,gBAEvB,IAER,EC7GG,MAAMoE,WAAsBn4B,EAC/B,UAAIomB,GACA,OAAO5rB,KAAKktB,OAChB,CACA,SAAIlxB,GACA,OAAOgE,KAAK49B,MAChB,CACA,SAAIpb,GACA,OAAOxiB,KAAKs7B,MAChB,CACA,YAAIxK,GACA,IAAIxuB,EACJ,OAAiC,QAAzBA,EAAKtC,KAAK69B,iBAA8B,IAAPv7B,EAAgBA,EAAKtC,KAAK2uB,SAASmC,QAChF,CACA,gBAAIrY,GACA,OAAOzY,KAAKw6B,aAChB,CACA,iBAAI7hB,GACA,OAAO3Y,KAAK26B,cAChB,CACA,gBAAIjiB,GACA,OAAO1Y,KAAK+6B,aAChB,CACA,iBAAIniB,GACA,OAAO5Y,KAAK66B,cAChB,CACAl7B,WAAAA,CAAYlE,EAAIa,EAAWugC,EAAclO,EAAUqB,EAAcxN,EAAOhW,EAAMjJ,GAC1ExD,QACAC,KAAKvE,GAAKA,EACVuE,KAAK2uB,SAAWA,EAChB3uB,KAAKgwB,aAAeA,EACpBhwB,KAAKwM,KAAOA,EACZxM,KAAK69B,UAAYt6B,EAAQutB,SACzB9wB,KAAKs7B,OAAS9Y,EACdxiB,KAAKw6B,cAAgBj3B,EAAQkV,aAC7BzY,KAAK26B,eAAiBp3B,EAAQoV,cAC9B3Y,KAAK+6B,cAAgBx3B,EAAQmV,aAC7B1Y,KAAK66B,eAAiBt3B,EAAQqV,cAC9B5Y,KAAK8jB,IAAM,IAAI2Y,GAAqBz8B,KAAMA,KAAKs7B,OAAQ3M,EAAUryB,EAAWugC,GAC5E78B,KAAK6F,eAAe7F,KAAK8jB,IAAIuH,gBAAe,KACxCsD,EAASiG,eAAe50B,KAAK,IAC7BA,KAAK8jB,IAAIsI,iBAAiB1oB,IAG1B1D,KAAKwiB,MAAMsB,IAAIwI,QAAQ5oB,EAAM,IAC7B1D,KAAK8jB,IAAIqZ,qBAAoB,KAC7Bn9B,KAAKwiB,MAAMmG,MAAMmP,SAAS93B,KAAK,IAEvC,CACAwtB,IAAAA,CAAK5B,GACD5rB,KAAKktB,QAAUtB,EAAOA,OACtB5rB,KAAKwM,KAAKghB,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG+H,GAAS,CAAE9H,IAAK9jB,KAAK8jB,IAAKkM,aAAchwB,KAAKgwB,gBAC5FhwB,KAAKq9B,SAASzR,EAAO5vB,MACzB,CACAsnB,KAAAA,GACI,MAAM5f,EAAQ,IAAIumB,GAClBjqB,KAAK8jB,IAAIkH,aAAa9mB,KAAKR,GACvBA,EAAMxB,kBAGLlC,KAAK8jB,IAAIuG,UACVrqB,KAAK8jB,IAAIjB,WAEjB,CACA1G,MAAAA,GACI,MAAO,CACH1gB,GAAIuE,KAAKvE,GACTqiC,iBAAkB99B,KAAKwM,KAAKsxB,iBAC5BjB,aAAc78B,KAAKwM,KAAKqwB,aACxBjR,OAAQhI,OAAO+J,KAAK3tB,KAAKktB,SAAW,CAAC,GAAG3rB,OAAS,EAC3CvB,KAAKktB,aACLzsB,EACNzE,MAAOgE,KAAKhE,MACZ80B,SAAU9wB,KAAK69B,UACfllB,cAAe3Y,KAAK26B,eACpB/hB,cAAe5Y,KAAK66B,eACpBpiB,aAAczY,KAAKw6B,cACnB9hB,aAAc1Y,KAAK+6B,cAE3B,CACAsC,QAAAA,CAASrhC,GACkBA,IAAUgE,KAAKhE,QAElCgE,KAAK49B,OAAS5hC,EACdgE,KAAK8jB,IAAIiZ,kBAAkB74B,KAAK,CAAElI,UAE1C,CACAshC,WAAAA,CAAYxM,GACUA,IAAa9wB,KAAK8wB,WAEhC9wB,KAAK69B,UAAY/M,EACjB9wB,KAAK8jB,IAAIoZ,qBAAqBh5B,KAAK,CAC/B4sB,SAAUA,IAGtB,CACAnF,MAAAA,CAAOjoB,GACH,IAAIpB,EAEJtC,KAAKktB,QAAUtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA4B,QAAvBvhB,EAAKtC,KAAKktB,eAA4B,IAAP5qB,EAAgBA,EAAK,CAAC,GAAKoB,EAAMkoB,QAKjH,IAAK,MAAM8B,KAAO9J,OAAO+J,KAAKjqB,EAAMkoB,aACNnrB,IAAtBiD,EAAMkoB,OAAO8B,WACN1tB,KAAKktB,QAAQQ,GAI5B1tB,KAAKwM,KAAKmf,OAAO,CACbC,OAAQ5rB,KAAKktB,SAErB,CACA2L,iBAAAA,CAAkBrW,EAAOjf,GACrBvD,KAAKs7B,OAAS9Y,EACdxiB,KAAK8jB,IAAItB,MAAQxiB,KAAKs7B,OACtB,MAAMyC,EAAiB/9B,KAAKs7B,OAAO3S,MAAMkI,cAAc7wB,MACjDqqB,EAAWrqB,KAAKwiB,MAAMsB,IAAIuG,UAAY0T,GACtCx6B,aAAyC,EAASA,EAAQq1B,gBACxD54B,KAAK8jB,IAAIuG,WAAaA,GACtBrqB,KAAK8jB,IAAIzC,mBAAmBnd,KAAK,CAC7BmmB,SAAUrqB,KAAKwiB,MAAMsB,IAAIuG,UAAY0T,IAI7C/9B,KAAK8jB,IAAIlC,YAAcmc,GACvB/9B,KAAK8jB,IAAIvK,uBAAuBrV,KAAK,CACjC0d,UAAWmc,GAGvB,CACAjE,SAAAA,GACI,MAAMiE,EAAiB/9B,KAAKs7B,OAAO3S,MAAMkI,cAAc7wB,MACjDqqB,EAAWrqB,KAAKwiB,MAAMsB,IAAIuG,UAAY0T,EACxC/9B,KAAK8jB,IAAIuG,WAAaA,GACtBrqB,KAAK8jB,IAAIzC,mBAAmBnd,KAAK,CAC7BmmB,SAAUrqB,KAAKwiB,MAAMsB,IAAIuG,UAAY0T,IAGzC/9B,KAAK8jB,IAAIlC,YAAcmc,GACvB/9B,KAAK8jB,IAAIvK,uBAAuBrV,KAAK,CACjC0d,UAAWmc,GAGvB,CACAxoB,MAAAA,CAAOjM,EAAOC,GAEVvJ,KAAK8jB,IAAI8G,sBAAsB1mB,KAAK,CAChCoF,QACAC,OAAQA,IAEZvJ,KAAKwM,KAAK+I,OAAOjM,EAAOC,EAC5B,CACA1H,OAAAA,GACI7B,KAAK8jB,IAAIjiB,UACT7B,KAAKwM,KAAK3K,SACd,EChKJ,MAAMm8B,GAA4BpS,IAC9B,MAAMqS,EAAMl2B,SAASm2B,gBAAgB,6BAA8B,OACnED,EAAIE,eAAe,KAAM,SAAUvS,EAAOriB,QAC1C00B,EAAIE,eAAe,KAAM,QAASvS,EAAOtiB,OACzC20B,EAAIE,eAAe,KAAM,UAAWvS,EAAOwS,SAC3CH,EAAIE,eAAe,KAAM,cAAe,SACxCF,EAAIE,eAAe,KAAM,YAAa,SACtCF,EAAIh3B,UAAUhD,IAAI,gBAClB,MAAMwa,EAAO1W,SAASm2B,gBAAgB,6BAA8B,QAGpE,OAFAzf,EAAK0f,eAAe,KAAM,IAAKvS,EAAOnN,MACtCwf,EAAIjsB,YAAYyM,GACTwf,CAAG,EAEDI,GAAoBA,IAAML,GAAyB,CAC5D10B,MAAO,KACPC,OAAQ,KACR60B,QAAS,YACT3f,KAAM,+HCdH,MAAM6f,WAAmB94B,EAC5B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,GACII,QACAC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,iBAC1ByE,KAAKu+B,SAAWx2B,SAAS2L,cAAc,OACvC1T,KAAKu+B,SAAShjC,UAAY,yBAC1ByE,KAAKw+B,OAASz2B,SAAS2L,cAAc,OACrC1T,KAAKw+B,OAAOjjC,UAAY,wBACxByE,KAAKw+B,OAAOxsB,YAAYqsB,MACxBr+B,KAAK4f,SAAS5N,YAAYhS,KAAKu+B,UAC/Bv+B,KAAK4f,SAAS5N,YAAYhS,KAAKw+B,QAC/Bx+B,KAAK6F,eAAenB,EAAsB1E,KAAKw+B,OAAQ,eAAgB5P,IACnEA,EAAGzsB,gBAAgB,KAEvBnC,KAAKy+B,QACT,CACAjR,IAAAA,CAAK5B,GACD5rB,KAAK49B,OAAShS,EAAO5vB,MACrBgE,KAAK6F,eAAe+lB,EAAO9H,IAAI+V,kBAAkBn2B,IAC7C1D,KAAK49B,OAASl6B,EAAM1H,MACpBgE,KAAKy+B,QAAQ,IACb/5B,EAAsB1E,KAAKw+B,OAAQ,eAAgB5P,IACnDA,EAAGzsB,gBAAgB,IACnBuC,EAAsB1E,KAAKw+B,OAAQ,SAAU5P,IACzCA,EAAG1sB,mBAGP0sB,EAAGzsB,iBACHypB,EAAO9H,IAAI2X,QAAO,KAEtBz7B,KAAKy+B,QACT,CACAA,MAAAA,GACI,IAAIn8B,EACAtC,KAAKu+B,SAAShM,cAAgBvyB,KAAK49B,SACnC59B,KAAKu+B,SAAShM,YAAqC,QAAtBjwB,EAAKtC,KAAK49B,cAA2B,IAAPt7B,EAAgBA,EAAK,GAExF,EC3CG,MAAMo8B,GACT,WAAI9hC,GACA,OAAOoD,KAAKu+B,QAChB,CACA,OAAI9K,GACA,OAAOzzB,KAAK2+B,IAChB,CACAh/B,WAAAA,CAAYgvB,EAAUlzB,EAAIqiC,EAAkBjB,GACxC78B,KAAK2uB,SAAWA,EAChB3uB,KAAKvE,GAAKA,EACVuE,KAAK89B,iBAAmBA,EACxB99B,KAAK68B,aAAeA,EACpB78B,KAAKu+B,SAAWv+B,KAAK4+B,uBAAuB5+B,KAAKvE,GAAIqiC,GACrD99B,KAAK2+B,KAAO3+B,KAAK6+B,mBAAmB7+B,KAAKvE,GAAIohC,EACjD,CACArP,IAAAA,CAAK5B,GACD5rB,KAAKpD,QAAQ4wB,KAAK5B,GAClB5rB,KAAKyzB,IAAIjG,KAAK5B,EAClB,CACAiN,iBAAAA,CAAkByC,EAAQwD,GACtB,CAEJvpB,MAAAA,CAAOjM,EAAOC,GACV,IAAIjH,EAAIwf,EAC8B,QAArCA,GAAMxf,EAAKtC,KAAKpD,SAAS2Y,cAA2B,IAAPuM,GAAyBA,EAAGha,KAAKxF,EAAIgH,EAAOC,EAC9F,CACAoiB,MAAAA,CAAOjoB,GACH,IAAIpB,EAAIwf,EAAIC,EAAIC,EACsB,QAArCF,GAAMxf,EAAKtC,KAAKpD,SAAS+uB,cAA2B,IAAP7J,GAAyBA,EAAGha,KAAKxF,EAAIoB,GACjD,QAAjCse,GAAMD,EAAK/hB,KAAKyzB,KAAK9H,cAA2B,IAAP3J,GAAyBA,EAAGla,KAAKia,EAAIre,EACnF,CACA7B,OAAAA,GACI,IAAIS,EAAIwf,EAAIC,EAAIC,EACuB,QAAtCF,GAAMxf,EAAKtC,KAAKpD,SAASiF,eAA4B,IAAPigB,GAAyBA,EAAGha,KAAKxF,GAC7C,QAAlC0f,GAAMD,EAAK/hB,KAAKyzB,KAAK5xB,eAA4B,IAAPmgB,GAAyBA,EAAGla,KAAKia,EAChF,CACA6c,sBAAAA,CAAuBnjC,EAAIsjC,GACvB,OAAO/+B,KAAK2uB,SAASprB,QAAQy7B,gBAAgB,CACzCvjC,KACA0D,KAAM4/B,GAEd,CACAF,kBAAAA,CAAmBpjC,EAAIsjC,GACnB,MAAM5/B,EAAO4/B,QAAqDA,EAAgB/+B,KAAK2uB,SAASprB,QAAQ07B,oBACxG,GAAI9/B,EAAM,CACN,GAAIa,KAAK2uB,SAASprB,QAAQs7B,mBAAoB,CAC1C,MAAMviC,EAAY0D,KAAK2uB,SAASprB,QAAQs7B,mBAAmB,CACvDpjC,KACA0D,SAEJ,OAAI7C,GAIO,IAAIgiC,EAEnB,CACA37B,QAAQC,KAAM,2BAA0Bm8B,qDAC5C,CACA,OAAO,IAAIT,EACf,EC1DG,MAAMY,GACTv/B,WAAAA,CAAYgvB,GACR3uB,KAAK2uB,SAAWA,CACpB,CACAzQ,QAAAA,CAASihB,EAAW3c,GAChB,IAAIlgB,EAAIwf,EACR,MAAMhiB,EAAUq/B,EAAU1jC,GACpBmwB,EAASuT,EAAUvT,OACnB5vB,EAAQmjC,EAAUnjC,MAClBojC,EAAWD,EAAU3yB,KACrBsxB,EAAmBsB,EACnBA,EAASxiC,QAAQnB,GACqB,QAArC6G,EAAK68B,EAAUrB,wBAAqC,IAAPx7B,EAAgBA,EAAK,UACnEu6B,EAAeuC,EACS,QAAvBtd,EAAKsd,EAAS3L,WAAwB,IAAP3R,OAAgB,EAASA,EAAGrmB,GAC5D0jC,EAAUtC,aACVrwB,EAAO,IAAIkyB,GAAmB1+B,KAAK2uB,SAAU7uB,EAASg+B,EAAkBjB,GACxElb,EAAQ,IAAIgc,GAAc79B,EAASg+B,EAAkBjB,EAAc78B,KAAK2uB,SAAU,IAAIpK,GAAYvkB,KAAK2uB,UAAWnM,EAAOhW,EAAM,CACjIskB,SAAUqO,EAAUrO,SACpBrY,aAAc0mB,EAAU1mB,aACxBE,cAAewmB,EAAUxmB,cACzBD,aAAcymB,EAAUzmB,aACxBE,cAAeumB,EAAUvmB,gBAM7B,OAJA+I,EAAM6L,KAAK,CACPxxB,MAAOA,QAAqCA,EAAQ8D,EACpD8rB,OAAQA,QAAuCA,EAAS,CAAC,IAEtDjK,CACX,EC5BG,MAAM0d,WAAkB75B,EAC3B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,GACII,QACAC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,YAC1B,MAAMS,EAAQ+L,SAAS2L,cAAc,OACrC1X,EAAMT,UAAY,kBAClB,MAAM+jC,EAAav3B,SAAS2L,cAAc,QAC1C4rB,EAAWt1B,MAAMu1B,SAAW,IAC5B,MAAM3iC,EAAUmL,SAAS2L,cAAc,OACvC9W,EAAQrB,UAAY,oBACpByE,KAAK4f,SAAS5N,YAAYhW,GAC1BgE,KAAK4f,SAAS5N,YAAYpV,GAC1B,MAAM4iC,EAAmBz3B,SAAS2L,cAAc,OAChD8rB,EAAiBjkC,UAAY,oBAC7B,MAAMkkC,EAAc13B,SAAS2L,cAAc,OAC3C+rB,EAAYlkC,UAAY,eACxBkkC,EAAYztB,YAAYqsB,MACxBmB,EAAiBxtB,YAAYytB,GAC7BzjC,EAAMgW,YAAYstB,GAClBtjC,EAAMgW,YAAYwtB,GAClBx/B,KAAK6F,eAAenB,EAAsB+6B,EAAa,SAAU/7B,IAC7D,IAAIpB,EACJoB,EAAMvB,iBACFnC,KAAKs7B,SACgB,QAApBh5B,EAAKtC,KAAK03B,YAAyB,IAAPp1B,GAAyBA,EAAGwgB,YAAY9iB,KAAKs7B,QAC9E,IAER,CACA9N,IAAAA,CAAKN,GACDltB,KAAK03B,KAAOxK,EAAQ8C,aACpBhwB,KAAKs7B,OAASpO,EAAQ1K,MACtBxiB,KAAKy+B,QACT,CACAA,MAAAA,GACI,MAAMiB,KAAgB1/B,KAAK03B,MAAQ13B,KAAK03B,KAAK7yB,MAAQ,GACrDwC,EAAYrH,KAAKuE,QAAS,cAAem7B,EAC7C,ECjBJ,MAAMC,GAAoB,IAtB1B,MACIhgC,WAAAA,GACIK,KAAK4/B,aAAe,EACxB,CACA/7B,IAAAA,CAAKU,GACDvE,KAAK4/B,aAAe,IACb5/B,KAAK4/B,aAAan1B,QAAQ8D,GAASA,IAAShK,IAC/CA,GAEJvE,KAAK2rB,QACT,CACAkU,OAAAA,CAAQt7B,GACJvE,KAAK4/B,aAAe5/B,KAAK4/B,aAAan1B,QAAQ8D,GAASA,IAAShK,IAChEvE,KAAK2rB,QACT,CACAA,MAAAA,GACI,IAAK,IAAI1gB,EAAI,EAAGA,EAAIjL,KAAK4/B,aAAar+B,OAAQ0J,IAC1CjL,KAAK4/B,aAAa30B,GAAG60B,aAAa,aAAe,GAAE70B,KACnDjL,KAAK4/B,aAAa30B,GAAGjB,MAAM+1B,OAAU,IAnBV,IAmB0C,EAAJ90B,EAEzE,GAGG,MAAM+0B,WAAgBx6B,EACzB,0BAAIy6B,CAAuBx9B,GACvBzC,KAAKuD,QAAQ08B,uBAAyBx9B,CAC1C,CACA,2BAAIy9B,CAAwBz9B,GACxBzC,KAAKuD,QAAQ28B,wBAA0Bz9B,CAC3C,CACA,WAAI8B,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAY4D,GACRxD,QACAC,KAAKuD,QAAUA,EACfvD,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAKmgC,gBAAkB,IAAIn9B,EAC3BhD,KAAKogC,eAAiBpgC,KAAKmgC,gBAAgBz8B,MAC3C1D,KAAK6F,eAAe7F,KAAK6X,aAAc7X,KAAKmgC,iBAC5CngC,KAAK4f,SAASrkB,UAAY,sBAC1ByE,KAAKqgC,YAAY,OACjBrgC,KAAKqgC,YAAY,UACjBrgC,KAAKqgC,YAAY,QACjBrgC,KAAKqgC,YAAY,SACjBrgC,KAAKqgC,YAAY,WACjBrgC,KAAKqgC,YAAY,YACjBrgC,KAAKqgC,YAAY,cACjBrgC,KAAKqgC,YAAY,eACjBrgC,KAAK4f,SAAS5N,YAAYhS,KAAKuD,QAAQ3G,SACvCoD,KAAKuD,QAAQwJ,UAAUiF,YAAYhS,KAAK4f,UAExC5f,KAAKsgC,UAAU1c,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAEta,OAAQvJ,KAAKuD,QAAQgG,OAAQD,MAAOtJ,KAAKuD,QAAQ+F,OAAU,QAAStJ,KAAKuD,SAAW,CAAE8F,IAAKrJ,KAAKuD,QAAQ8F,MAAU,WAAYrJ,KAAKuD,SAAW,CAAEg9B,OAAQvgC,KAAKuD,QAAQg9B,SAAa,SAAUvgC,KAAKuD,SAAW,CAAE6F,KAAMpJ,KAAKuD,QAAQ6F,OAAW,UAAWpJ,KAAKuD,SAAW,CAAEi9B,MAAOxgC,KAAKuD,QAAQi9B,SACtWb,GAAkB97B,KAAK7D,KAAK4f,SAChC,CACA6gB,YAAAA,GACId,GAAkB97B,KAAK7D,KAAK4f,SAChC,CACA0gB,SAAAA,CAAUI,QAAM,IAANA,IAAAA,EAAS,CAAC,GACa,iBAAlBA,EAAOn3B,SACdvJ,KAAK4f,SAAS5V,MAAMT,OAAU,GAAEm3B,EAAOn3B,YAEf,iBAAjBm3B,EAAOp3B,QACdtJ,KAAK4f,SAAS5V,MAAMV,MAAS,GAAEo3B,EAAOp3B,WAEtC,QAASo3B,GAAgC,iBAAfA,EAAOr3B,MACjCrJ,KAAK4f,SAAS5V,MAAMX,IAAO,GAAEq3B,EAAOr3B,QACpCrJ,KAAK4f,SAAS5V,MAAMu2B,OAAS,OAC7BvgC,KAAK2gC,kBAAoB,OAEzB,WAAYD,GAAmC,iBAAlBA,EAAOH,SACpCvgC,KAAK4f,SAAS5V,MAAMu2B,OAAU,GAAEG,EAAOH,WACvCvgC,KAAK4f,SAAS5V,MAAMX,IAAM,OAC1BrJ,KAAK2gC,kBAAoB,UAEzB,SAAUD,GAAiC,iBAAhBA,EAAOt3B,OAClCpJ,KAAK4f,SAAS5V,MAAMZ,KAAQ,GAAEs3B,EAAOt3B,SACrCpJ,KAAK4f,SAAS5V,MAAMw2B,MAAQ,OAC5BxgC,KAAK4gC,qBAAuB,QAE5B,UAAWF,GAAkC,iBAAjBA,EAAOF,QACnCxgC,KAAK4f,SAAS5V,MAAMw2B,MAAS,GAAEE,EAAOF,UACtCxgC,KAAK4f,SAAS5V,MAAMZ,KAAO,OAC3BpJ,KAAK4gC,qBAAuB,SAEhC,MAAMC,EAAgB7gC,KAAKuD,QAAQwJ,UAAUvD,wBACvCs3B,EAAc9gC,KAAK4f,SAASpW,wBAG5Bu3B,EAAUp1B,KAAKD,IAAI,EAAG1L,KAAKghC,gBAAgBF,EAAYx3B,QAEvD23B,EAAUt1B,KAAKD,IAAI,EAAG1L,KAAKkhC,iBAAiBJ,EAAYv3B,SAC9D,GAA+B,QAA3BvJ,KAAK2gC,kBAA6B,CAClC,MAAMt3B,EAAMmC,EAAMs1B,EAAYz3B,IAAMw3B,EAAcx3B,KAAM43B,EAASt1B,KAAKD,IAAI,EAAGm1B,EAAct3B,OAASu3B,EAAYv3B,OAAS03B,IACzHjhC,KAAK4f,SAAS5V,MAAMX,IAAO,GAAEA,MAC7BrJ,KAAK4f,SAAS5V,MAAMu2B,OAAS,MACjC,CACA,GAA+B,WAA3BvgC,KAAK2gC,kBAAgC,CACrC,MAAMJ,EAAS/0B,EAAMq1B,EAAcN,OAASO,EAAYP,QAASU,EAASt1B,KAAKD,IAAI,EAAGm1B,EAAct3B,OAASu3B,EAAYv3B,OAAS03B,IAClIjhC,KAAK4f,SAAS5V,MAAMu2B,OAAU,GAAEA,MAChCvgC,KAAK4f,SAAS5V,MAAMX,IAAM,MAC9B,CACA,GAAkC,SAA9BrJ,KAAK4gC,qBAAiC,CACtC,MAAMx3B,EAAOoC,EAAMs1B,EAAY13B,KAAOy3B,EAAcz3B,MAAO23B,EAASp1B,KAAKD,IAAI,EAAGm1B,EAAcv3B,MAAQw3B,EAAYx3B,MAAQy3B,IAC1H/gC,KAAK4f,SAAS5V,MAAMZ,KAAQ,GAAEA,MAC9BpJ,KAAK4f,SAAS5V,MAAMw2B,MAAQ,MAChC,CACA,GAAkC,UAA9BxgC,KAAK4gC,qBAAkC,CACvC,MAAMJ,EAAQh1B,EAAMq1B,EAAcL,MAAQM,EAAYN,OAAQO,EAASp1B,KAAKD,IAAI,EAAGm1B,EAAcv3B,MAAQw3B,EAAYx3B,MAAQy3B,IAC7H/gC,KAAK4f,SAAS5V,MAAMw2B,MAAS,GAAEA,MAC/BxgC,KAAK4f,SAAS5V,MAAMZ,KAAO,MAC/B,CACApJ,KAAK6X,aAAa3T,MACtB,CACAiY,MAAAA,GACI,MAAMpP,EAAY/M,KAAKuD,QAAQwJ,UAAUvD,wBACnCjF,EAAUvE,KAAK4f,SAASpW,wBACxByC,EAAS,CAAC,EAqBhB,MApB+B,QAA3BjM,KAAK2gC,kBACL10B,EAAO5C,IAAM83B,WAAWnhC,KAAK4f,SAAS5V,MAAMX,KAEZ,WAA3BrJ,KAAK2gC,kBACV10B,EAAOs0B,OAASY,WAAWnhC,KAAK4f,SAAS5V,MAAMu2B,QAG/Ct0B,EAAO5C,IAAM9E,EAAQ8E,IAAM0D,EAAU1D,IAEP,SAA9BrJ,KAAK4gC,qBACL30B,EAAO7C,KAAO+3B,WAAWnhC,KAAK4f,SAAS5V,MAAMZ,MAEV,UAA9BpJ,KAAK4gC,qBACV30B,EAAOu0B,MAAQW,WAAWnhC,KAAK4f,SAAS5V,MAAMw2B,OAG9Cv0B,EAAO7C,KAAO7E,EAAQ6E,KAAO2D,EAAU3D,KAE3C6C,EAAO3C,MAAQ/E,EAAQ+E,MACvB2C,EAAO1C,OAAShF,EAAQgF,OACjB0C,CACX,CACAm1B,SAAAA,CAAUC,EAAY99B,QAAO,IAAPA,IAAAA,EAAU,CAAEgxB,YAAY,IAC1C,MAAM+M,EAAO,IAAIr7B,EACXs7B,EAAQA,KACV,IAAIlrB,EAAS,KACb,MAAMzM,EAAUD,IAChB23B,EAAK7+B,MAAQ,IAAI+C,EAAoB,CACjC3D,QAASA,KACL+H,EAAQM,SAAS,GAEtB5F,EAA4BqE,OAAQ,eAAgBxE,IACnD,MAAM08B,EAAgB7gC,KAAKuD,QAAQwJ,UAAUvD,wBACvC4G,EAAIjM,EAAE+P,QAAU2sB,EAAcz3B,KAC9Bye,EAAI1jB,EAAEgQ,QAAU0sB,EAAcx3B,IACpChC,EAAYrH,KAAK4f,SAAU,gCAAgC,GAC3D,MAAMkhB,EAAc9gC,KAAK4f,SAASpW,wBACnB,OAAX6M,IACAA,EAAS,CACLjG,EAAGjM,EAAE+P,QAAU4sB,EAAY13B,KAC3Bye,EAAG1jB,EAAEgQ,QAAU2sB,EAAYz3B,MAGnC,MAAM03B,EAAUp1B,KAAKD,IAAI,EAAG1L,KAAKghC,gBAAgBF,EAAYx3B,QACvD23B,EAAUt1B,KAAKD,IAAI,EAAG1L,KAAKkhC,iBAAiBJ,EAAYv3B,SACxDF,EAAMmC,EAAMqc,EAAIxR,EAAOwR,GAAIoZ,EAASt1B,KAAKD,IAAI,EAAGm1B,EAAct3B,OAASu3B,EAAYv3B,OAAS03B,IAC5FV,EAAS/0B,EAAM6K,EAAOwR,EACxBA,EACAgZ,EAAct3B,OACdu3B,EAAYv3B,QAAS03B,EAASt1B,KAAKD,IAAI,EAAGm1B,EAAct3B,OAASu3B,EAAYv3B,OAAS03B,IACpF73B,EAAOoC,EAAM4E,EAAIiG,EAAOjG,GAAI2wB,EAASp1B,KAAKD,IAAI,EAAGm1B,EAAcv3B,MAAQw3B,EAAYx3B,MAAQy3B,IAC3FP,EAAQh1B,EAAM6K,EAAOjG,EAAIA,EAAIywB,EAAcv3B,MAAQw3B,EAAYx3B,OAAQy3B,EAASp1B,KAAKD,IAAI,EAAGm1B,EAAcv3B,MAAQw3B,EAAYx3B,MAAQy3B,IACtIL,EAAS,CAAC,EAEZr3B,GAAOk3B,EACPG,EAAOr3B,IAAMA,EAGbq3B,EAAOH,OAASA,EAGhBn3B,GAAQo3B,EACRE,EAAOt3B,KAAOA,EAGds3B,EAAOF,MAAQA,EAEnBxgC,KAAKsgC,UAAUI,EAAO,IACtBp8B,EAA4BqE,OAAQ,WAAW,KAC/CtB,EAAYrH,KAAK4f,SAAU,gCAAgC,GAC3D0hB,EAAKz/B,UACL7B,KAAKmgC,gBAAgBj8B,MAAM,IAC5B,EAEPlE,KAAK6F,eAAey7B,EAAM58B,EAAsB28B,EAAY,eAAgB39B,IACpEA,EAAMxB,iBACNwB,EAAMvB,iBAKN8G,EAAsBvF,IAG1B69B,GAAO,IACP78B,EAAsB1E,KAAKuD,QAAQ3G,QAAS,eAAgB8G,IACxDA,EAAMxB,kBAKN+G,EAAsBvF,IAGtBA,EAAM6sB,UACNgR,GACJ,IACA78B,EAAsB1E,KAAKuD,QAAQ3G,QAAS,eAAe,KAC3D+iC,GAAkB97B,KAAK7D,KAAK4f,SAAS,IACtC,IACCrc,EAAQgxB,YACRgN,GAER,CACAlB,WAAAA,CAAY3kB,GACR,MAAM8lB,EAAsBz5B,SAAS2L,cAAc,OACnD8tB,EAAoBjmC,UAAa,oBAAmBmgB,IACpD1b,KAAK4f,SAAS5N,YAAYwvB,GAC1B,MAAMF,EAAO,IAAIr7B,EACjBjG,KAAK6F,eAAey7B,EAAM58B,EAAsB88B,EAAqB,eAAgBr9B,IACjFA,EAAEhC,iBACF,IAAIs/B,EAAgB,KACpB,MAAM73B,EAAUD,IAChB23B,EAAK7+B,MAAQ,IAAI+C,EAAoBlB,EAA4BqE,OAAQ,eAAgBxE,IACrF,MAAM08B,EAAgB7gC,KAAKuD,QAAQwJ,UAAUvD,wBACvCs3B,EAAc9gC,KAAK4f,SAASpW,wBAC5Bqe,EAAI1jB,EAAEgQ,QAAU0sB,EAAcx3B,IAC9B+G,EAAIjM,EAAE+P,QAAU2sB,EAAcz3B,KAUpC,IAAIC,EACAk3B,EACAh3B,EACAH,EACAo3B,EACAl3B,EAdkB,OAAlBm4B,IAEAA,EAAgB,CACZC,UAAW7Z,EACX8Z,eAAgBb,EAAYv3B,OAC5Bq4B,UAAWxxB,EACXyxB,cAAef,EAAYx3B,QASnC,MAAMw4B,EAAUA,KACZz4B,EAAMmC,EAAMqc,GAAIrZ,OAAOuzB,UAAWN,EAAcC,UAC5CD,EAAcE,eACdd,EAAct3B,OACZvJ,KAAKkhC,iBAAiBL,EAAct3B,QACpCoC,KAAKD,IAAI,EAAG+1B,EAAcC,UACxBD,EAAcE,eACd3B,GAAQgC,iBAChBz4B,EACIk4B,EAAcC,UACVD,EAAcE,eACdt4B,EACRk3B,EAASM,EAAct3B,OAASF,EAAME,CAAM,EAE1C04B,EAAaA,KACf54B,EACIo4B,EAAcC,UACVD,EAAcE,eACtBp4B,EAASiC,EAAMqc,EAAIxe,EAAKA,EAAM,GAEO,iBAD1BrJ,KAAKuD,QACP28B,yBACF72B,EACCrJ,KAAKuD,QAAQ28B,wBACfF,GAAQgC,eAAgBxzB,OAAOuzB,WACrCxB,EAASM,EAAct3B,OAASF,EAAME,CAAM,EAE1C24B,EAAWA,KACb94B,EAAOoC,EAAM4E,GAAI5B,OAAOuzB,UAAWN,EAAcG,UAC7CH,EAAcI,cACdhB,EAAcv3B,MACZtJ,KAAKghC,gBAAgBH,EAAcv3B,OACnCqC,KAAKD,IAAI,EAAG+1B,EAAcG,UACxBH,EAAcI,cACd7B,GAAQmC,gBAChB74B,EACIm4B,EAAcG,UACVH,EAAcI,cACdz4B,EACRo3B,EAAQK,EAAcv3B,MAAQF,EAAOE,CAAK,EAExC84B,EAAYA,KACdh5B,EACIq4B,EAAcG,UACVH,EAAcI,cACtBv4B,EAAQkC,EAAM4E,EAAIhH,EAAMA,EAAO,GAEK,iBADzBpJ,KAAKuD,QACP08B,wBACF72B,EACCpJ,KAAKuD,QAAQ08B,uBACfD,GAAQmC,cAAe3zB,OAAOuzB,WACpCvB,EAAQK,EAAcv3B,MAAQF,EAAOE,CAAK,EAE9C,OAAQoS,GACJ,IAAK,MACDomB,IACA,MACJ,IAAK,SACDG,IACA,MACJ,IAAK,OACDC,IACA,MACJ,IAAK,QACDE,IACA,MACJ,IAAK,UACDN,IACAI,IACA,MACJ,IAAK,WACDJ,IACAM,IACA,MACJ,IAAK,aACDH,IACAC,IACA,MACJ,IAAK,cACDD,IACAG,IAGR,MAAM1B,EAAS,CAAC,EAEZr3B,GAAOk3B,EACPG,EAAOr3B,IAAMA,EAGbq3B,EAAOH,OAASA,EAGhBn3B,GAAQo3B,EACRE,EAAOt3B,KAAOA,EAGds3B,EAAOF,MAAQA,EAEnBE,EAAOn3B,OAASA,EAChBm3B,EAAOp3B,MAAQA,EACftJ,KAAKsgC,UAAUI,EAAO,IACtB,CACA7+B,QAASA,KACL+H,EAAQM,SAAS,GAEtB5F,EAA4BqE,OAAQ,WAAW,KAC9C24B,EAAKz/B,UACL7B,KAAKmgC,gBAAgBj8B,MAAM,IAC5B,IAEX,CACA88B,eAAAA,CAAgB13B,GACZ,MAAmD,iBAAxCtJ,KAAKuD,QAAQ08B,uBACb32B,EAAQtJ,KAAKuD,QAAQ08B,uBAEzB,CACX,CACAiB,gBAAAA,CAAiB33B,GACb,MAAoD,iBAAzCvJ,KAAKuD,QAAQ28B,wBACb32B,EAASvJ,KAAKuD,QAAQ28B,wBAE1B,CACX,CACAr+B,OAAAA,GACI89B,GAAkBE,QAAQ7/B,KAAK4f,UAC/B5f,KAAK4f,SAASzY,SACdpH,MAAM8B,SACV,EAEJm+B,GAAQgC,eAAiB,GACzBhC,GAAQmC,cAAgB,GClYjB,MAAME,WAAmC78B,EAC5C7F,WAAAA,CAAY6iB,EAAO8f,GACfviC,QACAC,KAAKwiB,MAAQA,EACbxiB,KAAKsiC,QAAUA,EACftiC,KAAK6F,eAAey8B,EACxB,CACAvrB,QAAAA,CAAS2pB,GACL1gC,KAAKsiC,QAAQhC,UAAUI,EAC3B,ECVG,MAAM6B,GAAuC,IACvCC,GAA0C,IAA1CA,GAAoD,IAApDA,GAAgE,IAAhEA,GAA6E,ICQnF,MAAMC,WAA+Bj9B,EACxC7F,WAAAA,CAAY4E,EAASoqB,GACjB5uB,QACAC,KAAKuE,QAAUA,EACfvE,KAAK2uB,SAAWA,EAChB3uB,KAAKtD,IAAM,CAAC,EACZsD,KAAKyD,WAAY,EACjBzD,KAAK6F,eAAe1E,EAAWmE,MAAK,KAChC,IAAK,MAAM7C,KAASmhB,OAAOhD,OAAO5gB,KAAKtD,KACnC+F,EAAM0D,WAAWtE,UACjBY,EAAMo9B,QAAQh+B,UAElB7B,KAAKyD,WAAY,CAAI,IAE7B,CACAutB,OAAAA,CAAQrP,GACJ,GAAI3hB,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAK,CACxB,MAAM,WAAE0K,EAAU,QAAE05B,GAAY7/B,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAInD,OAHA0K,EAAWtE,UACXg+B,EAAQh+B,iBACD7B,KAAKtD,IAAIilB,EAAMmC,IAAIroB,KACnB,CACX,CACA,OAAO,CACX,CACAw1B,MAAAA,CAAO1tB,GACH,MAAM,MAAEoe,EAAK,mBAAEuP,GAAuB3tB,EACtC,IAAKvD,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAK,CACzB,MAAM8I,EAjClB,WACI,MAAMA,EAAUwD,SAAS2L,cAAc,OAEvC,OADAnP,EAAQ4oB,UAAY,EACb5oB,CACX,CA6B4Bm+B,GAChBn+B,EAAQhJ,UAAY,oBACpByE,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAM,CACrBkmB,QACAxb,WAAYhF,EAAWkE,KACvBw6B,QAAS1+B,EAAWkE,KACpBd,UAER,CACA,MAAMo+B,EAAiB3iC,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAI8I,QAC1Cod,EAAMnV,KAAK5P,QAAQ2H,QAAQyW,gBAAkB2nB,GAC7CA,EAAe3wB,YAAY2P,EAAMnV,KAAK5P,QAAQ2H,SAE9Co+B,EAAe3nB,gBAAkBhb,KAAKuE,SACtCvE,KAAKuE,QAAQyN,YAAY2wB,GAE7B,MAAMhzB,EAASA,KAEX,MAAMsM,EAAM/S,EAAuBgoB,EAAmB3sB,SAChDq+B,EAAO15B,EAAuBlJ,KAAKuE,SACzCo+B,EAAe34B,MAAMZ,KAAU6S,EAAI7S,KAAOw5B,EAAKx5B,KAAlB,KAC7Bu5B,EAAe34B,MAAMX,IAAS4S,EAAI5S,IAAMu5B,EAAKv5B,IAAjB,KAC5Bs5B,EAAe34B,MAAMV,MAAS,GAAE2S,EAAI3S,UACpCq5B,EAAe34B,MAAMT,OAAU,GAAE0S,EAAI1S,WACrClC,EAAYs7B,EAAgB,0BAA6D,aAAlChhB,EAAMa,MAAMsB,IAAIrI,SAASnc,KAAoB,EAElGujC,EAAoBA,KAClBlhB,EAAMmC,IAAIlC,WACVjS,IAEJgzB,EAAe34B,MAAMqkB,QAAU1M,EAAMmC,IAAIlC,UAAY,GAAK,MAAM,EAE9DkhB,EAAqB,IAAI78B,EACzB88B,EAAuBA,KACO,aAA5BphB,EAAMmC,IAAIrI,SAASnc,KACnB8E,gBAAe,KACX,MAAM4+B,EAAgBhjC,KAAK2uB,SAASsU,eAAenO,MAAMtS,GAAUA,EAAMA,QAAUb,EAAMmC,IAAItB,QAC7F,IAAKwgB,EACD,OAEJ,MAAMz+B,EAAUy+B,EAAcV,QAAQ/9B,QAChConB,EAASA,KACX,MAAMuX,EAAQ10B,OAAOjK,EAAQ4+B,aAAa,eAC1CR,EAAe34B,MAAM+1B,OAAU,IH5EhB,IG4EoD,EAARmD,EAAY,EAAG,EAExE58B,EAAW,IAAI88B,kBAAiB,KAClCzX,GAAQ,IAEZmX,EAAmBrgC,MAAQtB,EAAWmE,MAAK,IAAMgB,EAASO,eAC1DP,EAASK,QAAQpC,EAAS,CACtB8+B,gBAAiB,CAAC,cAClBC,YAAY,IAEhB3X,GAAQ,IAIZgX,EAAe34B,MAAM+1B,OAAS,EAClC,EAEE55B,EAAa,IAAIX,EAAoBs9B,EAQ3C,IAAI7c,GAAoB0c,EAAgB,CACpCnc,UAAYriB,IACR+sB,EAAmBZ,WAAW/I,IAAIf,UAAUriB,EAAE,EAElDkiB,YAAcliB,IACV+sB,EAAmBZ,WAAW/I,IAAIlB,YAAYliB,EAAE,EAEpDoiB,YAAcpiB,IACV+sB,EAAmBZ,WAAW/I,IAAIhB,YAAYpiB,EAAE,EAEpDsiB,OAAStiB,IACL+sB,EAAmBZ,WAAW/I,IAAId,OAAOtiB,EAAE,EAE/CmiB,WAAaniB,IACT+sB,EAAmBZ,WAAW/I,IAAIjB,WAAWniB,EAAE,IAEnDwd,EAAMmC,IAAItK,uBAAsB,KAMhCqpB,GAAmB,IACnBlhB,EAAMmC,IAAI+G,uBAAsB,KAC3BlJ,EAAMmC,IAAIlC,WAGfjS,GAAQ,IACRgS,EAAMmC,IAAI0X,qBAAoB,KAC9BuH,GAAsB,KAyB1B,OAvBA/iC,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAIokC,QAAU1+B,EAAWmE,MAAK,KAC7C,IAAIhD,EACAqf,EAAMnV,KAAK5P,QAAQ2H,QAAQyW,gBAAkB2nB,GAC7CA,EAAe9uB,YAAY8N,EAAMnV,KAAK5P,QAAQ2H,SAEV,QAAvCjC,EAAKqgC,EAAe3nB,qBAAkC,IAAP1Y,GAAyBA,EAAGuR,YAAY8uB,EAAe,IAE3GI,IACA3+B,gBAAe,KACPpE,KAAKyF,YAQTo9B,GAAmB,IAGvB7iC,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAI0K,WAAWtE,UAElC7B,KAAKtD,IAAIilB,EAAMmC,IAAIroB,IAAI0K,WAAaA,EAC7Bw8B,CACX,EChKJ,IAAIY,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUthC,GAAS,IAAMuhC,EAAKL,EAAU93B,KAAKpJ,GAAS,CAAE,MAAO0B,GAAK2/B,EAAO3/B,EAAI,CAAE,CAC1F,SAAS8/B,EAASxhC,GAAS,IAAMuhC,EAAKL,EAAiB,MAAElhC,GAAS,CAAE,MAAO0B,GAAK2/B,EAAO3/B,EAAI,CAAE,CAC7F,SAAS6/B,EAAK/3B,GAJlB,IAAexJ,EAIawJ,EAAOi4B,KAAOL,EAAQ53B,EAAOxJ,QAJ1CA,EAIyDwJ,EAAOxJ,MAJhDA,aAAiBihC,EAAIjhC,EAAQ,IAAIihC,GAAE,SAAUG,GAAWA,EAAQphC,EAAQ,KAIjB0hC,KAAKJ,EAAWE,EAAW,CAC7GD,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAK53B,OAClE,GACJ,EAIO,MAAMw4B,WAAqB7+B,EAC9B,UAAImD,GACA,IAAIrG,EAAIwf,EACR,OAAoF,QAA5EA,EAA6B,QAAvBxf,EAAKtC,KAAKskC,eAA4B,IAAPhiC,OAAgB,EAASA,EAAGG,aAA0B,IAAPqf,EAAgBA,EAAK,IACrH,CACAniB,WAAAA,CAAYwmB,EAAQ5qB,EAAWgI,GAC3BxD,QACAC,KAAKmmB,OAASA,EACdnmB,KAAKzE,UAAYA,EACjByE,KAAKuD,QAAUA,EACfvD,KAAKukC,aAAe,IAAIvhC,EACxBhD,KAAKwkC,YAAcxkC,KAAKukC,aAAa7gC,MACrC1D,KAAKykC,YAAc,IAAIzhC,EACvBhD,KAAK0kC,WAAa1kC,KAAKykC,YAAY/gC,MACnC1D,KAAKskC,QAAU,KACftkC,KAAK6F,eAAe7F,KAAKukC,aAAcvkC,KAAKykC,YAAa,CACrD5iC,QAASA,KACL7B,KAAKy7B,OAAO,GAGxB,CACAkJ,UAAAA,GACI,IAAK3kC,KAAKskC,QACN,OAAO,KAEX,MAAMl7B,EAAOpJ,KAAKskC,QAAQ7hC,MAAMmiC,QAIhC,MAAO,CAAEv7B,IAHGrJ,KAAKskC,QAAQ7hC,MAAMoiC,QAGjBz7B,OAAME,MAFNtJ,KAAKskC,QAAQ7hC,MAAMqiC,WAENv7B,OADZvJ,KAAKskC,QAAQ7hC,MAAMsiC,YAEtC,CACAtJ,KAAAA,GACI,IAAIn5B,EAAIwf,EACJ9hB,KAAKskC,UACLtkC,KAAKukC,aAAargC,OACyB,QAA1C4d,GAAMxf,EAAKtC,KAAKuD,SAASihC,mBAAgC,IAAP1iB,GAAyBA,EAAGha,KAAKxF,EAAI,CACpF7G,GAAIuE,KAAKmmB,OACTxd,OAAQ3I,KAAKskC,QAAQ7hC,QAEzBzC,KAAKskC,QAAQn+B,WAAWtE,UACxB7B,KAAKskC,QAAQ7hC,MAAMg5B,QACnBz7B,KAAKskC,QAAU,KACftkC,KAAKykC,YAAYvgC,OAEzB,CACA8gC,IAAAA,GACI,IAAI1iC,EAAIwf,EACR,OAAOyhB,GAAUvjC,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAKskC,QACL,MAAM,IAAI/hC,MAAM,6CAEpB,MAAM0iC,EAAO,GAAEjlC,KAAKuD,QAAQ0hC,MACtBC,EAAWthB,OAAOuhB,QAAQ,CAC5B97B,IAAKrJ,KAAKuD,QAAQ8F,IAClBD,KAAMpJ,KAAKuD,QAAQ6F,KACnBE,MAAOtJ,KAAKuD,QAAQ+F,MACpBC,OAAQvJ,KAAKuD,QAAQgG,SAEpB7M,KAAIN,IAAA,IAAEsxB,EAAKjrB,GAAMrG,EAAA,MAAM,GAAEsxB,KAAOjrB,GAAO,IACvC2iC,KAAK,KAIJC,EAAiB18B,OAAOq8B,KAAKC,EAAKjlC,KAAKmmB,OAAQ+e,GACrD,IAAKG,EAID,OAAO,KAEX,MAAMl/B,EAAa,IAAIX,EACvBxF,KAAKskC,QAAU,CAAE7hC,MAAO4iC,EAAgBl/B,cACxCA,EAAWN,eAAevB,EAA4BqE,OAAQ,gBAAgB,KAO1E3I,KAAKy7B,OAAO,KAEhB,MAAM1uB,EAAY/M,KAAKslC,8BAQvB,OAPItlC,KAAKzE,WACLwR,EAAU9F,UAAUhD,IAAIjE,KAAKzE,WAEQ,QAAxCumB,GAAMxf,EAAKtC,KAAKuD,SAASgiC,iBAA8B,IAAPzjB,GAAyBA,EAAGha,KAAKxF,EAAI,CAClF7G,GAAIuE,KAAKmmB,OACTxd,OAAQ08B,IAEL,IAAIzB,SAASC,IAChBwB,EAAe7gC,iBAAiB,UAAWL,QAI3CkhC,EAAe7gC,iBAAiB,QAAQ,KAIpC,MAAMghC,EAAmBH,EAAet9B,SACxCy9B,EAAiBxpC,MAAQ+L,SAAS/L,MAClCwpC,EAAiBxW,KAAKhd,YAAYjF,G5Cc/C,SAAmBhF,EAAU09B,GAChC,MAAMC,EAAclkC,MAAM8D,KAAKmgC,GAC/B,IAAK,MAAME,KAAcD,EAAa,CAClC,GAAIC,EAAWtnC,KAAM,CACjB,MAAMunC,EAAO79B,EAAS2L,cAAc,QACpCkyB,EAAKvnC,KAAOsnC,EAAWtnC,KACvBunC,EAAKtmC,KAAOqmC,EAAWrmC,KACvBsmC,EAAKC,IAAM,aACX99B,EAAS+9B,KAAK9zB,YAAY4zB,EAC9B,CACA,IAAIG,EAAW,GACf,IACQJ,EAAWK,WACXD,EAAWvkC,MAAM8D,KAAKqgC,EAAWK,UAAUtpC,KAAKupC,GAASA,EAAKC,UAEtE,CACA,MAAOC,GACH,CAEJ,IAAK,MAAMF,KAAQF,EAAU,CACzB,MAAM/7B,EAAQjC,EAAS2L,cAAc,SACrC1J,EAAMgI,YAAYjK,EAASq+B,eAAeH,IAC1Cl+B,EAAS+9B,KAAK9zB,YAAYhI,EAC9B,CACJ,CACJ,C4CtCoBq8B,CAAUb,EAAkB78B,OAAOZ,SAAS29B,aAK5CphC,EAA4B+gC,EAAgB,gBAAgB,KAIxDrlC,KAAKy7B,OAAO,IAEhBoI,EAAQ92B,EAAU,GACpB,GAEV,GACJ,CACAu4B,2BAAAA,GACI,MAAMpqB,EAAKnT,SAAS2L,cAAc,OAQlC,OAPAwH,EAAGjU,UAAUhD,IAAI,oBACjBiX,EAAGzf,GAAK,mBACRyf,EAAGlR,MAAM+M,SAAW,WACpBmE,EAAGlR,MAAMV,MAAQ,OACjB4R,EAAGlR,MAAMT,OAAS,OAClB2R,EAAGlR,MAAMX,IAAM,MACf6R,EAAGlR,MAAMZ,KAAO,MACT8R,CACX,ECpHJ,MAAMorB,GAA6B,CAC/B3c,eAAgB,CAAErqB,KAAM,SAAUmD,MAAO,IACzCoC,KAAM,CAAEvF,KAAM,SAAUmD,MAAO,KAEnC,SAAS8jC,GAA2BhjC,GAChC,MAAMyhB,EAAczhB,EAAQ+B,KAAK0f,YAClB,IAAIzhB,EAAQ+B,KAAK6d,QAAQzmB,KAAKilB,IACzC,MAAM6kB,EAAejjC,EAAQ+B,KAAKqjB,MAAMtF,YAAY1B,GAEpD,OADApe,EAAQ+B,KAAKqjB,MAAMoI,gBAAgBC,QAAQrP,GACpC6kB,CAAY,IAEhB1kC,SAAS6f,IACZpe,EAAQyI,GAAG2c,MAAMwI,UAAUxP,EAAO,CAC9BiX,cAAe5T,IAAgBrD,EAC/BoX,oBAAoB,GACtB,GAEV,CACO,MAAM0N,WAA0BjmB,GACnC,eAAIvS,GACA,OAAOjO,KAAK6gB,SAAS5S,WACzB,CACA,eAAIuW,GACA,OAAOxkB,KAAKmjB,OAAO5hB,MACvB,CACA,UAAI4hB,GACA,OAAOnjB,KAAK2gB,OAAO+lB,SAASlkB,GAAUA,EAAMW,QAChD,CACA,WAAI5f,GACA,OAAOvD,KAAK2mC,QAChB,CACA,eAAI3hB,GACA,MAAMlE,EAAc9gB,KAAK8gB,YACzB,GAAKA,EAGL,OAAOA,EAAYkE,WACvB,CACA,YAAI8L,GACA,IAAIxuB,EACJ,OAA+C,QAAvCA,EAAKtC,KAAKuD,QAAQmyB,uBAAoC,IAAPpzB,EAAgBA,EAAK,iBAChF,CACA,OAAIwhB,GACA,OAAO9jB,KAAK03B,IAChB,CACA,OAAIjT,GACA,OAAOzkB,KAAK6gB,SAAS5R,MACzB,CACA,kBAAIg0B,GACA,OAAOjjC,KAAK4mC,eAChB,CACAjnC,WAAAA,CAAYqb,EAAezX,GACvB,IAAIjB,EACJvC,MAAMib,EAAe,CACjBrJ,oBAAoB,EACpB1D,YAAaf,EAAYkB,WACzB6D,OAAQ1O,EAAQgyB,YACV,CAAE/iB,gBAAiB,oBACnB/R,EACNugB,oBAAqBzd,EAAQyd,oBAC7BzE,OAAQhZ,EAAQgZ,OAChBtN,OAAQ1L,EAAQkhB,IAChBlpB,UAAWgI,EAAQhI,YAEvByE,KAAK6mC,YAAcj7B,IACnB5L,KAAK8mC,cAAgB,IAAI5H,GAA4Bl/B,MACrDA,KAAKq2B,UAAY,KACjBr2B,KAAK+mC,iBAAmB,IAAI/jC,EAC5BhD,KAAK8kB,gBAAkB9kB,KAAK+mC,iBAAiBrjC,MAC7C1D,KAAKgnC,iBAAmB,IAAIhkC,EAC5BhD,KAAK6kB,gBAAkB7kB,KAAKgnC,iBAAiBtjC,MAC7C1D,KAAK0vB,WAAa,IAAI1sB,EACtBhD,KAAK0jB,UAAY1jB,KAAK0vB,WAAWhsB,MACjC1D,KAAKg3B,YAAc,IAAIh0B,EACvBhD,KAAK2kB,WAAa3kB,KAAKg3B,YAAYtzB,MACnC1D,KAAKmnB,mBAAqB,IAAInkB,EAC9BhD,KAAK4kB,kBAAoB5kB,KAAKmnB,mBAAmBzjB,MACjD1D,KAAKw3B,0BAA4B,IAAIx0B,EACrChD,KAAK+kB,yBAA2B/kB,KAAKw3B,0BAA0B9zB,MAC/D1D,KAAKs3B,kBAAoB,IAAIt0B,EAC7BhD,KAAKkkB,iBAAmBlkB,KAAKs3B,kBAAkB5zB,MAC/C1D,KAAKi3B,eAAiB,IAAIj0B,EAC1BhD,KAAKgkB,cAAgBhkB,KAAKi3B,eAAevzB,MACzC1D,KAAKinC,qBAAuB,IAAIjkC,EAChChD,KAAKojB,oBAAsBpjB,KAAKinC,qBAAqBvjC,MACrD1D,KAAKu3B,wBAA0B,IAAIv0B,EACnChD,KAAKokB,uBAAyBpkB,KAAKu3B,wBAAwB7zB,MAC3D1D,KAAKknC,gBAAkB,IAAIlkC,EAC3BhD,KAAK0kB,eAAiB1kB,KAAKknC,gBAAgBxjC,MAC3C1D,KAAK4mC,gBAAkB,GACvB5mC,KAAKmnC,cAAgB,GACrBnnC,KAAKonC,kBAAoB,IAAIpkC,EAC7BhD,KAAKmkB,iBAAmBnkB,KAAKonC,kBAAkB1jC,MAC/C1D,KAAKqnC,eAAiB,IAAIrkC,EAC1BhD,KAAKikB,cAAgBjkB,KAAKqnC,eAAe3jC,MACzC1D,KAAKg9B,wBAA0B,IAAIh6B,EACnChD,KAAKqkB,uBAAyBrkB,KAAKg9B,wBAAwBt5B,MAC3D1D,KAAKsnC,SAAU,EACftnC,KAAK+3B,uBAAyB,IAAI0K,GAAuBziC,KAAK6gB,SAAStc,QAASvE,MAChFqH,EAAYrH,KAAK6gB,SAAStc,QAAS,eAAe,GAClD8C,EAAYrH,KAAKuE,QAAS,aAAchB,EAAQoyB,OAChD31B,KAAK6F,eAAe7F,KAAK+3B,uBAAwB/3B,KAAK+mC,iBAAkB/mC,KAAKgnC,iBAAkBhnC,KAAKmnB,mBAAoBnnB,KAAKu3B,wBAAyBv3B,KAAKi3B,eAAgBj3B,KAAKs3B,kBAAmBt3B,KAAKinC,qBAAsBjnC,KAAK0vB,WAAY1vB,KAAKg3B,YAAah3B,KAAKknC,gBAAiBlnC,KAAKqnC,eAAgBrnC,KAAKonC,kBAAmBpnC,KAAKg9B,wBAAyBh9B,KAAKw3B,0BAA2Bx3B,KAAK0hB,yCAAwC,KAC3a1hB,KAAKunC,iBAAiB,IACtBvnC,KAAKohB,UAAU1d,IACV1D,KAAKsnC,SACNtnC,KAAKqnC,eAAenjC,KAAKR,EAC7B,IACA1D,KAAKkhB,aAAaxd,IACb1D,KAAKsnC,SACNtnC,KAAKonC,kBAAkBljC,KAAKR,EAChC,IACA1D,KAAKshB,mBAAmB5d,IACnB1D,KAAKsnC,SACNtnC,KAAKg9B,wBAAwB94B,KAAKR,EACtC,IACAxC,EAAME,IAAIpB,KAAKohB,SAAUphB,KAAKkhB,YAA9BhgB,EAA2C,KAC3ClB,KAAKunC,iBAAiB,IACtBrmC,EAAME,IAAIpB,KAAKgkB,cAAehkB,KAAKkkB,iBAAkBlkB,KAAKikB,cAAejkB,KAAKkhB,YAAalhB,KAAK0kB,eAAgB1kB,KAAKokB,uBAArHljB,EAA6I,KAC7IlB,KAAKuhB,yBAAyBrd,MAAM,IACpC/C,EAAWmE,MAAK,KAEhB,IAAK,MAAMkd,IAAS,IAAIxiB,KAAK4mC,iBACzBpkB,EAAM3gB,UAGV,IAAK,MAAM2gB,IAAS,IAAIxiB,KAAKmnC,eACzB3kB,EAAMrc,WAAWtE,SACrB,KAEJ7B,KAAK2mC,SAAWpjC,EAChBvD,KAAKwnC,gBAAkB,IAAIxgB,GAAWhnB,KAAKuE,QAAS,CAChD0jB,kBAAmBA,CAACvkB,EAAOqT,KACvB,MAAMrW,EAAOG,IACb,GAAIH,EACA,OAAIA,EAAKd,SAAWI,KAAKvE,KAGR,WAAbsb,GAGgC,IAAzB/W,KAAK6gB,SAAStf,QAI7B,GAAiB,WAAbwV,GAAkD,IAAzB/W,KAAK6gB,SAAStf,OAMvC,OAAO,EAEX,MAAMy4B,EAAa,IAAI/E,GAA+BvxB,EAAO,OAAQqT,EAAUlW,GAE/E,OADAb,KAAKw3B,0BAA0BtzB,KAAK81B,GAC7BA,EAAW9E,UAAU,EAEhC5N,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDsB,aAAuD,QAAxCtmB,EAAKtC,KAAKuD,QAAQqyB,wBAAqC,IAAPtzB,EAAgBA,EAAKgkC,KAExFtmC,KAAK6F,eAAe7F,KAAKwnC,gBAAiBxnC,KAAKwnC,gBAAgB5iB,mBAAmBlhB,IAC1E1D,KAAK6gB,SAAStf,OAAS,GAAwB,WAAnBmC,EAAMqT,UAItC/W,KAAKmnB,mBAAmBjjB,KAAK,IAAIgwB,GAA6BxwB,EAAO,CACjEywB,KAAM,OACNxS,WAAOlhB,EACPqjB,IAAK9jB,KAAK03B,KACVlV,WAAO/hB,EACPE,QAASE,IACV,IACHb,KAAKwnC,gBAAgB/gB,QAAQ/iB,IAC7B,IAAIpB,EACJ,MAAM23B,EAAgB,IAAInE,GAAsB,CAC5CnP,YAAajjB,EAAMijB,YACnB5P,SAAUrT,EAAMqT,SAChB4K,WAAOlhB,EACPqjB,IAAK9jB,KAAK03B,KACVlV,WAAO/hB,EACPE,QAASE,EACTszB,KAAM,SAGV,GADAn0B,KAAKg3B,YAAY9yB,KAAK+1B,GAClBA,EAAc/3B,iBACd,OAEJ,MAAMxB,EAAOG,IACTH,EACAV,KAAK47B,iBAAiB,CAClBt2B,KAAM,CACFzF,QAASa,EAAKb,QACdC,QAAiC,QAAvBwC,EAAK5B,EAAKZ,eAA4B,IAAPwC,EAAgBA,OAAK7B,GAElEuL,GAAI,CACAwW,MAAOxiB,KAAKynC,cAAc/jC,EAAMqT,UAChCA,SAAU,YAKlB/W,KAAK0vB,WAAWxrB,KAAK,IAAI2xB,GAAqB,CAC1ClP,YAAajjB,EAAMijB,YACnB5P,SAAUrT,EAAMqT,SAChB4K,WAAOlhB,EACPqjB,IAAK9jB,KAAK03B,KACVlV,WAAO/hB,EACPE,QAASE,IAEjB,IACAb,KAAKwnC,iBACTxnC,KAAK03B,KAAO,IAAInT,GAAYvkB,MAC5BA,KAAKunC,iBACT,CACAjiB,cAAAA,CAAeoiB,EAAcnkC,GACzB,IAAIjB,EAAIwf,EAAIC,EACZ,GAAI2lB,aAAwB/J,IACI,IAA5B+J,EAAallB,MAAM3d,KACnB,OAAO7E,KAAKslB,eAAeoiB,EAAallB,MAAOjf,GAEnD,MAAMokC,E7CtCP,SAA0BpjC,GAC7B,SAASqjC,EAAYrjC,GACjB,MAAMsjC,EAAO,GACb,IAAK,IAAI58B,EAAI,EAAGA,EAAI1G,EAAQ0C,UAAU1F,OAAQ0J,IAC1C48B,EAAKhkC,KAAKU,EAAQ0C,UAAUsH,KAAKtD,IAErC,OAAO48B,CACX,CACA,IAAIF,EACAvqB,EAAS7Y,EACb,KAAkB,OAAX6Y,IACHuqB,EAAQC,EAAYxqB,GAAQ0X,MAAMgT,GAAQA,EAAIC,WAAW,qBACpC,iBAAVJ,IAGXvqB,EAASA,EAAOpC,cAEpB,OAAO2sB,CACX,C6CoBsBK,CAAiBhoC,KAAK6gB,SAAStc,SACvCA,EAAUvE,KAAKuE,QAarB,MAAM0X,GAXE1Y,aAAyC,EAASA,EAAQwT,UACnDxT,EAAQwT,SAEf2wB,aAAwB1L,GACjB0L,EAAanjC,QAAQiF,wBAE5Bk+B,EAAallB,MACNklB,EAAallB,MAAMje,QAAQiF,wBAE/BjF,EAAQiF,wBAGb3J,EAAqJ,QAA1IiiB,EAA8F,QAAxFxf,EAAKiB,aAAyC,EAASA,EAAQ0kC,2BAAwC,IAAP3lC,OAAgB,EAASA,EAAG7G,UAAuB,IAAPqmB,EAAgBA,EAAK9hB,KAAKkoC,iBACtJ,SAAnCR,EAAa5jB,IAAIrI,SAASnc,MAC1BooC,EAAa5jB,IAAI9W,YAAW,GAEhC,MAAMs3B,EAAU,IAAID,GAAc,GAAErkC,KAAKvE,MAAMoE,IAC/C8nC,QAAqCA,EAAQ,GAAI,CAC7C1C,IAAoF,QAA9EljB,EAAKxe,aAAyC,EAASA,EAAQkyB,iBAA8B,IAAP1T,EAAgBA,EAAK,eACjH3Y,KAAMT,OAAOi8B,QAAU3oB,EAAI7S,KAC3BC,IAAKV,OAAOk8B,QAAU5oB,EAAI5S,IAC1BC,MAAO2S,EAAI3S,MACXC,OAAQ0S,EAAI1S,OACZg8B,UAAWhiC,aAAyC,EAASA,EAAQgiC,UACrEf,YAAajhC,aAAyC,EAASA,EAAQihC,cAErE2D,EAAyB,IAAI3iC,EAAoB8+B,EAASA,EAAQI,YAAW,KAC/EyD,EAAuBtmC,SAAS,KAEpC,OAAOyiC,EACFU,OACAb,MAAMiE,IACP,IAAI9lC,EACJ,GAAIgiC,EAAQ7+B,WACR,OAEJ,GAAwB,OAApB2iC,EAEA,YADAD,EAAuBtmC,UAG3B,MAAMwmC,EAAStgC,SAAS2L,cAAc,OACtC20B,EAAO9sC,UAAY,8BACnB,MAAMw8B,EAAyB,IAAI0K,GAAuB4F,EAAQroC,MAC5DsoC,EAAiBZ,aAAwB/J,GACzC+J,EAAallB,MACbklB,EACAa,EAAoBb,EAAa5jB,IAAIrI,SAASnc,KAC9CkjB,EAAiG,QAAxFlgB,EAAKiB,aAAyC,EAASA,EAAQ0kC,2BAAwC,IAAP3lC,EAAgBA,EAAKtC,KAAKwoC,YAAY,CAAE/sC,GAAIoE,IAK3J,GAJA2iB,EAAMmG,MAAMoI,gBAAkBgH,GACxBx0B,aAAyC,EAASA,EAAQ0kC,sBAC5DjoC,KAAKqnC,eAAenjC,KAAKse,GAEzBklB,aAAwB/J,GACxB39B,KAAKyoC,YAAW,KACZ,MAAM9mB,EAAQ2mB,EAAe3f,MAAMtF,YAAYqkB,GAC/CllB,EAAMmG,MAAMwI,UAAUxP,EAAM,SAQhC,OAJA3hB,KAAKyoC,YAAW,IAAMlC,GAA2B,CAC7CjhC,KAAMgjC,EACNt8B,GAAIwW,MAEA+lB,GACJ,IAAK,OACDD,EAAexkB,IAAI9W,YAAW,GAC9B,MACJ,IAAK,WACL,IAAK,SACDhN,KAAK8iB,YAAYwlB,GAsB7B,IAAII,EAlBJN,EAAgBnhC,UAAUhD,IAAI,eAC9BmkC,EAAgBp+B,MAAMqjB,SAAW,SACjC+a,EAAgBp2B,YAAYq2B,GAC5BD,EAAgBp2B,YAAYwQ,EAAMje,SAClCie,EAAMmG,MAAMlN,SAAW,CACnBnc,KAAM,SACNo8B,UAAWA,IAAM4I,EAAQ37B,QAE7B3I,KAAK2oC,yBAAyBnmB,GAC9B2lB,EAAuBtiC,eAAe2c,EAAMsB,IAAIxC,mBAAmB5d,IAC/D,IAAIpB,EACAoB,EAAM2mB,WACoB,QAAzB/nB,EAAKgiC,EAAQ37B,cAA2B,IAAPrG,GAAyBA,EAAGghB,QAClE,IACAd,EAAMsB,IAAImH,aAAY,KACtB,IAAI3oB,EACsB,QAAzBA,EAAKgiC,EAAQ37B,cAA2B,IAAPrG,GAAyBA,EAAGghB,OAAO,KAGzE,MAAM7gB,EAAQ,CACVkG,OAAQ27B,EACRsE,YAAapmB,EACb8lB,eAAgBtoC,KAAK4iB,SAAS0lB,EAAe7sC,IACvC6sC,EAAe7sC,QACfgF,EACN0F,WAAY,CACRtE,QAASA,KACLsmC,EAAuBtmC,UAChB6mC,KAInBP,EAAuBtiC,eAMvBvB,EAA4BggC,EAAQ37B,OAAQ,UAAU,KAClD6Z,EAAMjN,OAAO5M,OAAOm8B,WAAYn8B,OAAOo8B,YAAY,IACnDhN,EAAwB52B,EAAWmE,MAAK,KACxC,GAAItF,KAAK4iB,SAAS0lB,EAAe7sC,IAC7BuE,KAAKyoC,YAAW,IAAMlC,GAA2B,CAC7CjhC,KAAMkd,EACNxW,GAAIs8B,MAEHA,EAAexkB,IAAIlC,WACpB0mB,EAAexkB,IAAI9W,YAAW,GAE9BhN,KAAK4iB,SAASJ,EAAM/mB,KACpBuE,KAAKyiB,cAAcD,EAAO,CACtBqmB,sBAAsB,SAI7B,GAAI7oC,KAAK4iB,SAASJ,EAAM/mB,IAAK,CAC9B,MAAMqtC,EAAe9oC,KAAKyiB,cAAcD,EAAO,CAC3CnK,aAAa,EACbsK,YAAY,IAEhBmmB,EAAangB,MAAMoI,gBACf/wB,KAAK+3B,uBACT+Q,EAAangB,MAAMlN,SAAW,CAAEnc,KAAM,QACtCopC,EAAgBI,CACpB,MAEJ9oC,KAAKmnC,cAActjC,KAAKpB,GACxBzC,KAAKunC,iBAAiB,IAErBwB,OAAO5C,IACRxjC,QAAQqmC,MAAM,2CAA4C7C,EAAI,GAEtE,CACA9gB,gBAAAA,CAAiB9W,EAAMhL,GACnB,IAAIjB,EAAIwf,EAAIC,EAAIC,EAAIsa,EACpB,IAAI9Z,EACJ,GAAIjU,aAAgBovB,GAChBnb,EAAQxiB,KAAKwoC,cACbxoC,KAAKqnC,eAAenjC,KAAKse,GACzBxiB,KAAKyoC,YAAW,IAAMzoC,KAAKqjB,YAAY9U,EAAM,CACzC06B,kBAAkB,EAClB5wB,aAAa,EACbqhB,oBAAoB,MAExB15B,KAAKyoC,YAAW,IAAMjmB,EAAMmG,MAAMwI,UAAU5iB,EAAM,CAAEwqB,oBAAoB,UAEvE,CACDvW,EAAQjU,EACR,MAAM26B,EAA4F,QAAlE5mC,EAAKtC,KAAKmnC,cAAcrS,MAAMjkB,GAAMA,EAAE+3B,cAAgBpmB,WAA2B,IAAPlgB,OAAgB,EAASA,EAAGgmC,eAChIa,EAAuBD,EACvBlpC,KAAK4iB,SAASsmB,QACdzoC,EAC8F,kBAA/E8C,aAAyC,EAASA,EAAQ6lC,kBAC3E7lC,EAAQ6lC,kBAEJD,GACAnpC,KAAKyoC,YAAW,IAAMlC,GAA2B,CAC7CjhC,KAAMiJ,EACNvC,GAAIm9B,MAERnpC,KAAKyiB,cAAclU,EAAM,CACrB86B,kBAAkB,EAClBR,sBAAsB,IAE1B7oC,KAAKyiB,cAAc0mB,EAAsB,CACrC9wB,aAAa,IAEjBmK,EAAQ2mB,GAGRnpC,KAAKyiB,cAAclU,EAAM,CACrB8J,aAAa,EACbgxB,kBAAkB,EAClBR,sBAAsB,IAItC,CAmDA,MAAMS,EAlDN,WACI,GAAI/lC,aAAyC,EAASA,EAAQwT,SAAU,CACpE,MAAM9K,EAAS,CAAC,EA+BhB,MA9BI,SAAU1I,EAAQwT,SAClB9K,EAAO7C,KAAOuC,KAAKD,IAAInI,EAAQwT,SAAS3N,KAAM,GAEzC,UAAW7F,EAAQwT,SACxB9K,EAAOu0B,MAAQ70B,KAAKD,IAAInI,EAAQwT,SAASypB,MAAO,GAGhDv0B,EAAO7C,KAAOo5B,GAEd,QAASj/B,EAAQwT,SACjB9K,EAAO5C,IAAMsC,KAAKD,IAAInI,EAAQwT,SAAS1N,IAAK,GAEvC,WAAY9F,EAAQwT,SACzB9K,EAAOs0B,OAAS50B,KAAKD,IAAInI,EAAQwT,SAASwpB,OAAQ,GAGlDt0B,EAAO5C,IAAMm5B,GAEY,iBAAlBj/B,EAAQ+F,MACf2C,EAAO3C,MAAQqC,KAAKD,IAAInI,EAAQ+F,MAAO,GAGvC2C,EAAO3C,MAAQk5B,GAEW,iBAAnBj/B,EAAQgG,OACf0C,EAAO1C,OAASoC,KAAKD,IAAInI,EAAQgG,OAAQ,GAGzC0C,EAAO1C,OAASi5B,GAEbv2B,CACX,CACA,MAAO,CACH7C,KAA+E,iBAAjE7F,aAAyC,EAASA,EAAQ6M,GAClEzE,KAAKD,IAAInI,EAAQ6M,EAAG,GACpBoyB,GACNn5B,IAA8E,iBAAjE9F,aAAyC,EAASA,EAAQskB,GACjElc,KAAKD,IAAInI,EAAQskB,EAAG,GACpB2a,GACNl5B,MAAoF,iBAArE/F,aAAyC,EAASA,EAAQ+F,OACnEqC,KAAKD,IAAInI,EAAQ+F,MAAO,GACxBk5B,GACNj5B,OAAsF,iBAAtEhG,aAAyC,EAASA,EAAQgG,QACpEoC,KAAKD,IAAInI,EAAQgG,OAAQ,GACzBi5B,GAEd,CACoB+G,GACdjH,EAAU,IAAItC,GAAQpc,OAAOC,OAAOD,OAAOC,OAAO,CAAE9W,UAAW/M,KAAK6gB,SAAStc,QAAS3H,QAAS4lB,EAAMje,SAAW+kC,GAAc,CAAErJ,uBAA6D,0BAArCjgC,KAAKuD,QAAQiyB,yBACjK/0B,EACsH,QAArHshB,EAAiD,QAA3CD,EAAK9hB,KAAKuD,QAAQiyB,2BAAwC,IAAP1T,OAAgB,EAASA,EAAG0nB,kCAA+C,IAAPznB,EAAgBA,EAAKwgB,GAAsCrC,wBAA8D,0BAArClgC,KAAKuD,QAAQiyB,yBAC/N/0B,EACuH,QAAtH67B,EAAiD,QAA3Cta,EAAKhiB,KAAKuD,QAAQiyB,2BAAwC,IAAPxT,OAAgB,EAASA,EAAGynB,mCAAgD,IAAPnN,EAAgBA,EAAKiG,MACxJrnB,EAAKsH,EAAMje,QAAQmlC,cAAc,mBACvC,IAAKxuB,EACD,MAAM,IAAI3Y,MAAM,8BAEpB+/B,EAAQlB,UAAUlmB,EAAI,CAClBqZ,WAA8F,kBAA1EhxB,aAAyC,EAASA,EAAQgxB,aACxEhxB,EAAQgxB,aAGlB,MAAMoV,EAAqB,IAAItH,GAA2B7f,EAAO8f,GAC3Dn8B,EAAa,IAAIX,EAAoBgd,EAAMsB,IAAIxC,mBAAmB5d,IAChEA,EAAM2mB,UACNiY,EAAQ7B,cACZ,IACAr6B,EAAmBoc,EAAMje,SAAUwb,IACnC,MAAM,MAAEzW,EAAK,OAAEC,GAAWwW,EAAMM,YAChCmC,EAAMjN,OAAOjM,EAAOC,EAAO,KAE/BogC,EAAmB9jC,eAAey8B,EAAQ9uB,aAAY,KAIlDgP,EAAMjN,OAAOiN,EAAMlZ,MAAOkZ,EAAMjZ,OAAO,IACvC+4B,EAAQlC,gBAAe,KACvBpgC,KAAKuhB,yBAAyBrd,MAAM,IACpCse,EAAMhP,aAAa9P,IACnB4+B,EAAQhC,UAAU,CACd/2B,OAAQ7F,aAAqC,EAASA,EAAM6F,OAC5DD,MAAO5F,aAAqC,EAASA,EAAM4F,OAC7D,IACF,CACAzH,QAASA,KACLsE,EAAWtE,UACXsF,EAAOnH,KAAK4mC,gBAAiB+C,GAC7BnnB,EAAMmG,MAAMlN,SAAW,CAAEnc,KAAM,QAC/BU,KAAKunC,iBAAiB,IAG9BvnC,KAAK4mC,gBAAgB/iC,KAAK8lC,GAC1BnnB,EAAMmG,MAAMlN,SAAW,CAAEnc,KAAM,aACzBiE,aAAyC,EAASA,EAAQqmC,kBAC5D5pC,KAAK2oC,yBAAyBnmB,GAElCxiB,KAAKunC,iBACT,CACAE,aAAAA,CAAc1wB,GACV,OAAQA,GACJ,IAAK,MACL,IAAK,SACG/W,KAAK6gB,SAAS5S,cAAgBf,EAAYkB,YAG1CpO,KAAK6gB,SAASzC,kCAElB,MACJ,IAAK,OACL,IAAK,QACGpe,KAAK6gB,SAAS5S,cAAgBf,EAAYqJ,UAG1CvW,KAAK6gB,SAASzC,kCAM1B,OAAQrH,GACJ,IAAK,MACL,IAAK,OACL,IAAK,SACD,OAAO/W,KAAK6pC,sBAAsB,CAAC,IACvC,IAAK,SACL,IAAK,QACD,OAAO7pC,KAAK6pC,sBAAsB,CAAC7pC,KAAK6gB,SAAStf,SACrD,QACI,MAAM,IAAIgB,MAAO,wBAAuBwU,KAEpD,CACA8K,aAAAA,CAActe,GACV,IAAIjB,EAAIwf,EAAIC,EAAIC,EAEhB,GADAjiB,MAAM8hB,cAActe,GAChB,wBAAyBA,EACzB,IAAK,MAAMif,KAASxiB,KAAK4mC,gBAAiB,CACtC,OAAQrjC,EAAQiyB,qBACZ,IAAK,wBACDhT,EAAM8f,QAAQpC,6BAA0Bz/B,EACxC+hB,EAAM8f,QAAQrC,4BAAyBx/B,EACvC,MACJ,UAAKA,EACD+hB,EAAM8f,QAAQpC,wBACVqC,GACJ/f,EAAM8f,QAAQrC,uBACVsC,GACJ,MACJ,QACI/f,EAAM8f,QAAQpC,wBAC6B,QAAtC59B,EAAKiB,EAAQiyB,2BAAwC,IAAPlzB,OAAgB,EAASA,EAAGmnC,4BAC/EjnB,EAAM8f,QAAQrC,uBAC6B,QAAtCne,EAAKve,EAAQiyB,2BAAwC,IAAP1T,OAAgB,EAASA,EAAG0nB,2BAEvFhnB,EAAM8f,QAAQhC,WAClB,CAEA,qBAAsB/8B,GACtBvD,KAAKwnC,gBAAgB9e,gBAAoD,QAAnC3G,EAAKxe,EAAQqyB,wBAAqC,IAAP7T,EAAgBA,EAAKukB,IAEtG,QAAS/iC,IACTvD,KAAK6gB,SAAS5R,OAAgC,QAAtB+S,EAAKze,EAAQkhB,WAAwB,IAAPzC,EAAgBA,EAAK,GAE/EhiB,KAAK2mC,SAAW/iB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAKuD,SAAUA,GAC/DvD,KAAKuV,OAAOvV,KAAK6gB,SAASvX,MAAOtJ,KAAK6gB,SAAStX,QAAQ,EAC3D,CACAgM,MAAAA,CAAOjM,EAAOC,EAAQ0Z,GAElB,GADAljB,MAAMwV,OAAOjM,EAAOC,EAAQ0Z,GACxBjjB,KAAK4mC,gBACL,IAAK,MAAMkD,KAAY9pC,KAAK4mC,gBAExBkD,EAASxH,QAAQhC,WAG7B,CACAhd,KAAAA,GACI,IAAIhhB,EACwB,QAA3BA,EAAKtC,KAAK8gB,mBAAgC,IAAPxe,GAAyBA,EAAGghB,OACpE,CACA2B,aAAAA,CAAcxpB,GACV,OAAOuE,KAAKmjB,OAAO2R,MAAMnT,GAAUA,EAAMlmB,KAAOA,GACpD,CACAm5B,cAAAA,CAAejT,GACXA,EAAMa,MAAMmG,MAAMwI,UAAUxP,GAC5B3hB,KAAK2oC,yBAAyBhnB,EAAMa,MACxC,CACAO,UAAAA,CAAWxf,GACP,IAAIjB,EACJ,QAFc,IAAPiB,IAAAA,EAAU,CAAC,IAEbA,EAAQif,MAAO,CAChB,IAAKxiB,KAAK8gB,YACN,OAEJvd,EAAQif,MAAQxiB,KAAK8gB,WACzB,CACA,GAAIvd,EAAQwmC,cAAgBxmC,EAAQif,OAC5Bjf,EAAQif,MAAMwC,cACdzhB,EAAQif,MAAMW,OAAO5f,EAAQif,MAAMW,OAAO5hB,OAAS,GAEnD,YADAgC,EAAQif,MAAMmG,MAAM5F,WAAW,CAAE2V,cAAc,IAIvD,MAAMjd,EAAWV,EAAgBxX,EAAQif,MAAMje,SACzCsH,EAA+C,QAAvCvJ,EAAKtC,KAAK6gB,SAAShV,KAAK4P,UAA8B,IAAPnZ,OAAgB,EAASA,EAAGkK,KACzFxM,KAAK2oC,yBAAyB98B,EAClC,CACAmX,cAAAA,CAAezf,GACX,IAAIjB,EACJ,QAFkB,IAAPiB,IAAAA,EAAU,CAAC,IAEjBA,EAAQif,MAAO,CAChB,IAAKxiB,KAAK8gB,YACN,OAEJvd,EAAQif,MAAQxiB,KAAK8gB,WACzB,CACA,GAAIvd,EAAQwmC,cAAgBxmC,EAAQif,OAC5Bjf,EAAQif,MAAMwC,cAAgBzhB,EAAQif,MAAMW,OAAO,GAEnD,YADA5f,EAAQif,MAAMmG,MAAM3F,eAAe,CAAE0V,cAAc,IAI3D,MAAMjd,EAAWV,EAAgBxX,EAAQif,MAAMje,SACzCsH,EAAmD,QAA3CvJ,EAAKtC,KAAK6gB,SAASrK,SAASiF,UAA8B,IAAPnZ,OAAgB,EAASA,EAAGkK,KACzFX,GACA7L,KAAK2oC,yBAAyB98B,EAEtC,CAMAsQ,MAAAA,GACI,IAAI7Z,EACJ,MAAM5B,EAAOV,KAAK6gB,SAASpD,YACrB0F,EAASnjB,KAAKmjB,OAAO9U,QAAO,CAAC27B,EAAYroB,KAC3CqoB,EAAWroB,EAAMlmB,IAAMkmB,EAAMxF,SACtB6tB,IACR,CAAC,GACEC,EAASjqC,KAAK4mC,gBAAgBlqC,KAAK8lB,IAC9B,CACH9hB,KAAM8hB,EAAMA,MAAMrG,SAClBpF,SAAUyL,EAAM8f,QAAQnmB,aAG1B+tB,EAAelqC,KAAKmnC,cAAczqC,KAAK8lB,IAClC,CACH9hB,KAAM8hB,EAAMomB,YAAYzsB,SACxBguB,mBAAoB3nB,EAAM8lB,eAC1BvxB,SAAUyL,EAAM7Z,OAAOg8B,iBAGzB14B,EAAS,CACXm+B,KAAM1pC,EACNyiB,SACArC,YAAyC,QAA3Bxe,EAAKtC,KAAK8gB,mBAAgC,IAAPxe,OAAgB,EAASA,EAAG7G,IAQjF,OANIwuC,EAAO1oC,OAAS,IAChB0K,EAAOg3B,eAAiBgH,GAExBC,EAAa3oC,OAAS,IACtB0K,EAAOi+B,aAAeA,GAEnBj+B,CACX,CACAiS,QAAAA,CAASxd,GACL,IAAI4B,EAAIwf,EAAIC,EAEZ,GADA/hB,KAAKqD,QACe,iBAAT3C,GAA8B,OAATA,EAC5B,MAAM,IAAI6B,MAAM,+CAEpB,MAAM,KAAE6nC,EAAI,OAAEjnB,EAAM,YAAErC,GAAgBpgB,EACtC,GAAuB,WAAnB0pC,EAAK9tB,KAAKhd,OAAsBkC,MAAM6oC,QAAQD,EAAK9tB,KAAK5b,MACxD,MAAM,IAAI6B,MAAM,+BAEpB,IAEI,MAAM+G,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OACd+gC,EAAkC5pC,IACpC,MAAM,GAAEjF,EAAE,OAAE8gB,EAAM,WAAEob,EAAU,MAAExlB,EAAK,WAAEqmB,GAAe93B,EACtD,GAAkB,iBAAPjF,EACP,MAAM,IAAI8G,MAAM,mCAEpB,MAAMigB,EAAQxiB,KAAKwoC,YAAY,CAC3B/sC,KACA8gB,SAAUA,EACVob,aAAcA,IAEZ4S,EAAgB,GACtB,IAAK,MAAM3oC,KAASuQ,EAAO,CAMvB,MAAMwP,EAAQ3hB,KAAK8mC,cAAc5oB,SAASiF,EAAOvhB,GAAQ4gB,GACzD+nB,EAAc1mC,KAAK8d,EACvB,CACA3hB,KAAKqnC,eAAenjC,KAAKse,GACzB,IAAK,IAAIvX,EAAI,EAAGA,EAAIkH,EAAM5Q,OAAQ0J,IAAK,CACnC,MAAM0W,EAAQ4oB,EAAct/B,GACtBof,EAAiC,iBAAfmO,GACpBA,IAAe7W,EAAMlmB,GACzB+mB,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,eAAgBvO,EAChB0O,oBAAoB,GAE5B,CAMA,OALKvW,EAAMwC,aAAexC,EAAMW,OAAO5hB,OAAS,GAC5CihB,EAAMmG,MAAMwI,UAAU3O,EAAMW,OAAOX,EAAMW,OAAO5hB,OAAS,GAAI,CACzDw3B,oBAAoB,IAGrBvW,CAAK,EAEhBxiB,KAAK6gB,SAASjD,YAAYwsB,EAAM,CAC5BlsB,SAAWxE,GACA4wB,EAA+B5wB,EAAKhZ,QAGnDV,KAAKuV,OAAOjM,EAAOC,GAAQ,GAC3B,MAAMihC,EAA0D,QAA9BloC,EAAK5B,EAAKuiC,sBAAmC,IAAP3gC,EAAgBA,EAAK,GAC7F,IAAK,MAAMmoC,KAA2BD,EAA0B,CAC5D,MAAM,KAAE9pC,EAAI,SAAEqW,GAAa0zB,EACrBjoB,EAAQ8nB,EAA+B5pC,GAC7CV,KAAKqlB,iBAAiB7C,EAAO,CACzBzL,SAAUA,EACVzN,MAAOyN,EAASzN,MAChBC,OAAQwN,EAASxN,OACjB6/B,iBAAiB,EACjB7U,YAAY,GAEpB,CACA,MAAMmW,EAAsD,QAA5B5oB,EAAKphB,EAAKwpC,oBAAiC,IAAPpoB,EAAgBA,EAAK,GACzF,IAAK,MAAM6oB,KAAyBD,EAAwB,CACxD,MAAM,KAAEhqC,EAAI,SAAEqW,EAAQ,mBAAEozB,GAAuBQ,EACzCnoB,EAAQ8nB,EAA+B5pC,GAC7CV,KAAKslB,eAEiB,QAFDvD,EAAMooB,EACrBnqC,KAAK4iB,SAASunB,QACd1pC,SAA+B,IAAPshB,EAAgBA,EAAKS,EAAO,CACtD4mB,iBAAiB,EACjBryB,SAAUA,QAA2CA,OAAWtW,EAChEwnC,oBAAqBkC,EACf3nB,OACA/hB,GAEd,CACA,IAAK,MAAMuiC,KAAiBhjC,KAAK4mC,gBAC7B5D,EAAcV,QAAQhC,YAE1B,GAA2B,iBAAhBxf,EAA0B,CACjC,MAAMa,EAAQ3hB,KAAK4iB,SAAS9B,GACxBa,GACA3hB,KAAK2oC,yBAAyBhnB,EAEtC,CACJ,CACA,MAAOwkB,GAIH,IAAK,MAAM3jB,KAASxiB,KAAK2gB,OACrB,IAAK,MAAMgB,KAASa,EAAMW,OACtBnjB,KAAKqjB,YAAY1B,EAAO,CACpBsnB,kBAAkB,EAClB5wB,aAAa,IAQzB,IAAK,MAAMmK,KAASxiB,KAAK2gB,OACrB6B,EAAM3gB,UACN7B,KAAK0gB,QAAQrc,OAAOme,EAAM/mB,IAC1BuE,KAAKonC,kBAAkBljC,KAAKse,GAGhC,IAAK,MAAMwgB,IAAiB,IAAIhjC,KAAK4mC,iBACjC5D,EAAcnhC,UASlB,MANA7B,KAAKqD,QAMC8iC,CACV,CACAnmC,KAAKunC,kBACLvnC,KAAKinC,qBAAqB/iC,MAC9B,CACAb,KAAAA,GACI,MAAMsd,EAASnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UAAUlkB,KAAKmU,GAAMA,EAAEpO,QACxDmoC,IAAmB5qC,KAAK8gB,YAC9B,IAAK,MAAM0B,KAAS7B,EAEhB3gB,KAAK8iB,YAAYN,EAAO,CAAEG,YAAY,IAEtCioB,GACA5qC,KAAK2oC,8BAAyBloC,GAElCT,KAAK6gB,SAASxd,OAClB,CACA8hB,cAAAA,GACI,IAAK,MAAMpF,KAAS/f,KAAK0gB,QAAQykB,UAAW,CACxC,MAAOt0B,EAAG2R,GAASzC,EACnByC,EAAM/f,MAAMkmB,MAAMwQ,gBACtB,CACJ,CACA5V,QAAAA,CAAShgB,GACL,IAAIjB,EAAIwf,EACR,GAAI9hB,KAAKmjB,OAAO2R,MAAMjkB,GAAMA,EAAEpV,KAAO8H,EAAQ9H,KACzC,MAAM,IAAI8G,MAAO,iBAAgBgB,EAAQ9H,qBAE7C,IAAI6sC,EACJ,GAAI/kC,EAAQwT,UAAYxT,EAAQumC,SAC5B,MAAM,IAAIvnC,MAAM,kFAEpB,MAAMsoC,EAAU,CACZvhC,MAAO/F,EAAQunC,aACfvhC,OAAQhG,EAAQwnC,eAEpB,GAAIxnC,EAAQwT,SACR,GAA4BxT,EAAQwT,SlBxzBnCi0B,ekBwzB8C,CAC3C,MAAMA,EAA4D,iBAApCznC,EAAQwT,SAASi0B,eACzChrC,KAAKilB,cAAc1hB,EAAQwT,SAASi0B,gBACpCznC,EAAQwT,SAASi0B,eACvB,IAAKA,EACD,MAAM,IAAIzoC,MAAO,mBAAkBgB,EAAQwT,SAASi0B,kCAExD1C,EAAiBtoC,KAAKirC,UAAUD,EACpC,KACK,KlB5zBV,SAAiCtqC,GACpC,QAAIA,EAAK4nC,cAIb,CkBuzBqB4C,CAAwB3nC,EAAQwT,UASpC,CACD,MAAMyL,EAAQxiB,KAAKynC,cAAc7gB,GAAoBrjB,EAAQwT,SAAS2E,YAChEiG,EAAQ3hB,KAAKmrC,YAAY5nC,EAASif,GAYxC,OAXAA,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,WAE3B7nC,EAAQ6nC,UACTprC,KAAK2oC,yBAAyBnmB,GAElCA,EAAMsB,IAAIwI,QAAQ,CACd/iB,OAAQshC,aAAyC,EAASA,EAAQthC,OAClED,MAAOuhC,aAAyC,EAASA,EAAQvhC,QAE9DqY,CACX,CAnBI,GAJA2mB,EAC+C,iBAApC/kC,EAAQwT,SAASuxB,eAC2C,QAA5DhmC,EAAKtC,KAAK0gB,QAAQvW,IAAI5G,EAAQwT,SAASuxB,uBAAoC,IAAPhmC,OAAgB,EAASA,EAAGG,MACjGc,EAAQwT,SAASuxB,gBACtBA,EACD,MAAM,IAAI/lC,MAAO,mBAAkBgB,EAAQwT,SAASuxB,iCAkB5D,MAGAA,EAAiBtoC,KAAK8gB,YAE1B,IAAIa,EACJ,GAAI2mB,EAAgB,CAChB,MAAMniB,EAAS5F,IAAsC,QAA3BuB,EAAKve,EAAQwT,gBAA6B,IAAP+K,OAAgB,EAASA,EAAGpG,YAAc,UACvG,GAAInY,EAAQumC,SAAU,CAClB,MAAMtnB,EAAQxiB,KAAKwoC,cACnBxoC,KAAKqnC,eAAenjC,KAAKse,GACzB,MAAM6oB,EAAmD,iBAArB9nC,EAAQumC,UACnB,OAArBvmC,EAAQumC,SACNvmC,EAAQumC,SACR,CAAC,EACP9pC,KAAKqlB,iBAAiB7C,EAAOoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGwnB,GAAuB,CAAE9W,YAAY,EAAO6U,iBAAiB,EAAMQ,iBAAiB,KACjJjoB,EAAQ3hB,KAAKmrC,YAAY5nC,EAASif,GAClCA,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,UAEpC,MACK,GAAyC,aAArC9C,EAAexkB,IAAIrI,SAASnc,MACtB,WAAX6mB,EACAxE,EAAQ3hB,KAAKmrC,YAAY5nC,EAAS+kC,GAClCA,EAAe3f,MAAMwI,UAAUxP,EAAO,CAClCiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,WAEhC9C,EAAexkB,IAAIwI,QAAQ,CACvBhjB,MAAOuhC,aAAyC,EAASA,EAAQvhC,MACjEC,OAAQshC,aAAyC,EAASA,EAAQthC,SAEjEhG,EAAQ6nC,UACTprC,KAAK2oC,yBAAyBL,OAGjC,CACD,MAAM7sB,EAAWV,EAAgButB,EAAe/jC,SAC1C+mC,EAAmB/vB,EAAoBvb,KAAK6gB,SAAS5S,YAAawN,EAAU0K,GAC5E3D,EAAQxiB,KAAK6pC,sBAAsByB,EAAkBtrC,KAAKurC,sBAAsBD,KAClFp+B,EAAYqJ,SACVs0B,aAAyC,EAASA,EAAQthC,OAC1DshC,aAAyC,EAASA,EAAQvhC,OAChEqY,EAAQ3hB,KAAKmrC,YAAY5nC,EAASif,GAClCA,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,WAE3B7nC,EAAQ6nC,UACTprC,KAAK2oC,yBAAyBnmB,EAEtC,CACJ,MACK,GAAIjf,EAAQumC,SAAU,CACvB,MAAMtnB,EAAQxiB,KAAKwoC,cACnBxoC,KAAKqnC,eAAenjC,KAAKse,GACzB,MAAMgpB,EAA0C,iBAArBjoC,EAAQumC,UACV,OAArBvmC,EAAQumC,SACNvmC,EAAQumC,SACR,CAAC,EACP9pC,KAAKqlB,iBAAiB7C,EAAOoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG2nB,GAAc,CAAEjX,YAAY,EAAO6U,iBAAiB,EAAMQ,iBAAiB,KACxIjoB,EAAQ3hB,KAAKmrC,YAAY5nC,EAASif,GAClCA,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,UAEpC,KACK,CACD,MAAM5oB,EAAQxiB,KAAK6pC,sBAAsB,CAAC,GAAI7pC,KAAK6gB,SAAS5S,cAAgBf,EAAYqJ,SAClFs0B,aAAyC,EAASA,EAAQthC,OAC1DshC,aAAyC,EAASA,EAAQvhC,OAChEqY,EAAQ3hB,KAAKmrC,YAAY5nC,EAASif,GAClCA,EAAMmG,MAAMwI,UAAUxP,EAAO,CACzBiX,cAAer1B,EAAQ6nC,SACvBrS,mBAAoBx1B,EAAQ6nC,WAE3B7nC,EAAQ6nC,UACTprC,KAAK2oC,yBAAyBnmB,EAEtC,CACA,OAAOb,CACX,CACA0B,WAAAA,CAAY1B,EAAOpe,QAAO,IAAPA,IAAAA,EAAU,CACzB0lC,kBAAkB,EAClB5wB,aAAa,IAEb,MAAMmK,EAAQb,EAAMa,MACpB,IAAKA,EACD,MAAM,IAAIjgB,MAAO,uBAAsBof,EAAMlmB,6BAEjD+mB,EAAMmG,MAAMtF,YAAY1B,EAAO,CAC3B+X,mBAAoBn2B,EAAQm2B,qBAE3Bn2B,EAAQ8U,cACTsJ,EAAMa,MAAMmG,MAAMoI,gBAAgBC,QAAQrP,GAC1CA,EAAM9f,WAES,IAAf2gB,EAAM3d,MAActB,EAAQ0lC,kBAC5BjpC,KAAK8iB,YAAYN,EAAO,CAAEG,WAAYpf,EAAQm2B,oBAEtD,CACAK,wBAAAA,GACI,OAAI/5B,KAAKuD,QAAQw2B,yBACN/5B,KAAKuD,QAAQw2B,2BAEjB,IAAIsF,EACf,CACAkI,eAAAA,GACI,IAAIjlC,EAAIwf,E7CxzBmBrmB,E6CyzB3B,GAA4F,IAAxFuE,KAAK2gB,OAAOlW,QAAQ2F,GAA8B,SAAxBA,EAAE0T,IAAIrI,SAASnc,MAAmB8Q,EAAE0T,IAAIlC,YAAWrgB,QAC7E,IAAKvB,KAAKq2B,UAAW,CACjBr2B,KAAKq2B,UAAYr2B,KAAK+5B,2BACtB/5B,KAAKq2B,UAAU7I,KAAK,CAChBwC,aAAc,IAAIzL,GAAYvkB,QAElC,MAAMyrC,EAAqB1jC,SAAS2L,cAAc,OAClD+3B,EAAmBlwC,UAAY,yB7Ch0BZE,E6Ci0BW,sBAApBgwC,E7Ch0Bd3L,aAAa,cAAerkC,G6Ci0BxBgwC,EAAmBz5B,YAAYhS,KAAKq2B,UAAU9xB,SAC9CvE,KAAK6gB,SAAStc,QAAQyN,YAAYy5B,EACtC,OAEKzrC,KAAKq2B,YACVr2B,KAAKq2B,UAAU9xB,QAAQyW,cAAc7T,SACI,QAAxC2a,GAAMxf,EAAKtC,KAAKq2B,WAAWx0B,eAA4B,IAAPigB,GAAyBA,EAAGha,KAAKxF,GAClFtC,KAAKq2B,UAAY,KAEzB,CACAnR,QAAAA,CAAS3hB,GACL,IAAIjB,EACJ,GAAIiB,EAAS,CACT,IAAI+kC,EACJ,GAA4B/kC,ElBl9B3BynC,ekBk9BqC,CAClC,MAAMA,EAAmD,iBAA3BznC,EAAQynC,eAChChrC,KAAKmjB,OAAO2R,MAAMnT,GAAUA,EAAMlmB,KAAO8H,EAAQynC,iBACjDznC,EAAQynC,eACd,IAAKA,EACD,MAAM,IAAIzoC,MAAO,mBAAkBgB,EAAQynC,iCAG/C,GADA1C,EAAiBtoC,KAAKirC,UAAUD,IAC3B1C,EACD,MAAM,IAAI/lC,MAAO,uCAAsCgB,EAAQynC,gCAEvE,KACK,KlBz9BV,SAAiCtqC,GACpC,QAAIA,EAAK4nC,cAIb,CkBo9BqBoD,CAAwBnoC,GAS5B,CACD,MAAMif,EAAQxiB,KAAKynC,cAAc7gB,GAAoBrjB,EAAQmY,YAI7D,OAHKnY,EAAQq1B,eACT54B,KAAK2oC,yBAAyBnmB,GAE3BA,CACX,CAVI,GAJA8lB,EACsC,iBAA3B/kC,EAAQ+kC,eAC2C,QAAnDhmC,EAAKtC,KAAK0gB,QAAQvW,IAAI5G,EAAQ+kC,uBAAoC,IAAPhmC,OAAgB,EAASA,EAAGG,MACxFc,EAAQ+kC,gBACbA,EACD,MAAM,IAAI/lC,MAAO,mBAAkBgB,EAAQ+kC,gCASnD,CACA,MAAMniB,EAAS5F,GAAShd,EAAQmY,WAAa,UACvCD,EAAWV,EAAgButB,EAAe/jC,SAC1C+mC,EAAmB/vB,EAAoBvb,KAAK6gB,SAAS5S,YAAawN,EAAU0K,GAC5E3D,EAAQxiB,KAAKwoC,YAAYjlC,GACzBsB,EAAO7E,KAAK2b,uBAAuB2vB,KACrCp+B,EAAYqJ,SACVhT,EAAQwnC,cACRxnC,EAAQunC,aAKd,OAJA9qC,KAAKuiB,WAAWC,EAAO8oB,EAAkBzmC,GACpCtB,EAAQq1B,eACT54B,KAAK2oC,yBAAyBnmB,GAE3BA,CACX,CACK,CACD,MAAMA,EAAQxiB,KAAKwoC,YAAYjlC,GAG/B,OAFAvD,KAAKuiB,WAAWC,GAChBxiB,KAAK2oC,yBAAyBnmB,GACvBA,CACX,CACJ,CACA7G,sBAAAA,CAAuBF,GACnB,OAAOA,EAASla,OAAS,GAAK,GAC1BvB,KAAK6gB,SAAS5S,cAAgBf,EAAYkB,WACxClB,EAAYkB,WACZlB,EAAYqJ,QACtB,CACAuM,WAAAA,CAAYN,EAAOjf,GACfvD,KAAKyiB,cAAcD,EAAOjf,EAC9B,CACAkf,aAAAA,CAAcD,EAAOjf,GACjB,IAAIjB,EACJ,MAAM6gB,EAAS,IAAIX,EAAMW,QACzB,KAAM5f,aAAyC,EAASA,EAAQ8U,aAC5D,IAAK,MAAMsJ,KAASwB,EAChBnjB,KAAKqjB,YAAY1B,EAAO,CACpBsnB,kBAAkB,EAClB5wB,YAA8F,QAAhF/V,EAAKiB,aAAyC,EAASA,EAAQ8U,mBAAgC,IAAP/V,GAAgBA,IAIlI,MAAM0iB,EAAchlB,KAAKglB,YACzB,GAAgC,aAA5BxC,EAAMsB,IAAIrI,SAASnc,KAAqB,CACxC,MAAM0jC,EAAgBhjC,KAAK4mC,gBAAgB9R,MAAMjkB,GAAMA,EAAE2R,QAAUA,IACnE,GAAIwgB,EAAe,CAQf,IAPMz/B,aAAyC,EAASA,EAAQ8U,eAC5D2qB,EAAcxgB,MAAM3gB,UACpB7B,KAAK0gB,QAAQrc,OAAOme,EAAM/mB,IAC1BuE,KAAKonC,kBAAkBljC,KAAKse,IAEhCrb,EAAOnH,KAAK4mC,gBAAiB5D,GAC7BA,EAAcnhC,YACR0B,aAAyC,EAASA,EAAQof,aAAe3iB,KAAK+gB,eAAiByB,EAAO,CACxG,MAAM7B,EAASnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UACvC5gB,KAAK2oC,yBAAyBhoB,EAAOpf,OAAS,EAAIof,EAAO,GAAGle,WAAQhC,EACxE,CACA,OAAOuiC,EAAcxgB,KACzB,CACA,MAAM,IAAIjgB,MAAM,gCACpB,CACA,GAAgC,WAA5BigB,EAAMsB,IAAIrI,SAASnc,KAAmB,CACtC,MAAMqsC,EAAgB3rC,KAAKmnC,cAAcrS,MAAMjkB,GAAMA,EAAE+3B,cAAgBpmB,IACvE,GAAImpB,EAAe,CACf,KAAMpoC,aAAyC,EAASA,EAAQ8U,aAAc,CAC1E,KAAM9U,aAAyC,EAASA,EAAQslC,sBAAuB,CACnF,MAAM+C,EAAWD,EAAcrD,eACzBtoC,KAAK4iB,SAAS+oB,EAAcrD,qBAC5B7nC,EACFmrC,GACA5rC,KAAK8iB,YAAY8oB,EAEzB,CACAD,EAAc/C,YAAY/mC,UAC1B7B,KAAK0gB,QAAQrc,OAAOme,EAAM/mB,IAC1BuE,KAAKonC,kBAAkBljC,KAAKse,EAChC,CACArb,EAAOnH,KAAKmnC,cAAewE,GAC3B,MAAM7C,EAAe6C,EAAcxlC,WAAWtE,UAK9C,KAJM0B,aAAyC,EAASA,EAAQ8lC,mBAAqBP,IACjF9oC,KAAKuiB,WAAWumB,EAAc,CAAC,IAC/B9oC,KAAK2oC,yBAAyBG,MAE5BvlC,aAAyC,EAASA,EAAQof,aAAe3iB,KAAK+gB,eAAiByB,EAAO,CACxG,MAAM7B,EAASnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UACvC5gB,KAAK2oC,yBAAyBhoB,EAAOpf,OAAS,EAAIof,EAAO,GAAGle,WAAQhC,EACxE,CAEA,OADAT,KAAKunC,kBACEoE,EAAc/C,WACzB,CACA,MAAM,IAAIrmC,MAAM,8BACpB,CACA,MAAMspC,EAAK9rC,MAAM0iB,cAAcD,EAAOjf,GAMtC,OALMA,aAAyC,EAASA,EAAQof,aACxD3iB,KAAKglB,cAAgBA,GACrBhlB,KAAKu3B,wBAAwBrzB,KAAKlE,KAAKglB,aAGxC6mB,CACX,CACApD,UAAAA,CAAWljC,GACP,MAAMumC,EAAW9rC,KAAKsnC,QACtB,IAEI,OADAtnC,KAAKsnC,SAAU,EACR/hC,GACX,CAAC,QAEGvF,KAAKsnC,QAAUwE,CACnB,CACJ,CACAlQ,gBAAAA,CAAiBr4B,GACb,IAAIjB,EACJ,MAAMypC,EAAmBxoC,EAAQyI,GAAGwW,MAC9BwpB,EAAgBzoC,EAAQ+B,KAAKzF,QAC7BosC,EAAe1oC,EAAQ+B,KAAKxF,QAC5BosC,EAAoB3oC,EAAQyI,GAAG+K,SAC/Bo1B,EAAmB5oC,EAAQyI,GAAGlI,MAC9BsoC,EAAcJ,EAC6B,QAA1C1pC,EAAKtC,KAAK0gB,QAAQvW,IAAI6hC,UAAmC,IAAP1pC,OAAgB,EAASA,EAAGG,WAC/EhC,EACN,IAAK2rC,EACD,MAAM,IAAI7pC,MAAO,2BAA0BypC,KAE/C,QAAqBvrC,IAAjBwrC,EAaJ,GAAKC,GAA2C,WAAtBA,EAyBrB,CAKD,MAAM3D,EAAoBxtB,EAAgBgxB,EAAiBxnC,SACrD8nC,EAAiB9wB,EAAoBvb,KAAK6gB,SAAS5S,YAAas6B,EAAmB2D,GACzF,GAAIE,EAAYvnC,KAAO,EAAG,CAKtB,MAAOynC,EAAsBtgC,GAAMpB,EAAKyhC,GACxC,GAAsC,SAAlCD,EAAYtoB,IAAIrI,SAASnc,KAAiB,CAC1C,MAAMitC,EAAiBxxB,EAAgBqxB,EAAY7nC,UAC5CioC,EAAsBlnC,GAAQsF,EAAK2hC,GAC1C,GAAIzhC,EAAe0hC,EAAsBF,GASrC,OALAtsC,KAAK6gB,SAASvL,SAASk3B,EAAsBlnC,EAAM0G,QACnDhM,KAAKknC,gBAAgBhjC,KAAK,CACtByd,MAAO3hB,KAAKilB,cAAcgnB,GAC1B3mC,KAAM8mC,GAIlB,CACA,GAAsC,WAAlCA,EAAYtoB,IAAIrI,SAASnc,KAAmB,CAQ5C,MAAMspC,EAAc5oC,KAAKmnC,cAAcrS,MAAMtS,GAAUA,EAAMomB,cAAgBwD,IACvE5F,EAAexmC,KAAKyoC,YAAW,IAAMG,EAAYA,YAAYjgB,MAAMtF,YAAYulB,EAAYA,YAAYzlB,OAAO,GAAI,CACpHyV,eAAe,EACfc,oBAAoB,MAExB15B,KAAKyiB,cAAc2pB,EAAa,CAAEzpB,YAAY,IAC9C,MAAM8pB,EAAWzsC,KAAK6pC,sBAAsBwC,GAS5C,OARArsC,KAAKyoC,YAAW,IAAMgE,EAAS9jB,MAAMwI,UAAUqV,EAAc,CACzD5N,eAAe,MAEnB54B,KAAK2oC,yBAAyB8D,QAC9BzsC,KAAKknC,gBAAgBhjC,KAAK,CACtByd,MAAO3hB,KAAKilB,cAAcgnB,GAC1B3mC,KAAM8mC,GAGd,CAEA,MAAMM,EAAc1sC,KAAKyoC,YAAW,IAAMzoC,KAAKyiB,cAAc2pB,EAAa,CACtEzpB,YAAY,EACZtK,aAAa,MAGXs0B,EAA2B5xB,EAAgBgxB,EAAiBxnC,SAC5DkX,EAAWF,EAAoBvb,KAAK6gB,SAAS5S,YAAa0+B,EAA0BT,GAC1FlsC,KAAKyoC,YAAW,IAAMzoC,KAAKuiB,WAAWmqB,EAAajxB,KACnDzb,KAAK2oC,yBAAyB+D,GAC9B1sC,KAAKknC,gBAAgBhjC,KAAK,CACtByd,MAAO3hB,KAAKilB,cAAcgnB,GAC1B3mC,KAAM8mC,GAEd,KACK,CAKD,MAAM5F,EAAexmC,KAAKyoC,YAAW,IAAM2D,EAAYzjB,MAAMtF,YAAY4oB,EAAc,CACnFrT,eAAe,EACfc,oBAAoB,MAExB,IAAK8M,EACD,MAAM,IAAIjkC,MAAO,oBAAmB0pC,KAExC,MAAMW,EAAerxB,EAAoBvb,KAAK6gB,SAAS5S,YAAas6B,EAAmB2D,GACjF1pB,EAAQxiB,KAAK6pC,sBAAsB+C,GACzC5sC,KAAKyoC,YAAW,IAAMjmB,EAAMmG,MAAMwI,UAAUqV,EAAc,CACtDzN,oBAAoB,MAExB/4B,KAAK2oC,yBAAyBnmB,GAC9BxiB,KAAKknC,gBAAgBhjC,KAAK,CACtByd,MAAO6kB,EACPlhC,KAAM8mC,GAEd,CACJ,KApH0D,CAItD,MAAM5F,EAAexmC,KAAKyoC,YAAW,IAAM2D,EAAYzjB,MAAMtF,YAAY4oB,EAAc,CACnFrT,eAAe,EACfc,oBAAoB,MAExB,IAAK8M,EACD,MAAM,IAAIjkC,MAAO,oBAAmB0pC,KAET,IAA3BG,EAAYzjB,MAAM9jB,MAElB7E,KAAKyiB,cAAc2pB,EAAa,CAAEzpB,YAAY,IAElD3iB,KAAKyoC,YAAW,IAAMsD,EAAiBpjB,MAAMwI,UAAUqV,EAAc,CACjE1iC,MAAOqoC,EACPpT,oBAAoB,MAExB/4B,KAAK2oC,yBAAyBoD,GAC9B/rC,KAAKknC,gBAAgBhjC,KAAK,CACtByd,MAAO6kB,EACPlhC,KAAM8mC,GAEd,MAjCIpsC,KAAK6sC,UAAU,CACXvnC,KAAM,CAAEkd,MAAO4pB,GACfpgC,GAAI,CACAwW,MAAOupB,EACPh1B,SAAUm1B,IA0H1B,CACAW,SAAAA,CAAUtpC,GACN,MAAM+B,EAAO/B,EAAQ+B,KAAKkd,MACpBxW,EAAKzI,EAAQyI,GAAGwW,MAChB2D,EAAS5iB,EAAQyI,GAAG+K,SAC1B,GAAe,WAAXoP,EAAqB,CACrB,MAAMnB,EAAc1f,EAAK0f,YACnB7B,EAASnjB,KAAKyoC,YAAW,IAAM,IAAInjC,EAAK6d,QAAQzmB,KAAK0c,GAAM9T,EAAKqjB,MAAMtF,YAAYjK,EAAE3d,GAAI,CAC1Fm9B,eAAe,QAEmD,KAAjEtzB,aAAmC,EAASA,EAAKqjB,MAAM9jB,OACxD7E,KAAKyiB,cAAcnd,EAAM,CAAEqd,YAAY,IAE3C3iB,KAAKyoC,YAAW,KACZ,IAAK,MAAM9mB,KAASwB,EAChBnX,EAAG2c,MAAMwI,UAAUxP,EAAO,CACtBiX,cAAejX,IAAUqD,EACzB+T,oBAAoB,GAE5B,IAEJ/4B,KAAK2oC,yBAAyB38B,EAClC,KACK,CACD,OAAQ1G,EAAKwe,IAAIrI,SAASnc,MACtB,IAAK,OACDU,KAAK6gB,SAASzL,WAAW2F,EAAgBzV,EAAKf,UAC9C,MACJ,IAAK,WAAY,CACb,MAAMuoC,EAAwB9sC,KAAK4mC,gBAAgB9R,MAAM1kB,GAAMA,EAAEoS,QAAUld,IAC3E,IAAKwnC,EACD,MAAM,IAAIvqC,MAAM,iCAEpBuqC,EAAsBjrC,UACtB,KACJ,CACA,IAAK,SAAU,CACX,MAAMkrC,EAAsB/sC,KAAKmnC,cAAcrS,MAAM1kB,GAAMA,EAAEw4B,cAAgBtjC,IAC7E,IAAKynC,EACD,MAAM,IAAIxqC,MAAM,+BAEpBwqC,EAAoB5mC,WAAWtE,SACnC,EAEJ,MAAM0mC,EAAoBxtB,EAAgB/O,EAAGzH,SACvCqoC,EAAerxB,EAAoBvb,KAAK6gB,SAAS5S,YAAas6B,EAAmBpiB,GACvF,IAAIthB,EACJ,OAAQ7E,KAAK6gB,SAAS5S,aAClB,KAAKf,EAAYqJ,SACb1R,EACI0jC,EAAkBhnC,OAAS,GAAK,EAC1B+D,EAAKwe,IAAIxa,MACThE,EAAKwe,IAAIva,OACnB,MACJ,KAAK2D,EAAYkB,WACbvJ,EACI0jC,EAAkBhnC,OAAS,GAAK,EAC1B+D,EAAKwe,IAAIva,OACTjE,EAAKwe,IAAIxa,MAG3BtJ,KAAK6gB,SAASvO,QAAQhN,EAAMT,EAAM+nC,EACtC,CACAtnC,EAAK6d,OAAOrhB,SAAS6f,IACjB3hB,KAAKknC,gBAAgBhjC,KAAK,CAAEyd,QAAOrc,QAAO,GAElD,CACA4c,gBAAAA,CAAiBM,GACbziB,MAAMmiB,iBAAiBM,GACvB,MAAMwC,EAAchlB,KAAKglB,YACpBhlB,KAAKsnC,SACNtiB,IAAgBhlB,KAAKu3B,wBAAwB90B,OAC7CzC,KAAKu3B,wBAAwBrzB,KAAK8gB,EAE1C,CACA2jB,wBAAAA,CAAyBnmB,GACrBziB,MAAMmiB,iBAAiBM,GACvB,MAAMwC,EAAchlB,KAAKglB,YACrBxC,GACAxiB,KAAKqiB,sBACJriB,KAAKmiB,iBAAiBK,IACvBxiB,KAAKoiB,qBAEJpiB,KAAKsnC,SACNtiB,IAAgBhlB,KAAKu3B,wBAAwB90B,OAC7CzC,KAAKu3B,wBAAwBrzB,KAAK8gB,EAE1C,CACAkjB,cAAAA,GACI,IAAIzsC,EAAKuE,KAAK6mC,YAAYh7B,OAC1B,KAAO7L,KAAK0gB,QAAQgC,IAAIjnB,IACpBA,EAAKuE,KAAK6mC,YAAYh7B,OAE1B,OAAOpQ,CACX,CACA+sC,WAAAA,CAAYjlC,GACHA,IACDA,EAAU,CAAC,GAEf,IAAI9H,EAAK8H,aAAyC,EAASA,EAAQ9H,GAKnE,GAJIA,GAAMuE,KAAK0gB,QAAQgC,IAAInf,EAAQ9H,MAC/BkH,QAAQC,KAAM,gCAA+BW,aAAyC,EAASA,EAAQ9H,4CACvGA,OAAKgF,IAEJhF,EAED,IADAA,EAAKuE,KAAK6mC,YAAYh7B,OACf7L,KAAK0gB,QAAQgC,IAAIjnB,IACpBA,EAAKuE,KAAK6mC,YAAYh7B,OAG9B,MAAMW,EAAO,IAAIwvB,GAAmBh8B,KAAMvE,EAAI8H,GAE9C,GADAiJ,EAAKghB,KAAK,CAAE5B,OAAQ,CAAC,EAAG+C,SAAU3uB,QAC7BA,KAAK0gB,QAAQgC,IAAIlW,EAAK/Q,IAAK,CAC5B,MAAM0K,EAAa,IAAIX,EAAoBgH,EAAKmc,MAAMiL,gBAAgBlwB,IAClE1D,KAAK+mC,iBAAiB7iC,KAAKR,EAAM,IACjC8I,EAAKmc,MAAMmL,kBAAkBpwB,IAC7B1D,KAAKgnC,iBAAiB9iC,KAAKR,EAAM,IACjC8I,EAAKmc,MAAMoO,QAAQrzB,IACnB,MAAM,QAAE7D,EAAO,OAAEs6B,EAAM,OAAEhU,EAAM,MAAEriB,GAAUJ,EAC3C1D,KAAK47B,iBAAiB,CAClBt2B,KAAM,CAAEzF,QAASA,EAASC,QAASq6B,GACnCnuB,GAAI,CACAwW,MAAOhW,EACPuK,SAAUoP,EACVriB,UAEN,IACF0I,EAAKmc,MAAMjF,WAAWhgB,IACtB1D,KAAK0vB,WAAWxrB,KAAKR,EAAM,IAC3B8I,EAAKmc,MAAMhE,YAAYjhB,IACvB1D,KAAKg3B,YAAY9yB,KAAKR,EAAM,IAC5B8I,EAAKmc,MAAM/D,mBAAmBlhB,IAC1B1D,KAAKuD,QAAQksB,WACb/rB,EAAMvB,iBAGVnC,KAAKmnB,mBAAmBjjB,KAAKR,EAAM,IACnC8I,EAAKmc,MAAM5D,0BAA0BrhB,IACrC1D,KAAKw3B,0BAA0BtzB,KAAKR,EAAM,IAC1C8I,EAAKmc,MAAM3E,eAAetgB,IACtB1D,KAAKsnC,SAGTtnC,KAAKi3B,eAAe/yB,KAAKR,EAAMie,MAAM,IACrCnV,EAAKmc,MAAMzE,kBAAkBxgB,IACzB1D,KAAKsnC,SAGTtnC,KAAKs3B,kBAAkBpzB,KAAKR,EAAMie,MAAM,IACxCnV,EAAKmc,MAAMvE,wBAAwB1gB,IAC/B1D,KAAKsnC,SAGL5jC,EAAMie,QAAU3hB,KAAKglB,aAGrBhlB,KAAKu3B,wBAAwB90B,QAAUiB,EAAMie,OAC7C3hB,KAAKu3B,wBAAwBrzB,KAAKR,EAAMie,MAC5C,IACAzgB,EAAME,IAAIoL,EAAKmc,MAAMwO,sBAAuB3qB,EAAKmc,MAAM0O,2BAAvDn2B,EAAmF,KACnFlB,KAAKuhB,yBAAyBrd,MAAM,KAExClE,KAAK0gB,QAAQ5b,IAAI0H,EAAK/Q,GAAI,CAAEgH,MAAO+J,EAAMrG,cAC7C,CAGA,OADAqG,EAAKif,aACEjf,CACX,CACA2+B,WAAAA,CAAY5nC,EAASif,GACjB,IAAIlgB,EAAIwf,EAAIC,EACZ,MAAM+b,EAAmBv6B,EAAQjH,UAC3BugC,EAA+C,QAA/Bv6B,EAAKiB,EAAQs5B,oBAAiC,IAAPv6B,EAAgBA,EAAKtC,KAAKuD,QAAQ07B,oBACzFzyB,EAAO,IAAIkyB,GAAmB1+B,KAAMuD,EAAQ9H,GAAIqiC,EAAkBjB,GAClElb,EAAQ,IAAIgc,GAAcp6B,EAAQ9H,GAAIqiC,EAAkBjB,EAAc78B,KAAMA,KAAK03B,KAAMlV,EAAOhW,EAAM,CACtGskB,SAAUvtB,EAAQutB,SAClBrY,aAAclV,EAAQkV,aACtBE,cAAepV,EAAQoV,cACvBD,aAAcnV,EAAQmV,aACtBE,cAAerV,EAAQqV,gBAM3B,OAJA+I,EAAM6L,KAAK,CACPxxB,MAAgC,QAAxB8lB,EAAKve,EAAQvH,aAA0B,IAAP8lB,EAAgBA,EAAKve,EAAQ9H,GACrEmwB,OAAoF,QAA3E7J,EAAKxe,aAAyC,EAASA,EAAQqoB,cAA2B,IAAP7J,EAAgBA,EAAK,CAAC,IAE/GJ,CACX,CACAkoB,qBAAAA,CAAsBpuB,EAAU5W,GAC5B,MAAM2d,EAAQxiB,KAAKwoC,cAEnB,OADAxoC,KAAKuiB,WAAWC,EAAO/G,EAAU5W,GAC1B2d,CACX,CACAyoB,SAAAA,CAAUtpB,GACN,IAAIrf,EACJ,OAA4G,QAApGA,EAAKd,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UAAUkU,MAAMtS,GAAUA,EAAM/f,MAAMkmB,MAAMgQ,cAAchX,YAA4B,IAAPrf,OAAgB,EAASA,EAAGG,KACpJ,CACA8oC,qBAAAA,CAAsB9vB,GAClB,MAAMD,EAAkBxb,KAAK6gB,SAAS5S,YACtC,OAAOwN,EAASla,OAAS,GAAK,EACxBia,EACAZ,GAAWY,EACrB,ECr+CG,SAASwjB,GAAgBvjC,EAAIsjC,EAAeiO,EAAiBC,EAA0BC,EAA0BC,QAA3D,IAAVH,IAAAA,EAAa,CAAC,QAAsB,IAAnBC,IAAAA,EAAsB,CAAC,GACvF,MAAMG,EAAqC,iBAAlBrO,EACnBiO,EAAWjO,QACXt+B,EACA4sC,EAA8C,iBAAlBtO,EAC5BkO,EAAoBlO,QACpBt+B,EACN,GAAI2sC,GAAaC,EACb,MAAM,IAAI9qC,MAAO,kBAAiB9G,kBAAmBsjC,4DAEzD,GAAIsO,EAAoB,CACpB,IAAKH,EACD,MAAM,IAAI3qC,MAAO,kBAAiB9G,+BAAgCsjC,6EAEtE,OAAOmO,EAAyBlO,gBAAgBvjC,EAAIsjC,EAAesO,EACvE,CACA,IAAKD,EAAW,CACZ,GAAID,EACA,OAAOA,IAEX,MAAM,IAAI5qC,MAAO,kBAAiB9G,qBAAsBsjC,cAC5D,CACA,OAAO,IAAIqO,EAAU3xC,EAAIsjC,EAC7B,CCjBO,MAAMuO,WAA0B9sB,GACnC,eAAIvS,GACA,OAAOjO,KAAK6gB,SAAS5S,WACzB,CACA,eAAIA,CAAYxL,GACZzC,KAAK6gB,SAAS5S,YAAcxL,CAChC,CACA,WAAIc,GACA,OAAOvD,KAAK2mC,QAChB,CACA,gBAAI7oB,GACA,OAAO9d,KAAK8mC,aAChB,CACA,gBAAIhpB,CAAarb,GACbzC,KAAK8mC,cAAgBrkC,CACzB,CACA9C,WAAAA,CAAYqb,EAAezX,GACvBxD,MAAMib,EAAe,CACjBrJ,mBAAoBpO,EAAQoO,mBAC5B1D,YAAa1K,EAAQ0K,YACrBgE,OAAQ1O,EAAQ0O,OAChB+O,oBAAqBzd,EAAQyd,oBAC7BzlB,UAAWgI,EAAQhI,YAEvByE,KAAKutC,qBAAuB,IAAIvqC,EAChChD,KAAKojB,oBAAsBpjB,KAAKutC,qBAAqB7pC,MACrD1D,KAAKonC,kBAAoB,IAAIpkC,EAC7BhD,KAAKmkB,iBAAmBnkB,KAAKonC,kBAAkB1jC,MAC/C1D,KAAKqnC,eAAiB,IAAIrkC,EAC1BhD,KAAKikB,cAAgBjkB,KAAKqnC,eAAe3jC,MACzC1D,KAAKg9B,wBAA0B,IAAIh6B,EACnChD,KAAKqkB,uBAAyBrkB,KAAKg9B,wBAAwBt5B,MAC3D1D,KAAK2mC,SAAWpjC,EAChBvD,KAAK6F,eAAe7F,KAAKqnC,eAAgBrnC,KAAKonC,kBAAmBpnC,KAAKg9B,wBAAyBh9B,KAAKohB,UAAU1d,IAC1G1D,KAAKqnC,eAAenjC,KAAKR,EAAM,IAC/B1D,KAAKkhB,aAAaxd,IAClB1D,KAAKonC,kBAAkBljC,KAAKR,EAAM,IAClC1D,KAAKshB,mBAAmB5d,IACxB1D,KAAKg9B,wBAAwB94B,KAAKR,EAAM,KAEvC1D,KAAKuD,QAAQypC,aACdhtC,KAAKuD,QAAQypC,WAAa,CAAC,GAE1BhtC,KAAKuD,QAAQ0pC,sBACdjtC,KAAKuD,QAAQ0pC,oBAAsB,CAAC,EAE5C,CACAprB,aAAAA,CAActe,GACVxD,MAAM8hB,cAActe,GACpB,MAAMiqC,EAAuD,iBAAxBjqC,EAAQ0K,aACzCjO,KAAK6gB,SAAS5S,cAAgB1K,EAAQ0K,YAC1CjO,KAAK2mC,SAAW/iB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAKuD,SAAUA,GAC3DiqC,IACAxtC,KAAK6gB,SAAS5S,YAAc1K,EAAQ0K,aAExCjO,KAAKuV,OAAOvV,KAAK6gB,SAASvX,MAAOtJ,KAAK6gB,SAAStX,QAAQ,EAC3D,CACA8Z,WAAAA,CAAY1B,GACR3hB,KAAK8iB,YAAYnB,EACrB,CAMAxF,MAAAA,GACI,IAAI7Z,EAEJ,MAAO,CACH8nC,KAFSpqC,KAAK6gB,SAASpD,YAGvBuH,YAAyC,QAA3B1iB,EAAKtC,KAAK8gB,mBAAgC,IAAPxe,OAAgB,EAASA,EAAG7G,GAErF,CACAuR,UAAAA,CAAW2U,EAAOrV,GACdtM,KAAK6gB,SAASjO,eAAemI,EAAgB4G,EAAMpd,SAAU+H,EACjE,CACAuW,SAAAA,CAAUlB,GACN3hB,KAAK0gB,QAAQ5e,SAAQ,CAACW,EAAOhB,KACzBgB,EAAMA,MAAMogB,UAAUlB,IAAUlf,EAAMA,MAAM,GAEpD,CACA6gB,KAAAA,GACI,IAAIhhB,EACwB,QAA3BA,EAAKtC,KAAK8gB,mBAAgC,IAAPxe,GAAyBA,EAAGghB,OACpE,CACApF,QAAAA,CAASuvB,GACLztC,KAAKqD,QACL,MAAM,KAAE+mC,EAAI,YAAEplB,GAAgByoB,EAC9B,IACI,MAAMC,EAAQ,GAERpkC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OA6BpB,GA5BAvJ,KAAK6gB,SAASjD,YAAYwsB,EAAM,CAC5BlsB,SAAWxE,IACP,IAAIpX,EAAIwf,EACR,MAAM,KAAEphB,GAASgZ,EACXlN,EAAOwyB,GAAgBt+B,EAAKjF,GAAIiF,EAAKpE,UAA8C,QAAlCgG,EAAKtC,KAAKuD,QAAQypC,kBAA+B,IAAP1qC,EAAgBA,EAAK,CAAC,EAA+C,QAA3Cwf,EAAK9hB,KAAKuD,QAAQ0pC,2BAAwC,IAAPnrB,EAAgBA,EAAK,CAAC,EAAG9hB,KAAKuD,QAAQoqC,0BAC9M,CACE3O,gBAAiBh/B,KAAKuD,QAAQoqC,0BACzB3O,sBAEPv+B,GAcN,OAbAitC,EAAM7pC,MAAK,IAAM2I,EAAKghB,KAAK,CACvB5B,OAAQlrB,EAAKkrB,OACbnT,aAAc/X,EAAK+X,aACnBC,aAAchY,EAAKgY,aACnBC,cAAejY,EAAKiY,cACpBC,cAAelY,EAAKkY,cACpBhM,SAAUlM,EAAKkM,SACfC,OAAQnM,EAAKmM,KACb8hB,SAAU3uB,KACV4hB,UAAWlI,EAAKpN,YAEpBtM,KAAKqnC,eAAenjC,KAAKsI,GACzBxM,KAAK4tC,cAAcphC,GACZA,CAAI,IAGnBxM,KAAKuV,OAAOjM,EAAOC,GAAQ,GAC3BmkC,EAAM5rC,SAAS+rC,GAAMA,MACM,iBAAhB7oB,EAA0B,CACjC,MAAMrD,EAAQ3hB,KAAK4iB,SAASoC,GACxBrD,GACA3hB,KAAKkiB,iBAAiBP,EAE9B,CACJ,CACA,MAAOwkB,GAKH,IAAK,MAAM3jB,KAASxiB,KAAK2gB,OACrB6B,EAAM3gB,UACN7B,KAAK0gB,QAAQrc,OAAOme,EAAM/mB,IAC1BuE,KAAKonC,kBAAkBljC,KAAKse,GAShC,MANAxiB,KAAKqD,QAMC8iC,CACV,CACAnmC,KAAKutC,qBAAqBrpC,MAC9B,CACAb,KAAAA,GACI,MAAMunC,EAAiB5qC,KAAK8gB,YACtBH,EAASnf,MAAM8D,KAAKtF,KAAK0gB,QAAQE,UACvC,IAAK,MAAM4B,KAAS7B,EAChB6B,EAAMrc,WAAWtE,UACjB7B,KAAKyiB,cAAcD,EAAM/f,MAAO,CAAEkgB,YAAY,IAE9CioB,GACA5qC,KAAKkiB,sBAAiBzhB,GAE1BT,KAAK6gB,SAASxd,OAClB,CACAmgB,SAAAA,CAAU7B,EAAOpe,GACb,IAAIjB,EACJ,IAAIgpC,EACJ,MAAM9E,EAAexmC,KAAK6gB,SAAS1Z,OAAOwa,GACpC2mB,EAAgE,QAA9ChmC,EAAKtC,KAAK0gB,QAAQvW,IAAI5G,EAAQuqC,kBAA+B,IAAPxrC,OAAgB,EAASA,EAAGG,MAC1G,IAAK6lC,EACD,MAAM,IAAI/lC,MAAO,mBAAkBgB,EAAQuqC,4BAE/C,MAAM3nB,EAAS5F,GAAShd,EAAQmY,WAChC,GAAe,WAAXyK,EACA,MAAM,IAAI5jB,MAAO,GAAE4jB,gCAElB,CACD,MAAM1K,EAAWV,EAAgButB,EAAe/jC,SAChD+mC,EAAmB/vB,EAAoBvb,KAAK6gB,SAAS5S,YAAawN,EAAU0K,EAChF,CACAnmB,KAAKuiB,WAAWikB,EAAc8E,EAAkB/nC,EAAQsB,KAC5D,CACA0e,QAAAA,CAAShgB,GACL,IAAIjB,EAAIwf,EAAIC,EAAIC,EAAIsa,EAAIC,EACxB,IAAI+O,EAA+C,QAA3BhpC,EAAKiB,EAAQkY,gBAA6B,IAAPnZ,EAAgBA,EAAK,CAAC,GACjF,GAAgC,QAA3Bwf,EAAKve,EAAQwT,gBAA6B,IAAP+K,OAAgB,EAASA,EAAGkpB,eAAgB,CAChF,MAAM1C,EAA8E,QAA5DvmB,EAAK/hB,KAAK0gB,QAAQvW,IAAI5G,EAAQwT,SAASi0B,uBAAoC,IAAPjpB,OAAgB,EAASA,EAAGtf,MACxH,IAAK6lC,EACD,MAAM,IAAI/lC,MAAO,mBAAkBgB,EAAQwT,SAASi0B,iCAExD,MAAM7kB,EAAS5F,GAAShd,EAAQwT,SAAS2E,WACzC,GAAe,WAAXyK,EACA,MAAM,IAAI5jB,MAAO,GAAE4jB,gCAElB,CACD,MAAM1K,EAAWV,EAAgButB,EAAe/jC,SAChD+mC,EAAmB/vB,EAAoBvb,KAAK6gB,SAAS5S,YAAawN,EAAU0K,EAChF,CACJ,CACA,MAAM3Z,EAAOwyB,GAAgBz7B,EAAQ9H,GAAI8H,EAAQjH,UAA8C,QAAlC0lB,EAAKhiB,KAAKuD,QAAQypC,kBAA+B,IAAPhrB,EAAgBA,EAAK,CAAC,EAA+C,QAA3Csa,EAAKt8B,KAAKuD,QAAQ0pC,2BAAwC,IAAP3Q,EAAgBA,EAAK,CAAC,EAAGt8B,KAAKuD,QAAQoqC,0BACpN,CACE3O,gBAAiBh/B,KAAKuD,QAAQoqC,0BACzB3O,sBAEPv+B,GAeN,OAdA+L,EAAKghB,KAAK,CACN5B,OAAkC,QAAzB2Q,EAAKh5B,EAAQqoB,cAA2B,IAAP2Q,EAAgBA,EAAK,CAAC,EAChE9jB,aAAclV,EAAQkV,aACtBC,aAAcnV,EAAQmV,aACtBC,cAAepV,EAAQoV,cACvBC,cAAerV,EAAQqV,cACvBhM,SAAUrJ,EAAQqJ,SAClBC,OAAQtJ,EAAQsJ,KAChB8hB,SAAU3uB,KACV4hB,WAAW,IAEf5hB,KAAK4tC,cAAcphC,GACnBxM,KAAKuiB,WAAW/V,EAAM8+B,EAAkB/nC,EAAQsB,MAChD7E,KAAKkiB,iBAAiB1V,GACfA,CACX,CACAohC,aAAAA,CAAcjsB,GACV,MAAMxb,EAAa,IAAIX,EAAoBmc,EAAMmC,IAAIiH,kBAAkBrnB,IAC9DA,EAAMymB,WAGXnqB,KAAK0gB,QAAQ5e,SAASisC,IAClB,MAAMvrB,EAAQurB,EAAUtrC,MACpB+f,IAAUb,EACVa,EAAMK,WAAU,GAGhBL,EAAMK,WAAU,EACpB,GACF,KAEN7iB,KAAK0gB,QAAQ5b,IAAI6c,EAAMlmB,GAAI,CACvBgH,MAAOkf,EACPxb,cAER,CACA0mC,SAAAA,CAAUvE,EAAgBzoC,EAASsmB,GAC/B,MAAMimB,EAAcpsC,KAAK4iB,SAAS/iB,GAClC,IAAKusC,EACD,MAAM,IAAI7pC,MAAM,qBAEpB,MAAMgmC,EAAoBxtB,EAAgButB,EAAe/jC,SACnD8nC,EAAiB9wB,EAAoBvb,KAAK6gB,SAAS5S,YAAas6B,EAAmBpiB,IAClFmmB,EAAsBtgC,GAAMpB,EAAKyhC,GAClCE,EAAiBxxB,EAAgBqxB,EAAY7nC,UAC5CioC,EAAsBlnC,GAAQsF,EAAK2hC,GAC1C,GAAIzhC,EAAe0hC,EAAsBF,GAKrC,YADAtsC,KAAK6gB,SAASvL,SAASk3B,EAAsBlnC,EAAM0G,GAIvD,MAAM0gC,EAAc1sC,KAAKyiB,cAAc2pB,EAAa,CAChDzpB,YAAY,EACZtK,aAAa,IAGXs0B,EAA2B5xB,EAAgButB,EAAe/jC,SAC1DkX,EAAWF,EAAoBvb,KAAK6gB,SAAS5S,YAAa0+B,EAA0BxmB,GAC1FnmB,KAAKuiB,WAAWmqB,EAAajxB,EACjC,CACAqH,WAAAA,CAAYN,GACRziB,MAAM+iB,YAAYN,EACtB,CACA3gB,OAAAA,GACI9B,MAAM8B,UACN7B,KAAKutC,qBAAqB1rC,SAC9B,EC5QG,MAAMmsC,WAA2BruB,GACpC,UAAIwD,GACA,OAAOnjB,KAAK0X,UAAUnE,UAC1B,CACA,WAAIhQ,GACA,OAAOvD,KAAK2mC,QAChB,CACA,UAAIplC,GACA,OAAOvB,KAAKk2B,QAAQrxB,IACxB,CACA,eAAIoJ,GACA,OAAOjO,KAAK0X,UAAUzJ,WAC1B,CACA,aAAIyJ,GACA,OAAO1X,KAAKiuC,UAChB,CACA,aAAIv2B,CAAUjV,GACVzC,KAAKiuC,WAAaxrC,EAClBzC,KAAKkuC,2BAA2BzrC,MAAQ,IAAI+C,EAAoBxF,KAAKiuC,WAAW3+B,cAAa,KACzFtP,KAAKmuC,mBAAmBjqC,UAAKzD,EAAU,IACvCT,KAAKiuC,WAAWz+B,cAAcrL,GAAMnE,KAAKuP,cAAcrL,KAAKC,KAAKnE,KAAKiuC,WAAWv+B,iBAAiBvL,GAAMnE,KAAKyP,iBAAiBvL,KAAKC,KAC3I,CACA,eAAIoI,GACA,OAAOvM,KAAK0X,UAAUnL,WAC1B,CACA,eAAIG,GACA,OAAO1M,KAAK0X,UAAUhL,WAC1B,CACA,UAAInD,GACA,OAAOvJ,KAAK0X,UAAUzJ,cAAgBf,EAAYkB,WAC5CpO,KAAK0X,UAAU9J,eACf5N,KAAK0X,UAAU7S,IACzB,CACA,SAAIyE,GACA,OAAOtJ,KAAK0X,UAAUzJ,cAAgBf,EAAYkB,WAC5CpO,KAAK0X,UAAU7S,KACf7E,KAAK0X,UAAU9J,cACzB,CACAjO,WAAAA,CAAYqb,EAAezX,GACvB,IAAIjB,EACJvC,MAAMib,EAAezX,EAAQyd,qBAC7BhhB,KAAKkuC,2BAA6B,IAAIjoC,EACtCjG,KAAKk2B,QAAU,IAAItxB,IACnB5E,KAAKutC,qBAAuB,IAAIvqC,EAChChD,KAAKojB,oBAAsBpjB,KAAKutC,qBAAqB7pC,MACrD1D,KAAKuP,cAAgB,IAAIvM,EACzBhD,KAAKwP,aAAexP,KAAKuP,cAAc7L,MACvC1D,KAAKyP,iBAAmB,IAAIzM,EAC5BhD,KAAK0P,gBAAkB1P,KAAKyP,iBAAiB/L,MAC7C1D,KAAKmuC,mBAAqB,IAAInrC,EAC9BhD,KAAKwhB,kBAAoBxhB,KAAKmuC,mBAAmBzqC,MACjD1D,KAAKqK,YAAc,IAAID,EAAWpK,KAAKuE,SACvCvE,KAAKqK,YAAYC,cAA2C,QAA5BhI,EAAKiB,EAAQhI,iBAA8B,IAAP+G,EAAgBA,EAAK,IACzFtC,KAAK2mC,SAAWpjC,EACXA,EAAQypC,aACTzpC,EAAQypC,WAAa,CAAC,GAErBzpC,EAAQ0pC,sBACT1pC,EAAQ0pC,oBAAsB,CAAC,GAEnCjtC,KAAK0X,UAAY,IAAIjK,EAAUzN,KAAKuE,QAAShB,GAC7CvD,KAAK6F,eAAe7F,KAAKuP,cAAevP,KAAKutC,qBAAsBvtC,KAAKyP,iBAAkBzP,KAAKmuC,mBACnG,CACAtsB,aAAAA,CAActe,GACV,IAAIjB,EAAIwf,EACJ,cAAeve,GACfvD,KAAKqK,YAAYC,cAA2C,QAA5BhI,EAAKiB,EAAQhI,iBAA8B,IAAP+G,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrBvD,KAAK6f,gBAAyD,QAAtCiC,EAAKve,EAAQyd,2BAAwC,IAAPc,GAAgBA,GAEvD,iBAAxBve,EAAQ0K,cACfjO,KAAK0X,UAAUzJ,YAAc1K,EAAQ0K,aAEzCjO,KAAK2mC,SAAW/iB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAKuD,SAAUA,GAC/DvD,KAAK0X,UAAUnC,OAAOvV,KAAK0X,UAAU7S,KAAM7E,KAAK0X,UAAU9J,eAC9D,CACA0V,KAAAA,GACI,IAAIhhB,EACyB,QAA5BA,EAAKtC,KAAKi2B,oBAAiC,IAAP3zB,GAAyBA,EAAGghB,OACrE,CACAE,SAAAA,CAAUle,EAAM0G,GACZhM,KAAK0X,UAAUpC,SAAShQ,EAAM0G,EAClC,CACAgB,UAAAA,CAAW2U,EAAOrV,GACd,MAAMxI,EAAQ9D,KAAKmjB,OAAOpf,QAAQ4d,GAClC3hB,KAAK0X,UAAU9E,eAAe9O,EAAOwI,EACzC,CACAuW,SAAAA,CAAUlB,EAAOysB,GACbpuC,KAAKi2B,aAAetU,EACpB3hB,KAAKmjB,OACA1Y,QAAQC,GAAMA,IAAMiX,IACpB7f,SAAS4I,IACVA,EAAEoZ,IAAIzC,mBAAmBnd,KAAK,CAAEmmB,UAAU,IACrC+jB,GACD1jC,EAAE4Y,OACN,IAEJ3B,EAAMmC,IAAIzC,mBAAmBnd,KAAK,CAAEmmB,UAAU,IACzC+jB,GACDzsB,EAAM2B,OAEd,CACAD,WAAAA,CAAY1B,EAAOtP,GACf,MAAM9D,EAAOvO,KAAKk2B,QAAQ/rB,IAAIwX,EAAMlmB,IACpC,IAAK8S,EACD,MAAM,IAAIhM,MAAO,2BAA0Bof,EAAMlmB,MAErD8S,EAAK1M,UACL7B,KAAKk2B,QAAQ7xB,OAAOsd,EAAMlmB,IAC1B,MAAMqI,EAAQ9D,KAAKmjB,OAAO7X,WAAWuF,GAAMA,IAAM8Q,IAC7B3hB,KAAK0X,UAAUtC,WAAWtR,EAAOuO,GACzCxQ,UACZ,MAAMshB,EAASnjB,KAAKmjB,OAChBA,EAAO5hB,OAAS,GAChBvB,KAAK6iB,UAAUM,EAAOA,EAAO5hB,OAAS,GAE9C,CACAqhB,QAAAA,CAASnnB,GACL,OAAOuE,KAAKmjB,OAAO2R,MAAMtoB,GAASA,EAAK/Q,KAAOA,GAClD,CACA8nB,QAAAA,CAAShgB,GACL,IAAIjB,EAAIwf,EAAIC,EACZ,GAAI/hB,KAAKk2B,QAAQxT,IAAInf,EAAQ9H,IACzB,MAAM,IAAI8G,MAAO,SAAQgB,EAAQ9H,qBAErC,MAAM+Q,EAAOwyB,GAAgBz7B,EAAQ9H,GAAI8H,EAAQjH,UAA8C,QAAlCgG,EAAKtC,KAAKuD,QAAQypC,kBAA+B,IAAP1qC,EAAgBA,EAAK,CAAC,EAA+C,QAA3Cwf,EAAK9hB,KAAKuD,QAAQ0pC,2BAAwC,IAAPnrB,EAAgBA,EAAK,CAAC,EAAG9hB,KAAKuD,QAAQ8qC,iBACpN,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBAAiBrP,sBAEjDv+B,GACN+L,EAAKyB,YAAcjO,KAAK0X,UAAUzJ,YAClCzB,EAAKghB,KAAK,CACN5B,OAAkC,QAAzB7J,EAAKxe,EAAQqoB,cAA2B,IAAP7J,EAAgBA,EAAK,CAAC,EAChExV,YAAahJ,EAAQgJ,YACrBG,YAAanJ,EAAQmJ,YACrBG,KAAMtJ,EAAQsJ,KACdD,SAAUrJ,EAAQqJ,SAClB+hB,SAAU3uB,OAEd,MAAM6E,EAA+B,iBAAjBtB,EAAQsB,KAAoBtB,EAAQsB,KAAOwI,EAAOC,WAChExJ,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQrD,EAIlE,OAHAT,KAAK0X,UAAUpF,QAAQ9F,EAAM3H,EAAMf,GACnC9D,KAAKsuC,UAAU9hC,GACfxM,KAAK6iB,UAAUrW,GACRA,CACX,CACA+I,MAAAA,CAAOjM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkB5N,KAAK0X,UAAUzJ,cAAgBf,EAAYkB,WACpE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACftJ,KAAK0X,UAAUnC,OAAO1Q,EAAM+I,EAChC,CACA0gC,SAAAA,CAAU9hC,GACN,MAAMrG,EAAaqG,EAAKsX,IAAIiH,kBAAkBrnB,IACrCA,EAAMymB,WAGXnqB,KAAK6iB,UAAUrW,GAAM,EAAK,IAE9BxM,KAAKk2B,QAAQpxB,IAAI0H,EAAK/Q,GAAI0K,EAC9B,CACAgW,MAAAA,GACI,IAAI7Z,EAYJ,MAAO,CACH6P,MAZUnS,KAAK0X,UACdnE,WACA7W,KAAI,CAAC8P,EAAMvB,KAEL,CACHpG,KAFS7E,KAAK0X,UAAU1E,YAAY/H,GAGpCvK,KAAM8L,EAAK2P,SACXtP,OAAQL,EAAKK,KACbD,SAAUJ,EAAKI,aAKnB4rB,WAAyC,QAA5Bl2B,EAAKtC,KAAKi2B,oBAAiC,IAAP3zB,OAAgB,EAASA,EAAG7G,GAC7EoJ,KAAM7E,KAAK0X,UAAU7S,KACrBoJ,YAAajO,KAAK0X,UAAUzJ,YAEpC,CACAiQ,QAAAA,CAASqwB,GACLvuC,KAAKqD,QACL,MAAM,MAAE8O,EAAK,YAAElE,EAAW,KAAEpJ,EAAI,WAAE2zB,GAAe+V,EAC3Cb,EAAQ,GAERpkC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAyCpB,GAxCAvJ,KAAK0X,UAAY,IAAIjK,EAAUzN,KAAKuE,QAAS,CACzC0J,cACA0D,mBAAoB3R,KAAKuD,QAAQoO,mBACjCO,WAAY,CACRrN,OACAsN,MAAOA,EAAMzV,KAAK8P,IACd,IAAIlK,EAAIwf,EACR,MAAMphB,EAAO8L,EAAK9L,KAClB,GAAIV,KAAKk2B,QAAQxT,IAAIhiB,EAAKjF,IACtB,MAAM,IAAI8G,MAAO,SAAQ7B,EAAKjF,qBAElC,MAAMkmB,EAAQqd,GAAgBt+B,EAAKjF,GAAIiF,EAAKpE,UAA8C,QAAlCgG,EAAKtC,KAAKuD,QAAQypC,kBAA+B,IAAP1qC,EAAgBA,EAAK,CAAC,EAA+C,QAA3Cwf,EAAK9hB,KAAKuD,QAAQ0pC,2BAAwC,IAAPnrB,EAAgBA,EAAK,CAAC,EAAG9hB,KAAKuD,QAAQ8qC,iBAC/M,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBACzBrP,sBAEPv+B,GAkBN,OAjBAitC,EAAM7pC,MAAK,KACP,IAAIvB,EACJqf,EAAM6L,KAAK,CACP5B,OAA+B,QAAtBtpB,EAAK5B,EAAKkrB,cAA2B,IAAPtpB,EAAgBA,EAAK,CAAC,EAC7DiK,YAAa7L,EAAK6L,YAClBG,YAAahM,EAAKgM,YAClBG,KAAML,EAAKK,KACXD,SAAUJ,EAAKI,SACf+hB,SAAU3uB,MACZ,IAEN2hB,EAAM1T,YAAcA,EACpBjO,KAAKsuC,UAAU3sB,GACf/Y,YAAW,KAEP5I,KAAKuP,cAAcrL,KAAKyd,EAAM,GAC/B,GACI,CAAE9c,KAAM2H,EAAK3H,KAAM2H,KAAMmV,EAAO,OAInD3hB,KAAKuV,OAAOjM,EAAOC,GACnBmkC,EAAM5rC,SAAS+rC,GAAMA,MACK,iBAAfrV,EAAyB,CAChC,MAAM7W,EAAQ3hB,KAAK4iB,SAAS4V,GACxB7W,GACA3hB,KAAK6iB,UAAUlB,EAEvB,CACA3hB,KAAKutC,qBAAqBrpC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAM8C,KAAcnG,KAAKk2B,QAAQtV,SAClCza,EAAWtE,UAGf,IADA7B,KAAKk2B,QAAQ7yB,QACNrD,KAAK0X,UAAUnW,OAAS,GAAG,CACjBvB,KAAK0X,UAAUtC,WAAW,EAAG/H,EAAOC,YAAY,GACxDzL,SACT,CACJ,CACAA,OAAAA,GACI,IAAK,MAAMsE,KAAcnG,KAAKk2B,QAAQtV,SAClCza,EAAWtE,UAEf7B,KAAKk2B,QAAQ7yB,QACb,MAAM8O,EAAQnS,KAAK0X,UAAUnE,WAC7BvT,KAAKkuC,2BAA2BrsC,UAChC7B,KAAK0X,UAAU7V,UACf,IAAK,MAAM2K,KAAQ2F,EACf3F,EAAK3K,UAET9B,MAAM8B,SACV,ECxQG,MAAM2sC,WAAsBhpC,EAC/B,WAAIjB,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,GACII,QACAC,KAAKyuC,cdS+BzQ,GAAyB,CACjE10B,MAAO,KACPC,OAAQ,KACR60B,QAAS,YACT3f,KAAM,oEcZFze,KAAK0uC,edciC1Q,GAAyB,CACnE10B,MAAO,KACPC,OAAQ,KACR60B,QAAS,YACT3f,KAAM,qEcjBFze,KAAKmG,WAAa,IAAIF,EACtBjG,KAAK2uC,OAAS,CAAE7qB,IAAK,MACrB9jB,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAKuE,QAAQhJ,UAAY,iBACzByE,KAAKu+B,SAAWx2B,SAAS2L,cAAc,QACvC1T,KAAK4uC,UAAY7mC,SAAS2L,cAAc,OACxC1T,KAAK4uC,UAAUrzC,UAAY,4BAC3ByE,KAAKuE,QAAQyN,YAAYhS,KAAK4uC,WAC9B5uC,KAAKuE,QAAQyN,YAAYhS,KAAKu+B,UAC9Bv+B,KAAK6F,eAAenB,EAAsB1E,KAAK4f,SAAU,SAAS,KAC9D,IAAItd,EACuB,QAA1BA,EAAKtC,KAAK2uC,OAAO7qB,WAAwB,IAAPxhB,GAAyBA,EAAGyqB,aAAa/sB,KAAK2uC,OAAO7qB,IAAIkJ,WAAW,IAE/G,CACAQ,IAAAA,CAAK5B,GACD5rB,KAAK2uC,OAAO7qB,IAAM8H,EAAO9H,IACzB9jB,KAAKu+B,SAAShM,YAAc3G,EAAO5vB,MACnCgE,KAAK6uC,aACL7uC,KAAKmG,WAAW1D,MAAQmpB,EAAO9H,IAAI4I,sBAAqB,KACpD1sB,KAAK6uC,YAAY,GAEzB,CACAA,UAAAA,GACI,IAAIvsC,EACJ,MAAM0qB,KAA2C,QAA1B1qB,EAAKtC,KAAK2uC,OAAO7qB,WAAwB,IAAPxhB,OAAgB,EAASA,EAAG0qB,YACrF3lB,EAAYrH,KAAK4uC,UAAW,aAAc5hB,GACtCA,GACIhtB,KAAK4uC,UAAU1nC,SAASlH,KAAK0uC,iBAC7B1uC,KAAK0uC,eAAevnC,SAEnBnH,KAAK4uC,UAAU1nC,SAASlH,KAAKyuC,gBAC9BzuC,KAAK4uC,UAAU58B,YAAYhS,KAAKyuC,iBAIhCzuC,KAAK4uC,UAAU1nC,SAASlH,KAAKyuC,gBAC7BzuC,KAAKyuC,cAActnC,SAElBnH,KAAK4uC,UAAU1nC,SAASlH,KAAK0uC,iBAC9B1uC,KAAK4uC,UAAU58B,YAAYhS,KAAK0uC,gBAG5C,CACA/iB,MAAAA,CAAOuB,GACH,CAEJrrB,OAAAA,GACI7B,KAAKmG,WAAWtE,UAChB9B,MAAM8B,SACV,EClDJ,MAAMye,GAAe1U,IACd,MAAMkjC,WAAsBtf,GAC/B7vB,WAAAA,CAAY4D,GACRxD,MAAMwD,EAAQorB,SAAUprB,EAAQ9H,GAAI8H,EAAQjH,UAAWiH,EAAQ+qB,gBAAiB/qB,EAAQ0K,YAAa1K,EAAQypB,WAAYzpB,EAAQksB,YACjIzvB,KAAKuD,QAAUA,CACnB,CACA2rB,gBAAAA,GACI,OAAOlvB,KAAKuD,QAAQyrB,IACxB,CACAI,kBAAAA,GACI,OAAOpvB,KAAKuD,QAAQ6qB,MACxB,EAEG,MAAM2gB,WAA0BpvB,GACnC,MAAIlkB,GACA,OAAOuE,KAAKygB,GAChB,CACA,UAAI0C,GACA,OAAOnjB,KAAKgvC,SAASl3B,UACzB,CACA,YAAIk3B,CAASvsC,GACTzC,KAAKivC,UAAYxsC,EACjBzC,KAAKkG,YAAYzD,MAAQ,IAAI+C,EAAoBxF,KAAKivC,UAAUz7B,aAAY,KACxExT,KAAKmuC,mBAAmBjqC,UAAKzD,EAAU,IACvCT,KAAKivC,UAAUz/B,cAAcrL,GAAMnE,KAAKuP,cAAcrL,KAAKC,KAAKnE,KAAKivC,UAAUv/B,iBAAiBvL,GAAMnE,KAAKyP,iBAAiBvL,KAAKC,KACzI,CACA,YAAI6qC,GACA,OAAOhvC,KAAKivC,SAChB,CACA,eAAI1iC,GACA,OAAOvM,KAAKgvC,SAASziC,WACzB,CACA,eAAIG,GACA,OAAO1M,KAAKgvC,SAAStiC,WACzB,CACA,UAAInD,GACA,OAAOvJ,KAAKgvC,SAAS/gC,cAAgBf,EAAYkB,WAC3CpO,KAAKgvC,SAASphC,eACd5N,KAAKgvC,SAASnqC,IACxB,CACA,SAAIyE,GACA,OAAOtJ,KAAKgvC,SAAS/gC,cAAgBf,EAAYkB,WAC3CpO,KAAKgvC,SAASnqC,KACd7E,KAAKgvC,SAASphC,cACxB,CACA,WAAIrK,GACA,OAAOvD,KAAK2mC,QAChB,CACAhnC,WAAAA,CAAYqb,EAAezX,GACvB,IAAIjB,EACJvC,MAAMib,EAAezX,EAAQyd,qBAC7BhhB,KAAKygB,IAAMH,GAAazU,OACxB7L,KAAKkG,YAAc,IAAID,EACvBjG,KAAKkvC,iBAAmB,IAAItqC,IAC5B5E,KAAKutC,qBAAuB,IAAIvqC,EAChChD,KAAKojB,oBAAsBpjB,KAAKutC,qBAAqB7pC,MACrD1D,KAAKmuC,mBAAqB,IAAInrC,EAC9BhD,KAAKwhB,kBAAoBxhB,KAAKmuC,mBAAmBzqC,MACjD1D,KAAK0vB,WAAa,IAAI1sB,EACtBhD,KAAK0jB,UAAY1jB,KAAK0vB,WAAWhsB,MACjC1D,KAAKuP,cAAgB,IAAIvM,EACzBhD,KAAKwP,aAAexP,KAAKuP,cAAc7L,MACvC1D,KAAKyP,iBAAmB,IAAIzM,EAC5BhD,KAAK0P,gBAAkB1P,KAAKyP,iBAAiB/L,MAC7C1D,KAAK6F,eAAe7F,KAAKmuC,mBAAoBnuC,KAAKutC,qBAAsBvtC,KAAK0vB,WAAY1vB,KAAKuP,cAAevP,KAAKyP,kBAClHzP,KAAKqK,YAAc,IAAID,EAAWpK,KAAKuE,SACvCvE,KAAKqK,YAAYC,cAA2C,QAA5BhI,EAAKiB,EAAQhI,iBAA8B,IAAP+G,EAAgBA,EAAK,IACzFtC,KAAK2mC,SAAWpjC,EACXA,EAAQypC,aACTzpC,EAAQypC,WAAa,CAAC,GAErBzpC,EAAQ0pC,sBACT1pC,EAAQ0pC,oBAAsB,CAAC,GAEnCjtC,KAAKgvC,SAAW,IAAIv3B,EAASzX,KAAKuE,QAAS,CAEvC0J,YAAaf,EAAYqJ,WAE7BvW,KAAK6F,eAAe7F,KAAKkG,YAC7B,CACA8G,UAAAA,CAAW2U,EAAOrV,GACd,MAAMxI,EAAQ9D,KAAKmjB,OAAOpf,QAAQ4d,GAClC3hB,KAAKgvC,SAASp8B,eAAe9O,EAAOwI,EACxC,CACAgX,KAAAA,GACI,CAEJzB,aAAAA,CAActe,GACV,IAAIjB,EAAIwf,EACJ,cAAeve,GACfvD,KAAKqK,YAAYC,cAA2C,QAA5BhI,EAAKiB,EAAQhI,iBAA8B,IAAP+G,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrBvD,KAAK6f,gBAAyD,QAAtCiC,EAAKve,EAAQyd,2BAAwC,IAAPc,GAAgBA,GAE1F9hB,KAAK2mC,SAAW/iB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAKuD,SAAUA,EACnE,CACAggB,QAAAA,CAAShgB,GACL,IAAIjB,EAAIwf,EAAIC,EAAIC,EAChB,MAAMgN,EAAOgQ,GAAgBz7B,EAAQ9H,GAAI8H,EAAQjH,UAA8C,QAAlCgG,EAAKtC,KAAKuD,QAAQypC,kBAA+B,IAAP1qC,EAAgBA,EAAK,CAAC,EAA+C,QAA3Cwf,EAAK9hB,KAAKuD,QAAQ0pC,2BAAwC,IAAPnrB,EAAgBA,EAAK,CAAC,EAAG9hB,KAAKuD,QAAQ8qC,iBACpN,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBAAiBrf,KAAKgQ,sBAEtDv+B,GACN,IAAI2tB,EAEAA,EADA7qB,EAAQ+qB,gBACC0Q,GAAgBz7B,EAAQ9H,GAAI8H,EAAQ+qB,gBAA0D,QAAxCvM,EAAK/hB,KAAKuD,QAAQ4rC,wBAAqC,IAAPptB,EAAgBA,EAAK,CAAC,EAAG/hB,KAAKuD,QAAQ6rC,0BAA2BpvC,KAAKuD,QAAQ8qC,iBACvL,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBAAiBjgB,OAC1C4Q,sBAEPv+B,GAGG,IAAI+tC,GAEjB,MAAMhiC,EAAO,IAAIsiC,GAAc,CAC3BrzC,GAAI8H,EAAQ9H,GACZa,UAAWiH,EAAQjH,UACnBgyB,gBAAiB/qB,EAAQ+qB,gBACzBF,SACAY,OACA/gB,YAAaf,EAAYqJ,SACzByW,aAAczpB,EAAQypB,WACtByC,aAAczvB,KAAKuD,QAAQksB,WAC3Bd,SAAU3uB,OAEdA,KAAKg4B,WAAWxrB,GAChB,MAAM3H,EAA+B,iBAAjBtB,EAAQsB,KAAoBtB,EAAQsB,KAAOwI,EAAOC,WAChExJ,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQrD,EAYlE,OAXA+L,EAAKghB,KAAK,CACN5B,OAAkC,QAAzB5J,EAAKze,EAAQqoB,cAA2B,IAAP5J,EAAgBA,EAAK,CAAC,EAChEgM,gBAAiBzqB,EAAQyqB,gBACzBC,gBAAiB1qB,EAAQ0qB,gBACzBjB,WAAYzpB,EAAQypB,WACpBhxB,MAAOuH,EAAQvH,MACfg0B,aAAc,IAAIvM,GAAYzjB,MAC9B2uB,SAAU3uB,OAEdA,KAAKgvC,SAAS72B,QAAQ3L,EAAM3H,EAAMf,GAClC0I,EAAKyB,YAAcjO,KAAKgvC,SAAS/gC,YAC1BzB,CACX,CACA6W,WAAAA,CAAY1B,GACR,MACM7d,EADQ9D,KAAKmjB,OACC7X,WAAWuF,GAAMA,IAAM8Q,IAC3C3hB,KAAKgvC,SAAS52B,WAAWtU,GACzB9D,KAAKw5B,cAAc7X,EACvB,CACA6B,SAAAA,CAAUle,EAAM0G,GACZhM,KAAKgvC,SAAS15B,SAAShQ,EAAM0G,EACjC,CACA4W,QAAAA,CAASnnB,GACL,OAAOuE,KAAKmjB,OAAO2R,MAAMtoB,GAASA,EAAK/Q,KAAOA,GAClD,CACA8Z,MAAAA,CAAOjM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkB5N,KAAKgvC,SAAS/gC,cAAgBf,EAAYkB,WACnE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACftJ,KAAKgvC,SAASz5B,OAAO1Q,EAAM+I,EAC/B,CACAuO,MAAAA,GACI,MAAM+e,EAAWz4B,GAAUA,IAAU+L,OAAOysB,kBACxCx4B,IAAU+L,OAAOC,uBACfhO,EACAgC,EAcN,MAAO,CACH0P,MAbUnS,KAAKgvC,SACdl3B,WACApb,KAAI,CAAC8P,EAAMvB,KAEZ,MAAO,CACHpG,KAFS7E,KAAKgvC,SAASh8B,YAAY/H,GAGnCvK,KAAM8L,EAAK2P,SACX5P,aARS9J,EAQY+J,EAAKwhB,gBARNvrB,GAAS,OAAIhC,EAAYgC,GAS7CiK,YAAawuB,EAAQ1uB,EAAKyhB,iBAC1Bc,SAAUviB,EAAKwgB,cAVNvqB,KAWZ,IAIDoC,KAAM7E,KAAKgvC,SAASnqC,KAE5B,CACAqZ,QAAAA,CAASmxB,GACLrvC,KAAKqD,QACL,MAAM,MAAE8O,EAAK,KAAEtN,GAASwqC,EAClB3B,EAAQ,GAERpkC,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OACpBvJ,KAAKgvC,SAAW,IAAIv3B,EAASzX,KAAKuE,QAAS,CACvC0J,YAAaf,EAAYqJ,SACzBrE,WAAY,CACRrN,OACAsN,MAAOA,EAAMzV,KAAK8P,IACd,IAAIlK,EAAIwf,EAAIC,EAAIC,EAChB,MAAMthB,EAAO8L,EAAK9L,KACZsuB,EAAOgQ,GAAgBt+B,EAAKjF,GAAIiF,EAAKpE,UAA8C,QAAlCgG,EAAKtC,KAAKuD,QAAQypC,kBAA+B,IAAP1qC,EAAgBA,EAAK,CAAC,EAA+C,QAA3Cwf,EAAK9hB,KAAKuD,QAAQ0pC,2BAAwC,IAAPnrB,EAAgBA,EAAK,CAAC,EAAG9hB,KAAKuD,QAAQ8qC,iBAC9M,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBAAiBrf,KAC1CgQ,sBAEPv+B,GACN,IAAI2tB,EAEAA,EADA1tB,EAAK4tB,gBACI0Q,GAAgBt+B,EAAKjF,GAAIiF,EAAK4tB,gBAA0D,QAAxCvM,EAAK/hB,KAAKuD,QAAQ4rC,wBAAqC,IAAPptB,EAAgBA,EAAK,CAAC,EAAqD,QAAjDC,EAAKhiB,KAAKuD,QAAQ6rC,iCAA8C,IAAPptB,EAAgBA,EAAK,CAAC,EAAGhiB,KAAKuD,QAAQ8qC,iBAC5N,CACErP,gBAAiBh/B,KAAKuD,QAAQ8qC,iBAAiBjgB,OAC1C4Q,sBAEPv+B,GAGG,IAAI+tC,GAEjB,MAAM7sB,EAAQ,IAAImtB,GAAc,CAC5BrzC,GAAIiF,EAAKjF,GACTa,UAAWoE,EAAKpE,UAChBgyB,gBAAiB5tB,EAAK4tB,gBACtBF,SACAY,OACA/gB,YAAaf,EAAYqJ,SACzByW,aAAcxgB,EAAKuiB,SACnBU,aAAczvB,KAAKuD,QAAQksB,WAC3Bd,SAAU3uB,OAoBd,OAlBAA,KAAKg4B,WAAWrW,GAChB+rB,EAAM7pC,MAAK,KACP,IAAIvB,EACJqf,EAAM6L,KAAK,CACP5B,OAA+B,QAAtBtpB,EAAK5B,EAAKkrB,cAA2B,IAAPtpB,EAAgBA,EAAK,CAAC,EAC7D0rB,gBAAiBxhB,EAAKD,YACtB0hB,gBAAiBzhB,EAAKE,YACtB1Q,MAAO0E,EAAK1E,MACZgxB,aAAcxgB,EAAKuiB,SACnBiB,aAAc,IAAIvM,GAAYzjB,MAC9B2uB,SAAU3uB,OAEd2hB,EAAM1T,YAAcjO,KAAKgvC,SAAS/gC,WAAW,IAEjDrF,YAAW,KAEP5I,KAAKuP,cAAcrL,KAAKyd,EAAM,GAC/B,GACI,CAAE9c,KAAM2H,EAAK3H,KAAM2H,KAAMmV,EAAO,OAInD3hB,KAAKuV,OAAOjM,EAAOC,GACnBmkC,EAAM5rC,SAAS+rC,GAAMA,MACrB7tC,KAAKutC,qBAAqBrpC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAOwN,EAAGpO,KAAUzC,KAAKkvC,iBAAiB/J,UAC3C1iC,EAAMZ,UAEV7B,KAAKkvC,iBAAiB7rC,QACtBrD,KAAKgvC,SAASntC,SAClB,CACAm2B,UAAAA,CAAWrW,GACP,MAAMxb,EAAawb,EAAM+B,WAAWhgB,IAChC1D,KAAK0vB,WAAWxrB,KAAKR,EAAM,IAE/B1D,KAAKkvC,iBAAiBpqC,IAAI6c,EAAMlmB,GAAI0K,EACxC,CACAqzB,aAAAA,CAAc7X,GACV,MAAMxb,EAAanG,KAAKkvC,iBAAiB/kC,IAAIwX,EAAMlmB,IAC/C0K,IACAA,EAAWtE,UACX7B,KAAKkvC,iBAAiB7qC,OAAOsd,EAAMlmB,IAE3C,CACAoG,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAOgP,EAAGpO,KAAUzC,KAAKkvC,iBAAiB/J,UAC3C1iC,EAAMZ,UAEV7B,KAAKkvC,iBAAiB7rC,QACtBrD,KAAKgvC,SAASntC,SAClB,EC/RG,MAAMytC,WAAuBriB,GAChC,YAAIrgB,GACA,OAAO5M,KAAKs6B,SAChB,CACA,eAAIrsB,CAAYxL,GACZzC,KAAKkO,aAAezL,CACxB,CACA,eAAIwL,GACA,OAAOjO,KAAKkO,YAChB,CACA,eAAI3B,GACA,MAAM1H,EAAoC,mBAAtB7E,KAAKuvC,aACnBvvC,KAAKuvC,eACLvvC,KAAKuvC,aAKX,OAJI1qC,IAAS7E,KAAKwvC,wBACdxvC,KAAKwvC,sBAAwB3qC,EAC7B7E,KAAK06B,qBAEF71B,CACX,CACA,eAAI6H,GACA,MAAM7H,EAAoC,mBAAtB7E,KAAKyvC,aACnBzvC,KAAKyvC,eACLzvC,KAAKyvC,aAKX,OAJI5qC,IAAS7E,KAAK0vC,wBACd1vC,KAAK0vC,sBAAwB7qC,EAC7B7E,KAAK06B,qBAEF71B,CACX,CACA,QAAIgI,GACA,OAAO7M,KAAKu6B,KAChB,CACA56B,WAAAA,CAAYlE,EAAIsjC,GACZh/B,MAAMtE,EAAIsjC,EAAe,IAAIjT,GAAsBrwB,EAAIsjC,IACvD/+B,KAAKwvC,sBAAwB,EAC7BxvC,KAAK0vC,sBAAwBlhC,OAAOC,kBACpCzO,KAAKuvC,aAAe,EACpBvvC,KAAKyvC,aAAejhC,OAAOC,kBAC3BzO,KAAKu6B,OAAQ,EACbv6B,KAAK6X,aAAe,IAAI7U,EACxBhD,KAAKwT,YAAcxT,KAAK6X,aAAanU,MACrC1D,KAAK8jB,IAAI2H,WAAWzrB,MACpBA,KAAK6F,eAAe7F,KAAK6X,aAAc7X,KAAK8jB,IAAIqH,wBAAwBznB,IACpE,MAAM,UAAEke,GAAcle,GAChB,SAAEirB,GAAa3uB,KAAKktB,QAC1ByB,EAAS3hB,WAAWhN,KAAM4hB,EAAU,IACpC5hB,KAAK8jB,IAAIuH,gBAAe,KACxB,MAAM,SAAEsD,GAAa3uB,KAAKktB,QAC1ByB,EAAS9L,UAAU7iB,KAAK,IACxBA,KAAK8jB,IAAIkI,gCAAgCtoB,IACR,iBAAtBA,EAAM6I,aACgB,mBAAtB7I,EAAM6I,cACbvM,KAAKuvC,aAAe7rC,EAAM6I,aAEG,iBAAtB7I,EAAMgJ,aACgB,mBAAtBhJ,EAAMgJ,cACb1M,KAAKyvC,aAAe/rC,EAAMgJ,aAE9B1M,KAAK06B,mBAAmB,IACxB16B,KAAK8jB,IAAIsI,iBAAiB1oB,IAC1B1D,KAAK6X,aAAa3T,KAAK,CAAEW,KAAMnB,EAAMmB,MAAO,IAEpD,CACAmI,UAAAA,CAAW4U,GACP5hB,KAAK8jB,IAAIvK,uBAAuBrV,KAAK,CAAE0d,aAC3C,CACAiB,SAAAA,CAAUwH,GACNrqB,KAAK8jB,IAAIzC,mBAAmBnd,KAAK,CAAEmmB,YACvC,CACA9U,MAAAA,CAAO1Q,EAAM+I,GACT,MAAOtE,EAAOC,GAAUvJ,KAAKiO,cAAgBf,EAAYkB,WACnD,CAACvJ,EAAM+I,GACP,CAACA,EAAgB/I,GACvB9E,MAAMwV,OAAOjM,EAAOC,EACxB,CACAikB,IAAAA,CAAK9B,GACD3rB,MAAMytB,KAAK9B,GACX1rB,KAAKs6B,UAAY5O,EAAW9e,SACxB8e,EAAWnf,cACXvM,KAAKuvC,aAAe7jB,EAAWnf,aAE/Bmf,EAAWhf,cACX1M,KAAKyvC,aAAe/jB,EAAWhf,aAE/Bgf,EAAW7e,OACX7M,KAAKu6B,MAAQ7O,EAAW7e,KAEhC,CACAsP,MAAAA,GAMI,OAAOyH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG9jB,MAAMoc,UAAW,CAAE5P,aADzC9J,EAC8DzC,KAAKuM,YADxD9J,GAAS,OAAIhC,EAAYgC,GAC6CiK,YALjFjK,IAAUA,IAAU+L,OAAOysB,kBACxCx4B,IAAU+L,OAAOC,uBACfhO,EACAgC,EAEyGy4B,CAAQl7B,KAAK0M,eAD3GjK,KAErB,CACAi4B,iBAAAA,GACI16B,KAAK8jB,IAAImI,wBAAwB/nB,KAAK,CAClCwI,YAAa1M,KAAK0vC,sBAClBnjC,YAAavM,KAAKwvC,uBAE1B,ECrGG,SAASG,GAAeprC,EAAShB,GAEpC,OADkB,IAAIkjC,GAAkBliC,EAAShB,GAChCugB,GACrB,CACO,SAAS8rB,GAAgBrrC,EAAShB,GACrC,MAAMjH,EAAY,IAAI0xC,GAAmBzpC,EAAShB,GAClD,OAAO,IAAI2f,GAAa5mB,EAC5B,CACO,SAASuzC,GAAetrC,EAAShB,GACpC,MAAMjH,EAAY,IAAIgxC,GAAkB/oC,EAAShB,GACjD,OAAO,IAAIwgB,GAAYznB,EAC3B,CACO,SAASwzC,GAAevrC,EAAShB,GACpC,MAAMjH,EAAY,IAAIyyC,GAAkBxqC,EAAShB,GACjD,OAAO,IAAIkgB,GAAYnnB,EAC3B,C,uJCTA,MAAMyzC,EAAuBA,CAAC70C,EAAO80C,KACjC,MAAOn/B,EAAGo/B,GAAiBC,EAAAA,WACrBC,EAASD,EAAAA,OAAah1C,EAAMk1C,gBAalC,OAZAF,EAAAA,oBAA0BF,GAAK,MAC3BrkB,OAASykB,IACLD,EAAOE,QAAUzsB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGssB,EAAOE,SAAUD,GAOlEH,EAAcK,KAAKC,MAAM,KAE7B,IACGL,EAAAA,cAAoBh1C,EAAMoB,UAAW6zC,EAAOE,QAAQ,EAE/DN,EAAqBS,YAAc,wBAMnC,MAAMC,EAA2B,MAC7B,IAAIhuC,EAAQ,EACZ,MAAO,CAAEoJ,KAAMA,IAAO,8BAA6BpJ,KAASqJ,aAC/D,EAHgC,GAIpB4kC,EAAmBR,EAAAA,cAAoB,CAAC,GAC9C,MAAMS,EACThxC,WAAAA,CAAYyd,EAAQwzB,EAAat0C,EAAWovB,EAAYmlB,GACpD7wC,KAAKod,OAASA,EACdpd,KAAK4wC,YAAcA,EACnB5wC,KAAK1D,UAAYA,EACjB0D,KAAK0rB,WAAaA,EAClB1rB,KAAK6wC,QAAUA,EACf7wC,KAAK8wC,cAAgB,CAAC,EACtB9wC,KAAK+wC,UAAW,EAChB/wC,KAAKgxC,cACT,CACArlB,MAAAA,CAAOzwB,GACH,GAAI8E,KAAK+wC,SACL,MAAM,IAAIxuC,MAAM,mDAEfvC,KAAKixC,kBAKNjxC,KAAKixC,kBAAkBtlB,OAAOzwB,GAH9B8E,KAAK8wC,cAAgBltB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG7jB,KAAK8wC,eAAgB51C,EAKlF,CACA81C,YAAAA,GACI,GAAIhxC,KAAK+wC,SACL,MAAM,IAAIxuC,MAAM,mDAEpB,GA6DyB,mBALAjG,EAxDH0D,KAAK1D,cA8DxBA,aAA6C,EAASA,EAAU40C,UAxD/D,MAAM,IAAI3uC,MAAM,8GAkDrB,IAA0BjG,EAhDzB,MAAM60C,EAAkBjB,EAAAA,cAAoBA,EAAAA,WAAiBH,GAAuB,CAChFzzC,UAAW0D,KACN1D,UACL8zC,eAAgBpwC,KAAK0rB,WACrBskB,IAAMzrC,IACFvE,KAAKixC,kBAAoB1sC,EACrBqf,OAAO+J,KAAK3tB,KAAK8wC,eAAevvC,OAAS,IACzCvB,KAAKixC,kBAAkBtlB,OAAO3rB,KAAK8wC,eACnC9wC,KAAK8wC,cAAgB,CAAC,EAC1B,IAGFp3B,EAAO1Z,KAAK6wC,QACZX,EAAAA,cAAoBQ,EAAiBU,SAAU,CAAE3uC,MAAOzC,KAAK6wC,SAAWM,GACxEA,EACAE,EAASC,EAAAA,aAAsB53B,EAAM1Z,KAAKod,OAAQqzB,EAAyB5kC,QACjF7L,KAAKgwC,IAAM,CACPqB,SACAlrC,WAAYnG,KAAK4wC,YAAYW,UAAUF,GAE/C,CACAxvC,OAAAA,GACI,IAAIS,EACgB,QAAnBA,EAAKtC,KAAKgwC,WAAwB,IAAP1tC,GAAyBA,EAAG6D,WAAWtE,UACnE7B,KAAK+wC,UAAW,CACpB,EAOG,MAAMS,EAAsBA,KAC/B,MAAOC,EAASC,GAAcxB,EAAAA,SAAe,IAC7CA,EAAAA,cAAqB,iBAAgBuB,EAAQlwC,UAY7C,MAAO,CAACkwC,EAXUvB,EAAAA,aAAmBmB,IACjCK,GAAYC,GAAoB,IAAIA,EAAiBN,KACrD,IAAIN,GAAW,EACf,OAAOa,EAAAA,GAAmBtsC,MAAK,KAC3B,GAAIyrC,EACA,MAAM,IAAIxuC,MAAM,gDAEpBwuC,GAAW,EACXW,GAAYC,GAAoBA,EAAgBlnC,QAAQ2O,GAAMA,IAAMi4B,KAAQ,GAC9E,GACH,IACwB,ECtHxB,MAAMQ,EACT,WAAIttC,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYlE,EAAIa,EAAWw1C,GACvB9xC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAK8xC,iBAAmBA,EACxB9xC,KAAKkI,YAAc,IAAI6pC,EAAAA,GACvB/xC,KAAKmI,WAAanI,KAAKkI,YAAYxE,MACnC1D,KAAKoI,WAAa,IAAI2pC,EAAAA,GACtB/xC,KAAKqI,UAAYrI,KAAKoI,WAAW1E,MACjC1D,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,sBAC1ByE,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,MAChC,CACAga,KAAAA,GACI,CAEJkK,IAAAA,CAAK9B,GACD1rB,KAAKutB,KAAO,IAAIojB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK1D,UAAW,CAC3EsvB,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChBkM,aAActE,EAAWsE,cAEjC,CACArE,MAAAA,CAAOjoB,GACH,IAAIpB,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGqpB,OAAO,CAAEC,OAAQloB,EAAMkoB,QACpF,CACArW,MAAAA,CAAOiV,EAAQC,GACX,CAEJ5oB,OAAAA,GACI,IAAIS,EACJtC,KAAKkI,YAAYrG,UACjB7B,KAAKoI,WAAWvG,UACK,QAApBS,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGT,SAC7D,ECxCG,MAAMmwC,EACT,WAAIztC,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYlE,EAAIa,EAAWw1C,GACvB9xC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAK8xC,iBAAmBA,EACxB9xC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,sBAC1ByE,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,MAChC,CACAga,KAAAA,GACI,CAEJkK,IAAAA,CAAK9B,GACD1rB,KAAKutB,KAAO,IAAIojB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK1D,UAAW,CAC3EsvB,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChBkM,aAActE,EAAWsE,cAEjC,CACArE,MAAAA,CAAOjoB,GACH,IAAIpB,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGqpB,OAAO,CAAEC,OAAQloB,EAAMkoB,QACpF,CACArW,MAAAA,CAAOiV,EAAQC,GACX,CAEJ5oB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGT,SAC7D,ECjCG,MAAMowC,EACT,WAAI1tC,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYlE,EAAIa,EAAWw1C,GACvB9xC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAK8xC,iBAAmBA,EACxB9xC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,sBAC1ByE,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,MAChC,CACAkkB,IAAAA,CAAK9B,GACD1rB,KAAKutB,KAAO,IAAIojB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK1D,UAAW,CAC3EkmB,MAAOkJ,EAAWlJ,MAClBwN,aAActE,EAAWsE,cAEjC,CACA1M,KAAAA,GACI,CAEJqI,MAAAA,CAAOC,GACH,IAAItpB,EAAIwf,EAAIC,EACR/hB,KAAK0rB,aACL1rB,KAAK0rB,WAAWE,OAASA,EAAOA,QAEf,QAApBtpB,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGqpB,OAAO,CAAEC,OAAyF,QAAhF7J,EAAgC,QAA1BD,EAAK9hB,KAAK0rB,kBAA+B,IAAP5J,OAAgB,EAASA,EAAG8J,cAA2B,IAAP7J,EAAgBA,EAAK,CAAC,GAC7L,CACAxM,MAAAA,CAAOiV,EAAQC,GACX,CAEJ5oB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGT,SAC7D,EClCG,MAAMqwC,EACT,WAAI3tC,GACA,OAAOvE,KAAK4f,QAChB,CACA,QAAI2N,GACA,OAAOvtB,KAAKmyC,KAChB,CACAxyC,WAAAA,CAAYrD,EAAWw1C,EAAkBxW,GACrCt7B,KAAK1D,UAAYA,EACjB0D,KAAK8xC,iBAAmBA,EACxB9xC,KAAKs7B,OAASA,EACdt7B,KAAKoyC,kBAAoB,IAAIC,EAAAA,GAC7BryC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAASrkB,UAAY,sBAC1ByE,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,MAChC,CACAkkB,IAAAA,CAAK9B,GACD1rB,KAAKoyC,kBAAkB3vC,MAAQ,IAAI6vC,EAAAA,GAA4BtyC,KAAKs7B,OAAO3S,MAAM3E,eAAc,KAC3FhkB,KAAKuyC,cAAc,IACnBvyC,KAAKs7B,OAAO3S,MAAMzE,kBAAiB,KACnClkB,KAAKuyC,cAAc,IACnBvyC,KAAKs7B,OAAO3S,MAAMvE,wBAAuB,KACzCpkB,KAAKwyC,mBAAmB,IACxB9mB,EAAW5H,IAAIxC,mBAAkB,KACjCthB,KAAKyyC,mBAAmB,KAE5BzyC,KAAKmyC,MAAQ,IAAIxB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK1D,UAAW,CAC5EwnB,IAAK4H,EAAW5H,IAChBkM,aAActE,EAAWsE,aACzB7M,OAAQnjB,KAAKs7B,OAAO3S,MAAMxF,OAC1B6B,YAAahlB,KAAKs7B,OAAO3S,MAAM3D,YAC/BuU,cAAev5B,KAAKs7B,OAAOxX,IAAIuG,SAC/B7H,MAAOxiB,KAAKs7B,QAEpB,CACAz5B,OAAAA,GACI,IAAIS,EACJtC,KAAKoyC,kBAAkBvwC,UACD,QAArBS,EAAKtC,KAAKmyC,aAA0B,IAAP7vC,GAAyBA,EAAGT,SAC9D,CACA8pB,MAAAA,CAAOjoB,GACH,IAAIpB,EACkB,QAArBA,EAAKtC,KAAKmyC,aAA0B,IAAP7vC,GAAyBA,EAAGqpB,OAAOjoB,EAAMkoB,OAC3E,CACA2mB,YAAAA,GACIvyC,KAAK2rB,OAAO,CAAEC,OAAQ,CAAEzI,OAAQnjB,KAAKs7B,OAAO3S,MAAMxF,SACtD,CACAqvB,iBAAAA,GACIxyC,KAAK2rB,OAAO,CACRC,OAAQ,CACJ5G,YAAahlB,KAAKs7B,OAAO3S,MAAM3D,cAG3C,CACAytB,iBAAAA,GACIzyC,KAAK2rB,OAAO,CACRC,OAAQ,CACJ2N,cAAev5B,KAAKs7B,OAAOxX,IAAIuG,WAG3C,ECxDJ,SAASqoB,EAA0Bp2C,EAAWq2C,GAC1C,OAAOr2C,EACAo6B,GACQ,IAAIwb,EAA+B51C,EAAWq2C,EAAOjc,QAE9Dj2B,CACV,CACA,MAAMmyC,EAAoB,4BAUnB,MAAMC,EAAgB3C,EAAAA,YAAiB,CAACh1C,EAAO80C,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB6C,EAAc7C,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAqLhC,OApLAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjB5d,EAAAA,GAAcvzB,SAASoxC,IACnB,MAAMxlB,EAAMwlB,EACNC,EAAYj4C,EAAMwyB,GACpBA,KAAOxyB,GAASi4C,IAAcH,EAAU3C,QAAQ3iB,KAChDulB,EAAQvlB,GAAOylB,EACnB,IAEAJ,EAAY1C,SACZ0C,EAAY1C,QAAQxuB,cAAcoxB,GAKtCD,EAAU3C,QAAUn1C,CAAK,GAC1Bm6B,EAAAA,GAAc34B,KAAKgxB,GAAQxyB,EAAMwyB,MACpCwiB,EAAAA,WAAgB,KACZ,IAAI5tC,EACJ,IAAKwwC,EAAOzC,QACR,OAEJ,MAAM+C,EAAwD,QAA9B9wC,EAAKpH,EAAMm4C,qBAAkC,IAAP/wC,EAAgBA,EAAK,CAAC,EACxFpH,EAAM+jC,sBACNmU,EAAuBR,GACnB13C,EAAM+jC,qBAEd,MAAMqU,EAAmB,CACrBlb,gCAAiCsa,EAA0Bx3C,EAAMq4C,2BAA4B,CAAEhC,cAC/FrZ,iCAAkCwa,EAA0Bx3C,EAAMs4C,4BAA6B,CAAEjC,cACjGjZ,kCAAmCoa,EAA0Bx3C,EAAMu4C,6BAA8B,CAAElC,cACnGvS,gBAAkBz7B,GACP,IAAIsuC,EAAsBtuC,EAAQ9H,GAAIP,EAAM8xC,WAAWzpC,EAAQpE,MAAO,CACzEoyC,cAGR1S,mBAAmBt7B,GACR,IAAIyuC,EAAqBzuC,EAAQ9H,GAAI23C,EAAuB7vC,EAAQpE,MAAO,CAC9EoyC,cAGRxX,yBAA0B7+B,EAAMw4C,mBAC1B,IACS,IAAIzB,EAAmB,YAAa/2C,EAAMw4C,mBAAoB,CACjEnC,mBAGN9wC,EACNw+B,oBAAqB/jC,EAAM+jC,oBACrB2T,OACAnyC,GAEJqjB,GAAM6rB,EAAAA,EAAAA,IAAemD,EAAOzC,QAASzsB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAnEhF,SAA4B3oB,GAOxB,OANoBm6B,EAAAA,GAAchnB,QAAO,CAACslC,EAAKjmB,KACvCA,KAAOxyB,IACPy4C,EAAIjmB,GAAOxyB,EAAMwyB,IAEdimB,IACR,CAAC,EAER,CA2DmFC,CAAmB14C,IAASo4C,KACjG,YAAE7rB,EAAW,aAAEC,GAAiBorB,EAAOzC,QAM7C,OALAvsB,EAAIvO,OAAOkS,EAAaC,GACpBxsB,EAAM24C,SACN34C,EAAM24C,QAAQ,CAAE/vB,QAEpBivB,EAAY1C,QAAUvsB,EACf,KACHA,EAAIjiB,SAAS,CAChB,GACF,IACHquC,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMlqC,EAAa4sC,EAAY1C,QAAQ3sB,WAAWhgB,IAC1CxI,EAAMwoB,WACNxoB,EAAMwoB,UAAUhgB,EACpB,IAEJ,MAAO,KACHyC,EAAWtE,SAAS,CACvB,GACF,CAAC3G,EAAMwoB,YACVwsB,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMlqC,EAAa4sC,EAAY1C,QAAQtrB,0BAA0BrhB,IAC7D,IAAIpB,GACgC,QAA/BA,EAAKpH,EAAM60B,sBAAmC,IAAPztB,OAAgB,EAASA,EAAGwF,KAAK5M,EAAOwI,KAChFA,EAAM0xB,QACV,IAEJ,MAAO,KACHjvB,EAAWtE,SAAS,CACvB,GACF,CAAC3G,EAAM60B,iBACVmgB,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMlqC,EAAa4sC,EAAY1C,QAAQ1rB,YAAYjhB,IAC3CxI,EAAMypB,YACNzpB,EAAMypB,WAAWjhB,EACrB,IAEJ,MAAO,KACHyC,EAAWtE,SAAS,CACvB,GACF,CAAC3G,EAAMypB,aACVurB,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQxuB,cAAc,CAC9Bmd,gBAAkBz7B,GACP,IAAIsuC,EAAsBtuC,EAAQ9H,GAAIP,EAAM8xC,WAAWzpC,EAAQpE,MAAO,CACzEoyC,eAGV,GACH,CAACr2C,EAAM8xC,aACVkD,EAAAA,WAAgB,KACZ,IAAI5tC,EACJ,IAAKywC,EAAY1C,QACb,OAEJ,MAAM+C,EAAwD,QAA9B9wC,EAAKpH,EAAMm4C,qBAAkC,IAAP/wC,EAAgBA,EAAK,CAAC,EACxFpH,EAAM+jC,sBACNmU,EAAuBR,GACnB13C,EAAM+jC,qBAEd8T,EAAY1C,QAAQxuB,cAAc,CAC9Bod,oBAAqB/jC,EAAM+jC,oBACrB2T,OACAnyC,EACNo+B,mBAAmBt7B,GACR,IAAIyuC,EAAqBzuC,EAAQ9H,GAAI23C,EAAuB7vC,EAAQpE,MAAO,CAC9EoyC,eAGV,GACH,CAACr2C,EAAMm4C,cAAen4C,EAAM+jC,sBAC/BiR,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQxuB,cAAc,CAC9BkY,yBAA0B7+B,EAAMw4C,mBAC1B,IACS,IAAIzB,EAAmB,YAAa/2C,EAAMw4C,mBAAoB,CACjEnC,mBAGN9wC,GACR,GACH,CAACvF,EAAMw4C,qBACVxD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQxuB,cAAc,CAC9BqW,iCAAkCwa,EAA0Bx3C,EAAMs4C,4BAA6B,CAAEjC,eACnG,GACH,CAACr2C,EAAMs4C,8BACVtD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQxuB,cAAc,CAC9BuW,gCAAiCsa,EAA0Bx3C,EAAMq4C,2BAA4B,CAAEhC,eACjG,GACH,CAACr2C,EAAMq4C,6BACVrD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQxuB,cAAc,CAC9ByW,kCAAmCoa,EAA0Bx3C,EAAMu4C,6BAA8B,CAAElC,eACrG,GACH,CAACr2C,EAAMu4C,+BACFvD,EAAAA,cAAoB,MAAO,CAAE30C,UAAWL,EAAMK,UAAWyO,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU0mC,IAAK8C,GAAUrB,EAAQ,IAEtIoB,EAAcrC,YAAc,oBCnNrB,MAAMsD,EAAcA,IAAO5D,EAAAA,cAAoB,MAAO,CAAE3mC,OAAQ,KAAMD,MAAO,KAAMyqC,QAAS,YAAa,cAAe,QAASC,WAAW,EAAOz4C,UAAW,gBACjK20C,EAAAA,cAAoB,OAAQ,CAAEnuC,EAAG,gICFrC,IAAIkyC,EAAkC,SAAU1/B,EAAGpQ,GAC/C,IAAIoH,EAAI,CAAC,EACT,IAAK,IAAI6N,KAAK7E,EAAOqP,OAAO7iB,UAAUmzC,eAAepsC,KAAKyM,EAAG6E,IAAMjV,EAAEJ,QAAQqV,GAAK,IAC9E7N,EAAE6N,GAAK7E,EAAE6E,IACb,GAAS,MAAL7E,GAAqD,mBAAjCqP,OAAOuwB,sBACtB,KAAIlpC,EAAI,EAAb,IAAgBmO,EAAIwK,OAAOuwB,sBAAsB5/B,GAAItJ,EAAImO,EAAE7X,OAAQ0J,IAC3D9G,EAAEJ,QAAQqV,EAAEnO,IAAM,GAAK2Y,OAAO7iB,UAAUqzC,qBAAqBtsC,KAAKyM,EAAG6E,EAAEnO,MACvEM,EAAE6N,EAAEnO,IAAMsJ,EAAE6E,EAAEnO,IAF4B,CAItD,OAAOM,CACX,EAeO,MAAM8oC,EAAsB/xC,IAC/B,IAAI,IAAEwhB,EAAKkM,aAAcskB,EAAe1oB,OAAQsB,EAAO,UAAEqnB,EAAS,oBAAEC,GAAwBlyC,EAAIwZ,EAAOm4B,EAAO3xC,EAAI,CAAC,MAAO,eAAgB,SAAU,YAAa,wBACjK,MAAMtG,EAdV,SAAkB8nB,GACd,MAAO9nB,EAAOqhC,GAAY6S,EAAAA,SAAepsB,EAAI9nB,OAS7C,OARAk0C,EAAAA,WAAgB,KACZ,MAAM/pC,EAAa2d,EAAI+V,kBAAkBn2B,IACrC25B,EAAS35B,EAAM1H,MAAM,IAEzB,MAAO,KACHmK,EAAWtE,SAAS,CACvB,GACF,CAACiiB,IACG9nB,CACX,CAGkBy4C,CAAS3wB,GACjB4wB,EAAUxE,EAAAA,aAAmBxsC,IAC/BA,EAAMvB,iBACFqyC,EACAA,IAGA1wB,EAAI2X,OACR,GACD,CAAC3X,EAAK0wB,IACHG,EAAgBzE,EAAAA,aAAmB/rC,IACrCA,EAAEhC,gBAAgB,GACnB,IACGyyC,EAAU1E,EAAAA,aAAmBxsC,IAC3BA,EAAMxB,mBAGV4hB,EAAIjB,YACA/G,EAAK84B,SACL94B,EAAK84B,QAAQlxC,GACjB,GACD,CAACogB,EAAKhI,EAAK84B,UACd,OAAQ1E,EAAAA,cAAoB,MAAOtsB,OAAOC,OAAO,CAAE,cAAe,2BAA6B/H,EAAM,CAAE84B,QAASA,EAASr5C,UAAW,mBAChI20C,EAAAA,cAAoB,OAAQ,CAAE30C,UAAW,0BAA4BS,IACpEu4C,GAAcrE,EAAAA,cAAoB,MAAO,CAAE30C,UAAW,wBAAyBo5C,cAAeA,EAAeC,QAASF,GACnHxE,EAAAA,cAAoB4D,EAAa,OAAQ,EClD9C,MAAMe,UAAuBvF,EAAAA,GAChC3vC,WAAAA,CAAYlE,EAAIa,EAAWw4C,EAAgBhD,GACvC/xC,MAAMtE,EAAIa,GACV0D,KAAK80C,eAAiBA,EACtB90C,KAAK8xC,iBAAmBA,CAC5B,CACArkB,YAAAA,GACI,IAAInrB,EAAIwf,EACR,OAAO,IAAI6uB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK80C,eAAgB,CAC3ElpB,OAAsF,QAA7E9J,EAA6B,QAAvBxf,EAAKtC,KAAKktB,eAA4B,IAAP5qB,OAAgB,EAASA,EAAGspB,cAA2B,IAAP9J,EAAgBA,EAAK,CAAC,EACpHgC,IAAK9jB,KAAK8jB,IACVkM,aAAc,IAAI9M,EAAAA,GAAaljB,KAAKktB,QAAQyB,WAEpD,ECXG,MAAMomB,EAAiB7E,EAAAA,YAAiB,CAACh1C,EAAO80C,KACnD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB8E,EAAe9E,EAAAA,UACduB,EAASF,GAAaC,IAwC7B,OAvCAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAI5tC,EACJ,MAAMwhB,GAAM8rB,EAAAA,EAAAA,IAAgBkD,EAAOzC,QAAS,CACxCrvB,oBAAqB9lB,EAAM8lB,oBAC3B/S,YAA0C,QAA5B3L,EAAKpH,EAAM+S,mBAAgC,IAAP3L,EAAgBA,EAAK4K,EAAAA,GAAYkB,WACnF6+B,oBAAqB/xC,EAAM8xC,WAC3BqB,iBAAkB,CACdrP,gBAAiBA,CAACvjC,EAAIw5C,EAAa34C,IACxB,IAAIu4C,EAAep5C,EAAIw5C,EAAa34C,EAAW,CAClDi1C,eAIZ5/B,mBAAwD,kBAA7BzW,EAAMyW,oBAC3BzW,EAAMyW,mBAEZM,OAAQ/W,EAAMq6B,YACR,CAAE/iB,gBAAiB,oBACnB/R,KAEJ,YAAEgnB,EAAW,aAAEC,GAAiBorB,EAAOzC,QAM7C,OALAvsB,EAAIvO,OAAOkS,EAAaC,GACpBxsB,EAAM24C,SACN34C,EAAM24C,QAAQ,CAAE/vB,QAEpBkxB,EAAa3E,QAAUvsB,EAChB,KACHA,EAAIjiB,SAAS,CAChB,GACF,IACHquC,EAAAA,WAAgB,KACP8E,EAAa3E,SAGlB2E,EAAa3E,QAAQxuB,cAAc,CAC/BorB,oBAAqB/xC,EAAM8xC,YAC7B,GACH,CAAC9xC,EAAM8xC,aACFkD,EAAAA,cAAoB,MAAO,CAAE30C,UAAWL,EAAMK,UAAWyO,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU0mC,IAAK8C,GAAUrB,EAAQ,IAEtIsD,EAAevE,YAAc,qBC/CtB,MAAM0E,UAA2B7a,EAAAA,GACpC16B,WAAAA,CAAYlE,EAAIa,EAAWw4C,EAAgBhD,GACvC/xC,MAAMtE,EAAIa,GACV0D,KAAK80C,eAAiBA,EACtB90C,KAAK8xC,iBAAmBA,CAC5B,CACArkB,YAAAA,GACI,IAAInrB,EAAIwf,EACR,OAAO,IAAI6uB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK80C,eAAgB,CAC3ElpB,OAAsF,QAA7E9J,EAA6B,QAAvBxf,EAAKtC,KAAKktB,eAA4B,IAAP5qB,OAAgB,EAASA,EAAGspB,cAA2B,IAAP9J,EAAgBA,EAAK,CAAC,EACpHgC,IAAK9jB,KAAK8jB,IAEVkM,aAAc,IAAIjM,EAAAA,GAAY/jB,KAAKktB,QAC9ByB,WAEb,ECbG,MAAMwmB,EAAgBjF,EAAAA,YAAiB,CAACh1C,EAAO80C,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBkF,EAAclF,EAAAA,UACbuB,EAASF,GAAaC,IA6C7B,OA5CAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAI5tC,EACJ,IAAKwwC,EAAOzC,QACR,MAAO,OAIX,MAAMvsB,GAAM+rB,EAAAA,EAAAA,IAAeiD,EAAOzC,QAAS,CACvCrvB,oBAAqB9lB,EAAM8lB,oBAC3BrP,mBAAwD,kBAA7BzW,EAAMyW,oBAC3BzW,EAAMyW,mBAEZ1D,YAA0C,QAA5B3L,EAAKpH,EAAM+S,mBAAgC,IAAP3L,EAAgBA,EAAK4K,EAAAA,GAAYkB,WACnF6+B,oBAAqB/xC,EAAM8xC,WAC3BW,0BAA2B,CACvB3O,gBAAiBA,CAACvjC,EAAIw5C,EAAa34C,IACxB,IAAI44C,EAAmBz5C,EAAIw5C,EAAa34C,EAAW,CACtDi1C,eAIZt/B,OAAQ/W,EAAMq6B,YACR,CAAE/iB,gBAAiB,oBACnB/R,KAEJ,YAAEgnB,EAAW,aAAEC,GAAiBorB,EAAOzC,QAM7C,OALAvsB,EAAIvO,OAAOkS,EAAaC,GACpBxsB,EAAM24C,SACN34C,EAAM24C,QAAQ,CAAE/vB,QAEpBsxB,EAAY/E,QAAUvsB,EACf,KACHA,EAAIjiB,SAAS,CAChB,GACF,IACHquC,EAAAA,WAAgB,KACPkF,EAAY/E,SAGjB+E,EAAY/E,QAAQxuB,cAAc,CAC9BorB,oBAAqB/xC,EAAM8xC,YAC7B,GACH,CAAC9xC,EAAM8xC,aACFkD,EAAAA,cAAoB,MAAO,CAAE30C,UAAWL,EAAMK,UAAWyO,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU0mC,IAAK8C,GAAUrB,EAAQ,IAEtI0D,EAAc3E,YAAc,oBCrDrB,MAAM6E,EACT,WAAI9wC,GACA,OAAOvE,KAAK4f,QAChB,CACAjgB,WAAAA,CAAYlE,EAAIa,EAAWw1C,GACvB9xC,KAAKvE,GAAKA,EACVuE,KAAK1D,UAAYA,EACjB0D,KAAK8xC,iBAAmBA,EACxB9xC,KAAK4f,SAAW7X,SAAS2L,cAAc,OACvC1T,KAAK4f,SAAS5V,MAAMT,OAAS,OAC7BvJ,KAAK4f,SAAS5V,MAAMV,MAAQ,MAChC,CACAkkB,IAAAA,CAAK9B,GACD1rB,KAAKutB,KAAO,IAAIojB,EAAU3wC,KAAKuE,QAASvE,KAAK8xC,iBAAkB9xC,KAAK1D,UAAW,CAC3EsvB,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChB9nB,MAAO0vB,EAAW1vB,MAClBg0B,aAActE,EAAWsE,cAEjC,CACA7T,MAAAA,GACI,MAAO,CACH1gB,GAAIuE,KAAKvE,GAEjB,CACAkwB,MAAAA,CAAOC,GACH,IAAItpB,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGqpB,OAAOC,EAAOA,OAC3E,CACA/pB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKtC,KAAKutB,YAAyB,IAAPjrB,GAAyBA,EAAGT,SAC7D,EC7BG,MAAMyzC,EAAgBpF,EAAAA,YAAiB,CAACh1C,EAAO80C,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBqF,EAAcrF,EAAAA,UACbuB,EAASF,GAAaC,IAyE7B,OAxEAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,MAAMlR,EAAkBA,CAACvjC,EAAI+5C,EAAcl5C,IAAc,IAAI+4C,EAAiB55C,EAAIa,EAAW,CACzFi1C,cAEEztB,GAAMgsB,EAAAA,EAAAA,IAAegD,EAAOzC,QAAS,CACvCrvB,oBAAqB9lB,EAAM8lB,oBAC3BisB,oBAAqB/xC,EAAM8xC,WAC3BA,WAAY,CAAC,EACbmC,iBAAkB,CAAC,EACnB1f,WAAYv0B,EAAMu0B,WAClB2f,0BAA2Bl0C,EAAMi0C,iBACjCd,iBAAkB,CACdjgB,OAAQ,CACJ4Q,mBAEJhQ,KAAM,CACFgQ,oBAGRjP,eAAgB70B,EAAM60B,kBAEpB,YAAEtI,EAAW,aAAEC,GAAiBorB,EAAOzC,QAM7C,OALAvsB,EAAIvO,OAAOkS,EAAaC,GACpBxsB,EAAM24C,SACN34C,EAAM24C,QAAQ,CAAE/vB,QAEpByxB,EAAYlF,QAAUvsB,EACf,KACHA,EAAIjiB,SAAS,CAChB,GACF,IACHquC,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQxuB,cAAc,CAC9BorB,oBAAqB/xC,EAAM8xC,YAC7B,GACH,CAAC9xC,EAAM8xC,aACVkD,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQxuB,cAAc,CAC9ButB,0BAA2Bl0C,EAAMi0C,kBACnC,GACH,CAACj0C,EAAMi0C,mBACVe,EAAAA,WAAgB,KACZ,IAAKqF,EAAYlF,QACb,MAAO,OAIX,MAAMvsB,EAAMyxB,EAAYlF,QAClBlqC,EAAa2d,EAAIJ,WAAWhgB,IAC1BxI,EAAMwoB,WACNxoB,EAAMwoB,UAAUE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGngB,GAAQ,CAAEogB,QAC9D,IAEJ,MAAO,KACH3d,EAAWtE,SAAS,CACvB,GACF,CAAC3G,EAAMwoB,YACVwsB,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQxuB,cAAc,CAC9BkO,eAAgB70B,EAAM60B,gBACxB,GACH,CAAC70B,EAAM60B,iBACFmgB,EAAAA,cAAoB,MAAO,CAAE30C,UAAWL,EAAMK,UAAWyO,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU0mC,IAAK8C,GAAUrB,EAAQ,IAEtI6D,EAAc9E,YAAc,mB,oFCjF5B,SAAgB,WAAa,kBAAkB,kBAAoB,yBAAyB,eAAiB,sBAAsB,kBAAoB,0B,cCGvJ,SAASiF,EAAmBr5C,GAAiC,IAAhC,KAAEkD,EAAI,UAAE/D,EAAS,SAAEK,GAAUQ,EACtD,OACIP,EAAAA,EAAAA,KAAA,OACIN,WAAWkD,EAAAA,EAAAA,GACPC,EAAAA,EAAgBa,OAAOm2C,WACvBh3C,EAAAA,EAAgBa,OAAOo2C,eAAer2C,GACtC2S,EAAOyjC,WACPn6C,GACFK,SAEDA,GAGb,CACA,SAASg6C,EAAiBj5C,GAAmB,IAAlB,KAAEk5C,EAAI,MAAE75C,GAAOW,EACtC,OACId,EAAAA,EAAAA,KAAA,OAAKN,UAAW0W,EAAO6jC,kBAAkBl6C,UACrCC,EAAAA,EAAAA,KAAA,QAAMN,UAAW0W,EAAO8jC,eAAen6C,SAAEi6C,KAIrD,CACA,SAASG,EAAiBC,GAAgB,IAAf,SAAEr6C,GAAUq6C,EACnC,OAAOr6C,GACHC,EAAAA,EAAAA,KAAA,OAAKN,UAAW0W,EAAOikC,kBAAkBt6C,SAAEA,IAC3C,IACR,CACe,SAASu6C,EAAiBj7C,GACrC,MAAM,KAAEoE,EAAI,KAAEu2C,EAAI,MAAE75C,EAAK,SAAEJ,EAAQ,UAAEL,GAAcL,EACnD,OACII,EAAAA,EAAAA,MAACm6C,EAAmB,CAACn2C,KAAMA,EAAM/D,UAAWA,EAAUK,SAAA,EAClDC,EAAAA,EAAAA,KAAC+5C,EAAiB,CAAC55C,MAAOA,EAAO65C,KAAMA,KACvCh6C,EAAAA,EAAAA,KAACm6C,EAAiB,CAAAp6C,SAAEA,MAGhC,CCtCe,SAASw6C,EAAmBl7C,GACzC,OACEW,EAAAA,EAAAA,KAAA,OAAKk4C,QAAQ,eAAgB74C,EAAKU,UAChCC,EAAAA,EAAAA,KAAA,QACEw6C,SAAS,UACTt0C,EAAE,qgBAIV,CCLA,MACMu0C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAAC06C,EAAQ,IACfv6C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,wBACHE,YAAY,2DAA0DC,SAAC,UAK9D,SAAS46C,EAAmBt7C,GACzC,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAhBO,yBAgBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,CCxBe,SAAS66C,EAAkBv7C,GACxC,OACEW,EAAAA,EAAAA,KAAA,OAAKk4C,QAAQ,eAAgB74C,EAAKU,UAChCC,EAAAA,EAAAA,KAAA,QACEw6C,SAAS,UACTt0C,EAAE,wcAIV,CCLA,MACMu0C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAAC66C,EAAO,IACd16C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,uBACHE,YAAY,yDAAwDC,SAAC,SAK5D,SAAS+6C,EAAkBz7C,GACxC,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAhBO,uBAgBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,CCxBe,SAASg7C,EAAmB17C,GACzC,OACEW,EAAAA,EAAAA,KAAA,OAAKk4C,QAAQ,eAAgB74C,EAAKU,UAChCC,EAAAA,EAAAA,KAAA,QACEw6C,SAAS,UACTt0C,EAAE,wLAIV,CCLA,MACMu0C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAACg7C,EAAQ,IACf76C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,wBACHE,YAAY,2DAA0DC,SAAC,UAK9D,SAASk7C,EAAmB57C,GACzC,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAhBO,oBAgBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,CCxBe,SAASm7C,EAAsB77C,GAC5C,OACEW,EAAAA,EAAAA,KAAA,OAAKk4C,QAAQ,eAAgB74C,EAAKU,UAChCC,EAAAA,EAAAA,KAAA,QACEw6C,SAAS,UACTt0C,EAAE,2PAIV,CCLA,MACMu0C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAACm7C,EAAW,IAClBh7C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,2BACHE,YAAY,iEAAgEC,SAAC,aCVpE,SAASq7C,EAAqB/7C,GAC3C,OACEW,EAAAA,EAAAA,KAAA,OAAKk4C,QAAQ,eAAgB74C,EAAKU,UAChCC,EAAAA,EAAAA,KAAA,QACEw6C,SAAS,UACTt0C,EAAE,8XAIV,CCLA,MACMu0C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAACq7C,EAAU,IACjBl7C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,0BACHE,YAAY,+DAA8DC,SAAC,YCNjF,MACM06C,EAAe,CACnBT,MAAMh6C,EAAAA,EAAAA,KAACm7C,EAAW,IAClBh7C,OACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRR,GAAG,2BACHE,YAAY,iEAAgEC,SAAC,aCJnF,MAgBA,MAhBwB,CACtBu7C,KAAMX,EACNY,IAAKT,EACLU,KAAMP,EACNQ,QJKa,SAA+Bp8C,GAC5C,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAhBO,uBAgBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,EIbE27C,OFIa,SAA8Br8C,GAC3C,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAhBO,sBAgBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,MER0B,CACxB47C,UAAYt8C,IAAUW,EAAAA,EAAAA,KAAC26C,EAAkB,CAACx6C,MAAM,eAAgBd,IAChEu8C,UAAYv8C,IAAUW,EAAAA,EAAAA,KAACi7C,EAAkB,CAAC96C,MAAM,eAAgBd,IAChEw8C,QAAUx8C,IAAUW,EAAAA,EAAAA,KAAC86C,EAAiB,CAAC36C,MAAM,aAAcd,IAC3Dy8C,QDHa,SAA+Bz8C,GAC5C,OACEW,EAAAA,EAAAA,KAACs6C,EAAgB,IACXG,KACAp7C,EACJK,WAAWkD,EAAAA,EAAAA,GAlBO,uBAkBevD,EAAMK,WAAWK,SACjDV,EAAMU,UAGb,IEde,SAASyD,EAAWu4C,GACjC,MAAM18C,GAAQ28C,EAAAA,EAAAA,GAAuBD,GAC/BE,GAZ4Bx4C,EAYyBpE,EAAMoE,KAX/Cy4C,EAAgBz4C,KAIlCqD,QAAQC,KACL,sDAAqDtD,+BAEjDy4C,EAAgBV,OARzB,IAAoC/3C,EAalC,OAAOzD,EAAAA,EAAAA,KAACi8C,EAAuB,IAAK58C,GACtC,C,4ECXA,YAEO88C,EAAAA,EAGHC,kBAAiB,KACjBC,WACJ,I,qHCFA,MAAMC,EAAoC,CACtC,CAAE11C,MAAO,aAAcjF,MAAO,aAAcq4C,KAAM,mBAClD,CAAEpzC,MAAO,QAASjF,MAAO,QAASq4C,KAAM,sBACxC,CAAEpzC,MAAO,MAAOjF,MAAO,MAAOq4C,KAAM,qBAIlCuC,EAAwB,IAAIrG,EAAAA,GAAwB,CAAEnuC,QAAQ,IAE7D,SAASy0C,IAIZ,MAAO51C,EAAO61C,GAAYpI,EAAAA,SACtBqI,aAAaC,QAAQ,sBAAwBL,EAAW,GAAG11C,OAG/DytC,EAAAA,WAAgB,KACZ,MAAM/pC,EAAaiyC,EAAsB10C,OAAOjB,GAAU,CACtD61C,EAAS71C,MAOb,OAJA21C,EAAsBl0C,KAClBq0C,aAAaC,QAAQ,sBAAwBL,EAAW,GAAG11C,OAGxD,KACH0D,EAAWtE,SAAS,CACvB,GACF,IAEH,MAAM42C,EAASvI,EAAAA,aAAmBztC,IAC9B81C,aAAaG,QAAQ,oBAAqBj2C,GAC1C61C,EAAS71C,GACT21C,EAAsBl0C,KAAKzB,EAAM,GAClC,IAIH,MAAO,CAFQ01C,EAAWrjB,MAAMjkB,GAAMA,EAAEpO,QAAUA,IAElCg2C,EACpB,CAKA,MAAME,EAAqBA,KACvB,MAAOC,EAAiBC,GAAsBR,IAM9C,OACI/8C,EAAAA,EAAAA,MAACw9C,EAAAA,GAAiB,CAAAl9C,SAAA,EACdC,EAAAA,EAAAA,KAACi9C,EAAAA,GAAoB,CAACC,SAAS,EAAKn9C,UAChCN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BK,SAAA,EACvCC,EAAAA,EAAAA,KAAA,QAAMmO,MAAO,CAAEooB,QAAS,WAAYx2B,SAC/Bg9C,EAAgBp7C,SAErB3B,EAAAA,EAAAA,KAAA,OACIyN,MAAO,GACPC,OAAQ,GACRyvC,KAAKC,EAAAA,EAAAA,GAAWL,EAAgB/C,MAChC7rC,MAAO,CAAEkvC,YAAa,eAIlCr9C,EAAAA,EAAAA,KAACi9C,EAAAA,GAAoB,CACjBK,KAAK,SACLC,MAAM,MACNC,WAAY,GACZ99C,UAAU,sBAAqBK,SAE9Bu8C,EAAWz7C,KAAK48C,IAETz9C,EAAAA,EAAAA,KAACi9C,EAAAA,GAAiB,CACdlE,QAASA,IAAMiE,EAAmBS,EAAU97C,OAC5CjC,UAAU,mBAAkBK,UAE5BN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBK,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAMmO,MAAO,CAAEuvC,aAAc,OAAQ39C,SAChC09C,EAAU97C,SAEf3B,EAAAA,EAAAA,KAAA,OACIyN,MAAO,GACPC,OAAQ,GACRyvC,KAAKC,EAAAA,EAAAA,GAAWK,EAAUzD,mBAOlC,EAIf2D,EAAoBA,KACtB39C,EAAAA,EAAAA,KAAC49C,EAAAA,EAAW,CAAA79C,SAAEA,KAAMC,EAAAA,EAAAA,KAAC88C,EAAkB,MAG5Ce,EAAsBx+C,IAIxB,MAAO09C,GAAmBP,IAE1B,OAAIO,EAAgBn2C,QAAUvH,EAAMo+C,UACzBp+C,EAAMU,SAGV,IAAI,EAGFq8C,EAAqB/8C,IAIvBW,EAAAA,EAAAA,KAAC49C,EAAAA,EAAW,CAAA79C,SAAEA,KAAMC,EAAAA,EAAAA,KAAC69C,EAAkB,IAAKx+C,K,4EC7HvD,MAGay+C,EAAez+C,IACxB,MAAOo+C,IAAajB,EAAAA,EAAAA,MAEduB,EAAc,2EAChB1+C,EAAMO,MACN69C,EAAU97C,MAAMq8C,gBACdp7B,EAAQ,cACVvjB,EAAMO,MACN69C,EAAU72C,MAAMo3C,2BACpB,OACIv+C,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACIm9C,IAAKv6B,EACLzU,MAAO,CAAEV,MAAO,OAAQC,OAAS,GAAErO,EAAMqO,QAAU,YAEvDjO,EAAAA,EAAAA,MAAA,OAAK0O,MAAO,CAAEqkB,QAAS,OAAQyrB,eAAgB,YAAal+C,SAAA,EACxDC,EAAAA,EAAAA,KAACk+C,EAAW,CAAC9U,IAAK2U,KAClB/9C,EAAAA,EAAAA,KAAA,KACIsqB,OAAO,SACP9nB,KAAMogB,EACNljB,UAAU,4BAA2BK,SACxC,qBAIH,EAIDs8C,EAAch9C,IAChBW,EAAAA,EAAAA,KAAC49C,EAAAA,EAAW,CAAA79C,SAAEA,KAAMC,EAAAA,EAAAA,KAAC89C,EAAW,IAAKz+C,MAG1C6+C,EAAe7+C,IAEbI,EAAAA,EAAAA,MAAA,QACIC,UAAU,qBACVyO,MAAO,CAAEqkB,QAAS,OAAQ2rB,WAAY,UAAWp+C,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,QAAMN,UAAU,6BAA4BK,SAAG,cAC/CC,EAAAA,EAAAA,KAAA,KACIwC,KAAMnD,EAAM+pC,IACZ9e,OAAQ,SACR0f,IAAI,WACJtqC,UAAU,6BAA4BK,UAEtCC,EAAAA,EAAAA,KAAA,QACImO,MAAO,CACHiwC,WAAY,OACZV,aAAc,OAChB39C,SACL,oB","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        return typeof activePanelMinimumWidth === 'number'\n            ? activePanelMinimumWidth\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH;\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        return typeof activePanelMinimumHeight === 'number'\n            ? activePanelMinimumHeight\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT;\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        return typeof activePanelMaximumWidth === 'number'\n            ? activePanelMaximumWidth\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        return typeof activePanelMaximumHeight === 'number'\n            ? activePanelMaximumHeight\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (event) => {\n            var _a;\n            event.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this._group = _params.group;\n        this.render();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}