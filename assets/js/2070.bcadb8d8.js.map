{"version":3,"file":"assets/js/2070.bcadb8d8.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogSidebar/Desktop/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogSidebar/Desktop/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogSidebar/Mobile/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogSidebar/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogLayout/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Container/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Title/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Title/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Info/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Info/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Author/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Authors/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/Authors/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Header/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Content/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Footer/ReadMoreLink/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Footer/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/Footer/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItem/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/contexts/blogPost.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/usePluralForm.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"sidebar_RYHo\",\"sidebarItemTitle\":\"sidebarItemTitle_sRjx\",\"sidebarItemList\":\"sidebarItemList_uMtB\",\"sidebarItem\":\"sidebarItem_rygH\",\"sidebarItemLink\":\"sidebarItemLink_EKgd\",\"sidebarItemLinkActive\":\"sidebarItemLinkActive_hRXJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Link from '@docusaurus/Link';\nimport {translate} from '@docusaurus/Translate';\nimport styles from './styles.module.css';\nexport default function BlogSidebarDesktop({sidebar}) {\n  return (\n    <aside className=\"col col--3\">\n      <nav\n        className={clsx(styles.sidebar, 'thin-scrollbar')}\n        aria-label={translate({\n          id: 'theme.blog.sidebar.navAriaLabel',\n          message: 'Blog recent posts navigation',\n          description: 'The ARIA label for recent posts in the blog sidebar',\n        })}>\n        <div className={clsx(styles.sidebarItemTitle, 'margin-bottom--md')}>\n          {sidebar.title}\n        </div>\n        <ul className={clsx(styles.sidebarItemList, 'clean-list')}>\n          {sidebar.items.map((item) => (\n            <li key={item.permalink} className={styles.sidebarItem}>\n              <Link\n                isNavLink\n                to={item.permalink}\n                className={styles.sidebarItemLink}\n                activeClassName={styles.sidebarItemLinkActive}>\n                {item.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </aside>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\nimport {NavbarSecondaryMenuFiller} from '@docusaurus/theme-common';\nfunction BlogSidebarMobileSecondaryMenu({sidebar}) {\n  return (\n    <ul className=\"menu__list\">\n      {sidebar.items.map((item) => (\n        <li key={item.permalink} className=\"menu__list-item\">\n          <Link\n            isNavLink\n            to={item.permalink}\n            className=\"menu__link\"\n            activeClassName=\"menu__link--active\">\n            {item.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default function BlogSidebarMobile(props) {\n  return (\n    <NavbarSecondaryMenuFiller\n      component={BlogSidebarMobileSecondaryMenu}\n      props={props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {useWindowSize} from '@docusaurus/theme-common';\nimport BlogSidebarDesktop from '@theme/BlogSidebar/Desktop';\nimport BlogSidebarMobile from '@theme/BlogSidebar/Mobile';\nexport default function BlogSidebar({sidebar}) {\n  const windowSize = useWindowSize();\n  if (!sidebar?.items.length) {\n    return null;\n  }\n  // Mobile sidebar doesn't need to be server-rendered\n  if (windowSize === 'mobile') {\n    return <BlogSidebarMobile sidebar={sidebar} />;\n  }\n  return <BlogSidebarDesktop sidebar={sidebar} />;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Layout from '@theme/Layout';\nimport BlogSidebar from '@theme/BlogSidebar';\nexport default function BlogLayout(props) {\n  const {sidebar, toc, children, ...layoutProps} = props;\n  const hasSidebar = sidebar && sidebar.items.length > 0;\n  return (\n    <Layout {...layoutProps}>\n      <div className=\"container margin-vert--lg\">\n        <div className=\"row\">\n          <BlogSidebar sidebar={sidebar} />\n          <main\n            className={clsx('col', {\n              'col--7': hasSidebar,\n              'col--9 col--offset-1': !hasSidebar,\n            })}\n            itemScope\n            itemType=\"http://schema.org/Blog\">\n            {children}\n          </main>\n          {toc && <div className=\"col col--2\">{toc}</div>}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {useBaseUrlUtils} from '@docusaurus/useBaseUrl';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostItemContainer({children, className}) {\n  const {\n    frontMatter,\n    assets,\n    metadata: {description},\n  } = useBlogPost();\n  const {withBaseUrl} = useBaseUrlUtils();\n  const image = assets.image ?? frontMatter.image;\n  const keywords = frontMatter.keywords ?? [];\n  return (\n    <article\n      className={className}\n      itemProp=\"blogPost\"\n      itemScope\n      itemType=\"http://schema.org/BlogPosting\">\n      {description && <meta itemProp=\"description\" content={description} />}\n      {image && (\n        <link itemProp=\"image\" href={withBaseUrl(image, {absolute: true})} />\n      )}\n      {keywords.length > 0 && (\n        <meta itemProp=\"keywords\" content={keywords.join(',')} />\n      )}\n      {children}\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_cIQJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Link from '@docusaurus/Link';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport styles from './styles.module.css';\nexport default function BlogPostItemHeaderTitle({className}) {\n  const {metadata, isBlogPostPage} = useBlogPost();\n  const {permalink, title} = metadata;\n  const TitleHeading = isBlogPostPage ? 'h1' : 'h2';\n  return (\n    <TitleHeading className={clsx(styles.title, className)} itemProp=\"headline\">\n      {isBlogPostPage ? (\n        title\n      ) : (\n        <Link itemProp=\"url\" to={permalink}>\n          {title}\n        </Link>\n      )}\n    </TitleHeading>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_PuMg\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {translate} from '@docusaurus/Translate';\nimport {usePluralForm} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport styles from './styles.module.css';\n// Very simple pluralization: probably good enough for now\nfunction useReadingTimePlural() {\n  const {selectMessage} = usePluralForm();\n  return (readingTimeFloat) => {\n    const readingTime = Math.ceil(readingTimeFloat);\n    return selectMessage(\n      readingTime,\n      translate(\n        {\n          id: 'theme.blog.post.readingTime.plurals',\n          description:\n            'Pluralized label for \"{readingTime} min read\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One min read|{readingTime} min read',\n        },\n        {readingTime},\n      ),\n    );\n  };\n}\nfunction ReadingTime({readingTime}) {\n  const readingTimePlural = useReadingTimePlural();\n  return <>{readingTimePlural(readingTime)}</>;\n}\nfunction Date({date, formattedDate}) {\n  return (\n    <time dateTime={date} itemProp=\"datePublished\">\n      {formattedDate}\n    </time>\n  );\n}\nfunction Spacer() {\n  return <>{' · '}</>;\n}\nexport default function BlogPostItemHeaderInfo({className}) {\n  const {metadata} = useBlogPost();\n  const {date, formattedDate, readingTime} = metadata;\n  return (\n    <div className={clsx(styles.container, 'margin-vert--md', className)}>\n      <Date date={date} formattedDate={formattedDate} />\n      {typeof readingTime !== 'undefined' && (\n        <>\n          <Spacer />\n          <ReadingTime readingTime={readingTime} />\n        </>\n      )}\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Link from '@docusaurus/Link';\nfunction MaybeLink(props) {\n  if (props.href) {\n    return <Link {...props} />;\n  }\n  return <>{props.children}</>;\n}\nexport default function BlogPostItemHeaderAuthor({author, className}) {\n  const {name, title, url, imageURL, email} = author;\n  const link = url || (email && `mailto:${email}`) || undefined;\n  return (\n    <div className={clsx('avatar margin-bottom--sm', className)}>\n      {imageURL && (\n        <MaybeLink href={link} className=\"avatar__photo-link\">\n          <img\n            className=\"avatar__photo\"\n            src={imageURL}\n            alt={name}\n            itemProp=\"image\"\n          />\n        </MaybeLink>\n      )}\n\n      {name && (\n        <div\n          className=\"avatar__intro\"\n          itemProp=\"author\"\n          itemScope\n          itemType=\"https://schema.org/Person\">\n          <div className=\"avatar__name\">\n            <MaybeLink href={link} itemProp=\"url\">\n              <span itemProp=\"name\">{name}</span>\n            </MaybeLink>\n          </div>\n          {title && (\n            <small className=\"avatar__subtitle\" itemProp=\"description\">\n              {title}\n            </small>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"authorCol\":\"authorCol_q_iI\",\"imageOnlyAuthorRow\":\"imageOnlyAuthorRow_les7\",\"imageOnlyAuthorCol\":\"imageOnlyAuthorCol_uMKf\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogPostItemHeaderAuthor from '@theme/BlogPostItem/Header/Author';\nimport styles from './styles.module.css';\n// Component responsible for the authors layout\nexport default function BlogPostItemHeaderAuthors({className}) {\n  const {\n    metadata: {authors},\n    assets,\n  } = useBlogPost();\n  const authorsCount = authors.length;\n  if (authorsCount === 0) {\n    return null;\n  }\n  const imageOnly = authors.every(({name}) => !name);\n  return (\n    <div\n      className={clsx(\n        'margin-top--md margin-bottom--sm',\n        imageOnly ? styles.imageOnlyAuthorRow : 'row',\n        className,\n      )}>\n      {authors.map((author, idx) => (\n        <div\n          className={clsx(\n            !imageOnly && 'col col--6',\n            imageOnly ? styles.imageOnlyAuthorCol : styles.authorCol,\n          )}\n          key={idx}>\n          <BlogPostItemHeaderAuthor\n            author={{\n              ...author,\n              // Handle author images using relative paths\n              imageURL: assets.authorsImageUrls[idx] ?? author.imageURL,\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport BlogPostItemHeaderTitle from '@theme/BlogPostItem/Header/Title';\nimport BlogPostItemHeaderInfo from '@theme/BlogPostItem/Header/Info';\nimport BlogPostItemHeaderAuthors from '@theme/BlogPostItem/Header/Authors';\nexport default function BlogPostItemHeader() {\n  return (\n    <header>\n      <BlogPostItemHeaderTitle />\n      <BlogPostItemHeaderInfo />\n      <BlogPostItemHeaderAuthors />\n    </header>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {blogPostContainerID} from '@docusaurus/utils-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport MDXContent from '@theme/MDXContent';\nexport default function BlogPostItemContent({children, className}) {\n  const {isBlogPostPage} = useBlogPost();\n  return (\n    <div\n      // This ID is used for the feed generation to locate the main content\n      id={isBlogPostPage ? blogPostContainerID : undefined}\n      className={clsx('markdown', className)}\n      itemProp=\"articleBody\">\n      <MDXContent>{children}</MDXContent>\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport Link from '@docusaurus/Link';\nfunction ReadMoreLabel() {\n  return (\n    <b>\n      <Translate\n        id=\"theme.blog.post.readMore\"\n        description=\"The label used in blog post item excerpts to link to full blog posts\">\n        Read More\n      </Translate>\n    </b>\n  );\n}\nexport default function BlogPostItemFooterReadMoreLink(props) {\n  const {blogPostTitle, ...linkProps} = props;\n  return (\n    <Link\n      aria-label={translate(\n        {\n          message: 'Read more about {title}',\n          id: 'theme.blog.post.readMoreLabel',\n          description:\n            'The ARIA label for the link to full blog posts from excerpts',\n        },\n        {title: blogPostTitle},\n      )}\n      {...linkProps}>\n      <ReadMoreLabel />\n    </Link>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"blogPostFooterDetailsFull\":\"blogPostFooterDetailsFull_bikM\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport EditThisPage from '@theme/EditThisPage';\nimport TagsListInline from '@theme/TagsListInline';\nimport ReadMoreLink from '@theme/BlogPostItem/Footer/ReadMoreLink';\nimport styles from './styles.module.css';\nexport default function BlogPostItemFooter() {\n  const {metadata, isBlogPostPage} = useBlogPost();\n  const {tags, title, editUrl, hasTruncateMarker} = metadata;\n  // A post is truncated if it's in the \"list view\" and it has a truncate marker\n  const truncatedPost = !isBlogPostPage && hasTruncateMarker;\n  const tagsExists = tags.length > 0;\n  const renderFooter = tagsExists || truncatedPost || editUrl;\n  if (!renderFooter) {\n    return null;\n  }\n  return (\n    <footer\n      className={clsx(\n        'row docusaurus-mt-lg',\n        isBlogPostPage && styles.blogPostFooterDetailsFull,\n      )}>\n      {tagsExists && (\n        <div className={clsx('col', {'col--9': truncatedPost})}>\n          <TagsListInline tags={tags} />\n        </div>\n      )}\n\n      {isBlogPostPage && editUrl && (\n        <div className=\"col margin-top--sm\">\n          <EditThisPage editUrl={editUrl} />\n        </div>\n      )}\n\n      {truncatedPost && (\n        <div\n          className={clsx('col text--right', {\n            'col--3': tagsExists,\n          })}>\n          <ReadMoreLink blogPostTitle={title} to={metadata.permalink} />\n        </div>\n      )}\n    </footer>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogPostItemContainer from '@theme/BlogPostItem/Container';\nimport BlogPostItemHeader from '@theme/BlogPostItem/Header';\nimport BlogPostItemContent from '@theme/BlogPostItem/Content';\nimport BlogPostItemFooter from '@theme/BlogPostItem/Footer';\n// apply a bottom margin in list view\nfunction useContainerClassName() {\n  const {isBlogPostPage} = useBlogPost();\n  return !isBlogPostPage ? 'margin-bottom--xl' : undefined;\n}\nexport default function BlogPostItem({children, className}) {\n  const containerClassName = useContainerClassName();\n  return (\n    <BlogPostItemContainer className={clsx(containerClassName, className)}>\n      <BlogPostItemHeader />\n      <BlogPostItemContent>{children}</BlogPostItemContent>\n      <BlogPostItemFooter />\n    </BlogPostItemContainer>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useMemo, type ReactNode, useContext} from 'react';\nimport {ReactContextError} from '../utils/reactUtils';\n\nimport type {PropBlogPostContent} from '@docusaurus/plugin-content-blog';\n\n/**\n * The React context value returned by the `useBlogPost()` hook.\n * It contains useful data related to the currently browsed blog post.\n */\nexport type BlogPostContextValue = Pick<\n  PropBlogPostContent,\n  'metadata' | 'frontMatter' | 'assets' | 'toc'\n> & {\n  readonly isBlogPostPage: boolean;\n};\n\nconst Context = React.createContext<BlogPostContextValue | null>(null);\n\n/**\n * Note: we don't use `PropBlogPostContent` as context value on purpose. Metadata is\n * currently stored inside the MDX component, but we may want to change that in\n * the future.\n */\nfunction useContextValue({\n  content,\n  isBlogPostPage,\n}: {\n  content: PropBlogPostContent;\n  isBlogPostPage: boolean;\n}): BlogPostContextValue {\n  return useMemo(\n    () => ({\n      metadata: content.metadata,\n      frontMatter: content.frontMatter,\n      assets: content.assets,\n      toc: content.toc,\n      isBlogPostPage,\n    }),\n    [content, isBlogPostPage],\n  );\n}\n\n/**\n * This is a very thin layer around the `content` received from the MDX loader.\n * It provides metadata about the blog post to the children tree.\n */\nexport function BlogPostProvider({\n  children,\n  content,\n  isBlogPostPage = false,\n}: {\n  children: ReactNode;\n  content: PropBlogPostContent;\n  isBlogPostPage?: boolean;\n}): JSX.Element {\n  const contextValue = useContextValue({content, isBlogPostPage});\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n\n/**\n * Returns the data of the currently browsed blog post. Gives access to\n * front matter, metadata, TOC, etc.\n * When swizzling a low-level component (e.g. the \"Edit this page\" link)\n * and you need some extra metadata, you don't have to drill the props\n * all the way through the component tree: simply use this hook instead.\n */\nexport function useBlogPost(): BlogPostContextValue {\n  const blogPost = useContext(Context);\n  if (blogPost === null) {\n    throw new ReactContextError('BlogPostProvider');\n  }\n  return blogPost;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\n// We want to ensurer a stable plural form order in all cases\n// It is more convenient and natural to handle \"small values\" first\n// See https://twitter.com/sebastienlorber/status/1366820663261077510\nconst OrderedPluralForms: Intl.LDMLPluralRule[] = [\n  'zero',\n  'one',\n  'two',\n  'few',\n  'many',\n  'other',\n];\nfunction sortPluralForms(\n  pluralForms: Intl.LDMLPluralRule[],\n): Intl.LDMLPluralRule[] {\n  return OrderedPluralForms.filter((pf) => pluralForms.includes(pf));\n}\n\ntype LocalePluralForms = {\n  locale: string;\n  pluralForms: Intl.LDMLPluralRule[];\n  select: (count: number) => Intl.LDMLPluralRule;\n};\n\n// Hardcoded english/fallback implementation\nconst EnglishPluralForms: LocalePluralForms = {\n  locale: 'en',\n  pluralForms: sortPluralForms(['one', 'other']),\n  select: (count) => (count === 1 ? 'one' : 'other'),\n};\n\nfunction createLocalePluralForms(locale: string): LocalePluralForms {\n  const pluralRules = new Intl.PluralRules(locale);\n  return {\n    locale,\n    pluralForms: sortPluralForms(\n      pluralRules.resolvedOptions().pluralCategories,\n    ),\n    select: (count) => pluralRules.select(count),\n  };\n}\n\n/**\n * Poor man's `PluralSelector` implementation, using an English fallback. We\n * want a lightweight, future-proof and good-enough solution. We don't want a\n * perfect and heavy solution.\n *\n * Docusaurus classic theme has only 2 deeply nested labels requiring complex\n * plural rules. We don't want to use `Intl` + `PluralRules` polyfills + full\n * ICU syntax (react-intl) just for that.\n *\n * Notes:\n * - 2021: 92+% Browsers support `Intl.PluralRules`, and support will increase\n * in the future\n * - NodeJS >= 13 has full ICU support by default\n * - In case of \"mismatch\" between SSR and Browser ICU support, React keeps\n * working!\n */\nfunction useLocalePluralForms(): LocalePluralForms {\n  const {\n    i18n: {currentLocale},\n  } = useDocusaurusContext();\n  return useMemo(() => {\n    try {\n      return createLocalePluralForms(currentLocale);\n    } catch (err) {\n      console.error(`Failed to use Intl.PluralRules for locale \"${currentLocale}\".\nDocusaurus will fallback to the default (English) implementation.\nError: ${(err as Error).message}\n`);\n      return EnglishPluralForms;\n    }\n  }, [currentLocale]);\n}\n\nfunction selectPluralMessage(\n  pluralMessages: string,\n  count: number,\n  localePluralForms: LocalePluralForms,\n): string {\n  const separator = '|';\n  const parts = pluralMessages.split(separator);\n\n  if (parts.length === 1) {\n    return parts[0]!;\n  }\n  if (parts.length > localePluralForms.pluralForms.length) {\n    console.error(\n      `For locale=${localePluralForms.locale}, a maximum of ${\n        localePluralForms.pluralForms.length\n      } plural forms are expected (${localePluralForms.pluralForms.join(\n        ',',\n      )}), but the message contains ${parts.length}: ${pluralMessages}`,\n    );\n  }\n  const pluralForm = localePluralForms.select(count);\n  const pluralFormIndex = localePluralForms.pluralForms.indexOf(pluralForm);\n  // In case of not enough plural form messages, we take the last one (other)\n  // instead of returning undefined\n  return parts[Math.min(pluralFormIndex, parts.length - 1)]!;\n}\n\n/**\n * Reads the current locale and returns an interface very similar to\n * `Intl.PluralRules`.\n */\nexport function usePluralForm(): {\n  /**\n   * Give it a `count` and it will select the relevant message from\n   * `pluralMessages`. `pluralMessages` should be separated by `|`, and in the\n   * order of \"zero\", \"one\", \"two\", \"few\", \"many\", \"other\". The actual selection\n   * is done by `Intl.PluralRules`, which tells us all plurals the locale has\n   * and which plural we should use for `count`.\n   */\n  selectMessage: (count: number, pluralMessages: string) => string;\n} {\n  const localePluralForm = useLocalePluralForms();\n  return {\n    selectMessage: (count: number, pluralMessages: string): string =>\n      selectPluralMessage(pluralMessages, count, localePluralForm),\n  };\n}\n"],"names":["BlogSidebarDesktop","_ref","sidebar","React","className","clsx","styles","translate","id","message","description","sidebarItemTitle","title","sidebarItemList","items","map","item","key","permalink","sidebarItem","Link","isNavLink","to","sidebarItemLink","activeClassName","sidebarItemLinkActive","BlogSidebarMobileSecondaryMenu","BlogSidebarMobile","props","NavbarSecondaryMenuFiller","component","BlogSidebar","windowSize","useWindowSize","length","BlogLayout","toc","children","layoutProps","hasSidebar","Layout","itemScope","itemType","BlogPostItemContainer","frontMatter","assets","metadata","useBlogPost","withBaseUrl","useBaseUrlUtils","image","keywords","itemProp","content","href","absolute","join","BlogPostItemHeaderTitle","isBlogPostPage","TitleHeading","ReadingTime","readingTime","readingTimePlural","selectMessage","usePluralForm","readingTimeFloat","Math","ceil","useReadingTimePlural","Date","_ref2","date","formattedDate","dateTime","Spacer","BlogPostItemHeaderInfo","_ref3","container","MaybeLink","BlogPostItemHeaderAuthor","author","name","url","imageURL","email","link","undefined","src","alt","BlogPostItemHeaderAuthors","authors","imageOnly","every","imageOnlyAuthorRow","idx","imageOnlyAuthorCol","authorCol","authorsImageUrls","BlogPostItemHeader","BlogPostItemContent","blogPostContainerID","MDXContent","ReadMoreLabel","Translate","BlogPostItemFooterReadMoreLink","blogPostTitle","linkProps","_extends","BlogPostItemFooter","tags","editUrl","hasTruncateMarker","truncatedPost","tagsExists","blogPostFooterDetailsFull","TagsListInline","EditThisPage","ReadMoreLink","BlogPostItem","containerClassName","useContainerClassName","Context","BlogPostProvider","contextValue","useMemo","useContextValue","Provider","value","blogPost","useContext","ReactContextError","OrderedPluralForms","sortPluralForms","pluralForms","filter","pf","includes","EnglishPluralForms","locale","select","count","useLocalePluralForms","i18n","currentLocale","useDocusaurusContext","pluralRules","Intl","PluralRules","resolvedOptions","pluralCategories","createLocalePluralForms","err","console","error","localePluralForm","pluralMessages","localePluralForms","parts","split","pluralForm","pluralFormIndex","indexOf","min","selectPluralMessage"],"sourceRoot":""}