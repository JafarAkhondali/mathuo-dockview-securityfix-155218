{"version":3,"file":"assets/js/6875c492.cbdf83c9.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const sashCount = this.viewItems.length - 1;\n        const marginReducedSize = (this.margin * sashCount) / this.viewItems.length;\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const offset = Math.min(Math.max(0, totalLeftOffset - 2), this.size - this.margin);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            const size = view.size - marginReducedSize;\n            const offset = i === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (i / sashCount) * marginReducedSize;\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    // { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","setAttribute","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}