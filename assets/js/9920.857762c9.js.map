{"version":3,"file":"assets/js/9920.857762c9.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/constraints/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const sashCount = this.viewItems.length - 1;\n        const marginReducedSize = (this.margin * sashCount) / this.viewItems.length;\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const offset = Math.min(Math.max(0, totalLeftOffset - 2), this.size - this.margin);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            const size = view.size - marginReducedSize;\n            const offset = i === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (i / sashCount) * marginReducedSize;\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    GridConstraintChangeEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps) => {\n        const [contraints, setContraints] =\n            React.useState<GridConstraintChangeEvent | null>(null);\n\n        React.useEffect(() => {\n            props.api.group.api.onDidConstraintsChange((event) => {\n                setContraints(event);\n            });\n        }, []);\n\n        const onClick = () => {\n            props.api.group.api.setConstraints({\n                maximumWidth: 300,\n                maximumHeight: 300,\n            });\n        };\n\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                    color: 'white',\n                }}\n            >\n                <button onClick={onClick}>Set</button>\n                {contraints && (\n                    <div style={{ fontSize: '13px' }}>\n                        {typeof contraints.maximumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Height: `}</span>\n                                <span>{`${contraints.maximumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Height: `}</span>\n                                <span>{`${contraints.minimumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.maximumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Width: `}</span>\n                                <span>{`${contraints.maximumWidth}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Width: `}</span>\n                                <span>{`${contraints.minimumWidth}px`}</span>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n};\n\nconst App = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                referencePanel: panel1,\n                direction: 'right',\n            },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                referencePanel: panel2,\n                direction: 'right',\n            },\n        });\n\n        const panel4 = event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            position: {\n                direction: 'below',\n            },\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default App;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","setAttribute","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","contraints","setContraints","_jsxs","background","_jsx","border","setApi","panel1","panel2"],"sourceRoot":""}