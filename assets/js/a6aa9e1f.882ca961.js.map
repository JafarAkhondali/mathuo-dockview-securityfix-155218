{"version":3,"file":"assets/js/a6aa9e1f.882ca961.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn((_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        this.removeDropTarget();\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisibile':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const _onDidFocus = panel.view.content.onDidFocus;\n            const _onDidBlur = panel.view.content.onDidBlur;\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisibile') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent, } from '../../dockviewGroupPanelModel';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, { kind: 'tab' }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this._kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionsElement) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get isHidden() {\n        return this._isHidden;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._isHidden = false;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onDidHiddenChange = new Emitter();\n        this.onDidHiddenChange = this._onDidHiddenChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidHiddenChange((event) => {\n            this._isHidden = event.isHidden;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onUpdateParameters, this._onWillFocus, this._onDidHiddenChange, this._onUpdateParameters);\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setHidden(isHidden) {\n        this._onDidHiddenChange.fire({ isHidden });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onDidHiddenChange((event) => {\n            const { isHidden } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, !isHidden);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\n// TODO find a better way to initialize and avoid needing null checks\nconst NOT_INITIALIZED_MESSAGE = 'DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id);\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.addDisposables(this._onDidLocationChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            let _trackGroupActive = isOldGroupActive; // prevent duplicate events with same state\n            this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidLocationChange((event) => {\n                if (this.group !== this.panel.group) {\n                    return;\n                }\n                this._onDidLocationChange.fire(event);\n            }), this.group.api.onDidActiveChange(() => {\n                if (this.group !== this.panel.group) {\n                    return;\n                }\n                if (_trackGroupActive !== this.isGroupActive) {\n                    _trackGroupActive = this.isGroupActive;\n                    this._onDidActiveGroupChange.fire({\n                        isActive: this.isGroupActive,\n                    });\n                }\n            }));\n            // if (this.isGroupActive !== isOldGroupActive) {\n            //     this._onDidActiveGroupChange.fire({\n            //         isActive: this.isGroupActive,\n            //     });\n            // }\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group, accessor) {\n        super(panel.id);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a, _b;\n        return createComponent(id, componentName, (_a = this.accessor.options.components) !== null && _a !== void 0 ? _a : {}, this.accessor.options.frameworkComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a, _b;\n        if (componentName) {\n            return createComponent(id, componentName, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n        }\n        else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(id, this.accessor.options.defaultTabComponent, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisibile';\n    }\n    constructor(options) {\n        var _a, _b;\n        super({\n            proportionalLayout: true,\n            orientation: (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    if (position === 'center' && this.gridview.length !== 0) {\n                        /**\n                         * for external events only show the four-corner drag overlays, disable\n                         * the center position so that external drag events can fall through to the group\n                         * and panel drop target handlers\n                         */\n                        return false;\n                    }\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: 'edge',\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_b = this.options.rootOverlayModel) !== null && _b !== void 0 ? _b : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId(); //item.id;\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setHidden(true);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setHidden(true);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (referenceGroup.api.isHidden) {\n                        referenceGroup.api.setHidden(false);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else {\n                    if (this.getPanel(group.id)) {\n                        const removedGroup = this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                        });\n                        removedGroup.model.renderContainer =\n                            this.overlayRenderContainer;\n                        removedGroup.model.location = { type: 'grid' };\n                        returnedGroup = removedGroup;\n                    }\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error(err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            group.model.openPanel(item, { skipSetGroupActive: true });\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: !!popoutReferenceGroup,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.height, group.width);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_orientation = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        const changed_floatingGroupBounds = options.floatingGroupBounds !== undefined &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = options.rootOverlayModel !== undefined &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(referenceGroup);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const o = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n            this.doSetGroupAndPanelActive(group);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && !x.api.isHidden).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup(options);\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onDidHiddenChange((event) => {\n            const { isHidden } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, !isHidden);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart, } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent({\n            parentElement: domRef.current,\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkTabComponents,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n            disableFloatingGroups: props.disableFloatingGroups,\n            floatingGroupBounds: props.floatingGroupBounds,\n            defaultRenderer: props.defaultRenderer,\n            debug: props.debug,\n            rootOverlayModel: props.rootOverlayModel,\n            locked: props.locked,\n            disableDnd: props.disableDnd,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.locked = !!props.locked;\n    }, [props.locked]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableDnd: props.disableDnd,\n        });\n    }, [props.disableDnd]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            floatingGroupBounds: props.floatingGroupBounds,\n        });\n    }, [props.floatingGroupBounds]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableFloatingGroups: props.disableFloatingGroups,\n        });\n    }, [props.disableFloatingGroups]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            rootOverlayModel: props.rootOverlayModel,\n        });\n    }, [props.rootOverlayModel]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-default-tab\" }, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-react-tab-close-btn\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nfunction useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[1].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","activeGroup","getGroupPanel","addGroup","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","moveToNext","moveToPrevious","maximizeGroup","hasMaximizedGroup","exitMaximizedGroup","onDidMaximizedGroupChange","addPopoutGroup","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","willShowOverlayEvent","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","accessor","tabIndex","dropTarget","shiftKey","show","display","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","focusTracker","openPanel","_width","_height","closePanel","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","draggable","dragHandler","setActive","isActive","setContent","part","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onWillDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","createPrefixHeaderActionsElement","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","_params","update","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","runEvents","createWatermarkComponent","showDndOverlay","willDropEvent","getKind","itemId","_c","Resizable","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","disableAutoResizing","_onDidLayoutChange","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","isVisible","isMaximizedGroup","doAddGroup","doRemoveGroup","get","skipActive","forceResize","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","isHidden","_isHidden","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onDidHiddenChange","onDidHiddenChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","setHidden","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_onDidGroupChange","_trackGroupActive","groupEventsDisposable","_onDidActiveGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","setTitle","setRenderer","DockviewPanel","_title","_renderer","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","defaultRenderer","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","debug","updateWatermark","watermarkComponent","watermarkFrameworkComponent","_rootDropTarget","rootOverlayModel","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutUrl","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","floatingGroupBounds","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_orientation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","framework"],"sourceRoot":""}