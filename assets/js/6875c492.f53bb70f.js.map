{"version":3,"file":"assets/js/6875c492.f53bb70f.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        var _a, _b;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.classNames = [];\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        // const gready = document.createElement('div');\n        // gready.className = 'dv-overlay-render-container';\n        // this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super({\n            parentElement: parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.classNames = [];\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.classNames = [];\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    // { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_b","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","classNames","split","panel","isVisible","updateOptions","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}